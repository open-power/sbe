#!/bin/sh
# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/test/framework/populate-sandbox $
#
# OpenPOWER sbe Project
#
# Contributors Listed Below - COPYRIGHT 2016,2021
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

if [ -z $SBE_CI_ENV_SETUP ];
then
    source "$SBEROOT/src/test/framework/setup-env"
fi

SIMICSROOTDIR=$1
echo "Simics Path $SIMICSROOTDIR"
SBETESTDIR=${SIMICSROOTDIR}/targets/p10_standalone/sbeTest/
SBEROMDIR=${SIMICSROOTDIR}/import/boot_roms/
SBEBINSIMIMAGE=${SBEROMDIR}/sbe_seeprom_p10.bin
SBEECCIMAGE=${SBEROMDIR}/sbe_seeprom_p10.bin.ecc
SBEECCMEASUREMENTIMAGE=$SBEROMDIR/sbe_measurement_p10.bin.ecc
HWREFIMAGE=$BACKING_BUILD/src/engd/href/p10.hw_ref_image.bin
HREFTEMPIMAGE=$SBEROOT/images/hwref.bin
HREFSBEIMAGE=$SBEROOT/images/sbe.bin
HDCTBINIMAGE=$SBEROOT/images/hdct.bin

# Create test directory.
mkdir -p $SBETESTDIR || exit -1

if [ $2 -ne 1 ];  then
    echo "Untar $SIMICS_TAR/simics.tar.gz into the sandbox"
    tar -xf $SIMICS_TAR/simics.tar.gz -C $SIMICSROOTDIR || exit -1
fi

echo "Add ecc to the binary workspace"
#Check that the binary exists before adding ecc to it.
if [ -f $SBEBINIMAGE ]; then
    echo "Copy sbe boot seeprom image"
    cp -f $SBEBINIMAGE $SBEBINSIMIMAGE || exit -1
    #Add HBBL section into the SBE image.
    $SBEROOT/images/ipl_image_tool $SBEBINSIMIMAGE append .hbbl $SBEROOT/src/tools/debug/hbbl.bin || exit -1

    #Add hdct section into the SBE image.
    #Copy the HWREF image locally.
    cp $HWREFIMAGE $HREFTEMPIMAGE

    #Extract SBE section from HWREF image.
    $SBEROOT/images/ipl_image_tool $HREFTEMPIMAGE extract .sbe $HREFSBEIMAGE || exit -1

    #Extract HDCT section from SBE section of HWREF image.
    $SBEROOT/images/ipl_image_tool $HREFSBEIMAGE extract .hdct $HDCTBINIMAGE || exit -1

    #Remove Header HDCT Section of 20 Bytes from HDCT.bin
    dd if=$HDCTBINIMAGE of=$SBEROOT/images/hdct.bin~ ibs=20 skip=1 || exit -1
    mv $SBEROOT/images/hdct.bin~ $HDCTBINIMAGE || exit -1

    #Append HDCT section into SBE image.
    $SBEROOT/images/ipl_image_tool $SBEBINSIMIMAGE append .hdct $HDCTBINIMAGE || exit -1

    #Sign SBE Image
    $SBEROOT/src/tools/scripts/signSbeImage -s $SBEROOT/images/sbeScratchDir/ -i $SBEBINSIMIMAGE -t $SBEROOT/images/ipl_image_tool -b STANDALONE

    #TODO: Add Ring section into the SBE image before adding the ECC
    ecc --inject $SBEBINSIMIMAGE --output  $SBEECCIMAGE --p8 || exit -1
    echo "Copy OTPROM image"
    cp -f $SBEROOT/images/sbe_otprom_DD1.bin ${SIMICSROOTDIR}/import/boot_roms/sbe_otprom_p10.bin|| exit -1
fi

if [ -f $SBEBINPIBMEMIMAGE ];
then
    echo "Copy PIBMEM image"
    cp -f $SBEBINPIBMEMIMAGE ${SIMICSROOTDIR}/import/boot_roms/sbe_pibmem_p10.bin|| exit -1
fi

if [  -f $SBEBINMEASUREMENTIMAGE ]; then
    echo "Copy sbe measurement seeprom image"
    ecc --inject $SBEBINMEASUREMENTIMAGE --output  $SBEECCMEASUREMENTIMAGE --p8 || exit -1
fi

echo  "Copy test files."
cp -r $SBEROOT/src/test/testcases/* $SBETESTDIR/ || exit -1
cp $SBEROOT/src/tools/debug/simics-debug-framework.py $SBETESTDIR/ || exit -1
cp $SBEROOT/src/tools/debug/sbe-debug.py $SBETESTDIR/ || exit -1
cp $SBEROOT/src/tools/debug/sbeModifyPGvalue.py $SBETESTDIR/ || exit -1
cp $SBEROOT/src/import/chips/p9/security/p9_security_white_black_list.csv $SBETESTDIR/ || exit -1
cp $SBEROOT/src/build/security/securityRegListGen.py $SBETESTDIR/ || exit -1
cp $SBEROOT/src/tools/debug/simics/sbe_startup_p10_standalone.simics $SBETESTDIR/ || exit -1
cp $SBEROOT/src/tools/debug/simics/sbe-start-slaveProc.py $SBETESTDIR/ || exit -1
cp $SBEROOT/src/test/testcases/testP10_standalone.simics $SBETESTDIR/ || exit -1
cp $SBEROOT/images/*.syms $SBETESTDIR/ || exit -1
cp $SBEROOT/images/*.bin $SBETESTDIR/ || exit -1
cp $SBEROOT/images/*.dis $SBETESTDIR/ || exit -1
cp $SBEROOT/images/*StringFile* $SBETESTDIR/ || exit -1
cp $SBEROOT/images/ipl_image_tool  $SBETESTDIR/ || exit -1
cp $SBEROOT/obj/power/genfiles/ppe2fsp $SBETESTDIR/ || exit -1
cp $SBEROOT/src/tools/utils/ecc $SBETESTDIR/ || exit -1
echo "Copy fsp-trace"
cp $MCP_PATH/opt/fsp/usr/bin/fsp-trace $SBETESTDIR || exit -1

echo "Install simics"
$SIMICSROOTDIR/INSTALL.sh || exit -1




<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/hwpf/fapi2/xml/attribute_info/system_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2015,2019                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_IS_SIMULATION</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>env: 1 = Awan/HWSimulator. 0 = Simics/RealHW.</description>
    <valueType>uint8</valueType>
    <platInit/>
    <mssAccessorName>is_simulation</mssAccessorName>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_EXECUTION_PLATFORM</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Which execution platform the HW Procedure is running on
        Some HWPs (e.g. special wakeup) use different registers for different
          platforms to avoid arbitration problems when multiple platforms do
          the same thing concurrently
    </description>
    <valueType>uint8</valueType>
    <enum>HOST = 0x01, FSP = 0x02, OCC = 0x03</enum>
    <platInit/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_MNFG_FLAGS</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        The manufacturing flags.
        This is a bitfield. Each bit is a flag and multiple flags can be set
    </description>
    <valueType>uint64</valueType>
    <enum>
        MNFG_NO_FLAG                        = 0x0000000000000000,
        MNFG_THRESHOLDS                     = 0x0000000000000001,
        MNFG_TEST_ALL_SPARE_DRAM_ROWS       = 0x0000000000000040,
        MNFG_DISABLE_DRAM_REPAIRS           = 0x0000000000000080,
        MNFG_ENABLE_STANDARD_PATTERN_TEST   = 0x0000000000000200,
        MNFG_DISABLE_FABRIC_eREPAIR         = 0x0000000000000800,
        MNFG_DISABLE_MEMORY_eREPAIR         = 0x0000000000001000,
        MNFG_FABRIC_DEPLOY_LANE_SPARES      = 0x0000000000002000,
        MNFG_DMI_DEPLOY_LANE_SPARES         = 0x0000000000004000
<!--
        MNFG_AVP_ENABLE                     = 0x0000000000000002,
        MNFG_HDAT_AVP_ENABLE                = 0x0000000000000004,
        MNFG_SRC_TERM                       = 0x0000000000000008,
        MNFG_IPL_MEMORY_CE_CHECKING         = 0x0000000000000010,
        MNFG_FAST_BACKGROUND_SCRUB          = 0x0000000000000020,
        MNFG_TEST_DRAM_REPAIRS              = 0x0000000000000040,
        MNFG_ENABLE_EXHAUSTIVE_PATTERN_TEST = 0x0000000000000100,
        MNFG_ENABLE_MINIMUM_PATTERN_TEST    = 0x0000000000000400,
        MNFG_PSI_DIAGNOSTIC                 = 0x0000000000008000,
        MNFG_BRAZOS_WRAP_CONFIG             = 0x0000000000010000
-->
    </enum>
    <platInit/>
    <mssAccessorName>mnfg_flags</mssAccessorName>
  </attribute>
  <attribute>
    <id>ATTR_RECONFIGURE_LOOP</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Used to inidicate if a reconfigure loop is needed
    </description>
    <valueType>uint8</valueType>
    <enum>
        DECONFIGURE      = 0x1,
        BAD_DQ_BIT_SET   = 0x2,
        RCD_PARITY_ERROR = 0x4
    </enum>
    <writeable/>
  </attribute>

  <!-- ********************************************************************* -->
</attributes>

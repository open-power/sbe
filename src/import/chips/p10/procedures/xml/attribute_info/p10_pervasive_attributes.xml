<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p10/procedures/xml/attribute_info/p10_pervasive_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2019                             -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PG_MVPD</id>
  <targetType>TARGET_TYPE_PERV</targetType>
  <description>
    Chiplet partial good information, direct from module VPD PG keyword
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PG</id>
  <targetType>TARGET_TYPE_PERV</targetType>
  <description>
    Chiplet partial good information to be consumed by IPL HWP code.
    This attribute logically represents the combination of VPD PG plus
    any additional runtime deconfiguration to be applied on the current IPL.
  </description>
  <valueType>uint32</valueType>
  <default>0xFFFFFFFF</default>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_SBE_MASTER_CHIP</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Indicates if SBE on this chip is serving as hostboot drawer master
  </description>
  <valueType>uint8</valueType>
  <enum>FALSE = 0x0,TRUE = 0x1</enum>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_SECTOR_BUFFER_STRENGTH</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>Sector buffer strength</description>
  <valueType>uint8</valueType>
  <platInit/>
  <default>0</default>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PULSE_MODE_ENABLE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>enable the pulse mode</description>
  <valueType>uint8</valueType>
  <enum>ENABLE = 0x1, DISABLE = 0x0</enum>
  <platInit/>
  <default>DISABLE</default>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PULSE_MODE_VALUE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>value for pulse mode</description>
  <valueType>uint8</valueType>
  <platInit/>
  <default>0</default>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_NDL_MESHCTRL_SETUP</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>Control NDL training:meshctrl setup</description>
  <valueType>uint8</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MC_PLL_BUCKET</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>MC0, MC1, MC2, MC3 pll bucket selection</description>
  <valueType>uint8</valueType>
  <array>4</array>
  <platInit/>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IOHS_PLL_BUCKET</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>IOHS pll bucket selection</description>
  <valueType>uint8</valueType>
  <array>8</array>
  <platInit/>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_CP_PLLTODFLT_BYPASS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    To skip the locking sequence and check for lock of CP TOD Filter PLL
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_CP_PLLNESTFLT_BYPASS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    To skip the locking sequence and check for lock of CP Nest Filter PLL
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_CP_PLLIOFLT_BYPASS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    To skip the locking sequence and check for lock of CP IO Filter PLL
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_CP_PLLIOSSFLT_BYPASS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    To skip the locking sequence and check for lock of CP IO Spread Spectrum Filter PLL
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PAU_DPLL_BYPASS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Skip locking sequence and check for lock of PAU DPLL
  </description>
  <valueType>uint8</valueType>
  <enum>BYPASS = 0x1, NO_BYPASS = 0x0</enum>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_NEST_DPLL_BYPASS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Skip locking sequence and check for lock of NEST DPLL
  </description>
  <valueType>uint8</valueType>
  <enum>BYPASS = 0x1, NO_BYPASS = 0x0</enum>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_TANK_PLL_BYPASS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Skip locking sequence and check for lock of IO PLLs
  </description>
  <valueType>uint8</valueType>
  <enum>BYPASS = 0x1, NO_BYPASS = 0x0</enum>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_CORE_GARD</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Capturing Cores Gard Value
    Each bit position corresponds to a core starting at core 0 being bit 0
    Each nibble is representative of an EQ chiplets Cores
    The EQ is always functional, so this field only tracks core state
  </description>
  <valueType>uint32</valueType>
  <writeable/>
  <platInit/>
  <mrwHide/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MASTER_CORE</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
  Indicates the master boot core selected by p10_sbe_select_ex.
  Ranges from 0 to 31.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_ACTIVE_CORES_VEC</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>Bit vector indicating the active boot cores selected by
  p10_sbe_select_ex.  Bit 0 = Core 0, Bit 1 = Core 1, ..., Bit 31 = Core 31.
  </description>
  <valueType>uint32</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_BACKING_CACHES_VEC</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>Bit vector indicating the caches used as backing caches selected
  by p10_sbe_select_ex.  Bit 0 = Cache 0, Bit 1 = Cache 1, ..., Bit 31 = Cache 31.
  </description>
  <valueType>uint32</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_ACTIVE_CORES_NUM</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>Number of necessary active boot cores required. Must be set by
  the platform before calling p10_sbe_select_ex.  If ATTR_ACTIVE_CORES_VEC is
  overridden, this attribute value must be greater than or equal to the number
  of bits on in ATTR_ACTIVE_CORES_VEC.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_BACKING_CACHES_NUM</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>Number of necessary backing caches required. Must be set by
  the platform before calling p10_sbe_select_ex.  If ATTR_BACKING_CACHES_VEC is
  overridden, this attribute value must be greater than or equal to the number
  of bits on in ATTR_BACKING_CACHES_VEC.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FUSED_CORE_MODE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Summarizes the fused status of cores. This is same for all p10 chips
    in the system. If a core is in a fused state, attribute should read 1
    else zero. It needs to be populated during ipl but before istep 15.
  </description>
  <valueType>uint8</valueType>
  <enum> CORE_UNFUSED = 0x0, CORE_FUSED = 0x1 </enum>
  <platInit/>
  <default>CORE_UNFUSED</default>
  <writeable/>   <!-- temp -->
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_ECID</id>
  <targetType>TARGET_TYPE_PROC_CHIP, TARGET_TYPE_MEMBUF_CHIP, TARGET_TYPE_OCMB_CHIP</targetType>
  <description>Populated by HWP called during IPL.
  PROC, MEMBUF: Bits 0 to 63 of the ECID in array entry 0 and bits 64 to 127 in ECID array entry 1
  OCMB: Explorer: Data Inserted HIGH:LOW, ex. ATTR_ECID[0] = [PE_DATA_3:PE_DATA_2:PE_DATA_1:PE_DATA_0]
  OCMB: Gemini: 64-bit ECID inserted in ATTR_ECID[0]
  TK/FIXME/TODO: This needs to be made larger to support the entire Explorer ECID.
  </description>
  <valueType>uint64</valueType>
  <writeable/>
  <odmVisable/>
  <odmChangeable/>
  <array> 2</array>
</attribute>
<!-- ********************************************************************** -->
</attributes>

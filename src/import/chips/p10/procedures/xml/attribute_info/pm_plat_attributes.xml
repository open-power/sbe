<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p10/procedures/xml/attribute_info/pm_plat_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2019,2020                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_AUX_FUNC_INVOCATION_TIME_MS</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Time between invocations of auxiliary function on GPE1. The time (in is
    as 2^ATTR_AUX_FUNC_INVOCATION_TIME_MS with 0 indicating the
    is OFF.

    Consumer: p10_hcode_image_build.c -> XGPE Header field

    Provided by the Machine Readable Workbook to tune the collection.

    Platform default:1
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <group>aux</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_FREQ_BIAS</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Frequency Bias - % of bias (signed twos complement in 0.5 percent steps) in
    the frequency associated with a Pstate. Applies to all #V points,

    Producer:Attribute Overrides by Lab/Mfg Characterization Team

    Consumer: p10_pstate_parameter_build
    </description>
    <valueType>int8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>bias</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_VOLTAGE_EXT_BIAS</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Voltage Bias - % of bias (signed twos complement in 0.5
    that is applied to the respective rail's (VDD, VCS) #V VPD point used in
    voltage values associated with Pstates..

    Array[Rail][Point]

    [Rail]->2 entries-:
        0: VDD;
        1: VCS

    [Point] ->9 entries-:
        0: PowerSave;
        1: CF1;
        2: CF2;
        3: CF3;
        4: CF4;
        5: CF5;
        6: UltraTurbo;
        7: Fmax;
        8: Enable

    Producer:Attribute Overrides by Lab/Mfg Characterization Team

    Consumer: p10_pstate_parameter_build
    </description>
    <valueType>int8</valueType>
    <array>2,8</array>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>bias</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_VOLTAGE_EXT_VDN_BIAS</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    VDN Voltage Bias - % of bias (signed twos complement in 0.5 percent steps)
    applied to the VDN value stored in the VPD for setting the VDN rail.

    Producer: Attribute Overrides by Lab/Mfg Characterization Team

    Consumer: p10_pstate_parameter_build

    Platform default:0
    </description>
    <valueType>int8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>bias</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DROOP_COUNT_CONTROL</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Value to be written to the Droop Count Control Register (DCCR) that defines
    the core throttle response to droop events. See P10 Power Management Hardware
    Specification for the bit definition of this register.

    Consumer: p10_pm_qme_init

    TODO: get the default value from the core team
    </description>
    <valueType>uint64</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dds</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DDS_DROOP_EXTREME_OVERRIDE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Digital Droop Sensors (DDS) Extreme Threshold Select Value per VPD point.
    a negative value below the DDS setting that will trigger droop event.  This
    attibute overrides the

    Array of 9 entries-:
        0: PowerSave;
        1: CF1;
        2: CF2;
        3: WOF Base;
        4: CF3;
        5: CF4;
        6: UltraTurbo;
        7: Fmax;
        8: Enable

    If index 8 is non-zero, the other entries are considered valid.

    Producer: Override
    </description>
    <valueType>uint8</valueType>
    <array>9</array>
    <platInit/>
    <enum>
        OFF= 0x00,
        8mV= 0x01,
        16mV = 0x02,
        24mV = 0x03,
        32mV = 0x04,
        40mV = 0x05,
        48mV = 0x06,
        56mV = 0x07,
        64mV = 0x08,
        72mV = 0x09,
        80mV = 0x0A,
        88mV = 0x0B,
        92mV = 0x0C,
        96mV = 0x0D
    </enum>
    <initToZero/>
    <overrideOnly/>
    <group>dds</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SAVE_MODE_NODDS_UPLIFT_MV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Attribute in place to allow override for boot mode voltage
    Consumer: p9_setup_evid.C
    </description>
    <valueType>uint32</valueType>
    <array>2</array>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dds</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DDS_DPLL_SLEW_MODE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Indicates the response of the DPLL frequency upon DDS events if is not ON.

    NONE -> DPLL Mode 2, JUMP_PROTECT -> DPLL Mode 3,  SLEW_MODE -> DPLL Mode 4

    Producer: MRWB
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        NONE = 0x00,
        JUMP_PROTECT = 0x01,
        SLEW_MODE = 0x02
    </enum>
    <initToZero/>
    <group>dds</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DUMP_STOP_INFO_ENABLE_ERRORLOG</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    if set to 1, p10_dump_stop_info output will be written to error logs
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DUMP_STOP_INFO_SUPPRESS_ERROR_TRACE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    if set to 1, FAPI_ERR records are suppressed from being produced by
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PGPE_HCODE_FUNCTION_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Enables the PGPE Hcode to physically perform frequency and voltage based on
    parameters (eg #V VPD, system parameters, biases, VFRTs. etc). If OFF,
    PGPE provides an immedicate good response to Pstate/WOF IPC operations
    the OCC for firmware integration testing

    Consumer: p10_hcode_image_build.c -> PGPE Header field

    Platform default: ON
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF = 0x00,
        ON = 0x01
    </enum>
    <group>debug</group>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_XGPE_PM_SUSPEND_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Enables the XGPE Hcode to support the MPIPL function that coordinates the
    suspension of the Power Management subsystem. If ON (DISABLED), XGPE provides
    and immediate good response to allow for general integration testing

    Consumer: p10_hcode_image_build.c -> XGPE Header field

    Platform default: OFF
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF = 0x00,
        ON = 0x01
    </enum>
    <!-- TODO RTC 210233 -->
    <default>ON</default>
    <group>debug</group>
  </attribute>


  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PM_GLOBAL_FIR_TRACE_EN</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Enable Global FIR tracing through PM Complex Reset/Initialization
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <writeable/>
    <overrideOnly/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_POUND_W_STATIC_DATA_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Enables pstate parameter block code to use the static #W data

    Consumer: p10_pstate_parameter_build.C

    Platform default:OFF
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF = 0x00,
        ON = 0x01
    </enum>
    <initToZero/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_POUND_V_STATIC_DATA_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Enables pstate parameter block code to use the static #V data

    Consumer: p10_pstate_parameter_block.C

    Platform default:OFF
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF = 0x00,
        ON = 0x01
    </enum>
    <initToZero/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_POUNDV_BUCKET_NUM</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Attribute in place to allow override of which POUNDV bucket to use to set
    data.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        BUCKETA = 1,
        BUCKETB = 2
    </enum>
    <initToZero/>
    <overrideOnly/>
    <group>vpd</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_POUNDV_BUCKET_NUM_OVERRIDE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    1 if override of poundv bucket num is available. 0 if override is unavailable.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>vpd</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SKIP_WAKEUP</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    The PM_RESET hwp calls special wakeup enable on all EX targets, then will
    wakeup bit on the core if special wakeup is done. In some hostboot does
    want these steps of the PM_RESET. This attribute gives platform the
    to decide if they want to enable special wakeup and autowakeup on the
    during PM_RESET.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <writeable/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYS_VRT_STATIC_DATA_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Enables pstate parameter block code to use the static system vrt data

    Consumer: p10_pstate_parameter_build.C -> PGPE Hcode

    Platform default:OFF
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF = 0x00,
        ON = 0x01,
        VDN_STEP_OFF = 0x02
    </enum>
    <initToZero/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_POUNDV_VALIDITY_HALT_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables the validity checking of #V VPD content from causing IPL failures.

    OFF:Will enable PStates given all validity checks pass. If validity checks
    a failure is log and error reaction will occur (eg IPL failure) ON: Will
    #V validity checking of #V from causing IPL to halt. check failures will
    error logs and Pstates (including other functions) will be disabled.

    Producer: Override

    Consumers: p10_pstate_parameter_build
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <initToZero/>
    <overrideOnly/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_RING_DBG_MODE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Debug modes supported for QME Scan layout in HOMER.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        SCAN_RING_NO_DEBUG = 0x00,
        SCAN_RING_TRACE_DEBUG = 0x01,
        SCAN_RING_DEEP_DEBUG = 0x02
    </enum>
    <initToZero/>
    <group>debug</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PM_MALF_ALERT_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Switch to enable or disable Power Management Malfunction Alert Handling on
    platform support. e.g. True for PHYP based systems and False for based
    depending on support available.

    Producer: Initialized by Hostboot firmware based on platform support Read by
    p10_pm_stop_gpe_init.C
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        FALSE = 0x00,
        TRUE = 0x01
    </enum>
    <initToZero/>
    <writeable/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PM_HALT_FFDC_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Switch to enable or disable Power Management Complex FFDC collection during
    the PM Complex Halt flow to HOMER to assist with failure analysis and recovery.

    Producer: HB must set or reset this based on the platform use-case and
    p10_pm_halt.C, p10_pm_callout.C
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        FALSE = 0x00,
        TRUE = 0x01
    </enum>
    <initToZero/>
    <writeable/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_DDS_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables the enablement of Digital Droop Sensors (DDS) in the system.

    Producer:MRW

    Consumers:p10_pstate_parameter_build ->
    QME Pstate parameter block ????
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF = 0x00,
        ON = 0x01
    </enum>
    <default>OFF</default>
    <overrideOnly/>
    <group>enablement</group>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_DDS_FREQ_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>

    Producer:Override

    Consumers:p10_pstate_parameter_build ->
    QME Pstate parameter block ????
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF = 0x00,
        ON = 0x01
    </enum>
    <default>OFF</default>
    <overrideOnly/>
    <group>enablement</group>
  </attribute>
 <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_AUXILLARY_MODE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Control XGPE boot: ON : enable xgpe to boot
                       OFF: disable xgpe boot

    Producer:Override

    Consumers: p10_pstate_parameter_build and p10_pm_xgpe_init
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        ON = 0x00,
        OFF = 0x01
    </enum>
    <default>ON</default>
    <overrideOnly/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_PSTATES_MODE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Controls the mode of Pstate Protocol for testing. ON: Boots the PGPE in "OCC
    Mode" but does NOT start the Pstate protocol OFF: Does NOT boot the PGPE
    Boots the PGPE and automatically starts the Pstate protocol. PMCR
    to move Pstates are honored.

    Producer:Override

    Consumers: p10_pstate_parameter_build and p10_pm_pstate_gpe_init
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        ON = 0x00,
        OFF = 0x01,
        AUTO = 0x02
    </enum>
    <default>ON</default>
    <overrideOnly/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_RESCLK_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables the enablement of resonant clocking in the system.

    Producer: Override Consumers: p10_pstate_parameter_build to clear the flag
    for PGPE reaction

    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF = 0x00,
        ON = 0x01
    </enum>
    <default>OFF</default>
    <overrideOnly/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_RVRM_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables RVRM enablement in the system

    Producer: Override

    Consumers: p10_build_pstate_datablock -> Pstate Parameter Block (PSPB)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <default>OFF</default>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_WOF_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables Work Load Optimized Frequency (WOF) algorithms to modify frequency
    active core count and other inputs.

    OFF:Will enable WOF given all validity check pass. If validity checks fail,
    be disabled for the present IPL.

    ON: Will disable WOF OFF_SKIP_DD: as but skips any validity checking of the
    design level (lab use

    Producer: Override

    Consumers: p10_build_pstate_datablock -> Pstate Parameter Block (PSPB) for
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1,
        OFF_SKIP_DD=2
    </enum>
    <default>OFF</default>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_WOV_OVERV_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables Workload Optimized Voltage (WOV) undervolting algorithms which
    voltage below the value calculated from VPD.

    OFF: Will enable WOV overvolting given all validity check pass. If validity
    WOV overvolting will be disabled for the present IPL.

    ON:Will disable overvolting

    Producer: Override

    Consumers: p10_build_pstate_datablock -> Pstate Parameter Block (PSPB)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <default>OFF</default>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_WOV_UNDERV_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables Workload Optimized Voltage (WOV) undervolting algorithms which
    voltage below the value calculated from VPD.

    OFF:Will enable WOV undervolting given all validity check pass. If validity
    WOV undervolting will be disabled for the present IPL.

    ON: Will disable undervolting

    Producer: Override

    Consumers: p10_build_pstate_datablock -> Pstate Parameter Block (PSPB)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <default>OFF</default>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_THROTTLE_CONTROL_LOOP_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables Workload Optimized Frequency Throttle Control Loop

    OFF:Will enable WOF Throttle control loop is validity check pass. If validity
    check fails, then WOF Throttle control loop will be disabled for the present IPL.

    ON: Will disable throttle control loop

    Producer: Override

    Consumers: p10_build_pstate_datablock -> Pstate Parameter Block (PSPB)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <overrideOnly/>
    <initToZero/>
    <group>enablement</group>
  </attribute>

 <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_PITCH_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    ON: Disables PGPE Throttle CI loop. Raw overage value written to
    WCOR. Bit in WCOR indicates the Overage has subsided and by how much.

    OFF: Allows PGPE Throttle Loop to be enabled.

    Producer: Override

    Consumers: p10_build_pstate_datablock -> Pstate Parameter Block (PSPB)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <overrideOnly/>
    <initToZero/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_THROTTLE_CONTROL_LOOP_MODE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
     If WOF Throttle Control Loop is enabled, then selects the mode to update
     throttle control values.

    BINARY: Will update the throttle control values by half the current value of
    throttle.

    DECINC: Will update throttle control value by one in each step.

    Producer: Override

    Consumers: p10_build_pstate_datablock -> Pstate Parameter Block (PSPB)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        BINARY = 0x0,
        DECINC = 0x1
    </enum>
    <default>BINARY</default>
    <group>wof</group>
  </attribute>


  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_OCS_DISABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Disables Over Current Sensor functions

    OFF:Will enable Over Current Sensor (OCS) given all validity check pass. If
    checks fail, WOV undervolting will be disabled for the present IPL.

    ON: Will disable OCS and WOF (TBD on the this phase in of validity)

    Producer: Override

    Consumers: p10_pstate_parameter_build -> PGPE Hcode
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <default>OFF</default>
    <overrideOnly/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_PGPE_CURRENT_READ_DISABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Disables PGPE from reading the rail currents and populating content to the OCC.

    OFF:Will enable the PGPE Current reading function

    ON: Will disable the PGPE Current reading function.  The OCC SRAM will NOT be
    updated with any readings.

    Producer: Override

    Consumers: p10_pstate_parameter_build -> PGPE Hcode
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <default>OFF</default>
    <overrideOnly/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_DCM_TRACKING_ENABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Enables the PGPE to clip Pstates based on the sibling Dual Chip Module (DCM)
    Pstate value to have the combination generally track.  The DCM values are
    NOT interlocked as this is to aid in thermal management.

    Producer: p10_build_pstate_datablock

    Consumers: PGPE HCode

    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        FALSE=0,
        TRUE=1
    </enum>
    <group>enablement</group>
  </attribute>

 <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_PDV_VALIDATION_MODE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Defines the mode of #V checking in relationship to system reaction

    FAIL - if not ATTR_SYSTEM_PSTATE_DISABLE, fails the IPL (product default).
           else act as OFF
    INFO - if not ATTR_SYSTEM_PSTATE_DISABLE, Info error log; Pstates are disabled;
                IPL continues.
           else act as OFF
    WARN - if not ATTR_SYSTEM_PSTATE_DISABLE, error messages to traces; no error
                logs, Pstates are disabled (as #V is bad), IPL continues.
           else act as OFF
    OFF  - no checking performed; IPL continues.  Pstates are follow
                ATTR_SYSTEM_PSTATE_DISABLE (user beware if not Disabled).

    Producer: Override

    Consumers: p10_pstate_parameter_build
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        FAIL= 0,
        INFO = 1,
        WARN = 2,
        OFF = 3
    </enum>
    <default>FAIL</default>
    <group>enablement</group>
  </attribute>

 <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_PDW_VALIDATION_MODE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Defines the mode of #W checking in relationship to system reaction

    FAIL - if not ATTR_SYSTEM_WOF_DISABLE or not ATTR_SYSTEM_DDS_DISABLE,
                fails the IPL (product default);
           else act as OFF.
    INFO - if not ATTR_SYSTEM_WOF_DISABLE or not ATTR_SYSTEM_DDS_DISABLE,
                error messages to traces; Info error log; WOF AND DDS are
                disabled; IPL continues.
            else if act as OFF
    WARN - if not ATTR_SYSTEM_WOF_DISABLE or not ATTR_SYSTEM_DDS_DISABLE,
                error messages to traces; no error logs, WOF and DDS are
                disabled, IPL continues.
           else if act as OFF
    OFF  - no checking performed; IPL continues.  WOF and DDS follow
                ATTR_SYSTEM_WOF_DISABLE and ATTR_SYSTEM_DDS_DISABLE
                (user beware if not Disabled).
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        FAIL= 0,
        INFO = 1,
        WARN = 2,
        OFF = 3
    </enum>
    <default>FAIL</default>
    <group>enablement</group>
  </attribute>

<!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_IQ_VALIDATION_MODE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Defines the mode of IQ checking in relationship to system reaction

    FAIL - if not ATTR_SYSTEM_WOF_DISABLE or not ATTR_SYSTEM_DDS_DISABLE,
                fails the IPL (product default);
           else act as OFF.
    INFO - if not ATTR_SYSTEM_WOF_DISABLE or not ATTR_SYSTEM_DDS_DISABLE,
                error messages to traces; Info error log; WOF AND DDS are
                disabled; IPL continues.
           else if act as OFF
    WARN - if not ATTR_SYSTEM_WOF_DISABLE or not ATTR_SYSTEM_DDS_DISABLE,
                error messages to traces; no error logs, WOF and DDS are
                disabled, IPL continues.
           else if act as OFF
    OFF - no checking performed; IPL continues.  WOF and DDS follow
                ATTR_SYSTEM_WOF_DISABLE and ATTR_SYSTEM_DDS_DISABLE
                (user beware if not Disabled).
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        FAIL= 0,
        INFO = 1,
        WARN = 2,
        OFF = 3
    </enum>
    <default>FAIL</default>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PBAX_BRDCST_ID_VECTOR</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Receive PBAX Broadcast Group. Vector that is indexed when decoded PMISC with
    decoded PMISC pbax_chipid value. If the bit in this vector at decoded
    location is a 1, then this receive engine will participate the broadcast

    Override attribute. Platform value of 0 indiates the OCC firmware will this
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>pbax</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PBAX_CHIPID</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Receive PBAX Chipid. Value that indicates this PBA's PBAX Chipid within the
    Is matched to pbax_chipid of the Address phase if

    Provided by the Machine Readable Workbook.

    Platform default:Nimbus systems - set so value in ATTR_FABRIC_GROUP_ID
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <group>pbax</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PBAX_GROUPID</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Receive PBAX Groupid. Value that indicates this PBA's PBAX Group affinity.
    matched to pbax_groupid of the PMISC Address phase.

    Provided by the Machine Readable Workbook.

    Platform default:Nimbus systems = 0
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <group>pbax</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SPIPSS_FREQUENCY</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    SPIPSS Clock Frequency (binary in KHz)

    Valid range: 500KHz to 2500KHz

    Consumer: p10_pss_init

    Overridden by the Machine Readable Workbook.

    If default of 0 is read, HWP will set SPIPSS frequency to 10MHz.
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <group>pss</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SPIPSS_SELECT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Defines which of the PSS chip selects (0 or 1) that the APSS is connected

    Producer:  Machine Readable Workbook
    Consumer: p10_pm_pss_init
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        NONE = 0xFF,
        CS0 = 0x00,
        CS1 = 0x01
    </enum>
    <initToZero/>
    <group>pss</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_R_DISTLOSS_UOHM</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Impedance (binary in microOhms) of the distribution loss sense point to the
    value is applied to each processor instance.

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO

    Producer: Machine Readable Workbook (per the power subsystem design)

    Consumers: p10_pstate_parameter_build
    </description>
    <valueType>uint32</valueType>
    <array>4</array>
    <platInit/>
    <initToZero/>
    <group>sysparms</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_R_LOADLINE_UOHM</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Impedance (binary microOhms) of the load line from a processor VRM to the
    pins. This value is applied to each processor instance.

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO

    Note:no loadline may be present in the system; thus, a value of 0 is legal.

    Producer: Machine Readable Workbook (per the power subsystem design)

    Consumers: p10_pstate_parameter_build
    </description>
    <valueType>uint32</valueType>
    <array>4</array>
    <platInit/>
    <initToZero/>
    <group>sysparms</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_VRM_VOFFSET_UV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Offset voltage (binary in microvolts) to apply to the VDD VRM distribution
    processor module. This value is applied to each processor instance.

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO

    Producer: Machine Readable Workbook (per the power subsystem design)

    Consumers: p10_pstate_parameter_build
    </description>
    <valueType>uint32</valueType>
    <array>4</array>
    <platInit/>
    <initToZero/>
    <group>sysparms</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_CORE_THROTTLE_ASSERT_COUNT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The number of XGPE Fixed Timer Interrupts (see Hcode documentation for to
    a core throttle when OCC Flag 3[Core Throttle Continuous Enable] is set.

    A value of 0 when Continuous Change Enable is set will deassert throttle.

    Producer:Override/Lab

    Consumers:p10_hcode_image_build.c -> XGPE Header field
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>didt</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_CORE_THROTTLE_DEASSERT_COUNT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The number of XGPE Fixed Timer Interrupts (see Hcode documentation for
    durations) to deassert core throttle when OCC Flag 3[Core Continuous
    Enable] is set.

    A value of 0 when Continuous Change Enable is set and is non-0, throttling
    always on.

    Producer:Override/Lab

    Consumers:p10_hcode_image_build.c -> PGPE Header field
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>didt</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_POUNDV_BUCKET_DATA</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The keyword data is read directly from #V VPD and stored in this
    attribute without being altered
    NOTE: you may need to handle correcting endianness if you are using this
    </description>
    <valueType>uint8</valueType>
    <array>351</array>
    <platInit/>
    <initToZero/>
    <group>vpd</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_POUNDW_BUCKET_DATA</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The keyword data is read directly from #W VPD and stored in this
    attribute without being altered
    NOTE: you may need to handle correcting endianness if you are using this
    </description>
    <valueType>uint8</valueType>
    <array>2953</array>
    <platInit/>
    <initToZero/>
    <group>vpd</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_AVSBUS_BUSNUM</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Defines the AVSBus (0, 1 or 2) which has the indicated rail VRM

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO

    Producer:Machine Readable Workbook

    Consumers: p10_set_evid; p10_set_voltage (tool) ->
    Global Pstate Parameter Block (GPPB) for PGPE;  OCC Pstate Parameter Block
    OCC

    *MOST* systems use Bus 0 for VDD, Bus 1 for VCS, Bus 2 for VIO and VDN. If
    is not the case, the value must be appropriately set by the platform (eg MRW
    or equivalent)
    </description>
    <valueType>uint8</valueType>
    <array>4</array>
    <platInit/>
    <default>0</default>
    <group>vrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_AVSBUS_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    AVSBus Clock Frequency (binary in KHz)

    Consumer: p10_ocb_init.C

    Overridden by the Machine Readable Workbook.

    If default of 0 is read, HWP will set AVSBus frequency to 1MHz.
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <initToZero/>
    <group>vrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_AVSBUS_RAIL</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Defines the AVSBus rail selector number (0 - 15) for the VRM on the bus
    by ATTR_AVSBUS_BUSNUM[x].

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO

    Producer:Machine Readable Workbook

    Consumers: p10_set_evid; p10_set_voltage (tool) ->
    Global Pstate Parameter Block (GPPB) for PGPE OCC Pstate Parameter Block
    OCC

    *MOST* systems use Bus 0 for VDD, Bus 1 for VCS, Bus 2 for VIO and VDN. If
    is not the case, the value must be appropriately set by the platform (eg
    or equivalent)
    </description>
    <valueType>uint8</valueType>
    <array>4</array>
    <platInit/>
    <default>0</default>
    <group>vrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_EXTERNAL_VRM_STEPSIZE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Step size (binary in microvolts) to take upon external VRM voltage. This
    provide a limit of the external VRMs steps.

    Consumer: p10_pstate_parameter_build -> p10_setup_evid Pstate Parameter
    (PSPB) for PGPE
    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO;

    Provided by the Machine Readable Workbook after system characterization.
    </description>
    <valueType>uint32</valueType>
    <array>4</array>
    <platInit/>
    <initToZero/>
    <group>vrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_EXTERNAL_VRM_TRANSITION_RATE_DEC_UV_PER_US</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Transition rate (binary in microVolts per microsecond) of the VRM for an
    transition.This is used as part of the overall voltage time calculation
    provides a default value of 10000 uV/us (eg if this attribute is zero.
    the fastest possible rate is limited to

    Consumer: p10_pstate_parameter_build -> Pstate Parameter Block (PSPB) for PGPE

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO;

    Provided by the Machine Readable Workbook after system characterization.
    </description>
    <valueType>uint32</valueType>
    <array>4</array>
    <platInit/>
    <default>0</default>
    <group>vrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_EXTERNAL_VRM_TRANSITION_RATE_INC_UV_PER_US</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Transition rate (binary in microVolts per microsecond) of the VRM for an
    transition.This is used as part of the overall voltage time calculation
    provides a default value of 10000 uV/us (eg if this attribute is zero.
    the fastest possible rate is limited to

    Consumer: p10_pstate_parameter_build -> Pstate Parameter Block (PSPB) for PGPE

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO;

    Provided by the Machine Readable Workbook after system characterization.
    </description>
    <valueType>uint32</valueType>
    <array>4</array>
    <platInit/>
    <default>0</default>
    <group>vrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_EXTERNAL_VRM_TRANSITION_STABILIZATION_TIME_NS</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Time (binary in nanoseconds) to allow the voltage rail to stabilize before
    transition to be fully complete. This value is used for both and
    transitions as part of the overall voltage transition calculation.
    provides a default value of 5000ns (5us) if this is zero. Note: the
    delay is limited to 1ns.

    Consumer: p10_pstate_parameter_build -> Pstate Parameter Block (PSPB) for PGPE

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO;

    Provided by the Machine Readable Workbook after system characterization.
    </description>
    <valueType>uint32</valueType>
    <array>4</array>
    <platInit/>
    <default>0</default>
    <group>vrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_EXTERNAL_VRM_TRANSITION_START_NS</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Delay (binary in nanoseconds) from the time the VRM receives the write
    until the voltage actually moves.This value is used for both and
    transitions as part of the overall voltage transition calculation.
    provides a default value of 8000ns (eg 8us)) if attribute is zero. Note:
    smallest possible delay is limited to 1ns.

    Consumer: p10_pstate_parameter_build -> Pstate Parameter Block (PSPB) for PGPE

    [index] ->0: VDD; 1: VCS; 2: VDN; 3: VIO;

    Provided by the Machine Readable Workbook after system characterization.
    </description>
    <valueType>uint32</valueType>
    <array>4</array>
    <platInit/>
    <default>0</default>
    <group>vrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_TABLE_DATA</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    WOF data from SEEPROM which contains WOF header data + VRT data (vrt +
    for 6 Vcs, 26 Vdd, 4 IO, 4 AC)

    Consumer: p10_pstate_parameter_build
    </description>
    <valueType>uint8</valueType>
    <array>40064</array>
    <platInit/>
    <initToZero/>
    <group>wof</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_VRATIO_VDD_COREON_OVERRIDE_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The percentage (in 0.1% units) of VDD DC leakage that is attributed to the
    core region exclusive of the Matrix Multiply Accumulator (MMA) function.

    Consumer:  p10_pstate_parameter_build -> PGPE Hcode

    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <default>800</default>
    <overrideOnly/>
    <group>wof</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_VRATIO_VDD_MMAON_OVERRIDE_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The percentage (in 0.1% units) of VDD DC leakage that is attributed to the
    Matrix Multiply Accumulator (MMA) function with a core.

    Consumer:  p10_pstate_parameter_build -> PGPE Hcode

    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <default>100</default>
    <overrideOnly/>
    <group>wof</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_VRATIO_VDD_L3ON_OVERRIDE_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The percentage (in 0.1% units) of VDD DC leakage that is attributed to the
    L3 cache region associated with each core.

    Consumer:  p10_pstate_parameter_build -> PGPE Hcode

    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <default>800</default>
    <overrideOnly/>
    <group>wof</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_VRATIO_VCS_COREON_OVERRIDE_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The percentage (in 0.1% units) of VCS DC leakage that is attributed to the
    core region inclusive of the Matrix Multiply Accumulator (MMA) function.

    Consumer:  p10_pstate_parameter_build -> PGPE Hcode

    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <default>200</default>
    <overrideOnly/>
    <group>wof</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOF_VRATIO_VCS_L3ON_OVERRIDE_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    The percentage (in 0.1% units) of VCS DC leakage that is attributed to the
    L3 region associated with each core.

    Consumer:  p10_pstate_parameter_build -> PGPE Hcode

    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <default>00</default>
    <overrideOnly/>
    <group>wof</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_MAX_DROOP_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV undervolting and/or WOF overvolting is enabled, then this is used to
    a check for maximum frequency loss. If frequency in tenths of is below
    value, then an error is logged and WOV is disabled.

    Values can range from 0 to 200(20%). Values greater than 200 are to
    clipped to 200 (20%).
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_OVERV_MAX_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV overvolting is enabled, then this specifies the maximum amount of
    The value is specified in tenths of percentage(0.1%).

    If, 0, then default value of 10(1%) is used.

    Values can range from 1(0.1%) to 100(10%). Values greater than 100 are to
    clipped to 100 (10%).
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_OVERV_STEP_DECR_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV overvolting is enabled, then this specifies the amount by which to
    of overvolt amount. The value is specified in tenths of

    If 0, then default value of 0.5%(5) is used.

    Values can range from 1(0.1%) to 20(2%). Values greater than 20 are clipped
    clipped to 20 (2%).
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_OVERV_STEP_INCR_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV overvolting is enabled, then this specifies the amount by which to
    of overvolt amount. The value is specified in tenths of

    If 0, then default value of 0.5%(5) is used.

    Value can range from 1(0.1%) to 20(2%). Values greater than 20 are clipped
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_OVERV_VMAX_SETPOINT_MV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Maximum regulator voltage allowed without exceeding the technology Vmax at
    pins.

    If, 0, then default value of 1150(1.15V)
    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_SAMPLE_125US</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV undervolting and/or WOF overvolting is enabled, then this determines
    which the undervolting and/or overvolting is run. For P9, the minimum is
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_UNDERV_MAX_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV undervolting is enabled, then this specifies the maximum amount of
    The value is specified in tenths of percentage(0.1%).

    If, 0, then default value of 6%(60) is used.

    Value can range from 10(1%) to 255(25.5%). For values between 1(0.1%) and
    of 10(1%) will be used.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_UNDERV_PERF_LOSS_THRESH_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    THIS ATTRIBUTE IS DEPRECATED AND WILL BE REMOVED.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_LIGHT_PERF_LOSS_THRESH_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV undervolting is enabled, then this specifies the amount of performance
    loss that is consider a "light" amount at which undervolting increments are
    stopped(and may be reduced). The value is specified in tenths of percentage
    (0.1%).

    If, 0, then default value of 0.5%(5) is used.

    Value can range from 1(0.1%) to 20(2%). All other values will be clipped to
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

 <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_HEAVY_PERF_LOSS_THRESH_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV undervolting is enabled, then this specifies the amount of performance
    loss that is consider a "heavy" amount at which undervolting increments are
    stopped and reduced pointedly. The value is specified in tenths of percentage
    (0.1%).

    If, 0, then default value of 0.5%(5) is used.

    Value can range from 1(0.1%) to 20(2%). All other values will be clipped to
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_UNDERV_STEP_DECR_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV undervolting is enabled, then this specifies the amount by which to
    of overvolt amount. The value is specified in tenths of

    If 0, then default value of 0.5%(5) is used.

    Value can range from 1(0.1%) to 20(2%). Values greater than 20 are clipped
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_UNDERV_STEP_INCR_10THPCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    If WOV undervolting is enabled, then this specifies the amount by which to
    of overvolt amount. The value is specified in tenths of

    If 0, then default value of 0.5%(5) is used.

    Value can range from 1(0.1%) to 20(2%). Values greater than 20 are clipped
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_WOV_UNDERV_VMIN_MV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Maximum regulator voltage allowed without exceeding the technology Vmax at
    pins.

    If, 0, then default value of 1150(1.15V)
    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wov</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DDS_DPLL_FMAX_FAST_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disable the Fast Fmax Slewing function of the DPLL when in SLEW_MODE

    Producer: Override
    </description>
    <valueType>uint8</valueType>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dds</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DDS_DPLL_FMIN_FAST_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disable the Fast Fmin Slewing function of the DPLL when in SLEW_MODE

    Producer: Override
    </description>
    <valueType>uint8</valueType>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dds</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DDS_FMAX_OVERRIDE_KHZ</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Override for DPLL Fmax value when in ATTR_DDS_DPLL_SLEW_MODE.SLEW_MODE

    [Point] ->9 entries-:
        0: CF0;
        1: CF1;
        2: CF2;
        3: CF3;
        4: CF4;
        5: CF5;
        6: CF6;
        7: CF7;
        8: Enable

    Producer: Override
    </description>
    <valueType>uint16</valueType>
    <array>9</array>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dds</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DDS_FMIN_OVERRIDE_KHZ</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Override for DPLL Fmin value when in ATTR_DDS_DPLL_SLEW_MODE.SLEW_MODE

    [Point] ->9 entries-:
        0: CF0;
        1: CF1;
        2: CF2;
        3: CF3;
        4: CF4;
        5: CF5;
        6: CF6;
        7: CF7;
        8: Enable

    Producer: Override
    </description>
    <valueType>uint16</valueType>
    <array>5</array>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dds</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_FREQ_PB_MHZ_POUNDV_FALLBACK</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    The powerbus frequency that should be used to locate a valid #V bucket in
    Module VPD if the actual ATTR_FREQ_PB_MHZ value isn't present.
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <enum>
        NO_FALLBACK = 0,
        1600 = 1600,
        1866 = 1866,
        2000 = 2000,
        2133 = 2133,
        2400 = 2400
    </enum>
    <default>NO_FALLBACK</default>
    <writeable/>
    <overrideOnly/>
    <group>vpd</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SAFE_MODE_FREQUENCY_MHZ</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Safe mode frequency in MHZ. This attribute is used within the hwp to update
    DPLL frequency register.

    Consumer: p10_setup_evid.C

    Modified by p10_pstate_parameter_build
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <initToZero/>
    <writeable/>
    <group>safe</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SAFE_MODE_VOLTAGE_MV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Safe mode voltages for VDD and VCS in mV.  If not overridden,  computed
    from #V PowerSave voltages uplifted by ATTR_BOOT_VOLTAGE_BIAS_0P5PCT.

    [index] ->0: VDD; 1: VCS;

    Consumer: p10_setup_evid.C

    Modified in p10_pstate_parameter_build
    </description>
    <valueType>uint32</valueType>
    <array>2</array>
    <platInit/>
    <initToZero/>
    <writeable/>
    <group>safe</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PMCR_MOST_RECENT_MODE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Enables the platform mode where the most recent PMCR update
    will be the controlling value for Pstate changes. If disabled,
    the legacy "fastest one wins" algorithm is used.

    Producer: p10_build_pstate_datablock

    Consumers: p10_hcode_image_build ->
    PGPE Header
    QME attribute
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        FALSE=0,
        TRUE=1
    </enum>
    <initToZero/>
    <writeable/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_UNSECURE_HOMER_ADDRESS</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Address is allocated by hostboot and HBRT and is populated
    by p10_hcode_image_build with sc2 instruction. It enables CME to invoke
    a transition from HV to UV during STOP entry on an SMF enabled system.
    Address value should be aligned with 2MB boundary.

    Producer: Initialized by Hostboot firmware based on platform support
    Consumers: Read by p10_hcode_image_build.C
    </description>
    <valueType>uint64</valueType>
    <platInit/>
    <initToZero/>
    <group>smf</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_UNSECURE_HOMER_SIZE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Size of memory which hostboot must copy from a temp buffer to
    an unsecure region of main store memory. Once HOMER is built, hostboot reads
    the attribute and copies the amount of memory specified in this attribute from
    a temp buffer to an unsecure region of main memory specifed in an attribute
    ATTR_UNSECURE_HOMER_ADDRESS

    Producer: Initialized by hostboot firmware based on platform support

    Consumers: Read by p10_hcode_image_build.C
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <initToZero/>
    <writeable/>
    <group>smf</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_MMA_POWEROFF_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables the MMA power-off function within the QME.

    OFF: Enables the QME MMA power-off funtion as further controlled by

    ON: Disables the dynamic MMA power-off function within the QME The MMA will
    be on if the core is powered on.

    Producer: Override

    Consumers: QME Hcode
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <initToZero/>
    <overrideOnly/>
    <group>mma</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_MMA_POWERON_DISABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables the MMA power-on function within the QME. This can be use for
    that will NEVER have MMA based applications running so as to save the MMA

    OFF: Enables the QME MMA power-on funtion. This will have the MMA powered on
    istep 16 and then controlled by ATTR_SYSTEM_MMA_POWEROFF_DISABLE and
    thereafter.

    ON: Disables the MMA power-on function and leaves the MMA permenantly off.
    core will hang on MMA instruction that are dispatched.

    Producer: Override

    Consumers: QME Hcode
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <initToZero/>
    <overrideOnly/>
    <group>mma</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SYSTEM_MMA_POWEROFF_DELAY_POWEROF2_MS</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Time to delay before powering off the MMA due to the lack of MMA instructions.

    Time = 1ms * 2**ATTR_SYSTEM_MMA_POWEROFF_DELAY_POWEROF2_MS.

    Valid values of  0x00 - 0x17 to yield times from 1ms to 2.3 hours -:
        0x00 - 1ms
        ...
        0x01 - 1 second (default)
        ...
        0x17 - 1 day
        0x18 - 0xFD - Reserved (maps as 0x17)
        0xFE - every QME FIT timer interrupt (~250us)
        0xFF - no power off of MMA (QME Hcode still runs; different behavior
    ATTR_SYSTEM_MMA_POWEROFF_DISABLE)

    Producer:  Machine Readable Workbook

    Consumer: QME Hcode
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <default>0xA</default>
    <group>mma</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_RVRM_VID</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Retention Voltage ID to be applied to STOP 3 cores.

    Valid values (8mV granularity) -:
        0x00 - 000mV
        ...
        0x38 - 448mV (minimum circuit value)
        0x39 - 456mV
        ...
        0x4B - 600mV (default)
        ...
        0x6A - 848mV (maximum circuit value)
        ...
        0x7F - 1016mV
        All others reserved and flagged as errors.

    The Retention Voltage circuit has usable range of 448mV to 848mV. Values
    below 448mv (0x38) will be clipped to 448mV and values above 848mV (0x6A)
    will be clipped to 848mV.
    </description>
    <valueType>uint8</valueType>
    <writeable/>
    <default>0x4B</default>
    <overrideOnly/>
    <group>rvrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_RVRM_DEADZONE_MV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Retention voltage deadzone where the RVRM must be disabled if the external
    effective voltage is less than ATTR_RVRM_VID (in mV) plus this attribute
    value.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <default>50</default>
    <overrideOnly/>
    <group>rvrm</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_STOP_LEVELS_SUPPORTED</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Defines the STOP levels supported by the Hcode in the present driver.

    Represented as bit vector where bit 0 = STOP0; bit 1 = STOP 1, ...,
    bit 15 = STOP15.
    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <!-- Levels supported:  0, 2, 5, 11 -->
    <default>0xA410</default>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_STOP_LEVELS_DISABLED</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Disables STOP Level operat?ions in the Power Management complex by mapping
    the respective level to the next lower supported level in a additive
    manner.

    Represented as bit vector where bit 0 = STOP0; bit 1 = STOP 1, ...,
    bit 15 = STOP15.
    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <initToZero/>
    <group>enablement</group>
  </attribute>

  <!-- ********************************************************************* -->=
  <attribute>
    <id>ATTR_BOOT_VOLTAGE_BIAS_0P5PCT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Boot bias applied to uplift the PowerSave #V VDD and VCS Voltages to boot the
    chip - % of bias (signed twos complement in 0.5 percent). This is to handle timing
    margin until droop protection is enabled.

    Producer: Override

    Consumer: p10_setup_evid (first pass)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <default>12</default>
    <overrideOnly/>
    <group>bias</group>
  </attribute>

  <!-- ********************************************************************* -->=
  <attribute>
    <id>ATTR_WOF_OMI_FORCE_FREQ_MHZ</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Core Frequency at or above which the OMI buses are forced to full width
    independent of what link reduction may attempt.  When the core frequency is
    below this value.

    Producer:  Override/Lab
    Consumers: p10_build_pstate_datablock
    </description>
    <valueType>uint32</valueType>
    <initToZero/>
    <platInit/>
    <overrideOnly/>
    <group>wof</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_SRAM_WRITE_ASSIST_MV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    This attribute helps to indicate PGPE to turn off write assist even at high voltage
    when it is not used.
    Producer:  Override/Lab
    Consumers: p10_build_pstate_datablock
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <overrideOnly/>
    <default>0x0</default>
    <group>wof</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_DDS_THRESHOLD_PSTATE_ENABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Enables the updating of the DDS threshold settings upon Pstate changes.

    Producer:  Override/Lab
    Consumers: p10_build_pstate_datablock
    </description>
    <valueType>uint8</valueType>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <platInit/>
    <overrideOnly/>
    <default>OFF</default>
    <group>dds</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_DDS_COARSE_THROTTLE_ENABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Enables coarse throttle reaction to DDS events.

    Producer:  Override/Lab
    Consumers: p10_build_pstate_datablock
    </description>
    <valueType>uint8</valueType>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <platInit/>
    <overrideOnly/>
    <default>OFF</default>
    <group>dds</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_DDS_FREQ_JUMP_ENABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Enables frequency jump reaction to DDS events.

    Producer:  Override/Lab
    Consumers: p10_build_pstate_datablock
    </description>
    <valueType>uint8</valueType>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <platInit/>
    <overrideOnly/>
    <default>OFF</default>
    <group>dds</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_DDS_BIAS_ENABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Enables DDS biasing through the use of the #W ALT frequency and voltage
    data.

    Producer:  Override/Lab
    Consumers: p10_build_pstate_datablock
    </description>
    <valueType>uint8</valueType>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <platInit/>
    <overrideOnly/>
    <default>OFF</default>
    <group>bias</group>
  </attribute>

 <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SAFE_MODE_THROTTLE_IDX</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Set the index into a 64 entry Core Throttle Table to use while in Safe Mode.

    Legal values are 0 to 63.  All others are invalid.

    Consumer: p10_pstate_parameter_build ->
              PGPE Hcode -> QME Hcode
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <default>0xFF</default>
    <writeable/>
    <group>safe</group>
  </attribute>

<!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_THROTTLE_TABLE_OVERRIDE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Override content of the 64 entry Core Throttle Table used to throttle the
    cores below the Fmin frequency.

    Consumer: p10_pstate_parameter_build ->
              Local Parameter Block -> QME Hcode
    </description>
    <valueType>uint32</valueType>
    <array>64</array>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wof</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_THROTTLE_MODE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Mode of the throttle control function.

    NONE - No throttling
    ICTMN - Instruction Core Throttle / M/N windows
    PP_PCT_RED - Power Proxy Percent Reduction
    PP_TARGET - Power Proxy Target

    Consumer: p10_pstate_parameter_build ->
              Local Parameter Block -> QME Hcode
    </description>
    <valueType>uint32</valueType>
    <enum>
        NONE=0,
        ICTMN=1,
        PP_PCT_RED=2,
        PP_TARGET=3
    </enum>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>wof</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DLR_LINKS_ENABLED</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Array making up bit vectors indicating which of the 66 possible (max of 42)
    Data Link Layers (DLs) are alive.

        Bit   dlr_link[0] dlr_link[1] dlr_link[2]  dlr_link[3]  dlr_link[4]
         0     MC00_OMI0     PCI0-0    OPT0_AX0     OPT4_AX0     OPT6_AX0
         1     MC00_OMI1     PCI0-1    OPT0_AX1     OPT4_AX1     OPT6_AX1
         2     MC01_OMI0     PCI0-2    OPT0_O0      OPT4_O0      OPT6_O0
         3     MC01_OMI1     PCI1-0    OPT0_O1      OPT4_O1      OPT6_O1
         4     MC10_OMI0     PCI1-1    OPT0_N0      OPT4_N0      OPT6_N0
         5     MC10_OMI1     PCI1-2    OPT0_N1      OPT4_N1      OPT6_N1
         6     MC11_OMI0               OPT0_N2
         7     MC11_OMI1               OPT0_N3
         8     MC20_OMI0     OPT1_AX0  OPT3_AX0     OPT5_AX0     OPT7_AX0
         9     MC20_OMI1     OPT1_AX1  OPT3_AX1     OPT5_AX1     OPT7_AX1
        10     MC21_OMI0     OPT2_AX0  OPT3_O0      OPT5_O0      OPT7_O0
        11     MC21_OMI1     OPT2_AX1  OPT3_O1      OPT5_O1      OPT7_O1
        12     MC30_OMI0               OPT3_N0      OPT5_N0      OPT7_N0
        13     MC30_OMI1               OPT3_N1      OPT5_N1      OPT7_N1
        14     MC31_OMI0               OPT3_N2
        15     MC31_OMI1               OPT3_N3

    Consumer: p10_pstate_parameter_build -> XGPE Hcode
    </description>
    <valueType>uint16</valueType>
    <array>5</array>
    <writeable/>
    <initToZero/>
    <group>dlr</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DLR_SAMPLE_TIME_MS</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Time (in millisecond) (P) that the IO DLs are sampled such to produce an I/O
    Power value into the WOF algorithm.

    If 0, a default value of 2 is used.
    Valid values:  1 to 1000 (1 milliscodnd to 1 second)

    Consumer: p10_pstate_parameter_build -> XGPE Hcode
    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dlr</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DLR_AVERAGE_HISTORY_DEPTH_OVERRIDE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Depth (N) of the running average history buffer used for Dynamic Lane Reduction
    (DL)to allow hysteresis by making P*N > (OCC WOF tick time).  See
    ATTR_DLR_SAMPLE_TIME_MS.

    If 0, a default value of 4 is used.
    Valid values: 1, 2, 4, 8 and 16

    Consumer: p10_pstate_parameter_build -> XGPE Hcode
    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dlr</group>
  </attribute>

  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DLR_PLSF_OVERRIDE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Override for XGPE built in table.

    Table of 8-bit per-link-type scaling factors (PLSF) to normalize the relative
    power per link (16 types), used for chip activity calculation.

    One table represents all possible link types

     [Index]->32 entries-:
         0: 32G-A-6x18;
         1: 32G-A-7x18;
         2: 32G-X-6x18;
         3: 32G-X-7x18;
         4: 32G-OC-12x8;
         5: 32G-NV-12x4;
         6: 50G-A;
         7: 50G-X;
         8: 50G-OC;
         9: 50G-NV-12x4;
        10: 32G-OM;
        11: PCIE-G4-4X4X8X
        12: PCIE-G4-8X
        13: PCIE-G4-16X
        14: PCIE-G5-4X
        15: PCIE-G5-8X
        all others reserved

    TODO:  More definition of this attribute is needed!!!
    Consumer: p10_pstate_parameter_build -> XGPE Hcode
    </description>
    <valueType>uint8</valueType>
    <array>32</array>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>dlr</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_SAFE_MODE_XSTOP</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Enables a system checkstop upon entering safe mode for debug.
    Producer:  Override/Lab
    Consumers: p10_pm_pgpe_init
    </description>
    <valueType>uint8</valueType>
    <enum>
        OFF=0,
        ON=1
    </enum>
    <platInit/>
    <overrideOnly/>
    <default>OFF</default>
    <group>debug</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_VCS_FLOOR_MV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Establishes the minimum effective voltage (eg at the module pins) in mV for
    the VCS rail used during Pstate operations.

    If the value is 0, the values in #V are used normally (eg with system
    parameter uplift) to achieve the effective voltage.

    Producer:  Override/Lab
    Consumers: p10_pstate_parameter_build -> PGPE Hcode
    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <initToZero/>
    <overrideOnly/>
    <group>pstate</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_VCS_VDD_OFFSET_MV</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
    Establishes the minimum voltage offset at the module pins in mV that the
    VCS rail is above the VDD rail during Pstate operations when VCS above any
    established VCS floor defined by ATTR_VCS_FLOOR_MV.   If ATTR_VCS_FLOOR_MV
    is 0, this offset will apply across the entire VCS voltage range.

    Producer:  MRW
    Consumers: p10_pstate_parameter_build -> PGPE Hcode
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <default>20</default>
    <group>pstate</group>
  </attribute>

  <!-- *********************************************************************-->
  <attribute>
    <id>ATTR_WOF_ALTITUDE_TEMP_ADJUSTMENT</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
    Temperature adjustment due to altitude in degrees Celcius/km*1000.

    Default: 8C/2100m = 8C/2.1Km = 3.809 C/kM;  Encode: 3.809 C/kM*1000 = 3809
    Producer:  Override
    Consumers: p10_pm_pgpe_init
    </description>
    <valueType>uint16</valueType>
    <platInit/>
    <overrideOnly/>
    <default>3809</default>
    <group>debug</group>
  </attribute>

  <!-- *********************************************************************-->
</attributes>

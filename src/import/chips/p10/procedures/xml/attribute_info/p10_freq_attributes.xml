<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p10/procedures/xml/attribute_info/p10_freq_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2018,2020                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CP_REFCLOCK_KHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of the processor refclock in KHz.
    Provided by the Machine Readable Workbook.
    This can be overridden to adjust the refclock frequency.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <default>100000</default>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_FREQ_DPLL_REFCLOCK_KHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of the processor DPLL refclock in KHz.
    Provided by the Machine Readable Workbook.
    This can be overridden to adjust the refclock frequency.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <default>133333</default>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_FREQ_IO_REFCLOCK_KHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of the IO refclock in KHz.
    Provided by the Machine Readable Workbook.
    This can be overridden to adjust the refclock frequency.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <default>100000</default>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CORE_FLOOR_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The minimum frequency of the core mesh clock, in MHz.
    Determines the core frequency; nest and caches run at half this value.
    Must be less than or equal to ATTR_FREQ_CORE_CEILING_MHZ.
    This can differ per chip in the system.
    Provided by the #V bucket of module VPD.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CORE_CEILING_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The maximum frequency of the core mesh clock, in MHz.
    Determines the core frequency; nest and caches run at half this value.
    Must be greater than or equal to ATTR_FREQ_CORE_FLOOR_MHZ.
    This can differ per chip in the system.
    Provided by the #V bucket of module VPD.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_SYSTEM_CORE_FLOOR_MHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The system-wide minimum frequency of the core mesh clock, in MHz.
    This is the lowest floor frequency across all chips in the system.
    Used for fabric epsilon calculations.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_SYSTEM_CORE_CEILING_MHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The system-wide maximum frequency of the core mesh clock, in MHz.
    This is the highest ceiling frequency across all chips in the system.
    Used for fabric epsilon calculations.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CORE_BOOT_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Core boot frequency at 1:1 from Nest DPLL
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_MC_MHZ</id>
  <targetType>TARGET_TYPE_MC</targetType>
  <description>
    The frequency of the memory controller mesh clock, in MHz.
    This clock is asynchronous to the nest and drives the MCU queues, and all the
    associated logic that drives the inputs to the OMI.
    This can be set differently for each memory controller in the chip.
  </description>
  <valueType>uint32</valueType>
  <enum>
    1333 = 1333,
    1467 = 1467,
    1600 = 1600,
    2000 = 2000
  </enum>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PLL_BUCKET_BUILD_INDEX</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Build-time only attribute used to harvest PLL bucket settings
  </description>
  <valueType>uint8</valueType>
  <default>0</default>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_OMI_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The frequency of the OMI channel.
  </description>
  <valueType>uint32</valueType>
  <enum>
    21330 = 21330,
    23460 = 23460,
    25600 = 25600,
    32000 = 32000
  </enum>
  <platInit/>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_IOHS_MHZ</id>
  <targetType>TARGET_TYPE_IOHS</targetType>
  <description>
    The frequency of a processor's IOHS mesh clocks, in MHz.
    This can be set differently on a by-link basis.
  </description>
  <valueType>uint32</valueType>
  <enum>
    1611 = 1611,
    1992 = 1992,
    2000 = 2000,
    2031 = 2031,
    2067 = 2067,
    2109 = 2109
  </enum>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_IOHS_LINK_MHZ</id>
  <targetType>TARGET_TYPE_IOHS</targetType>
  <description>
    The frequency of a processor's IOHS link clock, in MHz.
    This can be set differently on a by-link basis.
  </description>
  <valueType>uint32</valueType>
  <enum>
    25781 = 25781,
    31875 = 31875,
    32000 = 32000,
    32500 = 32500,
    33067 = 33067,
    33750 = 33750
  </enum>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_PROC_IOHS_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Shadows ATTR_FREQ_IOHS_MHZ to a proc-scoped attribute.
    Set in p10_fbc_eff_config.
    Used by fabric initfiles.
  </description>
  <valueType>uint32</valueType>
  <array>8</array>
  <enum>
    1611 = 1611,
    1992 = 1992,
    2000 = 2000,
    2031 = 2031,
    2067 = 2067,
    2109 = 2109
  </enum>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_PAU_MHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of a processor's PAU mesh clocks, in MHz.
    Determines pau and ppe frequency for a given processor.
    Provided by the MRW.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_PCIE_MHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of a processor's PCIe bus in MHz.
    This is the same for all PCIe buses in the system.
    Provided by the MRW.
  </description>
  <valueType>uint32</valueType>
  <enum>
    2000 = 2000
  </enum>
  <platInit/>
 </attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_SPI_BUS_DIV_REF</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Ref clock SPI bus divider consumed by code running out of OTPROM
  </description>
  <valueType>uint16</valueType>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MAX_ALLOWED_DIMM_FREQ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Maximum frequency (in MHz) that this system can run the DIMMs at.
    There are 5 possible values determined by the dimm configuration.
    For configurations which have mixed rank configurations, the lowest
    frequency based on ranks of either DIMM is chosen. For example if
    there was a 1R and a 2R DIMM installed, and 1R dual drop was a lower
    max freq than 2R dual drop, then the 1R max freq would be the max allowed.
    [0]=One rank, single drop
    [1]=Two rank, single drop
    [2]=Four rank, single drop
    [3]=One rank, dual drop
    [4]=Two rank, dual drop
    A value of zero would indicate an unsupported configuration. Note: Do not
    use this attribute to limit configurations, it is not checked during plug rules.
    If you have an unsupported configuration, use the value 0 as the maximum freq.
  </description>
  <valueType>uint32</valueType>
  <array>5</array>
  <platInit/>
  <mssAccessorName>max_allowed_dimm_freq</mssAccessorName>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_REQUIRED_SYNCH_MODE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Specify the system policy to enforce synchronous mode between memory and
    nest. This drives the value of ATTR_MEM_IN_SYNCH_MODE.
    UNDETERMINED : Run synchronously if the dimm and nest freq matches
    ALWAYS : Require matching frequencies and deconfigure memory that
    does not match the nest
    NEVER : Do not run synchronously, even if the frequencies match
  </description>
  <valueType>uint8</valueType>
  <enum>UNDETERMINED=0, ALWAYS=1, NEVER=2</enum>
  <platInit/>
  <mssAccessorName>required_synch_mode</mssAccessorName>
</attribute>
<!-- ********************************************************************* -->
</attributes>

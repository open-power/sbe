<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p10/procedures/xml/attribute_info/p10_freq_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2018,2019                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CP_REFCLOCK_KHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of the processor refclock in KHz.
    Provided by the Machine Readable Workbook.
    This can be overridden to adjust the refclock frequency.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <default>100000</default>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_FREQ_IO_REFCLOCK_KHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of the IO refclock in KHz.
    Provided by the Machine Readable Workbook.
    This can be overridden to adjust the refclock frequency.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
  <default>100000</default>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CORE_FLOOR_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The minimum frequency of the core mesh clock, in MHz.
    Determines the core frequency; nest and caches run at half this value.
    Must be less than or equal to ATTR_FREQ_CORE_CEILING_MHZ.
    This can differ per chip in the system.
    Provided by the #V bucket of module VPD.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CORE_CEILING_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The maximum frequency of the core mesh clock, in MHz.
    Determines the core frequency; nest and caches run at half this value.
    Must be greater than or equal to ATTR_FREQ_CORE_FLOOR_MHZ.
    This can differ per chip in the system.
    Provided by the #V bucket of module VPD.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_SYSTEM_CORE_FLOOR_MHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The system-wide minimum frequency of the core mesh clock, in MHz.
    This is the lowest floor frequency across all chips in the system.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_SYSTEM_CORE_CEILING_MHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The system-wide maximum frequency of the core mesh clock, in MHz.
    This is the highest ceiling frequency across all chips in the system.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CORE_BOOT_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Core boot frequency at 1:1 from Nest DPLL
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_CORE_BOOT_MULT</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Core boot frequency multiplier
  </description>
  <valueType>uint16</valueType>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_MC_MHZ</id>
  <targetType>TARGET_TYPE_MC</targetType>
  <description>
    The frequency of the memory controller mesh clock, in MHz.
    This clock is asynchronous to the nest and drives the MCU queues, and all the
    associated logic that drives the inputs to the OMI.
    This can be set differently for each memory controller in the chip.
  </description>
  <valueType>uint32</valueType>
  <enum>
    1333 = 1333,
    1600 = 1600
  </enum>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_IOHS_MHZ</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The frequency of a processor's IOHS mesh clocks, in MHz.
    This can be set differently on a by-link basis.
  </description>
  <valueType>uint32</valueType>
  <enum>
    1611 = 1611,
    2060 = 2060
  </enum>
  <platInit/>
  <array>8</array>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_PAU_MHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of a processor's PAU mesh clocks, in MHz.
    Determines pau and ppe frequency for a given processor.
    Provided by the MRW.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_PAU_MULT</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>PAU frequency multiplier</description>
  <valueType>uint16</valueType>
  <platInit/>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_FREQ_PCIE_MHZ</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The frequency of a processor's PCIe bus in MHz.
    This is the same for all PCIe buses in the system.
    Provided by the MRW.
  </description>
  <valueType>uint32</valueType>
  <platInit/>
 </attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_I2C_BUS_DIV_REF</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Ref clock I2C bus divider consumed by code running out of OTPROM
  </description>
  <valueType>uint16</valueType>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
</attributes>

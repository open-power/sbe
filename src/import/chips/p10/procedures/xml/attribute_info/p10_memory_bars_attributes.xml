<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p10/procedures/xml/attribute_info/p10_memory_bars_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2019                             -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_MEMORY_BAR_REGS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Holds the values to be programmed into Memory BAR registers.
    These values are calculated by p10_mss_eff_grouping HWP.
    Array arrangements: 4 MIs x 9 registers each
      [0][0] = [MI0][MCFGP0] .... [0][8] = [MI0][MCMODE0]
      [1][0] = [MI1][MCFGP0] .... [1][8] = [MI1][MCMODE0]
      [2][0] = [MI2][MCFGP0] .... [2][8] = [MI2][MCMODE0]
      [3][0] = [MI3][MCFGP0] .... [3][8] = [MI3][MCMODE0]
    Set by p10_mss_eff_grouping.
    The BARs will be written by p10_sbe_write_mcs_bar_config HWP when
    called by Hostboot.
    Consumers: HB/SBE
  </description>
  <valueType>uint64</valueType>
  <array>4 9</array>
  <enum>
    MCFGP0    = 0,
    MCFGP1    = 1,
    MCFGPM0   = 2,
    MCFGPM1   = 3,
    MCFGP0A   = 4,
    MCFGP1A   = 5,
    MCFGPM0A  = 6,
    MCFGPM1A  = 7,
    MCMODE0   = 8
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MEM_BASES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The address where each memory group starts in the non-mirrored
    memory groups stack. This address is determined by the memory
    grouping process based on the sizes of the memory groups formed
    in each processor.
    Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MEM_SIZES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The memory size of each non-mirrored memory group in the
    non-mirrored memory groups stack. This size is determined by
    the memory grouping process based on the amount of memory
    behind the ports that are grouped together.
    Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_PROC_MIRROR_BASES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The address where each memory group starts in the mirrored
    memory groups stack. This address is determined by
    the memory grouping process based on the sizes of the memory
    groups formed in each processor.
    Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MIRROR_SIZES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The memory size of each memory group in the mirrored memory
    groups stack. This size is determined by the memory grouping
    process based on the amount of memory behind the ports that are
    grouped together.
    Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MEM_BASES_ACK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The actual non-mirrored base addresses of the groups formed
    by the memory grouping process. These values correspond to
    the BAR programming and would be acknowleged on the fabric.
    Set by p10_mss_eff_grouping.
    Used by p10_setup_bars.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MEM_SIZES_ACK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The actual non-mirrored memory sizes of the groups formed
    by the memory grouping process. These values correspond to
    the BAR programming.
    Set by p10_mss_eff_grouping.
    Used by p10_setup_bars.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_PROC_MIRROR_BASES_ACK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The actual mirrored base addresses of the groups formed
    by the memory grouping process. These values correspond to
    the BAR programming and would be acknowleged on the fabric.
    Set by p10_mss_eff_grouping.
    Used by p10_setup_bars.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_MCS_GROUP_32</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    creator: p10_mss_eff_grouping
    consumer: mss_setup_bars
    Data Structure from eff grouping to setup bars to help determine
    different groups. Measured in GB.

    Non-Mirroring array[0-7]  [0.20]:
         0-- Port size; 1-- No of ports in group; 2-- Total group size of non-mirroring;
         3-- Base address; 4-11-- PortID number in group;
        12-- Alt Memory valid(0); 13-- Alt Memory valid (1);
        14-- Alt Group size (0); 15-- Alt Group size(1);
        16-- Alt Base address (0); 17-- Alt Base address (1);
        18-- SMF Memory Valid
        19-- SMF Group Size (size[22:35] in lower bits)
        20-- SMF Base Address (addr[22:35] in lower bits)

    Mirroring array[8-15] [0:20]:
         0-- Port size; 1-- No of ports in group; 2-- Total group size of mirroring;
         3-- Base address; 4-11-- PortID number;
        12-- Alt Memory valid(0); 13-- Alt Memory valid (1);
        14-- Alt Group size (0); 15-- Alt Group size(1);
        16-- Alt Base address (0); 17-- Alt Base address (1);
        18-- SMF Memory Valid
        19-- SMF Group Size (size[22:35] in lower bits)
        20-- SMF Base Address (addr[22:35] in lower bits)
   </description>
  <valueType>uint32</valueType>
  <array>16,21</array>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_HTM_QUEUES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The number of HTM queues to be reserved for each port in order
    to improve HTM trace performance.
    This number is calculated in memory grouping process when the
    HTM trace spaces are determined.
    Set by p10_mss_eff_grouping.
    Used by p10_htm_setup.
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_PROC_MIRROR_SIZES_ACK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The actual mirrored memory sizes of the groups formed
    by the memory grouping process. These values correspond to
    the BAR programming.
    Set by p10_mss_eff_grouping.
    Used by p10_setup_bars.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_MSS_MEM_MC_IN_GROUP</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    An 8 bit vector that would be a designation of which MC are involved
    in the group. Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <array>8</array>
  <persistRuntime/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MEM_MIRROR_PLACEMENT_POLICY</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Define placement policy/scheme for non-mirrored/mirrored memory layout
    NORMAL = non-mirrored start: 0, mirrored start: 1024TB
    FLIPPED = mirrored start: 0, non-mirrored start: 512TB
    Set by platform.
    Used by p10_mss_eff_grouping.
  </description>
  <valueType>uint8</valueType>
  <enum>
    NORMAL = 0x0,
    FLIPPED = 0x1
  </enum>
  <platInit/>
  <mrwHide/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MAX_INTERLEAVE_GROUP_SIZE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The physical capacity of each msel region is 16_TB.
    This attribute defines the maximum addressable space to be used within each msel,
    which may be lower than the physical capacity.
  </description>
  <valueType>uint64</valueType>
  <writeable/>
  <persistRuntime/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_INTERLEAVE_ENABLE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Used in the setting of groups. It is a bit vector.
    If the value BITWISE_AND 0x01 = 0x01 then groups of 1 are enabled,
    if the value BITWISE_AND 0x02 = 0x02, then groups of 2 are possible,
    if the value BITWISE_AND 0x04 = 0x04, then groups of 3 are possible,
    if the value BITWISE_AND 0x08 = 0x08, then groups of 4 are possible,
    if the value BITWISE_AND 0x20 = 0x20, then groups of 6 are possible,
    if the value BITWISE_AND 0x80 = 0x80, then groups of 8 are possible.
    If no groups can formed according to this input, then an error will
    be thrown.
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_INTERLEAVE_GRANULARITY</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Determines the stride covered by each granule in an interleaving
    group. The default stride -- 128B -- is the only value intended for
    production FW use. All other combinations are for experimental
    performance evaluation.

    Regardless of this attribute value, groups of size 1, 3, and 6
    will be forced to 128B stride based on the logic capabilities.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
  <enum>
    128_B = 0x00,
    256_B = 0x01,
    512_B = 0x02,
     1_KB = 0x03,
     2_KB = 0x04,
     4_KB = 0x05,
     8_KB = 0x06,
    16_KB = 0x07,
    32_KB = 0x08
  </enum>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_MEM_IPL_COMPLETE</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    A numerical number indicating if the memory procedures are complete.
    written when the bars are now functional in the processor.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <persistRuntime/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MRW_HW_MIRRORING_ENABLE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    REQUIRED:
      HW mirroring is enabled, and all channels are required
      to be part of a mirrored group.
    REQUESTED:
      HW mirroring is enabled. Mirroring will be configured for
      groups which support it, but not all channels are required
      to be mirrored.
    OFF:
      HW mirroring is disabled.
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
  <enum>
    OFF       = 0x0,
    REQUIRED  = 0x1,
    REQUESTED = 0x2
  </enum>
</attribute>
<!-- ********************************************************************** -->

</attributes>

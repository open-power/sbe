<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p10/procedures/xml/attribute_info/p10_nest_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2018,2019                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_BROADCAST_MODE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Processor fabric broadcast scope configuration.
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <enum>
    1HOP_CHIP_IS_GROUP = 0x00,
    1HOP_CHIP_IS_NODE  = 0x01,
    RESERVED           = 0x02,
    2HOP_CHIP_IS_NODE  = 0x03
  </enum>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_TOPOLOGY_MODE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Processor fabric topology mode, determines format of the topology ID.
    MODE0 = GGG_C (max 8x2)
    MODE1 = GG_CC (max 4x4)
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <enum>
    MODE0 = 0x00,
    MODE1 = 0x01
  </enum>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_TOPOLOGY_ID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Processor fabric topology ID associated with this chip.
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_EFF_TOPOLOGY_ID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Processor fabric topology ID associated with this chip.
    Provided by the MRW.
    Should be same as ATTR_PROC_FABRIC_TOPOLOGY_ID, unless master socket has
    no memory.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_EFF_TOPOLOGY_ID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Processor fabric topology ID based on memory availability. If the
    master chip has memory then EFF_TOPOLOGY_ID = TOPOLOGY_ID, if not
    then the first socket with a memory behind it will swap topology
    IDs with the master chip to form EFF_TOPOLOGY_ID. All else remains
    the same.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_SYSTEM_MASTER_CHIP</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Indicates if the given chip should serve as the fabric system master.
  </description>
  <valueType>uint8</valueType>
  <enum>
    FALSE = 0x0,
    TRUE = 0x1
  </enum>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_GROUP_MASTER_CHIP</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Indicates if the given chip should serve as the fabric group master.
  </description>
  <valueType>uint8</valueType>
  <enum>
    FALSE = 0x0,
    TRUE = 0x1
  </enum>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IOHS_CONFIG_MODE</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Per-link optics configuration
    OPT0 = SMPA/SMPX/OCAPI/NV
    OPT1 = SMPA/SMPX
    OPT2 = SMPA/SMPX
    OPT3 = SMPA/SMPX/OCAPI/NX
    OPT4 = SMPA/SMPX/OCAPI/NV
    OPT5 = SMPA/SMPX/OCAPI/NV
    OPT6 = SMPA/SMPX/OCAPI/NV
    OPT7 = SMPA/SMPX/OCAPI/NV
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <enum>
    SMPX  = 0x0,
    SMPA  = 0x1,
    NV    = 0x2,
    OCAPI = 0x3
  </enum>
  <array>8</array>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_IOHS_BUS_WIDTH</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Processor optics bus width per link.
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <enum>
    1_BYTE = 0x01,
    2_BYTE = 0x02
  </enum>
  <array>8</array>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_LINK_ACTIVE</id>
  <targetType>TARGET_TYPE_IOHS</targetType>
  <description>
    Indicates if the endpoint target is actively being used as a fabric link
  </description>
  <valueType>uint8</valueType>
  <enum>
    FALSE = 0x0,
    TRUE = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_LINK_TRAIN</id>
  <targetType>TARGET_TYPE_IOHS</targetType>
  <description>
    Indicates which sublinks should be initialized/trained
  </description>
  <valueType>uint8</valueType>
  <enum>
    BOTH      = 0x0,
    EVEN_ONLY = 0x1,
    ODD_ONLY  = 0x2,
    NONE      = 0x3
  </enum>
  <initToZero/>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    For each fabric X link on this chip, specifies whether or not the chip at the
    receiving end of the link is present and configured
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <enum>
    FALSE     = 0x0,
    TRUE      = 0x1,
    EVEN_ONLY = 0x2,
    ODD_ONLY  = 0x3
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_X_LINKS_CNFG</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Contains the total number of active X links on this chip
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_A_ATTACHED_CHIP_CNFG</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    For each fabric A link on this chip, specifies whether or not the chip at the
    receiving end of the link is present and configured
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <enum>
    FALSE     = 0x0,
    TRUE      = 0x1,
    EVEN_ONLY = 0x2,
    ODD_ONLY  = 0x3
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_A_LINKS_CNFG</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Contains the total number of active A links on this chip
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_X_ATTACHED_CHIP_ID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    For each fabric X link on this chip, specifies the fabric ID of the chip at the
    receiving end of the link. Should be considered valid only if corresponding
    ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG index is true.
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_X_ATTACHED_LINK_ID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    For each fabric X link on this chip, specifies the link ID of the chip at the
    receiving end of the link. Should be considered valid only if corresponding
    ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG index is true.
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_A_ATTACHED_CHIP_ID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    For each fabric A link on this chip, specifies the fabric ID of the chip at the
    receiving end of the link. Should be considered valid only if corresponding
    ATTR_PROC_FABRIC_A_ATTACHED_CHIP_CNFG index is true.
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_A_ATTACHED_LINK_ID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    For each fabric A link on this chip, specifies the link ID of the chip at the
    receiving end of the link. Should be considered valid only if corresponding
    ATTR_PROC_FABRIC_A_ATTACHED_CHIP_CNFG index is true.
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_X_AGGREGATE</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Indicates if X links on this chip should be configured in aggregate mode.
  </description>
  <valueType>uint8</valueType>
  <enum>
    OFF = 0x0,
    ON = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_X_ADDR_DIS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Indicates if link should be used to carry data only (in aggregate configurations).
    Should be considered valid only if corresponding ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG
    index is true.
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <enum>
    OFF = 0x0,
    ON = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_X_LINK_DELAY</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Average of local/remote end link delay counter values.
    Used to designate coherent link in aggregate configurations.
    Should be considered valid only if corresponding ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG
    index is true.
  </description>
  <valueType>uint32</valueType>
  <array>8</array>
  <enum>
    OFF = 0x0,
    ON = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_A_AGGREGATE</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Indicates if A links on this chip should be configured in aggregate mode.
  </description>
  <valueType>uint8</valueType>
  <enum>
    OFF = 0x0,
    ON = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_A_ADDR_DIS</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Indicates if link should be used to carry data only (in aggregate configurations).
    Should be considered valid only if corresponding ATTR_PROC_FABRIC_A_ATTACHED_CHIP_CNFG
    index is true.
  </description>
  <valueType>uint8</valueType>
  <array>8</array>
  <enum>
    OFF = 0x0,
    ON = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_A_LINK_DELAY</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Average of local/remote end link delay counter values.
    Used to designate coherent link in aggregate configurations.
    Should be considered valid only if corresponding ATTR_PROC_FABRIC_A_ATTACHED_CHIP_CNFG
    index is true.
  </description>
  <valueType>uint32</valueType>
  <array>8</array>
  <enum>
    OFF = 0x0,
    ON = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_TID_TABLE_ENTRY_VALID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Fabric topology ID table configuration.
    Used to indicate whether the topology ID table entry is valid.
  </description>
  <valueType>uint8</valueType>
  <array>32</array>
  <enum>
    FALSE = 0x0,
    TRUE = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_FABRIC_TID_TABLE_ENTRY_ID</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Fabric topology ID table configuration.
    Used to represent the corresponding ID for each topology ID table entry.
    Each topology ID table entry is programmed with the A/X link ID that
    routes this chip to the target chip identified by the topology ID table index.
    Should be considered valid only if corresponding
    ATTR_PROC_FABRIC_TID_TABLE_ENTRY_VALID index is true.
  </description>
  <valueType>uint8</valueType>
  <array>32</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_EPS_GB_PERCENTAGE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Guardband percentage to apply to baseline epsilon calculations
    Set by p10_fbc_eff_config.
  </description>
  <valueType>int8</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_EPS_TABLE_TYPE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Processor epsilon table type.
    Used to calculate the processor nest epsilon register values.
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <enum>
    EPS_TYPE_LE = 0x01,
    EPS_TYPE_HE = 0x02,
    EPS_TYPE_HE_F8 = 0x03
  </enum>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_EPS_READ_CYCLES_T0</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Calculated read tier0 epsilon protection count.
  </description>
  <valueType>uint32</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_EPS_READ_CYCLES_T1</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Calculated read tier1 epsilon protection count.
  </description>
  <valueType>uint32</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_EPS_READ_CYCLES_T2</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Calculated read tier2 epsilon protection count.
  </description>
  <valueType>uint32</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_EPS_WRITE_CYCLES_T1</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Calculated write tier1 epsilon protection count.
  </description>
  <valueType>uint32</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_EPS_WRITE_CYCLES_T2</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Calculated write tier2 epsilon protection count.
  </description>
  <valueType>uint32</valueType>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MAX_INTERLEAVE_GROUP_SIZE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    The physical capacity of each msel region is 16_TB without extended addressing.
    This attribute defines the maximum addressable space to be used within each msel,
    which may be lower than the physical capacity.
  </description>
  <valueType>uint64</valueType>
  <writeable/>
  <persistRuntime/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MEM_MIRROR_PLACEMENT_POLICY</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Define placement policy/scheme for non-mirrored/mirrored memory layout
    NORMAL = non-mirrored start: 0, mirrored start: 1024TB
    FLIPPED = mirrored start: 0, non-mirrored start: 512TB
    Set by platform.
    Used by mss_eff_grouping.
  </description>
  <valueType>uint8</valueType>
  <enum>
    NORMAL = 0x0,
    FLIPPED = 0x1
  </enum>
  <platInit/>
  <mrwHide/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MEM_BASES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The address where each memory group starts in the non-mirrored
    memory groups stack. This address is determined by the memory
    grouping process based on the sizes of the memory groups formed
    in each processor.
    Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MEM_SIZES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The memory size of each non-mirrored memory group in the
    non-mirrored memory groups stack. This size is determined by
    the memory grouping process based on the amount of memory
    behind the ports that are grouped together.
    Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_PROC_MIRROR_BASES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The address where each memory group starts in the mirrored
    memory groups stack. This address is determined by
    the memory grouping process based on the sizes of the memory
    groups formed in each processor.
    Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint64</valueType>
  <array>4</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MIRROR_SIZES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The memory size of each memory group in the mirrored memory
    groups stack. This size is determined by the memory grouping
    process based on the amount of memory behind the ports that are
    grouped together.
    Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint64</valueType>
  <array>4</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_INTERLEAVE_ENABLE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Used in the setting of groups. It is a bit vector.
    If the value BITWISE_AND 0x01 = 0x01 then groups of 1 are enabled,
    if the value BITWISE_AND 0x02 = 0x02, then groups of 2 are possible,
    if the value BITWISE_AND 0x04 = 0x04, then groups of 3 are possible,
    if the value BITWISE_AND 0x08 = 0x08, then groups of 4 are possible,
    if the value BITWISE_AND 0x20 = 0x20, then groups of 6 are possible,
    if the value BITWISE_AND 0x80 = 0x80, then groups of 8 are possible.
    If no groups can formed according to this input, then an error will
    be thrown.
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_INTERLEAVE_GRANULARITY</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    Determines the stride covered by each granule in an interleaving
    group. The default stride -- 128B -- is the only value intended for
    production FW use. All other combinations are for experimental
    performance evaluation.

    Regardless of this attribute value, groups of size 1, 3, and 6
    will be forced to 128B stride based on the logic capabilities.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
  <enum>
    128_B = 0x00,
    256_B = 0x01,
    512_B = 0x02,
     1_KB = 0x03,
     2_KB = 0x04,
     4_KB = 0x05,
     8_KB = 0x06,
    16_KB = 0x07,
    32_KB = 0x08
  </enum>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_MEM_MC_IN_GROUP</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    An 8 bit vector that would be a designation of which MC are involved
    in the group. Set by p10_mss_eff_grouping.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <array>8</array>
  <persistRuntime/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_MCS_GROUP_32</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    creator: mss_eff_grouping
    consumer: mss_setup_bars
    Data Structure from eff grouping to setup bars to help determine
    different groups. Measured in GB.

    Non-Mirroring array[0-7]  [0.20]:
         0-- Port size; 1-- No of ports in group; 2-- Total group size of non-mirroring;
         3-- Base address; 4-11-- PortID number in group;
        12-- Alt Memory valid(0); 13-- Alt Memory valid (1);
        14-- Alt Group size (0); 15-- Alt Group size(1);
        16-- Alt Base address (0); 17-- Alt Base address (1);
        18-- SMF Memory Valid
        19-- SMF Group Size (size[22:35] in lower bits)
        20-- SMF Base Address (addr[22:35] in lower bits)

    Mirroring array[8-15] [0:20]:
         0-- Port size; 1-- No of ports in group; 2-- Total group size of mirroring;
         3-- Base address; 4-11-- PortID number;
        12-- Alt Memory valid(0); 13-- Alt Memory valid (1);
        14-- Alt Group size (0); 15-- Alt Group size(1);
        16-- Alt Base address (0); 17-- Alt Base address (1);
        18-- SMF Memory Valid
        19-- SMF Group Size (size[22:35] in lower bits)
        20-- SMF Base Address (addr[22:35] in lower bits)
   </description>
  <valueType>uint32</valueType>
  <array>16,21</array>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MSS_MEM_IPL_COMPLETE</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Creator: mss_setup_bars
    A numerical number indicating if the memory procedures are complete.
    written by mss_setup_bars when the bars are now functional in the
    processor.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <persistRuntime/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_MRW_HW_MIRRORING_ENABLE</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    REQUIRED:
      HW mirroring is enabled, and all channels are required
      to be part of a mirrored group.
    REQUESTED:
      HW mirroring is enabled. Mirroring will be configured for
      groups which support it, but not all channels are required
      to be mirrored.
    OFF:
      HW mirroring is disabled.
    Provided by the MRW.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
  <enum>
    OFF       = 0x0,
    REQUIRED  = 0x1,
    REQUESTED = 0x2
  </enum>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MEM_BASES_ACK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The actual non-mirrored base addresses of the groups formed
    by the memory grouping process. These values correspond to
    the BAR programming and would be acknowleged on the fabric.
    Set by p10_mss_eff_grouping.
    Used by p10_setup_bars.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_MEM_SIZES_ACK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The actual non-mirrored memory sizes of the groups formed
    by the memory grouping process. These values correspond to
    the BAR programming.
    Set by p10_mss_eff_grouping.
    Used by p10_setup_bars.
  </description>
  <valueType>uint64</valueType>
  <array>8</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_PROC_MIRROR_BASES_ACK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The actual mirrored base addresses of the groups formed
    by the memory grouping process. These values correspond to
    the BAR programming and would be acknowleged on the fabric.
    Set by p10_mss_eff_grouping.
    Used by p10_setup_bars.
  </description>
  <valueType>uint64</valueType>
  <array>4</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************* -->
<attribute>
  <id>ATTR_PROC_MIRROR_SIZES_ACK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    The actual mirrored memory sizes of the groups formed
    by the memory grouping process. These values correspond to
    the BAR programming.
    Set by p10_mss_eff_grouping.
    Used by p10_setup_bars.
  </description>
  <valueType>uint64</valueType>
  <array>4</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_SBE_MCS_SETUP_REG_STATES</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Stores the state of registers affected by p10_sbe_mcs_setup
    To be restored in p10_revert_sbe_mcs_setup.
    Set by p10_sbe_mcs_setup.
  </description>
  <valueType>uint64</valueType>
  <array>9</array>
  <enum>
    MCFGP0 =    0,
    MCMODE0 =   1,
    MCMODE1 =   2,
    MCMODE2 =   3,
    MCPERF1 =   4,
    MCFIRMASK = 5,
    MCFIRACT0 = 6,
    MCFIRACT1 = 7,
    MCTO =      8
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PROC_SBE_MCS_SETUP_SELECTED_MC</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Store unit position of MC written to by p10_sbe_mcs_setup.
    To be used in p10_revert_sbe_setup.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
</attributes>

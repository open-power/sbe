<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p10/procedures/xml/error_info/p10_thread_control_errors.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2019                             -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<hwpErrors>
  <!-- ********************************************************************* -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_THREAD_CONTROL_START_NOMAINT</rc>
    <description>Start command precondition not met: RAS STAT Maintenance bit is not set.</description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <ffdc>C_RAS_STATUS_REG</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ********************************************************************* -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_THREAD_CONTROL_STOP_FAIL</rc>
    <description>Stop command issued to core PC, but RAS STAT maintenance bit is not set.</description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <ffdc>C_RAS_STATUS_REG</ffdc>
    <callout>
      <target>CORE_TARGET</target>
      <priority>HIGH</priority>
    </callout>
    <callout>
      <procedure>CODE</procedure>
      <priority>LOW</priority>
    </callout>
    <deconfigure>
      <target>CORE_TARGET</target>
    </deconfigure>
    <!-- Note:  FW will attempt to ensure instructions are stopped in many
         different cases with no interlock that we're in a reasonable state
         for the HWP to succeed.  Therefore, we should not gard out the HW,
         only deconfigure it.
    -->
  </hwpError>
  <!-- ********************************************************************* -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_THREAD_CONTROL_STEP_NOTSTOPPING</rc>
    <description>Step command precondition not met: Not all threads are stopped.</description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <ffdc>C_RAS_STATUS_REG</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ********************************************************************* -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_THREAD_CONTROL_STEP_FAIL</rc>
    <description>Step command issued to core PC, but RAS STAT run bit is still set.</description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <ffdc>C_RAS_STATUS_REG</ffdc>
    <ffdc>PTC_STEP_COMP_POLL_LIMIT</ffdc>
    <callout>
      <target>CORE_TARGET</target>
      <priority>HIGH</priority>
    </callout>
    <callout>
      <procedure>CODE</procedure>
      <priority>LOW</priority>
    </callout>
    <!-- Note:  FW would only attempt to step in a debug support capacity,
         we don't want to remove (deconfig/gard) HW for a fail in this use case
    -->
  </hwpError>
  <!-- ********************************************************************* -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_THREAD_CONTROL_INVALID_COMMAND</rc>
    <description>p10_thread_control is called with an invalid command </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <ffdc>COMMAND</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ********************************************************************* -->
</hwpErrors>

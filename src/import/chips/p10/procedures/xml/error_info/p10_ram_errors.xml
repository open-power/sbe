<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p10/procedures/xml/error_info/p10_ram_errors.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2019,2020                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<!-- Error definitions for p10 ram procedures                                --> 
<hwpErrors>

  <!-- This has all the Ram core registers that we need to collect for debug -->
  <registerFfdc>
    <id>REG_FFDC_RAM_CORE_REGISTERS</id>
    <scomRegister>scomt::c::EC_PC_THRCTL_TCTLCOM_RAS_STATUS</scomRegister>
    <scomRegister>scomt::c::EC_PC_FIR_RAM_MODEREG</scomRegister>
    <scomRegister>scomt::c::EC_PC_FIR_RAM_CTRL</scomRegister>
    <scomRegister>scomt::c::EC_PC_FIR_RAM_STATUS</scomRegister>
    <scomRegister>scomt::c::EC_PC_THRCTL_TCTLCOM_HOLD_OUT</scomRegister>
    <scomRegister>scomt::c::EC_PC_FIR_HOLD_OUT</scomRegister>
    <scomRegister>scomt::c::EC_PC_PMC_THREAD_INFO</scomRegister>
  </registerFfdc>

  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_THREAD_INVALID_ERR</rc>
    <description>
      Invalid ram thread specified
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_SPR_NAME_MAP_INIT_ERR</rc>
    <description>
      SPR name map is not empty while try to initialize.
    </description>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_SPR_NAME_MAP_ACCESS_ERR</rc>
    <description>
      Illegal SPR name or read/write mode access
    </description>
    <ffdc>REGNAME</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_NOT_SETUP_ERR</rc>
    <description>
      RAM is not setup as active before doing ram or cleanup
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>REG_TYPE</ffdc>
    <ffdc>REG_NUM</ffdc>
    <ffdc>ALLOW_MULT</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_INACTIVE_THREAD_HW542214</rc>
    <description>
      RAM to inactive thread (put_reg) and HW542214 is present
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>REG_TYPE</ffdc>
    <ffdc>REG_NUM</ffdc>
    <ffdc>ALLOW_MULT</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_THREAD_NOT_STOP_ERR</rc>
    <description>
      The thread to perform ramming is not stopped
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <collectRegisterFfdc>
      <id>REG_FFDC_RAM_CORE_REGISTERS</id>
      <targetType>TARGET_TYPE_CORE</targetType>
      <target>CORE_TARGET</target>
    </collectRegisterFfdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_THREAD_INACTIVE_ERR</rc>
    <description>
      The thread to perform ramming is not active
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <collectRegisterFfdc>
      <id>REG_FFDC_RAM_CORE_REGISTERS</id>
      <targetType>TARGET_TYPE_CORE</targetType>
      <target>CORE_TARGET</target>
    </collectRegisterFfdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_STATUS_IN_RECOVERY_ERR</rc>
    <description>
      Attempt to perform ramming during recovery
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <collectRegisterFfdc>
      <id>REG_FFDC_RAM_CORE_REGISTERS</id>
      <targetType>TARGET_TYPE_CORE</targetType>
      <target>CORE_TARGET</target>
    </collectRegisterFfdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_STATUS_EXCEPTION_ERR</rc>
    <description>
      Exception or interrupt happened during ramming
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <collectRegisterFfdc>
      <id>REG_FFDC_RAM_CORE_REGISTERS</id>
      <targetType>TARGET_TYPE_CORE</targetType>
      <target>CORE_TARGET</target>
    </collectRegisterFfdc>
    <callout>
      <target>CORE_TARGET</target>
      <priority>HIGH</priority>
    </callout>
    <callout>
      <procedure>CODE</procedure>
      <priority>LOW</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_STATUS_POLL_THRESHOLD_ERR</rc>
    <description>
      Polling for ram done reached threshold
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>C_RAM_STATUS_REG</ffdc>
    <collectRegisterFfdc>
      <id>REG_FFDC_RAM_CORE_REGISTERS</id>
      <targetType>TARGET_TYPE_CORE</targetType>
      <target>CORE_TARGET</target>
    </collectRegisterFfdc>
    <callout>
      <target>CORE_TARGET</target>
      <priority>HIGH</priority>
    </callout>
    <callout>
      <procedure>CODE</procedure>
      <priority>LOW</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_INVALID_REG_TYPE_ACCESS_ERR</rc>
    <description>
      Illegal reg type access
    </description>
    <ffdc>REGTYPE</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_TEST_ECMD_ERROR</rc>
    <description>
      ECMD error during RAM test
    </description>
    <ffdc>ECMD_RC</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_TEST_GENERAL_ERROR</rc>
    <description>
      General error during RAM test
    </description>
    <ffdc>LINE_NUMBER</ffdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_HW533775_FUSED_CORE_SEARCH_ERROR</rc>
    <description>
      Unable to find fused core partner for target of RAM operation
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <collectRegisterFfdc>
      <id>REG_FFDC_RAM_CORE_REGISTERS</id>
      <targetType>TARGET_TYPE_CORE</targetType>
      <target>CORE_TARGET</target>
    </collectRegisterFfdc>
    <callout>
      <procedure>CODE</procedure>
      <priority>HIGH</priority>
    </callout>
    <callout>
      <target>CORE_TARGET</target>
      <priority>LOW</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
  <hwpError>
    <sbeError/>
    <rc>RC_P10_RAM_HW533775_RECOVERY_ERROR</rc>
    <description>
      Timeout waiting for core FIR to clear after injecting recovery
    </description>
    <ffdc>CORE_TARGET</ffdc>
    <ffdc>CORE_FIR_POLL_TARGET</ffdc>
    <ffdc>THREAD</ffdc>
    <ffdc>CORE_FIR</ffdc>
    <ffdc>HID</ffdc>
    <collectRegisterFfdc>
      <id>REG_FFDC_RAM_CORE_REGISTERS</id>
      <targetType>TARGET_TYPE_CORE</targetType>
      <target>CORE_TARGET</target>
    </collectRegisterFfdc>
    <callout>
      <target>CORE_TARGET</target>
      <priority>HIGH</priority>
    </callout>
    <callout>
      <procedure>CODE</procedure>
      <priority>LOW</priority>
    </callout>
  </hwpError>
  <!-- ******************************************************************** -->
</hwpErrors>

/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: src/import/chips/p10/common/include/p10_scom_mc_7.H $         */
/*                                                                        */
/* OpenPOWER sbe Project                                                  */
/*                                                                        */
/* Contributors Listed Below - COPYRIGHT 2019,2020                        */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */

#ifndef __PPE_HCODE__
    #include "proc_scomt.H"
#endif

#ifndef __p10_scom_mc_7_H_
#define __p10_scom_mc_7_H_


#ifndef __PPE_HCODE__
namespace scomt
{
namespace mc
{
#endif


//>> [EPS_THERM_WSUB_CONTROL_REG]
static const uint64_t EPS_THERM_WSUB_CONTROL_REG = 0x0c050012ull;

static const uint32_t EPS_THERM_WSUB_CONTROL_REG_RESET_TRIP_HISTORY = 0;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_RESET_SAMPLE_PULSE_CNT = 1;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_F_RESET_CPM_RD = 2;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_F_RESET_CPM_WR = 3;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_RESET_SAMPLE_DTS = 4;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_FORCE_SAMPLE_DTS = 5;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_FORCE_SAMPLE_DTS_INTERRUPTIBLE = 6;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_FORCE_RESET_THRES_L1RESULTS = 7;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_FORCE_RESET_THRES_L2RESULTS = 8;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_FORCE_RESET_THRES_L3RESULTS = 9;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_FORCE_MEASURE_VOLT_INTERRUPTIBLE = 10;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_FORCE_RESET_MEASURE_VOLT = 11;
static const uint32_t EPS_THERM_WSUB_CONTROL_REG_FORCE_SHIFT_SENSOR = 12;
//<< [EPS_THERM_WSUB_CONTROL_REG]
// mc/reg00007.H

//>> [HANG_PULSE_0_REG]
static const uint64_t HANG_PULSE_0_REG = 0x0c0f0020ull;

static const uint32_t HANG_PULSE_0_REG_HANG_PULSE_REG_0 = 0;
static const uint32_t HANG_PULSE_0_REG_HANG_PULSE_REG_0_LEN = 6;
static const uint32_t HANG_PULSE_0_REG_SUPPRESS_HANG_0 = 6;
//<< [HANG_PULSE_0_REG]
// mc/reg00007.H

//>> [HANG_PULSE_1_REG]
static const uint64_t HANG_PULSE_1_REG = 0x0c0f0021ull;

static const uint32_t HANG_PULSE_1_REG_HANG_PULSE_REG_1 = 0;
static const uint32_t HANG_PULSE_1_REG_HANG_PULSE_REG_1_LEN = 6;
static const uint32_t HANG_PULSE_1_REG_SUPPRESS_HANG_1 = 6;
//<< [HANG_PULSE_1_REG]
// mc/reg00007.H

//>> [HANG_PULSE_2_REG]
static const uint64_t HANG_PULSE_2_REG = 0x0c0f0022ull;

static const uint32_t HANG_PULSE_2_REG_HANG_PULSE_REG_2 = 0;
static const uint32_t HANG_PULSE_2_REG_HANG_PULSE_REG_2_LEN = 6;
static const uint32_t HANG_PULSE_2_REG_SUPPRESS_HANG_2 = 6;
//<< [HANG_PULSE_2_REG]
// mc/reg00007.H

//>> [HANG_PULSE_3_REG]
static const uint64_t HANG_PULSE_3_REG = 0x0c0f0023ull;

static const uint32_t HANG_PULSE_3_REG_HANG_PULSE_REG_3 = 0;
static const uint32_t HANG_PULSE_3_REG_HANG_PULSE_REG_3_LEN = 6;
static const uint32_t HANG_PULSE_3_REG_SUPPRESS_HANG_3 = 6;
//<< [HANG_PULSE_3_REG]
// mc/reg00007.H

//>> [HANG_PULSE_4_REG]
static const uint64_t HANG_PULSE_4_REG = 0x0c0f0024ull;

static const uint32_t HANG_PULSE_4_REG_HANG_PULSE_REG_4 = 0;
static const uint32_t HANG_PULSE_4_REG_HANG_PULSE_REG_4_LEN = 6;
static const uint32_t HANG_PULSE_4_REG_SUPPRESS_HANG_4 = 6;
//<< [HANG_PULSE_4_REG]
// mc/reg00007.H

//>> [HANG_PULSE_5_REG]
static const uint64_t HANG_PULSE_5_REG = 0x0c0f0025ull;

static const uint32_t HANG_PULSE_5_REG_HANG_PULSE_REG_5 = 0;
static const uint32_t HANG_PULSE_5_REG_HANG_PULSE_REG_5_LEN = 6;
static const uint32_t HANG_PULSE_5_REG_SUPPRESS_HANG_5 = 6;
//<< [HANG_PULSE_5_REG]
// mc/reg00007.H

//>> [OPCG_CAPT2]
static const uint64_t OPCG_CAPT2 = 0x0c030011ull;

static const uint32_t OPCG_CAPT2_13_01EVEN = 4;
static const uint32_t OPCG_CAPT2_13_01EVEN_LEN = 5;
static const uint32_t OPCG_CAPT2_14_01ODD = 9;
static const uint32_t OPCG_CAPT2_14_01ODD_LEN = 5;
static const uint32_t OPCG_CAPT2_15_02EVEN = 14;
static const uint32_t OPCG_CAPT2_15_02EVEN_LEN = 5;
static const uint32_t OPCG_CAPT2_16_02ODD = 19;
static const uint32_t OPCG_CAPT2_16_02ODD_LEN = 5;
static const uint32_t OPCG_CAPT2_17_03EVEN = 24;
static const uint32_t OPCG_CAPT2_17_03EVEN_LEN = 5;
static const uint32_t OPCG_CAPT2_18_03ODD = 29;
static const uint32_t OPCG_CAPT2_18_03ODD_LEN = 5;
static const uint32_t OPCG_CAPT2_19_04EVEN = 34;
static const uint32_t OPCG_CAPT2_19_04EVEN_LEN = 5;
static const uint32_t OPCG_CAPT2_20_04ODD = 39;
static const uint32_t OPCG_CAPT2_20_04ODD_LEN = 5;
static const uint32_t OPCG_CAPT2_21_05EVEN = 44;
static const uint32_t OPCG_CAPT2_21_05EVEN_LEN = 5;
static const uint32_t OPCG_CAPT2_22_05ODD = 49;
static const uint32_t OPCG_CAPT2_22_05ODD_LEN = 5;
static const uint32_t OPCG_CAPT2_23_06EVEN = 54;
static const uint32_t OPCG_CAPT2_23_06EVEN_LEN = 5;
static const uint32_t OPCG_CAPT2_24_06ODD = 59;
static const uint32_t OPCG_CAPT2_24_06ODD_LEN = 5;
//<< [OPCG_CAPT2]
// mc/reg00007.H

//>> [SCOMFIR_MCFGP0A]
static const uint64_t SCOMFIR_MCFGP0A = 0x0c010c0eull;

static const uint32_t SCOMFIR_MCFGP0A_HOLE_VALID = 0;
static const uint32_t SCOMFIR_MCFGP0A_HOLE_LOWER_ADDRESS = 1;
static const uint32_t SCOMFIR_MCFGP0A_HOLE_LOWER_ADDRESS_LEN = 15;
static const uint32_t SCOMFIR_MCFGP0A_RESERVED_16_21 = 16;
static const uint32_t SCOMFIR_MCFGP0A_RESERVED_16_21_LEN = 6;
static const uint32_t SCOMFIR_MCFGP0A_SMF_VALID = 22;
static const uint32_t SCOMFIR_MCFGP0A_SMF_EXTEND_TO_END_OF_RANGE = 23;
static const uint32_t SCOMFIR_MCFGP0A_SMF_LOWER_ADDRESS = 24;
static const uint32_t SCOMFIR_MCFGP0A_SMF_LOWER_ADDRESS_LEN = 19;
static const uint32_t SCOMFIR_MCFGP0A_SMF_UPPER_ADDRESS = 43;
static const uint32_t SCOMFIR_MCFGP0A_SMF_UPPER_ADDRESS_LEN = 19;
//<< [SCOMFIR_MCFGP0A]
// mc/reg00007.H

//>> [SCOMFIR_MCFGPM1E]
static const uint64_t SCOMFIR_MCFGPM1E = 0x0c010c1dull;

static const uint32_t SCOMFIR_MCFGPM1E_VALID = 0;
static const uint32_t SCOMFIR_MCFGPM1E_EXTEND_TO_END_OF_RANGE = 1;
static const uint32_t SCOMFIR_MCFGPM1E_LOWER_ADDRESS = 2;
static const uint32_t SCOMFIR_MCFGPM1E_LOWER_ADDRESS_LEN = 19;
static const uint32_t SCOMFIR_MCFGPM1E_UPPER_ADDRESS = 21;
static const uint32_t SCOMFIR_MCFGPM1E_UPPER_ADDRESS_LEN = 19;
//<< [SCOMFIR_MCFGPM1E]
// mc/reg00007.H

//>> [SYNC_CONFIG]
static const uint64_t SYNC_CONFIG = 0x0c030000ull;

static const uint32_t SYNC_CONFIG_SYNC_PULSE_DELAY = 0;
static const uint32_t SYNC_CONFIG_SYNC_PULSE_DELAY_LEN = 4;
static const uint32_t SYNC_CONFIG_LISTEN_TO_SYNC_PULSE_DIS = 4;
static const uint32_t SYNC_CONFIG_SYNC_PULSE_INPUT_SEL = 5;
static const uint32_t SYNC_CONFIG_USE_SYNC_FOR_SCAN = 6;
static const uint32_t SYNC_CONFIG_CLEAR_CHIPLET_IS_ALIGNED = 7;
static const uint32_t SYNC_CONFIG_PCB_NOT_BLOCKED_BY_CLKCMD = 8;
static const uint32_t SYNC_CONFIG_DISABLE_PCB_ITR = 9;
static const uint32_t SYNC_CONFIG_CONT_SCAN_DISABLE = 10;
static const uint32_t SYNC_CONFIG_SYNC_PULSE_OUT_DIS = 11;
static const uint32_t SYNC_CONFIG_REGION_PGOOD_OVERRIDE = 12;
static const uint32_t SYNC_CONFIG_CONT_SCAN_SHORT_WAIT = 13;
static const uint32_t P10_20_SYNC_CONFIG_PCIE32_MODE = 14; // p10:20,
static const uint32_t SYNC_CONFIG_PHASE_COUNTER_ON_CLKCHANGE_EN = 15;
static const uint32_t SYNC_CONFIG_PHASE_COUNTER_ON_CLKCHANGE = 16;
static const uint32_t SYNC_CONFIG_PHASE_COUNTER_ON_CLKCHANGE_LEN = 8;
//<< [SYNC_CONFIG]
// mc/reg00007.H

//>>THE END<<

#ifndef __PPE_HCODE__
}
}
#include "mc/reg00007.H"
#endif
#endif

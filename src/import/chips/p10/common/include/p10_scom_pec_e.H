/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: src/import/chips/p10/common/include/p10_scom_pec_e.H $        */
/*                                                                        */
/* OpenPOWER sbe Project                                                  */
/*                                                                        */
/* Contributors Listed Below - COPYRIGHT 2019,2020                        */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */

#ifndef __PPE_HCODE__
    #include "proc_scomt.H"
#endif

#ifndef __p10_scom_pec_e_H_
#define __p10_scom_pec_e_H_


#ifndef __PPE_HCODE__
namespace scomt
{
namespace pec
{
#endif


//>> [EPS_FIR_LOCAL_ACTION1]
static const uint64_t EPS_FIR_LOCAL_ACTION1 = 0x08040107ull;

static const uint32_t EPS_FIR_LOCAL_ACTION1_00 = 0;
static const uint32_t EPS_FIR_LOCAL_ACTION1_01 = 1;
static const uint32_t EPS_FIR_LOCAL_ACTION1_02 = 2;
static const uint32_t EPS_FIR_LOCAL_ACTION1_03 = 3;
static const uint32_t EPS_FIR_LOCAL_ACTION1_04 = 4;
static const uint32_t EPS_FIR_LOCAL_ACTION1_05 = 5;
static const uint32_t EPS_FIR_LOCAL_ACTION1_06 = 6;
static const uint32_t EPS_FIR_LOCAL_ACTION1_07 = 7;
static const uint32_t EPS_FIR_LOCAL_ACTION1_08 = 8;
static const uint32_t EPS_FIR_LOCAL_ACTION1_09 = 9;
static const uint32_t EPS_FIR_LOCAL_ACTION1_10 = 10;
static const uint32_t EPS_FIR_LOCAL_ACTION1_11 = 11;
static const uint32_t EPS_FIR_LOCAL_ACTION1_12 = 12;
static const uint32_t EPS_FIR_LOCAL_ACTION1_13 = 13;
static const uint32_t EPS_FIR_LOCAL_ACTION1_14 = 14;
static const uint32_t EPS_FIR_LOCAL_ACTION1_15 = 15;
static const uint32_t EPS_FIR_LOCAL_ACTION1_16 = 16;
static const uint32_t EPS_FIR_LOCAL_ACTION1_17 = 17;
static const uint32_t EPS_FIR_LOCAL_ACTION1_18 = 18;
static const uint32_t EPS_FIR_LOCAL_ACTION1_19 = 19;
static const uint32_t EPS_FIR_LOCAL_ACTION1_20 = 20;
static const uint32_t EPS_FIR_LOCAL_ACTION1_21 = 21;
static const uint32_t EPS_FIR_LOCAL_ACTION1_22 = 22;
static const uint32_t EPS_FIR_LOCAL_ACTION1_23 = 23;
static const uint32_t EPS_FIR_LOCAL_ACTION1_24 = 24;
static const uint32_t EPS_FIR_LOCAL_ACTION1_25 = 25;
static const uint32_t EPS_FIR_LOCAL_ACTION1_26 = 26;
static const uint32_t EPS_FIR_LOCAL_ACTION1_27 = 27;
static const uint32_t EPS_FIR_LOCAL_ACTION1_28 = 28;
static const uint32_t EPS_FIR_LOCAL_ACTION1_29 = 29;
static const uint32_t EPS_FIR_LOCAL_ACTION1_30 = 30;
static const uint32_t EPS_FIR_LOCAL_ACTION1_31 = 31;
static const uint32_t EPS_FIR_LOCAL_ACTION1_32 = 32;
static const uint32_t EPS_FIR_LOCAL_ACTION1_33 = 33;
static const uint32_t EPS_FIR_LOCAL_ACTION1_34 = 34;
static const uint32_t EPS_FIR_LOCAL_ACTION1_35 = 35;
static const uint32_t EPS_FIR_LOCAL_ACTION1_36 = 36;
static const uint32_t EPS_FIR_LOCAL_ACTION1_37 = 37;
static const uint32_t EPS_FIR_LOCAL_ACTION1_38 = 38;
static const uint32_t EPS_FIR_LOCAL_ACTION1_39 = 39;
static const uint32_t EPS_FIR_LOCAL_ACTION1_40 = 40;
static const uint32_t EPS_FIR_LOCAL_ACTION1_41 = 41;
static const uint32_t EPS_FIR_LOCAL_ACTION1_42 = 42;
static const uint32_t EPS_FIR_LOCAL_ACTION1_43 = 43;
static const uint32_t EPS_FIR_LOCAL_ACTION1_44 = 44;
static const uint32_t EPS_FIR_LOCAL_ACTION1_45 = 45;
static const uint32_t EPS_FIR_LOCAL_ACTION1_46 = 46;
static const uint32_t EPS_FIR_LOCAL_ACTION1_47 = 47;
static const uint32_t EPS_FIR_LOCAL_ACTION1_48 = 48;
static const uint32_t EPS_FIR_LOCAL_ACTION1_49 = 49;
static const uint32_t EPS_FIR_LOCAL_ACTION1_50 = 50;
static const uint32_t EPS_FIR_LOCAL_ACTION1_51 = 51;
static const uint32_t EPS_FIR_LOCAL_ACTION1_52 = 52;
static const uint32_t EPS_FIR_LOCAL_ACTION1_53 = 53;
static const uint32_t EPS_FIR_LOCAL_ACTION1_54 = 54;
static const uint32_t EPS_FIR_LOCAL_ACTION1_55 = 55;
static const uint32_t EPS_FIR_LOCAL_ACTION1_56 = 56;
static const uint32_t EPS_FIR_LOCAL_ACTION1_57 = 57;
static const uint32_t EPS_FIR_LOCAL_ACTION1_58 = 58;
static const uint32_t EPS_FIR_LOCAL_ACTION1_59 = 59;
static const uint32_t EPS_FIR_LOCAL_ACTION1_60 = 60;
static const uint32_t EPS_FIR_LOCAL_ACTION1_61 = 61;
static const uint32_t EPS_FIR_LOCAL_ACTION1_62 = 62;
static const uint32_t EPS_FIR_LOCAL_ACTION1_63 = 63;
//<< [EPS_FIR_LOCAL_ACTION1]
// pec/reg00014.H

//>> [OPCG_REG1]
static const uint64_t OPCG_REG1 = 0x08030003ull;

static const uint32_t OPCG_REG1_SCAN_COUNT = 0;
static const uint32_t OPCG_REG1_SCAN_COUNT_LEN = 12;
static const uint32_t OPCG_REG1_MISR_A_VAL = 12;
static const uint32_t OPCG_REG1_MISR_A_VAL_LEN = 12;
static const uint32_t OPCG_REG1_MISR_B_VAL = 24;
static const uint32_t OPCG_REG1_MISR_B_VAL_LEN = 12;
static const uint32_t OPCG_REG1_MISR_INIT_WAIT = 36;
static const uint32_t OPCG_REG1_MISR_INIT_WAIT_LEN = 12;
static const uint32_t OPCG_REG1_SCAN_CLK_USE_EVEN = 49;
static const uint32_t OPCG_REG1_DISABLE_FCE_DURING_FILL = 50;
static const uint32_t OPCG_REG1_RTIM_THOLD_FORCE = 52;
static const uint32_t OPCG_REG1_DISABLE_ARY_CLK_DURING_FILL = 53;
static const uint32_t OPCG_REG1_SG_HIGH_DURING_FILL = 54;
static const uint32_t OPCG_REG1_LBIST_SKITTER_CTL = 55;
static const uint32_t OPCG_REG1_LBIST_SKITTER_CTL_LEN = 2;
static const uint32_t OPCG_REG1_MISR_MODE = 57;
static const uint32_t OPCG_REG1_INFINITE_MODE = 58;
static const uint32_t OPCG_REG1_NSL_FILL_COUNT = 59;
static const uint32_t OPCG_REG1_NSL_FILL_COUNT_LEN = 5;
//<< [OPCG_REG1]
// pec/reg00014.H

//>> [PB_PBCQ_PEPBREGS_PBCQHWCFG_REG]
static const uint64_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG = 0x03011800ull;

static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_HANG_POLL_SCALE = 0;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_HANG_POLL_SCALE_LEN = 4;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_HANG_DATA_SCALE = 4;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_HANG_DATA_SCALE_LEN = 4;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_HANG_PE_SCALE = 8;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_HANG_PE_SCALE_LEN = 4;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_BLOCK_CQPB_PB_INIT = 12;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_SEQ_MODE = 12; // p10:20,
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_DISABLE_RCMD_CLKGATE = 13;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_HANG_SM_ON_ARE = 14;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_PCI_CLK_CHECK = 15;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_LFSR_ARB_MODE = 16;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_ENABLE_DMAR_IOPACING = 17;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_ENABLE_DMAW_IOPACING = 18;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_ADR_BAR_MODE = 19;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_STQ_ALLOCATION = 20;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_DISABLE_LPC_CMDS = 21;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_OOO_MODE = 22;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_OSMB_EARLY_START = 23;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_OSMB_EARLY_START_LEN = 4;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_QFIFO_HOLD_MODE = 27;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_QFIFO_HOLD_MODE_LEN = 2;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_RESERVED1 = 29;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_P2P_RD = 30;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_RESERVED4 = 31;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_WR_STRICT_ORDER_MODE = 32;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_CHANNEL_STREAMING_EN = 33;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_WR_CACHE_INJECT_MODE = 34;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_WR_CACHE_INJECT_MODE_LEN = 2;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_P2P_FORCE_DMA = 36;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_INJ_ON_RESEND = 37;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_FORCE_DISABLED_CTAG_TO_FOLLOW_FLOW = 38;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_ENABLE_ENH_FLOW = 39;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_RESERVED2 = 40;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_WR_VG = 41;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_WR_SCOPE_GROUP = 42;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_INTWR_VG = 43;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_INTWR_SCOPE_GROUP = 44;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_INTWR_SCOPE_NODE = 45;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_INJECT_THRESHOLD_DEC_RATE = 46;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_INJECT_THRESHOLD_DEC_RATE_LEN = 3;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_RD_WR_ORDERING = 49;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_RD_SCOPE_NODAL = 50;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_RD_SCOPE_GROUP = 51;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_RD_SCOPE_RNNN = 52;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_ENABLE_RD_SKIP_GROUP = 53;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_RD_VG = 54;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_TCE_SCOPE_NODAL = 55;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_TCE_SCOPE_GROUP = 56;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_TCE_SCOPE_RNNN = 57;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_ENABLE_TCE_SKIP_GROUP = 58;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_TCE_VG = 59;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_TCE_ARBITRATION = 60;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_CQ_TCE_ARBITRATION = 61;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_DISABLE_MC_PREFETCH = 62;
static const uint32_t PB_PBCQ_PEPBREGS_PBCQHWCFG_REG_PE_IGNORE_SFSTAT = 63;
//<< [PB_PBCQ_PEPBREGS_PBCQHWCFG_REG]
// pec/reg00014.H

//>> [PB_PBCQ_PEPBREGS_PE_TOPOLOGY_REG2]
static const uint64_t PB_PBCQ_PEPBREGS_PE_TOPOLOGY_REG2 = 0x0301180eull;

static const uint32_t PB_PBCQ_PEPBREGS_PE_TOPOLOGY_REG2_PE_TOPOLOGY_ID_REG2 = 0;
static const uint32_t PB_PBCQ_PEPBREGS_PE_TOPOLOGY_REG2_PE_TOPOLOGY_ID_REG2_LEN = 40;
//<< [PB_PBCQ_PEPBREGS_PE_TOPOLOGY_REG2]
// pec/reg00014.H

//>> [SLAVE_CONFIG_REG]
static const uint64_t SLAVE_CONFIG_REG = 0x080f001eull;

static const uint32_t SLAVE_CONFIG_REG_DISABLE_PERV_THOLD_CHECK = 0;
static const uint32_t SLAVE_CONFIG_REG_CFG_DISABLE_PERV_THOLD_CHECK = 0; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_DISABLE_MALF_PULSE_GEN = 1;
static const uint32_t SLAVE_CONFIG_REG_CFG_DISABLE_MALF_PULSE_GEN = 1; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_STOP_HANG_CNT_SYS_XSTP = 2;
static const uint32_t SLAVE_CONFIG_REG_CFG_STOP_HANG_CNT_SYS_XSTP = 2; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_DISABLE_CL_ATOMIC_LOCK = 3;
static const uint32_t SLAVE_CONFIG_REG_CFG_DISABLE_CL_ATOMIC_LOCK = 3; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_DISABLE_HEARTBEAT = 4;
static const uint32_t SLAVE_CONFIG_REG_CFG_DISABLE_HEARTBEAT = 4; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_DISABLE_FORCE_TO_ZERO = 5;
static const uint32_t SLAVE_CONFIG_REG_CFG_DISABLE_FORCE_TO_ZERO = 5; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_PM_DISABLE = 6;
static const uint32_t SLAVE_CONFIG_REG_CFG_PM_DISABLE = 6; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_PM_MUX_DISABLE = 7;
static const uint32_t SLAVE_CONFIG_REG_CFG_PM_MUX_DISABLE = 7; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_MASK_REG_PARITY_ERRS = 8;
static const uint32_t SLAVE_CONFIG_REG_CFG_MASK_REG_PARITY_ERRS = 8; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_MASK_PCB_IF_ERRS = 9;
static const uint32_t SLAVE_CONFIG_REG_CFG_MASK_PCB_IF_ERRS = 9; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_MASK_HEARTBEAT_ERRS = 10;
static const uint32_t SLAVE_CONFIG_REG_CFG_MASK_HEARTBEAT_ERRS = 10; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_MASK_PCBSL_ERRS = 11;
static const uint32_t SLAVE_CONFIG_REG_CFG_MASK_PCBSL_ERRS = 11; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_MASK_PLL_ERRS = 12;
static const uint32_t SLAVE_CONFIG_REG_MASK_PLL_ERRS_LEN = 8;
static const uint32_t SLAVE_CONFIG_REG_CFG_MASK_PLL_ERRS = 12; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_CFG_MASK_PLL_ERRS_LEN = 8;
static const uint32_t SLAVE_CONFIG_REG_QME_PAR_DIS = 20;
static const uint32_t SLAVE_CONFIG_REG_CFG_QME_PAR_DIS = 20; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_FORCE_0_QME = 21;
static const uint32_t SLAVE_CONFIG_REG_CFG_FORCE_0_QME = 21; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_MASK_QME_RISING_EDGE_DETECTED_ON_QUIESCE = 22; // p10:20,
static const uint32_t SLAVE_CONFIG_REG_MASK_QME_INTR_RISING_EDGE_DETECTED_ON_QUIESCE = 23; // p10:20,
//<< [SLAVE_CONFIG_REG]
// pec/reg00014.H

//>> [XSTOP2]
static const uint64_t XSTOP2 = 0x0803000dull;

static const uint32_t XSTOP2_ENABLE = 0;
static const uint32_t XSTOP2_WAIT_SNOPA = 1;
static const uint32_t XSTOP2_TRIGGER_OPCG_GO = 2;
static const uint32_t XSTOP2_WAIT_ALWAYS = 3;
static const uint32_t XSTOP2_REGION_PERV = 4;
static const uint32_t XSTOP2_REGION_UNIT1 = 5;
static const uint32_t XSTOP2_REGION_UNIT2 = 6;
static const uint32_t XSTOP2_REGION_UNIT3 = 7;
static const uint32_t XSTOP2_REGION_UNIT4 = 8;
static const uint32_t XSTOP2_REGION_UNIT5 = 9;
static const uint32_t XSTOP2_REGION_UNIT6 = 10;
static const uint32_t XSTOP2_REGION_UNIT7 = 11;
static const uint32_t XSTOP2_REGION_UNIT8 = 12;
static const uint32_t XSTOP2_REGION_UNIT9 = 13;
static const uint32_t XSTOP2_REGION_UNIT10 = 14;
static const uint32_t XSTOP2_REGION_UNIT11 = 15;
static const uint32_t XSTOP2_REGION_UNIT12 = 16;
static const uint32_t XSTOP2_REGION_UNIT13 = 17;
static const uint32_t XSTOP2_REGION_UNIT14 = 18;
static const uint32_t XSTOP2_WAIT_CYCLES = 48;
static const uint32_t XSTOP2_WAIT_CYCLES_LEN = 12;
//<< [XSTOP2]
// pec/reg00014.H

//>>THE END<<

#ifndef __PPE_HCODE__
}
}
#include "pec/reg00014.H"
#endif
#endif

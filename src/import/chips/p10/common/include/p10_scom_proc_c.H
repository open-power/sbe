/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: src/import/chips/p10/common/include/p10_scom_proc_c.H $       */
/*                                                                        */
/* OpenPOWER sbe Project                                                  */
/*                                                                        */
/* Contributors Listed Below - COPYRIGHT 2019,2020                        */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */

#ifndef __PPE_HCODE__
    #include "proc_scomt.H"
#endif

#ifndef __p10_scom_proc_c_H_
#define __p10_scom_proc_c_H_


#ifndef __PPE_HCODE__
namespace scomt
{
namespace proc
{
#endif


//>> [INT_PC_NXC_REGS_FLUSH_CTRL]
static const uint64_t INT_PC_NXC_REGS_FLUSH_CTRL = 0x02010a80ull;

static const uint32_t INT_PC_NXC_REGS_FLUSH_CTRL_POLL_VALID = 0;
static const uint32_t INT_PC_NXC_REGS_FLUSH_CTRL_RESERVED_1 = 1;
static const uint32_t INT_PC_NXC_REGS_FLUSH_CTRL_POLL_WANT_CACHE_DISABLE = 2;
static const uint32_t INT_PC_NXC_REGS_FLUSH_CTRL_POLL_WANT_INVALIDATE = 3;
static const uint32_t INT_PC_NXC_REGS_FLUSH_CTRL_RESERVED_4_6 = 4;
static const uint32_t INT_PC_NXC_REGS_FLUSH_CTRL_RESERVED_4_6_LEN = 3;
static const uint32_t INT_PC_NXC_REGS_FLUSH_CTRL_INJECT_WANT_INVALIDATE = 7;
//<< [INT_PC_NXC_REGS_FLUSH_CTRL]
// proc/reg00060.H

//>> [NX_PBI_RNG_RDELAY]
static const uint64_t NX_PBI_RNG_RDELAY = 0x020110e5ull;

static const uint32_t NX_PBI_RNG_RDELAY_FILL_THRESHOLD = 0;
static const uint32_t NX_PBI_RNG_RDELAY_FILL_THRESHOLD_LEN = 2;
static const uint32_t NX_PBI_RNG_RDELAY_DRAIN_THRESHOLD = 2;
static const uint32_t NX_PBI_RNG_RDELAY_DRAIN_THRESHOLD_LEN = 2;
static const uint32_t NX_PBI_RNG_RDELAY_LFSR_RESEED_EN = 6;
static const uint32_t NX_PBI_RNG_RDELAY_READ_RTY_RATIO = 7;
static const uint32_t NX_PBI_RNG_RDELAY_READ_RTY_RATIO_LEN = 5;
//<< [NX_PBI_RNG_RDELAY]
// proc/reg00060.H

//>> [PB_BRIDGE_NHTM_SC_HTM_STOP_ADDR_MASK]
static const uint64_t PB_BRIDGE_NHTM_SC_HTM_STOP_ADDR_MASK = 0x03011c8full;

static const uint32_t PB_BRIDGE_NHTM_SC_HTM_STOP_ADDR_MASK_HTMSC_STOP_ADDR_MASK = 0;
static const uint32_t PB_BRIDGE_NHTM_SC_HTM_STOP_ADDR_MASK_HTMSC_STOP_ADDR_MASK_LEN = 56;
//<< [PB_BRIDGE_NHTM_SC_HTM_STOP_ADDR_MASK]
// proc/reg00060.H

//>> [PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT]
static const uint64_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT = 0x03011011ull;

static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_16_VALID_NEXT_EQ0 = 0;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_17_VALID_NEXT_EQ0 = 1;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_18_VALID_NEXT_EQ0 = 2;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_19_VALID_NEXT_EQ0 = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_20_VALID_NEXT_EQ0 = 4;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_21_VALID_NEXT_EQ0 = 5;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_22_VALID_NEXT_EQ0 = 6;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_23_VALID_NEXT_EQ0 = 7;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_24_VALID_NEXT_EQ0 = 8;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_25_VALID_NEXT_EQ0 = 9;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_26_VALID_NEXT_EQ0 = 10;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_27_VALID_NEXT_EQ0 = 11;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_28_VALID_NEXT_EQ0 = 12;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_29_VALID_NEXT_EQ0 = 13;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_30_VALID_NEXT_EQ0 = 14;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_31_VALID_NEXT_EQ0 = 15;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_16_AX_NUM_NEXT_EQ0 = 16;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_16_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_17_AX_NUM_NEXT_EQ0 = 19;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_17_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_18_AX_NUM_NEXT_EQ0 = 22;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_18_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_19_AX_NUM_NEXT_EQ0 = 25;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_19_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_20_AX_NUM_NEXT_EQ0 = 28;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_20_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_21_AX_NUM_NEXT_EQ0 = 31;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_21_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_22_AX_NUM_NEXT_EQ0 = 34;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_22_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_23_AX_NUM_NEXT_EQ0 = 37;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_23_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_24_AX_NUM_NEXT_EQ0 = 40;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_24_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_25_AX_NUM_NEXT_EQ0 = 43;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_25_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_26_AX_NUM_NEXT_EQ0 = 46;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_26_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_27_AX_NUM_NEXT_EQ0 = 49;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_27_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_28_AX_NUM_NEXT_EQ0 = 52;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_28_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_29_AX_NUM_NEXT_EQ0 = 55;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_29_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_30_AX_NUM_NEXT_EQ0 = 58;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_30_AX_NUM_NEXT_EQ0_LEN = 3;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_31_AX_NUM_NEXT_EQ0 = 61;
static const uint32_t PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT_31_AX_NUM_NEXT_EQ0_LEN = 3;
//<< [PB_COM_SCOM_EQ0_STATION_HP_MODE4_NEXT]
// proc/reg00060.H

//>> [PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR]
static const uint64_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR = 0x03011390ull;

static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_0_VALID_CURR_ES3 = 0;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_1_VALID_CURR_ES3 = 1;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_2_VALID_CURR_ES3 = 2;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_3_VALID_CURR_ES3 = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_4_VALID_CURR_ES3 = 4;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_5_VALID_CURR_ES3 = 5;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_6_VALID_CURR_ES3 = 6;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_7_VALID_CURR_ES3 = 7;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_8_VALID_CURR_ES3 = 8;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_9_VALID_CURR_ES3 = 9;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_10_VALID_CURR_ES3 = 10;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_11_VALID_CURR_ES3 = 11;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_12_VALID_CURR_ES3 = 12;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_13_VALID_CURR_ES3 = 13;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_14_VALID_CURR_ES3 = 14;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_15_VALID_CURR_ES3 = 15;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_0_AX_NUM_CURR_ES3 = 16;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_0_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_1_AX_NUM_CURR_ES3 = 19;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_1_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_2_AX_NUM_CURR_ES3 = 22;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_2_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_3_AX_NUM_CURR_ES3 = 25;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_3_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_4_AX_NUM_CURR_ES3 = 28;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_4_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_5_AX_NUM_CURR_ES3 = 31;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_5_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_6_AX_NUM_CURR_ES3 = 34;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_6_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_7_AX_NUM_CURR_ES3 = 37;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_7_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_8_AX_NUM_CURR_ES3 = 40;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_8_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_9_AX_NUM_CURR_ES3 = 43;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_9_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_10_AX_NUM_CURR_ES3 = 46;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_10_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_11_AX_NUM_CURR_ES3 = 49;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_11_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_12_AX_NUM_CURR_ES3 = 52;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_12_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_13_AX_NUM_CURR_ES3 = 55;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_13_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_14_AX_NUM_CURR_ES3 = 58;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_14_AX_NUM_CURR_ES3_LEN = 3;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_15_AX_NUM_CURR_ES3 = 61;
static const uint32_t PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR_15_AX_NUM_CURR_ES3_LEN = 3;
//<< [PB_COM_SCOM_ES3_STATION_HP_MODE3_CURR]
// proc/reg00060.H

//>> [TP_TPBR_PBA_PBAF_PBAFIRACT1]
static const uint64_t TP_TPBR_PBA_PBAF_PBAFIRACT1 = 0x03011dc7ull;

static const uint32_t TP_TPBR_PBA_PBAF_PBAFIRACT1_PBAFIRACT1_FIR_ACTION1 = 0;
static const uint32_t TP_TPBR_PBA_PBAF_PBAFIRACT1_PBAFIRACT1_FIR_ACTION1_LEN = 40;
//<< [TP_TPBR_PBA_PBAF_PBAFIRACT1]
// proc/reg00061.H

//>> [TP_TPBR_PBA_PBAO_BCUE_STAT]
static const uint64_t TP_TPBR_PBA_PBAO_BCUE_STAT = 0x00068017ull;

static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_RUNNING = 0;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_WAITING = 1;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_WRCMP = 2;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_WRCMP_LEN = 6;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_RDCMP = 14;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_RDCMP_LEN = 6;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_DEBUG = 20;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_DEBUG_LEN = 9;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_STOPPED = 29;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_ERROR = 30;
static const uint32_t TP_TPBR_PBA_PBAO_BCUE_STAT_DONE = 31;
//<< [TP_TPBR_PBA_PBAO_BCUE_STAT]
// proc/reg00061.H

//>> [TP_TPBR_PBA_PBAO_PBAOCFG]
static const uint64_t TP_TPBR_PBA_PBAO_PBAOCFG = 0x01010ccbull;

static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_HANG_ON_ADRERROR = 0;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DIS_OCIABUSPAR_CHECK = 1;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DIS_OCIBEPAR_CHECK = 2;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_HANG_ON_DERROR = 3;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DIS_WRITE_MATCH_REARB = 4;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DIS_OCIDATAPAR_GEN = 5;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DIS_OCIDATAPAR_CHECK = 6;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_USE_TOPOLOGY_ID_SCOPE = 7;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_HTM_ENABLE = 8;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_RESERVED_9_11 = 9;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_RESERVED_9_11_LEN = 3;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DISABLE_LN_RD = 12;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DISABLE_NN_RN_RD = 13;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DISABLE_GROUP_RD = 14;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_RESERVED_15 = 15;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DISABLE_LN_WR = 16;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DISABLE_NN_RN_WR = 17;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_CHSW_DISABLE_GROUP_WR = 18;
static const uint32_t TP_TPBR_PBA_PBAO_PBAOCFG_RESERVED_19 = 19;
//<< [TP_TPBR_PBA_PBAO_PBAOCFG]
// proc/reg00061.H

//>> [TP_TPBR_PBA_PBAO_PBARBUFVAL4]
static const uint64_t TP_TPBR_PBA_PBAO_PBARBUFVAL4 = 0x01010cd4ull;

static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_RD_SLVNUM = 0;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_RD_SLVNUM_LEN = 2;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_CUR_RD_ADDR = 2;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_CUR_RD_ADDR_LEN = 23;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_PREFETCH = 28;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_ABORT = 31;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_BUFFER_STATUS = 33;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_BUFFER_STATUS_LEN = 7;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_MASTERID = 41;
static const uint32_t TP_TPBR_PBA_PBAO_PBARBUFVAL4_MASTERID_LEN = 3;
//<< [TP_TPBR_PBA_PBAO_PBARBUFVAL4]
// proc/reg00062.H

//>> [TP_TPBR_PBA_PBAO_PBASLVCTL3]
static const uint64_t TP_TPBR_PBA_PBAO_PBASLVCTL3 = 0x00068007ull;

static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_ENABLE = 0;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_MID_MATCH_VALUE = 1;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_MID_MATCH_VALUE_LEN = 3;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_RESERVED_4 = 4;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_MID_CARE_MASK = 5;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_MID_CARE_MASK_LEN = 3;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_WRITE_TTYPE = 8;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_WRITE_TTYPE_LEN = 3;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_RESERVED_11_14 = 11;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_RESERVED_11_14_LEN = 4;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_READ_TTYPE = 15;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_READ_PREFETCH_CTL = 16;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_READ_PREFETCH_CTL_LEN = 2;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_BUF_INVALIDATE_CTL = 18;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_BUF_ALLOC_W = 19;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_BUF_ALLOC_A = 20;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_BUF_ALLOC_B = 21;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_BUF_ALLOC_C = 22;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_RESERVED_23 = 23;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_DIS_WRITE_GATHER = 24;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_WR_GATHER_TIMEOUT = 25;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_WR_GATHER_TIMEOUT_LEN = 3;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_WRITE_TSIZE = 28;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_WRITE_TSIZE_LEN = 8;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_EXTADDR = 36;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_EXTADDR_LEN = 14;
static const uint32_t TP_TPBR_PBA_PBAO_PBASLVCTL3_RESERVED_50 = 50;
//<< [TP_TPBR_PBA_PBAO_PBASLVCTL3]
// proc/reg00062.H

//>> [TP_TPBR_PSIHB_PSI_FSP_MMR_REG]
static const uint64_t TP_TPBR_PSIHB_PSI_FSP_MMR_REG = 0x03011d0cull;

static const uint32_t TP_TPBR_PSIHB_PSI_FSP_MMR_REG_FSP_MMR = 32;
static const uint32_t TP_TPBR_PSIHB_PSI_FSP_MMR_REG_FSP_MMR_LEN = 12;
//<< [TP_TPBR_PSIHB_PSI_FSP_MMR_REG]
// proc/reg00062.H

//>> [TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG]
static const uint64_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG = 0x010f001eull;

static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_DISABLE_PERV_THOLD_CHECK = 0;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_DISABLE_PERV_THOLD_CHECK = 0; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_DISABLE_MALF_PULSE_GEN = 1;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_DISABLE_MALF_PULSE_GEN = 1; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_STOP_HANG_CNT_SYS_XSTP = 2;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_STOP_HANG_CNT_SYS_XSTP = 2; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_DISABLE_CL_ATOMIC_LOCK = 3;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_DISABLE_CL_ATOMIC_LOCK = 3; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_DISABLE_HEARTBEAT = 4;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_DISABLE_HEARTBEAT = 4; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_DISABLE_FORCE_TO_ZERO = 5;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_DISABLE_FORCE_TO_ZERO = 5; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_PM_DISABLE = 6;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_PM_DISABLE = 6; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_PM_MUX_DISABLE = 7;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_PM_MUX_DISABLE = 7; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_MASK_REG_PARITY_ERRS = 8;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_MASK_REG_PARITY_ERRS = 8; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_MASK_PCB_IF_ERRS = 9;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_MASK_PCB_IF_ERRS = 9; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_MASK_HEARTBEAT_ERRS = 10;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_MASK_HEARTBEAT_ERRS = 10; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_MASK_PCBSL_ERRS = 11;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_MASK_PCBSL_ERRS = 11; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_MASK_PLL_ERRS = 12;
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_MASK_PLL_ERRS_LEN = 8;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_MASK_PLL_ERRS = 12; // p10:20,
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_MASK_PLL_ERRS_LEN = 8;
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_QME_PAR_DIS = 20;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_QME_PAR_DIS = 20; // p10:20,
static const uint32_t TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_FORCE_0_QME = 21;
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_CFG_FORCE_0_QME = 21; // p10:20,
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_MASK_QME_RISING_EDGE_DETECTED_ON_QUIESCE =
    22; // p10:20,
static const uint32_t P10_20_TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG_MASK_QME_INTR_RISING_EDGE_DETECTED_ON_QUIESCE =
    23; // p10:20,
//<< [TP_TPCHIP_NET_PCBSLPERV_SLAVE_CONFIG_REG]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACL]
static const uint64_t TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACL = 0x0006002full;

static const uint32_t TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACL_ERR = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACL_POPULATE_PENDING = 3;
static const uint32_t TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACL_VALID = 4;
static const uint32_t TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACL_VALID_LEN = 4;
//<< [TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACL]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACU]
static const uint64_t TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACU = 0x0006002eull;

static const uint32_t TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACU_OCB_OCI_GPEXIDCAC_DCACHE_TAG_ADDR = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACU_OCB_OCI_GPEXIDCAC_DCACHE_TAG_ADDR_LEN = 27;
//<< [TP_TPCHIP_OCC_OCI_GPE0_OCB_GPEXIDCACU]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_GPE3_OCB_GPEXIRAMEDR]
static const uint64_t TP_TPCHIP_OCC_OCI_GPE3_OCB_GPEXIRAMEDR = 0x00066014ull;

static const uint32_t TP_TPCHIP_OCC_OCI_GPE3_OCB_GPEXIRAMEDR_IR = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_GPE3_OCB_GPEXIRAMEDR_IR_LEN = 32;
static const uint32_t TP_TPCHIP_OCC_OCI_GPE3_OCB_GPEXIRAMEDR_EDR = 32;
static const uint32_t TP_TPCHIP_OCC_OCI_GPE3_OCB_GPEXIRAMEDR_EDR_LEN = 32;
//<< [TP_TPCHIP_OCC_OCI_GPE3_OCB_GPEXIRAMEDR]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_OCB_O2SCMD2B]
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_O2SCMD2B = 0x0006c757ull;

static const uint32_t TP_TPCHIP_OCC_OCI_OCB_O2SCMD2B_CMD2B_RESERVED_0 = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_O2SCMD2B_CLEAR_STICKY_BITS_2B = 1;
//<< [TP_TPCHIP_OCC_OCI_OCB_O2SCMD2B]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_OCB_O2SRD0B]
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_O2SRD0B = 0x0006c719ull;

static const uint32_t TP_TPCHIP_OCC_OCI_OCB_O2SRD0B_OCB_OCI_O2SRD0B_O2S_RDATA_0B = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_O2SRD0B_OCB_OCI_O2SRD0B_O2S_RDATA_0B_LEN = 32;
//<< [TP_TPCHIP_OCC_OCI_OCB_O2SRD0B]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_OCB_O2SWD2B]
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_O2SWD2B = 0x0006c758ull;

static const uint32_t TP_TPCHIP_OCC_OCI_OCB_O2SWD2B_OCB_OCI_O2SWD2B_O2S_WDATA_2B = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_O2SWD2B_OCB_OCI_O2SWD2B_O2S_WDATA_2B_LEN = 32;
//<< [TP_TPCHIP_OCC_OCI_OCB_O2SWD2B]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_OCB_OCBSES0]
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_OCBSES0 = 0x0006c206ull;

static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OCBSES0_SH_READ_UNDERFLOW = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OCBSES0_LL_WRITE_OVERFLOW = 1;
//<< [TP_TPCHIP_OCC_OCI_OCB_OCBSES0]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_OCB_OIRR1C]
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_OIRR1C_RW = 0x0006c058ull;
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_OIRR1C_WO_CLEAR = 0x0006c059ull;
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_OIRR1C_WO_OR = 0x0006c05aull;

static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OIRR1C_OCB_OCI_OIRR1C_INTERRUPT_ROUTE_1_C = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OIRR1C_OCB_OCI_OIRR1C_INTERRUPT_ROUTE_1_C_LEN = 32;
//<< [TP_TPCHIP_OCC_OCI_OCB_OIRR1C]
// proc/reg00062.H

//>> [TP_TPCHIP_OCC_OCI_OCB_OISR0]
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_OISR0_RO = 0x0006c000ull;
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_OISR0_WO_CLEAR = 0x0006c001ull;
static const uint64_t TP_TPCHIP_OCC_OCI_OCB_OISR0_WO_OR = 0x0006c002ull;

static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_TRACE_TRIGGER = 0;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_OCC_ERROR = 1;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_GPE2_ERROR = 2;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_GPE3_ERROR = 3;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_CHECK_STOP_GPE2 = 4;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_CHECK_STOP_GPE3 = 5;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_OCC_MALF_ALERT = 6;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PVREF_ERROR = 7;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_IPI2 = 8;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_IPI3 = 9;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_DEBUG_TRIGGER = 10;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_SPARE = 11;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PBAX_PGPE_ATTN = 12;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PBAX_PGPE_PUSH0 = 13;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PBAX_PGPE_PUSH1 = 14;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PBA_OVERCURRENT_INDICATOR = 15;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE0_PENDING = 16;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE1_PENDING = 17;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE2_PENDING = 18;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE3_PENDING = 19;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE4_PENDING = 20;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE5_PENDING = 21;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE6_PENDING = 22;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE7_PENDING = 23;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE8_PENDING = 24;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPE9_PENDING = 25;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPEA_PENDING = 26;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPEB_PENDING = 27;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPEC_PENDING = 28;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPED_PENDING = 29;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPEE_PENDING = 30;
static const uint32_t TP_TPCHIP_OCC_OCI_OCB_OISR0_PMC_PCB_INTR_TYPEF_PENDING = 31;
//<< [TP_TPCHIP_OCC_OCI_OCB_OISR0]
// proc/reg00062.H

//>> [TP_TPCHIP_PIB_SPIMC_SPIMST1_CONFIG1]
static const uint64_t TP_TPCHIP_PIB_SPIMC_SPIMST1_CONFIG1 = 0x000c0022ull;

static const uint32_t TP_TPCHIP_PIB_SPIMC_SPIMST1_CONFIG1_SPI_RESOURCE_LOCK = 0;
static const uint32_t TP_TPCHIP_PIB_SPIMC_SPIMST1_CONFIG1_PIB_MASTER_ID = 1;
static const uint32_t TP_TPCHIP_PIB_SPIMC_SPIMST1_CONFIG1_PIB_MASTER_ID_LEN = 4;
//<< [TP_TPCHIP_PIB_SPIMC_SPIMST1_CONFIG1]
// proc/reg00063.H

//>> [TP_TPVSB_FSI_W_FSI2PIB_CHIPID]
static const uint32_t TP_TPVSB_FSI_W_FSI2PIB_CHIPID_FSI = 0x0000100aull;
static const uint32_t TP_TPVSB_FSI_W_FSI2PIB_CHIPID_FSI_BYTE = 0x00001028ull;

static const uint32_t TP_TPVSB_FSI_W_FSI2PIB_CHIPID_CHIP_ID = 0;
static const uint32_t TP_TPVSB_FSI_W_FSI2PIB_CHIPID_CHIP_ID_LEN = 20;
//<< [TP_TPVSB_FSI_W_FSI2PIB_CHIPID]
// proc/reg00063.H

//>> [TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_FSI = 0x00002814ull;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_FSI_BYTE = 0x00002850ull;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_RW = 0x00050014ull;

static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX0A_CLKIN_SEL_DC = 0;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX0A_CLKIN_SEL_DC_LEN = 2;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX0B_CLKIN_SEL_DC = 2;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX0B_CLKIN_SEL_DC_LEN = 2;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX0C_CLKIN_SEL_DC = 4;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX0C_CLKIN_SEL_DC_LEN = 2;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX0D_CLKIN_SEL_DC = 6;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX0D_CLKIN_SEL_DC_LEN = 2;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX10_CLKIN_SEL_DC = 8;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX11_CLKIN_SEL_DC = 9;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX12_CLKIN_SEL_DC = 10;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX12_CLKIN_SEL_DC_LEN = 2;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX13_CLKIN_SEL_DC = 12;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX13_CLKIN_SEL_DC_LEN = 2;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX14_CLKIN_SEL_DC = 14;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX23_CLKIN_SEL_DC = 15;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_REFCLK_CLKMUX23_CLKIN_SEL_DC_LEN = 2;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_TOD_LPC_MUX_SEL_DC = 17;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_ROOT_CTRL4_18_SPARE = 18;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_ROOT_CTRL4_19_SPARE = 19;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_MUX1_CLKIN_SEL_DC = 20;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_MUX2A_CLKIN_SEL_DC = 21;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_MUX2B_CLKIN_SEL_DC = 22;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_MUX3_CLKIN_SEL_DC = 23;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_MUX4A_CLKIN_SEL_DC = 24;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_CLKGLM_NEST_ASYNC_RESET_DC = 25;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_AN_NEST_DIV2_ASYNC_RESET_DC = 26;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TPFSI_ALTREFCLK_SEL = 27;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_ROOT_CTRL4_28_SPARE = 28;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_TP_PLL_FORCE_OUT_EN_DC = 29;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_DPLL_FREEZE_DC = 30;
static const uint32_t TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4_ROOT_CTRL4_31_SPARE = 31;
//<< [TP_TPVSB_FSI_W_MAILBOX_FSXCOMP_FSXLOG_ROOT_CTRL4]
// proc/reg00063.H

//>> [TP_TPVSB_FSI_W_SHIFT_DMA_PIB_SND_BUFFER1_REGISTER]
static const uint32_t TP_TPVSB_FSI_W_SHIFT_DMA_PIB_SND_BUFFER1_REGISTER_FSI = 0x00000c1eull;
static const uint32_t TP_TPVSB_FSI_W_SHIFT_DMA_PIB_SND_BUFFER1_REGISTER_FSI_BYTE = 0x00000c78ull;

static const uint32_t TP_TPVSB_FSI_W_SHIFT_DMA_PIB_SND_BUFFER1_REGISTER_DMA_PIB_SND_BUF1_REG_DATA0 = 0;
static const uint32_t TP_TPVSB_FSI_W_SHIFT_DMA_PIB_SND_BUFFER1_REGISTER_DMA_PIB_SND_BUF1_REG_DATA0_LEN = 32;
//<< [TP_TPVSB_FSI_W_SHIFT_DMA_PIB_SND_BUFFER1_REGISTER]
// proc/reg00064.H

//>>THE END<<

#ifndef __PPE_HCODE__
}
}
#include "proc/reg00060.H"
#include "proc/reg00061.H"
#include "proc/reg00062.H"
#include "proc/reg00063.H"
#include "proc/reg00064.H"
#endif
#endif

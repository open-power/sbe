<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p9/procedures/xml/attribute_info/memory_mcs_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2015,2019                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
    <attribute>
        <id>ATTR_MCBIST_ADDR_MODES</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Can choose mcbist address mode for full,half or quarter addressing mode.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_modes</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_RANK</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description></description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_rank</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_START_ADDR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Defines the start address for the Mcbist address range</description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_start_addr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_END_ADDR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Defines the end address for the Mcbist address range</description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_end_addr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ERROR_CAPTURE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Enables error capture; basically a flag.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_error_capture</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_MAX_TIMEOUT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Define mcbist Max timeout</description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_max_timeout</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_PRINT_PORT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Enable which port prints are required.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_print_port</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_STOP_ON_ERROR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Flag to stop Mcbist on Error.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_stop_on_error</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_DATA_SEED</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Define data seed for the random data pattern or test</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_data_seed</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_INTER</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            The address interleave map with user cases or deafult cases of
            BANK_RANK,RANK_BANK,BANK_ONLY,RANK_ONLYRANKS_DIMM0,RANKS_DIMM1,USER_PATTERN.
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_inter</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_NUM_ROWS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>User defined constraint for limiting number of rows for addressing.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_num_rows</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_NUM_COLS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>User defined constraint for limiting number of columns for addressing.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_num_cols</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_RANK</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>User defined constraint for limiting number of ranks for addressing.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_rank</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_BANK</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>User defined constraint for limiting number of banks for addressing.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_bank</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_BANK_GROUP</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>User defined constraint for limiting number of bank groups for addressing.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssUnits>count of groups</mssUnits>
        <mssAccessorName>mcbist_addr_bank_group</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_SLAVE_RANK_ON</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>If slave ranks exists;Restrict usage or enable addressing on them as well.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_slave_rank_on</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_STR_MAP</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>To Define custom addressing map ; Input by user.</description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_str_map</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_ADDR_RAND</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Flag for Addressing to go sequential manner or random.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_addr_rand</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_FLUSH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring flush image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_flush</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_SCAN_SELECT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Scan select for ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_scan_select</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4000_MEM1066_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring for nest=4000 mem=1066
            creator: platform
            firmware notes:
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4000_mem1066_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4000_MEM1066_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4000_mem1066_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4000_MEM1333_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring for nest=4000 mem=1333
            creator: platform
            firmware notes:
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4000_mem1333_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4000_MEM1333_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4000_mem1333_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4000_MEM1600_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring for nest=4000 mem=1600
            creator: platform
            firmware notes:
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4000_mem1600_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4000_MEM1600_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4000_mem1600_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4000_MEM1866_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring for nest=4000 mem=1866
            creator: platform
            firmware notes:
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4000_mem1866_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4000_MEM1866_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4000_mem1866_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4800_MEM1066_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring for nest=4800 mem=1066
            creator: platform
            firmware notes:
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4800_mem1066_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4800_MEM1066_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4800_mem1066_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4800_MEM1333_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring for nest=4800 mem=1333
            creator: platform
            firmware notes:
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4800_mem1333_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4800_MEM1333_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4800_mem1333_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4800_MEM1600_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring for nest=4800 mem=1600
            creator: platform
            firmware notes:
    </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4800_mem1600_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4800_MEM1600_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
    </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4800_mem1600_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4800_MEM1866_DATA</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Ring image for Centaur tp_bndy_pll ring for nest=4800 mem=1866
            creator: platform
            firmware notes:
    </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>80</array>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4800_mem1866_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_TP_BNDY_PLL_NEST4800_MEM1866_LENGTH</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Length of data in ring image for Centaur tp_bndy_pll ring
            creator: platform
            firmware notes:
    </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_tp_bndy_pll_nest4800_mem1866_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_DMI_CUPLL_PFD360_OFFSET</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Scan chain position of CU PLL PDF360 bit in tp_pll_bndy chain (Offset from beginning of chain)
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_dmi_cupll_pfd360_offset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_DMI_CUPLL_REFCLKSEL_OFFSET</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Scan chain position of CU PLL REFCLKSEL bit in tp_pll_bndy chain (Offset from beginning of chain)
            creator: platform
            firmware notes:
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_dmi_cupll_refclksel_offset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEMB_MEM_PLL_CFG_UPDATE_OFFSET</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Scan chain position of MEM PLL PLLCTRL1(44) bit in tp_pll_bndy chain (Offset from beginning of chain)
            creator: platform
            firmware notes:
    </description>
        <valueType>uint32</valueType>
        <platInit/>
        <persistRuntime/>
        <mssAccessorName>memb_mem_pll_cfg_update_offset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VOLT</id>
        <targetType>TARGET_TYPE_MCBIST</targetType>
        <description>
            DRAM Voltage, each voltage rail would need to have a value.
            Computed in mss_volt C code - in millivolts
            creator: mss_volt
            consumer: mss_eff_cnfg, others
            firmware notes: none
        </description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>volt</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VOLT_VPP</id>
        <targetType>TARGET_TYPE_MCBIST</targetType>
        <description>
            DRAM VPP Voltage, each voltage rail would need to have a value.
            Computed in mss_volt C code - in millivolts.  0V - DDR3, 2.5V - DDR4
            creator: mss_volt
            consumer: mss_eff_cnfg, others
            firmware notes: none
        </description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>volt_vpp</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_FREQ_OVERRIDE</id>
       <targetType>TARGET_TYPE_MCBIST</targetType>
        <description>
            FOR LAB USE ONLY: Frequency override of this memory channel in MHz, comprising of up to three DIMMs.
            Set by config file or an attribute writing program.
            Consumed by mss_freq.
            The default of AUTO means mss_freq will find the best frequencies given the DIMMs plugged in and other rules.
            Otherwise, this is the system frequency.
            firmware notes: Platforms should initialize this attribute to AUTO (0)
        </description>
        <valueType>uint64</valueType>
        <enum>AUTO = 0</enum>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>freq_override</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_FREQ</id>
        <targetType>TARGET_TYPE_MCBIST</targetType>
        <description>
            Frequency of this memory channel in MT/s (Mega Transfers per second),
            comprising of three DIMMs.
            Computed in mss_freq
            creator: mss_freq
            consumer: mss_eff_cnfg, others
            firmware notes: none
        </description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <persistRuntime/>
        <mssUnits> MT/s </mssUnits>
        <mssAccessorName>freq</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_FREQ_BIAS_PERCENTAGE</id>
        <targetType>TARGET_TYPE_MCBIST</targetType>
        <description>
            Percentage to increase/decrease MEM frequency - two's complement number.
            Measured in 100's.  So the value of 100 is one percent increase.
            This frequency change comes from changing multipliers and dividers to  get the desired frequency.
            The supported frequencies come from Tim Diemoz.
            Creator: platform set this to 0.  Users can set this to a valid value.
            VALID Values: (TBD % to TBD %) (Tuleta) (TBD % to TBD %) (Glacier)
            Set by: PLL settings written by Dave Cadigan
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <persistRuntime/>
        <mssAccessorName>freq_bias_percentage</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VREF_CAL_CNTL</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Training Control over IPL
            ENUM:
            0x00=DISABLE /Skip V-ref Train;
            0x01=DRAM - Enable V-Ref Train DRAM Level;
            0x02=RANK Level Training;
            0x03=PORT Level Training;
            0x04=MBA Level;
            0x05=CENTAUR level;
           Default Value = 0x01;
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <persistRuntime/>
        <mssAccessorName>vref_cal_cntl</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DIMM_MFG_ID_CODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Manufacturer ID Code RCD: bits(31:16), Module: bits(15:0)</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>dimm_mfg_id_code</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_RANKS_CONFIGED</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Bit wise representation of master ranks in each DIMM that are used for reads and writes.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Dimensions are [port][dimm]  A/B=Mba_0 C/D=Mba_1
            There are only two DIMM ranks: DIMM0 and DIMM1 where DIMM0 is the furthest from the centaur.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dimm_ranks_configed</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_NUM_RANKS_PER_DIMM</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Number of ranks in each DIMM.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            values are 0,1,2, 4 up to 32
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_num_ranks_per_dimm</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CUSTOM_DIMM</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DIMM is a custom DIMM. This is commonly known as a CDIMM,
            but technically, we could support Custom DIMMs of different types than an UDIMM,
            such as RDIMM and LRDIMM.
           Created in mss_eff_cnfg
           Use this attribute if you need to know if the Centaur is on the DIMM instead of on a planar.
       </description>
        <valueType>uint8</valueType>
        <enum>NO = 0, YES = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2 </array>
        <persistRuntime/>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_custom_dimm</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_WIDTH</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DRAM Device Width: X4, X8, X16, X32.
            Used in various locations and is computed in mss_eff_cnfg.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>X4 = 4, X8 = 8, X16 = 16, X32 = 32</enum>
        <mssUnit>bits</mssUnit>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_dram_width</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_RANK_MIX</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DRAM Device Rank Mix
            Used in various locations and is computed in mss_eff_cnfg.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>SYMMETRICAL = 0, ASYMMETICAL = 1</enum>
        <mssUnit>bits</mssUnit>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_dram_rank_mix</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_PRIMARY_RANK_GROUP0</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_primary_rank_group0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_PRIMARY_RANK_GROUP1</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_primary_rank_group1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_PRIMARY_RANK_GROUP2</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_primary_rank_group2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_PRIMARY_RANK_GROUP3</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_primary_rank_group3</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SECONDARY_RANK_GROUP0</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_secondary_rank_group0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SECONDARY_RANK_GROUP1</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_secondary_rank_group1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SECONDARY_RANK_GROUP2</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_secondary_rank_group2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SECONDARY_RANK_GROUP3</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_secondary_rank_group3</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_TERTIARY_RANK_GROUP0</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_tertiary_rank_group0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_TERTIARY_RANK_GROUP1</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_tertiary_rank_group1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_TERTIARY_RANK_GROUP2</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_tertiary_rank_group2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_TERTIARY_RANK_GROUP3</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_tertiary_rank_group3</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_QUATERNARY_RANK_GROUP0</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_quaternary_rank_group0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_QUATERNARY_RANK_GROUP1</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_quaternary_rank_group1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_QUATERNARY_RANK_GROUP2</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_quaternary_rank_group2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_QUATERNARY_RANK_GROUP3</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg_rank_group
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 255</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_quaternary_rank_group3</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_SPARE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Spare DRAM availability. Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: mss_eff_cnfg consumer: various firmware notes: load from spd
            OBSOLETE: Use ATTR_VPD_DIMM_SPARE
        </description>
        <valueType>uint8</valueType>
        <enum>NO_SPARE = 0, LOW_NIBBLE = 1, HIGH_NIBBLE = 2, FULL_BYTE = 3</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2 4</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dimm_spare</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_WR_VREF</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DRAM Write Vref.
            Used in various locations and comes from the MT keyword of the VPD or is computed in mss_eff_cnfg_termination.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: VPD(MT) or mss_eff_cnfg_termination
            consumer: various.C and initfile
            firmware notes: none
            This is the nominal value
            This is for DDR3
        </description>
        <valueType>uint32</valueType>
        <enum>
            VDD420 = 420,
            VDD425 = 425,
            VDD430 = 430,
            VDD435 = 435,
            VDD440 = 440,
            VDD445 = 445,
            VDD450 = 450,
            VDD455 = 455,
            VDD460 = 460,
            VDD465 = 465,
            VDD470 = 470,
            VDD475 = 475,
            VDD480 = 480,
            VDD485 = 485,
            VDD490 = 490,
            VDD495 = 495,
            VDD500 = 500,
            VDD505 = 505,
            VDD510 = 510,
            VDD515 = 515,
            VDD520 = 520,
            VDD525 = 525,
            VDD530 = 530,
            VDD535 = 535,
            VDD540 = 540,
            VDD545 = 545,
            VDD550 = 550,
            VDD555 = 555,
            VDD560 = 560,
            VDD565 = 565,
            VDD570 = 570,
            VDD575 = 575
        </enum>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_wr_vref</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_WR_VREF_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Enables for which VREF to use on the WR Schmoo.
            The LSB corresponds to the highest WR Vref
        </description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_wr_vref_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_WRDDR4_VREF_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Enables for which VREF to use on the WR Schmoo.
            The LSB corresponds to the highest WR Vref
        </description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_wrddr4_vref_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_DRV_IMP_DQ_DQS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Centaur DQ and DQS Drive Impedance Used in various locations and comes from the MT Keyword of the VPD or is computed in mss_eff_cnfg_termination.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: VPD(MT)/mss_eff_cnfg_termination
            consumer: initfile,various.C files
            firmware notes: none
            This is the nominal value
        </description>
        <valueType>uint8</valueType>
        <enum>
            OHM24_FFE0 = 0x0A,
            OHM30_FFE0 = 0x08,
            OHM30_FFE480 = 0x48,
            OHM30_FFE240 = 0x38,
            OHM30_FFE160 = 0x28,
            OHM30_FFE120 = 0x18,
            OHM34_FFE0 = 0x07,
            OHM34_FFE480 = 0x47,
            OHM34_FFE240 = 0x37,
            OHM34_FFE160 = 0x27,
            OHM34_FFE120 = 0x17,
            OHM40_FFE0 = 0x06,
            OHM40_FFE480 = 0x46,
            OHM40_FFE240 = 0x36,
            OHM40_FFE160 = 0x26,
            OHM40_FFE120 = 0x16
        </enum>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_drv_imp_dq_dqs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_DRV_IMP_DQ_DQS_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Enables for which impedance values can be used and tested in a timing test.
            The bits have a one to one correspondence to the possible driver strengths and
            start with the first value down to the last (largest) impedance as the LSB of the 8 bit field.
        </description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 </array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_drv_imp_dq_dqs_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_DRV_IMP_CLK_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Enables for which impedance values can be used and tested in a timing test.
            The bits have a one to one correspondence to the possible driver strengths and
            start with the first value down to the last (largest) impedance as the LSB of the 8 bit field.
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 </array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_drv_imp_clk_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_DRV_IMP_SPCKE_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Enables for which impedance values can be used and tested in a timing test.
            The bits have a one to one correspondence to the possible driver strengths and
            start with the first value down to the last (largest) impedance as the LSB of the 8 bit field.
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_drv_imp_spcke_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_DRV_IMP_CNTL_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Enables for which impedance values can be used and tested in a timing test.
            The bits have a one to one correspondence to the possible driver strengths and
            start with the first value down to the last (largest) impedance as the LSB of the 8 bit field.
            This is the nominal value
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_drv_imp_cntl_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_RCV_IMP_DQ_DQS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Centaur DQ and DQS Receiver Impedance Used in various locations and
            it comes from the VPD MT keyword for custom DIMMs or is computed in mss_eff_cnfg_termination.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: VPD, mss_eff_cnfg_termination
            Consumer: initfile + C code
            firmware notes: none
            This is the nominal value
        </description>
        <valueType>uint8</valueType>
        <enum>
            OHM15 = 15,
            OHM20 = 20,
            OHM30 = 30,
            OHM40 = 40,
            OHM48 = 48,
            OHM60 = 60,
            OHM80 = 80,
            OHM120 = 120,
            OHM160 = 160,
            OHM240 = 240
        </enum>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_rcv_imp_dq_dqs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_RCV_IMP_DQ_DQS_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Enables for which impedance values can be used and tested in a timing test.
            The bits have a one to one correspondence to the possible receiver termination and
            start with the first value down to the last (largest) impedance as the LSB of the 32 bit field.
        </description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_rcv_imp_dq_dqs_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_SLEW_RATE_DQ_DQS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Centaur DQ and DQS Slew Rate Used in various locations and comes from the MT keyword of the VPD or
            is computed in mss_eff_cnfg_termination. Slowest slew rate is 0, incrementing by one.
            The lower the number the slower the slew rate the higher the faster.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            creator: VPD(MT), mss_eff_cnfg_termination
            consumer: initfiles,various.C
            firmware notes: none
            This is the nominal value
        </description>
        <valueType>uint8</valueType>
        <enum>
            SLEW_3V_NS = 3,
            SLEW_4V_NS = 4,
            SLEW_5V_NS = 5,
            SLEW_6V_NS = 6,
            SLEW_MAXV_NS = 7
        </enum>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_slew_rate_dq_dqs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_SLEW_RATE_DQ_DQS_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Slew Rates that can be selected during timing adjustments.
            The fastest rate is the LSB
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_slew_rate_dq_dqs_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_SLEW_RATE_CLK_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Slew Rates that can be selected during timing adjustments.
            The fastest rate is the LSB
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_slew_rate_clk_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_SLEW_RATE_SPCKE_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Slew Rates that can be selected during timing adjustments.
            The fastest rate is the LSB
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_slew_rate_spcke_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_SLEW_RATE_ADDR_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Slew Rates that can be selected during timing adjustments.
            The fastest rate is the LSB
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_slew_rate_addr_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_SLEW_RATE_CNTL_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Slew Rates that can be selected during timing adjustments.
            The fastest rate is the LSB
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_slew_rate_cntl_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_RD_VREF</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Centaur Read Vref.
            Used in various locations and comes from the MT keyword of the VPD or is computed in mss_eff_cnfg_termination.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Creator: VPD(MT) or mss_eff_cnfg_termination
            consumer: various.C and initfiles
            firmware notes: none
            This is the nominal value
        </description>
        <valueType>uint32</valueType>
        <enum>
            VDD40375 = 40375,
            VDD41750 = 41750,
            VDD43125 = 43125,
            VDD44500 = 44500,
            VDD45875 = 45875,
            VDD47250 = 47250,
            VDD48625 = 48625,
            VDD50000 = 50000,
            VDD51375 = 51375,
            VDD52750 = 52750,
            VDD54125 = 54125,
            VDD55500 = 55500,
            VDD56875 = 56875,
            VDD58250 = 58250,
            VDD59625 = 59625,
            VDD61000 = 61000,
            VDD60375 = 60375,
            VDD61750 = 61750,
            VDD63125 = 63125,
            VDD64500 = 64500,
            VDD65875 = 65875,
            VDD67250 = 67250,
            VDD68625 = 68625,
            VDD70000 = 70000,
            VDD71375 = 71375,
            VDD72750 = 72750,
            VDD74125 = 74125,
            VDD75500 = 75500,
            VDD76875 = 76875,
            VDD78250 = 78250,
            VDD79625 = 79625,
            VDD81000 = 81000
         </enum>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_rd_vref</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CEN_RD_VREF_SCHMOO</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Enables for which VREF value can be used in timing adjustments.
            The highest voltage corresponds to the LSB
        </description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cen_rd_vref_schmoo</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_SIZE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DIMM Size.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dimm_size</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TRCD</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RAS to CAS Delay.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_trcd</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TRRD</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Row ACT to Row ACT Delay.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_trrd</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TRP</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Row Precharge Delay.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_trp</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TRAS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            ACT to Precharge Delay.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_tras</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TRC</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            ACT to ACT/Refresh Delay.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_trc</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TWTR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Internal Write to Read Delay.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_twtr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TRTP</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Internal Read to Precharge Delay.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_trtp</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TFAW</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Four ACT Window Delay.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_tfaw</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_BL</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Burst Length.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>BL8 = 0, OTF = 1, BC4 = 2</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessorName>eff_dram_burst_length</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_CL</id>
        <!-- P8 MBA level information, is this the right target? AAM -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            CAS Latency.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 </array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_cas_latency</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_AL</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Additive Latency.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, CL_MINUS_1 = 1, CL_MINUS_2 = 2</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_al</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_CWL</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            CAS Write Latency.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_cwl</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_RBT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Read Burst Type.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>SEQUENTIAL = 0, INTERLEAVE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_read_burst_type</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TM</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Test Mode.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>NORMAL= 0, TEST = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_tm</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_DLL_RESET</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DLL Reset.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>NO = 0, YES = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_dll_reset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_WR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Write Recovery.
            Used in various locations and is computed in mss_eff_cnfg_timing.
            Can be overwritten by ODM vendofrs if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg_timing
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_write_recovery</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_DLL_PPD</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DLL Precharge PD.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>SLOWEXIT = 0, FASTEXIT = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_dll_ppd</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_DLL_ENABLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DLL Enable.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>ENABLE = 0, DISABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_dll_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TDQS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            TDQS.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_tdqs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_WR_LVL_ENABLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Write Level Enable.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_wr_lvl_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_OUTPUT_BUFFER</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DRAM Qoff.
            Enables or disables DRAM output.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none</description>
        <valueType>uint8</valueType>
        <enum>ENABLE = 0, DISABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_output_buffer</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_PASR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Partial Array Self-Refresh.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>
            FULL = 0,
            FIRST_HALF = 1,
            FIRST_QUARTER = 2,
            FIRST_EIGHTH = 3,
            LAST_THREE_FOURTH = 4,
            LAST_HALF = 5,
            LAST_QUARTER = 6,
            LAST_EIGHTH = 7
        </enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_pasr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_ASR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Auto Self-Refresh.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>SRT = 0, ASR = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_asr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_SRT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Self-Refresh Temperature Range.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>NORMAL = 0, EXTEND = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_srt</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_MPR_LOC</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Multi Purpose Register Location.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_mpr_loc</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_MPR_MODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Multi Purpose Register Mode.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_mpr_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC00</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            F0RC00: Global Features Control Word.For normal operation, output inversion is always enabled.
            For DIMM vendor test purpose, output inversion can be disabled.
            When disabled, register tPDM is not guaranteed to be met.
            NOTE: Default value - 0x00. Values Range from 0-8.
            00 - Normal Operation; 01 - Output Inversion Disabled; 02 - Weak Drive Enabled; 04 - A outputs disabled; 08 - B outputs disabled; So on.
            No need to calculate; User can override with desired experimental value.
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc00</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC01</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            F0RC01 - Clock Driver Enable Control Word.1. Output clocks may be individually turned on or off to conserve power.
            The system must read the module SPD to determine which clock outputs are used by the module.
            The PLL remains locked on CK_t/CK_c unless the system stops the clock inputs to the DDR4RCD02 to enter the lowest power mode.
            Default value - 0x00. Values Range from 0-8. No need to calculate; User can override with desired experimental value.
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc01</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC02</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            F0RC02: Timing and IBT Control Word; Default value - 0x00.
            Values Range from 0-8. No need to calculate;
            User can override with desired experimental value.
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc02</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC03</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            F0RC03 - CA and CS Signals Driver Characteristics Control Word;
            Default value - 0x05 (Moderate Drive). Values Range from 00 to 0F. Has to be picked up from SPD byte 137, 1st Nibble for CS and CA.
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc03</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC04</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            F0RC04 - ODT and CKE Signals Driver Characteristics Control Word;
            Default value - 0x05 (Moderate Drive).
            Values Range from 00 to 0F. Has to be picked up from SPD byte 137, 2nd Nibble for ODT and CKE.
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc04</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC05</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            F0RC05 - Clock Driver Characteristics Control Word;
            Default value - 0x05 (Moderate Drive).
            Values Range from 00 to 0F. Has to be picked up from SPD byte 138, 2nd Nibble for CK.
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc05</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC06_07</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            F0RC06: Command Space Control Word definition;
            Default value - 0xF0 (NOP). Values Range from 00 to F0. F0RC07 not used. RDIMM
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc67</mssAccessorName>
        </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC08</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            F0RC06: Command Space Control Word definition;
            Default value - 0x03. Values Range from 00 to 08 decimal.
            Check the stack height and calculate dynamically;
            00 = Stack height_8; 01 = Stack height_4;
            02 = Stack height_2;
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc08</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC09</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC06: Command Space Control Word definition;  Default value - 0xF0 (NOP). Values Range from 00 to F0. No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc09</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC10</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>RDIMM Operating Speed;  Read from ATTR_MSS_FREQ; Default value - 00. Values Range from 00 to 09. No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc10</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC11</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Operating Voltage VDD and VrefCA Source Control Word; Read from ATTR_MSS_VOLT. Default value - 14. Values Range from 00 to 15 decimal.  No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc11</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC12</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC0C - Training Control Word; Default value - 00. Values Range from 00 to 07 decimal.No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc12</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC13</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC0D - DIMM Configuration Control Word; Default value - 0B. Values Range from 00 to 15 decimal. Dynamically calculated using 4 bits[0:3] Bit 0 - Address Mirroring; Bit 1 - Rdimm(1)/Lrdimm (0) ; Bit 2 - N/A ; Bit 3 - CS Mode (Direct / Quad CS mode etc);
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc13</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC14</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC0E - Parity Control Word;  Default value - 00. Check from ATTR_EFF_CA_PARITY and assign; Values Range from 00 to 0F.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc14</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC15</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC0F - Command Latency Adder Control Word;  Default value - 04. Values Range from 00 to 04. No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc15</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_1x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC1x - Internal VrefCA Control Word; Default value - 00. Values Range from 00 to 3F.No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc1x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_2x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC2x: I2C Bus Control Word; Default value - 00. Values Range from 00 to FF.No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc2x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_3x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC3x - Fine Granularity RDIMM Operating Speed;  Default value = (Operating Freq - 1250)/20. Values Range from 00 to 61 Hex.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc3x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_4x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC4x: CW Source Selection Control Word; Default value - 00. Values Range from 00 to FF. No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
       <valueType>uint8</valueType>
       <writeable/>
       <odmVisable/>
       <odmChangeable/>
       <array> 2 2</array>
       <mssAccessorName>eff_dimm_ddr4_rc4x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_5x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC5x: CW Destination Selection and Write/Read Additional QxODT[1:0] Signal High; Default value - 00. Values Range from 00 to FF. No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc5x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_6x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC6x: CW Data Control Word;  Default value - 00. Values Range from 00 to FF.No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc6x</mssAccessorName>
    </attribute>

    <attribute>
       <id>ATTR_EFF_DIMM_DDR4_RC_7x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC7x: IBT Control Word; Default value - 00. Values Range from 00 to FF.No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc7x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_8x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC8x: ODT Input Buffer/IBT, QxODT Output Buffer and Timing Control Word;  Default value - 00. Values Range from 00 to FF. No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc8x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_9x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RC9x1: QxODT[1:0] Write Pattern Control Word; Default value - 00. Values Range from 00 to FF.No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rc9x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_Ax</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RCAx1: QxODT[1:0] Read Pattern Control Word; Default value - 00. Values Range from 00 to FF. No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rcax</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_RC_Bx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0RCBx: IBT and MRS Snoop Control Word;  Default value - 07. Values Range from 00 to FF. No need to calculate; User can override with desired experimental value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessorName>eff_dimm_ddr4_rcbx</mssAccessorName>
    </attribute>


    <attribute>
        <id>ATTR_EFF_DIMM_RCD_IBT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>RCD IBT. Used in mss_dram_init and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
        creator: mss_eff_cnfg
        consumer: mss_dram_init
        firmware notes: none
        </description>
        <valueType>uint32</valueType>
        <enum>IBT_OFF = 0, IBT_100 = 100, IBT_150 = 150, IBT_200 = 200, IBT_300 = 300</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dimm_rcd_ibt</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_RCD_MIRROR_MODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RCD Mirroring. Used in mss_dram_init and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: mss_dram_init
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>OFF = 0, ON = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dimm_rcd_mirror_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_MODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo mode to use during draminit_train_adv.</description>
        <valueType>uint8</valueType>
        <enum>FAST = 0, ONE_SLOW = 1, QUARTER_SLOW = 2, HALF_SLOW = 3, FULL_SLOW = 4, ONE_CHAR = 5, QUARTER_CHAR = 6, HALF_CHAR = 7, FULL_CHAR = 8</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_ADDR_MODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo mode to use during draminit_train_adv</description>
        <valueType>uint8</valueType>
        <enum>FEW_ADDR= 0, QUARTER_ADDR = 1, HALF_ADDR = 2, FULL_ADDR = 3</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_addr_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_TEST_VALID</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo test to run during draminit_train_adv. Bit wise.</description>
        <valueType>uint8</valueType>
        <enum>
            NONE = 0x00,
            MCBIST = 0x01,
            WR_EYE = 0x02,
            RD_EYE = 0x04,
            WR_DQS = 0x08,
            RD_DQS = 0x10
        </enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_test_valid</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_PARAM_VALID</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo parameters to use during draminit_train_adv. Bit wise.</description>
        <valueType>uint8</valueType>
        <enum>
            PARAM_NONE = 0x00,
             DELAY_REG = 0x01,
             DRV_IMP = 0x02,
             SLEW_RATE = 0x04,
             WR_VREF = 0x08,
             RD_VREF = 0x10,
             RCV_IMP = 0x20
         </enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_param_valid</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_WR_EYE_MIN_MARGIN</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_wr_eye_min_margin</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_RD_EYE_MIN_MARGIN</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_rd_eye_min_margin</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_DQS_CLK_MIN_MARGIN</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_dqs_clk_min_margin</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_RD_GATE_MIN_MARGIN</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_rd_gate_min_margin</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SCHMOO_ADDR_CMD_MIN_MARGIN</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_schmoo_addr_cmd_min_margin</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_MEMCAL_INTERVAL</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the memcal interval in clocks.</description>
        <valueType>uint32</valueType>
        <enum>DISABLE = 0</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_memcal_interval</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_ZQCAL_INTERVAL</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the zqcal interval in clocks.</description>
        <valueType>uint32</valueType>
        <enum>DISABLE = 0</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_zqcal_interval</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_IBM_TYPE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the memory topology type. See centaur workbook.</description>
        <valueType>uint8</valueType>
        <enum>
            UNDEFINED = 0,
            TYPE_1A = 1,
            TYPE_1B = 2,
            TYPE_1C = 3,
            TYPE_1D = 4,
            TYPE_2A = 5,
            TYPE_2B = 6,
            TYPE_2C = 7,
            TYPE_3A = 8,
            TYPE_3B = 9,
            TYPE_3C = 10,
            TYPE_4A = 11,
            TYPE_4B = 12,
            TYPE_4C = 13,
            TYPE_5A = 14,
            TYPE_5B = 15,
            TYPE_5C = 16,
            TYPE_5D = 17,
            TYPE_6A = 18,
            TYPE_6B = 19,
            TYPE_6C = 20,
            TYPE_7A = 21,
            TYPE_7B = 22,
            TYPE_7C = 23,
            TYPE_8A = 24,
            TYPE_8B = 25,
            TYPE_8C = 26
        </enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_ibm_type</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_NUM_DROPS_PER_PORT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the number of DIMM dimensions that are valid per port. </description>
        <valueType>uint8</valueType>
        <enum>EMPTY = 0, SINGLE = 1, DUAL = 2</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_num_drops_per_port</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_NUM_MASTER_RANKS_PER_DIMM</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the number of master ranks per DIMM.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_num_master_ranks_per_dimm</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_NUM_PACKAGES_PER_RANK</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the number of DRAM packages per rank.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_num_packages_per_rank</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_PRIM_DIE_COUNT</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Specifies the number of DRAM dies per package.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_prim_die_count</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_MEM_THROTTLE_NUMERATOR_PER_PORT</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>This is the throttle numerator setting for cfg_nm_n_per_port</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessorName>mem_throttle_numerator_per_port</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_MEM_THROTTLE_DENOMINATOR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>This is the throttle denominator setting for cfg_nm_m creator: mss_eff_cnfg consumer: mc_config  firmware notes: none</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mem_throttle_denominator</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_MEM_THROTTLE_NUMERATOR_PER_SLOT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>This is the throttle numerator setting for cfg_nm_n_per_slot</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessorName>mem_throttle_numerator_per_slot</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_MEM_WATT_TARGET</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Total memory power limit in cW for the dimms on the memory channel pair. Used to compute the throttles on the channel and/or dimms creator: unknown consumer: mss_eff_config firmware notes: none</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mem_watt_target</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_POWER_SLOPE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Master Power slope value for dimm</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>power_slope</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_POWER_SLOPE2</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Supplier Power slope value for dimm</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>power_slope2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_POWER_INT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Master Power intercept value for dimm</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>power_int</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_POWER_INT2</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Supplier Power intercept value for dimm</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>power_int2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DIMM_MAXBANDWIDTH_GBS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>DIMM Max Bandwidth in GBs output from thermal procedures</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>dimm_maxbandwidth_gbs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DIMM_MAXBANDWIDTH_MRS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>DIMM Max Bandwidth in MRs output from thermal procedures</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>dimm_maxbandwidth_mrs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_CHANNEL_PAIR_MAXBANDWIDTH_GBS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Channel Pair Max Bandwidth in GBs output from thermal procedures</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>channel_pair_maxbandwidth_gbs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_CHANNEL_PAIR_MAXBANDWIDTH_MRS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Channel Pair Max Bandwidth MRs output from thermal procedures</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>channel_pair_maxbandwidth_mrs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DIMM_MAXPOWER</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>DIMM Max Power output from thermal procedures</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>dimm_maxpower</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_CHANNEL_PAIR_MAXPOWER</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Channel Pair Max Power output from thermal procedures</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>channel_pair_maxpower</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_RUNTIME_MEM_THROTTLE_NUMERATOR_PER_PORT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Runtime throttle numerator setting for cfg_nm_n_per_port</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>runtime_mem_throttle_numerator_per_port</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_RUNTIME_MEM_THROTTLE_DENOMINATOR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Runtime throttle denominator setting for cfg_nm_m</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>runtime_mem_throttle_denominator</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_RUNTIME_MEM_THROTTLE_NUMERATOR_PER_SLOT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Runtime throttle numerator setting for cfg_nm_n_per_slot</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>runtime_mem_throttle_numerator_per_slot</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_SAFEMODE_MEM_THROTTLE_NUMERATOR_PER_PORT</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook safe mode throttle value for numerator cfg_nm_n_per_port</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <persistRuntime/>
        <mssAccessorName>mrw_safemode_mem_throttle_numerator_per_port</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_SAFEMODE_MEM_THROTTLE_NUMERATOR_PER_SLOT</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook safe mode throttle value for numerator cfg_nm_n_per_slot</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <persistRuntime/>
        <mssAccessorName>mrw_safemode_mem_throttle_numerator_per_slot</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_THERMAL_MEMORY_POWER_LIMIT</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook Thermal Memory Power Limit</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_thermal_memory_power_limit</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_MBA_ADDR_INTERLEAVE_BIT</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>
            This dial sets the Centaur address bits used to interleave addresses between MBA01 and MBA23.
            Valid values are 23 through 32.  See Centaur Spec Chapter 5 for details.
            Used in the intifile. Will be obsolete when the MSS_DERIVED_MBA_ADDR_INTERLEAVE_BIT is set
            This attribute will only be found in a Tuelta system.
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>mba_addr_interleave_bit</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DERIVED_MBA_ADDR_INTERLEAVE_BIT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            This dial sets the Centaur address bits used to interleave addresses between MBA01 and MBA23.
            Valid values are 23 through 32.  See Centaur Spec Chapter 5 for details.
            Used in the intifile
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>derived_mba_addr_interleave_bit</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_MBA_CACHELINE_INTERLEAVE_MODE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>
            Value of on or off.  On is 256 bit interleave.
            Off, the translation is on 128  bit interleave mode.
            See centaur workbook chapter 5.
            Will be obsolete when MSS_DERIVED_MBA_CACHELINE_INTERLEAVE_MODE is set.
            This attribute will only be alive in the Tuelta system.
        </description>
        <valueType>uint8</valueType>
        <enum>OFF = 0, ON = 1</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>mba_cacheline_interleave_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DERIVED_MBA_CACHELINE_INTERLEAVE_MODE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Value of on or off.  On is 256 bit interleave.
            Off, the translation is on 128  bit interleave mode.
            See centaur workbook chapter 5.
        </description>
        <valueType>uint8</valueType>
        <enum>OFF = 0, ON = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>derived_mba_cacheline_interleave_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_MBA_CACHELINE_INTERLEAVE_MODE_CONTROL</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>At a system level, this attribute controls if interleaving is required, requested or never.  The MRW.</description>
        <valueType>uint8</valueType>
        <enum>NEVER = 0, REQUIRED = 1, REQUESTED = 2</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>mrw_mba_cacheline_interleave_mode_control</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_CACHE_ENABLE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Reflects the functionality of the L4 Cache.
            Determines if the L4 is enabled or not.
            See chapter 6 of the Centaur Workbook.
            On means the full cache is enabled.
            HALF_A (EVEN) means only A is enabled and HALF_B (ODD) means only B is enabled.
            For DD1X, the values of UNK_OFF, UNK_ON, UNK_HALF_A and UNK_HALFB were added because
            early parts did not have the fuses blown correctly, so the cache repairs may not have worked.
            This value is set by the platform which can get the chips value by running the mss_cen_get_ecid function.

            Note: Cronus and Firmware plus our initfiles do not really support any of the UNK values.
            It is the responsibility of the platform to map the UNK values to the appropriate value of OFF/ON/HALF_A/HALF_B
        </description>
        <valueType>uint8</valueType>
        <enum>OFF = 0, ON = 1, HALF_A = 3, HALF_B = 5, UNK_OFF = 8, UNK_ON = 9, UNK_HALF_A = 0xB, UNK_HALF_B = 0xD</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>cache_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_PREFETCH_ENABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Value of on or off.  Determines if prefetching enabled or not. See chapter 7 of the Centaur Workbook.</description>
        <valueType>uint8</valueType>
        <enum>OFF = 0, ON = 1</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>prefetch_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_CLEANER_ENABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>
            Value of on or off.
            Determines if the cleaner of the L4 cache (write modified entries to memory on idle cycles)
            enabled or not. See chapter 7 of the Centaur Workbook.
        </description>
        <valueType>uint8</valueType>
        <enum>OFF = 0, ON = 1</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>cleaner_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_EFF_DIMM_FUNCTIONAL_VECTOR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            A bit vector (per Dean's request) specifying if a DIMM is functional.
            DIMM attributes, such as SIZE, are qualified by this bit vector.
            The attribute ANDed 0x80 means port 0, DIMM 0 is functional, 0x40 means port 0, DIMM 1 is functional.
            0x08 means port 1, DIMM 0 is functional and 0x04 means port 1 DIMM 1 is functional.
            A fully populated system would have the value of 0xCC.
            Used in various locations and is computed in mss_eff_cnfg.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
            Each memory channel will have a value. creator: mss_eff_cnfg consumer: various firmware notes: none
            This factors in functionality
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dimm_functional_vector</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_LPASR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Low Power Auto Self-Refresh.
            This is for DDR4 MRS2.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>MANUAL_NORMAL =0, MANUAL_REDUCED = 1, MANUAL_EXTENDED = 2, ASR = 3</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_lpasr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_MPR_PAGE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            MPR Page Selection This is for DDR4 MRS3.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>PG0 = 0, PG1 = 1, PG2 = 2, PG3 = 3</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_mpr_page</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_GEARDOWN_MODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Gear Down Mode.
            This is for DDR4 MRS3.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>HALF =0, QUARTER=1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_geardown_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_PER_DRAM_ACCESS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Per DRAM accessibility.
            This is for DDR4 MRS3.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_per_dram_access</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_TEMP_READOUT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Temperature sensor readout.
            This is for DDR4 MRS3.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_temp_readout</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CRC_WR_LATENCY</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            write latency for CRC and DM. This is for DDR4 MRS3.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>4NCK = 4, 5NCK = 5, 6NCK = 6</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_crc_wr_latency</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_MPR_RD_FORMAT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            MPR READ FORMAT.
            This is for DDR4 MRS3.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>SERIAL = 0, PARALLEL = 1, STAGGERED = 2, RESERVED_TEMP= 3</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_mpr_rd_format</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_MAX_POWERDOWN_MODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Max Power down mode.
            This is for DDR4 MRS4.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_max_powerdown_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_TEMP_REF_MODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Temp controlled ref mode. This is for DDR4 MRS4.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_temp_ref_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_INT_VREF_MON</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Internal Vref Monitor.
            This is for DDR4 MRS4.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_int_vref_mon</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CS_CMD_LATENCY</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            CS to CMD/ADDR Latency.
            This is for DDR4 MRS4.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
    </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, 3CYC = 3, 4CYC = 4, 5CYC = 5, 6CYC = 6, 8CYC = 8</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_cs_cmd_latency</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_SELF_REF_ABORT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Self Refresh Abort.
            This is for DDR4 MRS4.
            Computed in mss_eff_cnfg.
            Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_self_ref_abort</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_RD_PREAMBLE_TRAIN</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Read Pre amble Training Mode. This is for DDR4 MRS4.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_rd_preamble_train</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_RD_PREAMBLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Read Pre amble. This is for DDR4 MRS4.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>1NCLK = 1, 2NCLK = 2</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_rd_preamble</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_WR_PREAMBLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Write Pre amble. This is for DDR4 MRS4.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>1NCLK = 1, 2NCLK = 2</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_wr_preamble</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CA_PARITY_LATENCY</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            C/A Parity Latency Mode. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, PL4 = 4, PL5 = 5, PL6 = 6, PL8 = 8</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_ca_parity_latency</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CRC_ERROR_CLEAR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            CRC Error Clear. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>CLEAR = 0, ERROR = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_crc_error_clear</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CA_PARITY_ERROR_STATUS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            C/A Parity Error Status. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>CLEAR = 0, ERROR = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_ca_parity_error_status</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_ODT_INPUT_BUFF</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            ODT Input Buffer during power down. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DEACTIVATED = 0, ACTIVATED = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_odt_input_buff</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_RTT_PARK</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            RTT_Park value. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, 60OHM = 60, 120OHM = 120, 40OHM = 40, 240OHM = 240, 48OHM = 48, 80OHM = 80, 34OHM = 34</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2 4</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_rtt_park</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_CA_PARITY</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            CA Parity Persistance Error. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_ca_parity</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DATA_MASK</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Data Mask. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_data_mask</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_WRITE_DBI</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Write DBI. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_write_dbi</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_READ_DBI</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Read DBI. This is for DDR4 MRS5.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_read_dbi</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VREF_DQ_TRAIN_VALUE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            vrefdq_train value. This is for DDR4 MRS6.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            Creator: mss_eff_cnfg
            Consumer:various
            Firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2 4</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>vref_dq_train_value</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VREF_DQ_TRAIN_RANGE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            vrefdq_train range. This is for DDR4 MRS6.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            Creator: mss_eff_cnfg
            Consumer:various
            Firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>RANGE1 = 0, RANGE2 = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2 4</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>vref_dq_train_range</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VREF_DQ_TRAIN_ENABLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            vrefdq_train enable. This is for DDR4 MRS6.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            Creator: mss_eff_cnfg
            Consumer:various
            Firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2 4</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>vref_dq_train_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_TCCD_L</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            tccd_l. This is for DDR4 MRS6.
            Computed in mss_eff_cnfg. Each memory channel will have a value.
            Creator: mss_eff_cnfg
            Consumer:various
            Firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>4NCK = 4, 5NCK = 5, 6NCK = 6, 7NCK = 7, 8NCK = 8</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>tccd_l</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_WRITE_CRC</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Write CRC control for DDR4 in MRS2.
            Set in mss_eff_cnfg.
            Each memory channel will have a value.
            Creator: mss_eff_cnfg
            Consumer:various
            Firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, ENABLE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_write_crc</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_CAL_STEP_ENABLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            A bit vector denoting valid cal steps to run (0 is left most bit)
            [0] EXT_ZQCAL
            [1] WR_LEVEL
            [2] DQS_ALIGN
            [3] RDCLK_ALIGN
            [4] READ_CTR
            [5] READ_CTR_2D_VREF
            [6] WRITE_CTR
            [7] WRITE_CTR_2D_VREF
            [8] COARSE_WR
            [9] COARSE_RD
            [10]:[15] Reserved for future use
            COARSE_WR and COARSE_RD  will be consumed together to form COARSE_LVL.
        </description>
        <valueType>uint16</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>cal_step_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DRAMINIT_RESET_DISABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>A disable switch for resetting the phy delay values at the beginning of calling mss_draminit_training.</description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 1, ENABLE = 0</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <persistRuntime/>
        <mssAccessorName>draminit_reset_disable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_SLEW_RATE_DATA</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            The 4 bit result of running the slew calibration algorithm at various rates and impedances.
            The first dimension is port, the second is the impedance of 24,30,34, and 40 Ohms.
            The 3rd dimension is the rate: 3,4,5 or 6 V/ns.
            Computed and sent to the correct data blocks in phy_reset.
            Also used in advanced training
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 4 4</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>slew_rate_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_SLEW_RATE_ADR</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            The 4 bit result of running the slew calibration algorithm at various rates and impedances.
            The first dimension is the port.  The second is the impedance of 15, 20, 30 and 40 Ohms.
            The 3rd dimension is the rate:3, 4,5 or 6 V/ns.
            Computed and sent to the correct data blocks in phy_reset.
            Also used in advanced training
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 4 4</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>slew_rate_adr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_ECID</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Bits 0 to 63 of the ECID in array entry 0 and bits 64 to 127 in ECID array entry 1
            Created from running the mss_get_cen_ecid.C
            Firmware shares some code with the processor, so the attribute is named so they can point at a target and have common function.
        </description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2</array>
        <mssAccessorName>ecid</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_ALLOW_SINGLE_PORT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            When this value is true, then mss_eff config will allow a single port to have one dimm and will allow ports to have different sizes.
            Used in eff_config
        </description>
        <valueType>uint8</valueType>
        <enum>FALSE = 0, TRUE = 1</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>allow_single_port</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DQS_SWIZZLE_TYPE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DQS Swizzle type is set by the platform to describe what kind of DQS connection is being used for register acceses.
            Type 0 is normal, type 1 is for systems with wiring like glacier 1, type 2 is for Pallmeto.
            Additional types maybe defined if new boards have even different DQS swizzle features
        </description>
        <valueType>uint8</valueType>
        <enum>NORMAL_TYPE_0 = 0, GLACIER_TYPE_1 = 1, ISDIMM_TYPE2 = 2</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>dqs_swizzle_type</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_PSRO</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Set by the centaur mss_get_cen_ecid function used diagnostic and chip characterization reporting</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>psro</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_NWELL_MISPLACEMENT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Set by the platform depending on DD1 vs DD1.01.  If true, then SI settings affected by the NWELL problem are adjusted.  Used in eff_config</description>
        <valueType>uint8</valueType>
        <enum>FALSE = 0, TRUE = 1</enum>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>nwell_misplacement</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_BLUEWATERFALL_BROKEN</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Set by the platform depending on DD1.0X vs DD1.03 or newer.  If true, then draminit_train will modify dqs_clk_ps and gate to work around the issue. Set in get ecid which determines if we are at 1.03</description>
        <valueType>uint8</valueType>
        <enum>FALSE = 0, TRUE = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>bluewaterfall_broken</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_PATTERN</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Enables mcbist data pattern selection.</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_pattern</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_WRITE_DATA</id>
        <targetType>TARGET_TYPE_MCBIST</targetType>
        <description>Define mcbist data for writing</description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>mcbist_write_data</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_TEST_TYPE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Enables mcbist test type selection.</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_test_type</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_PRINTING_DISABLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>MCBIST support for printing</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_printing_disable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_DATA_ENABLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>MCBIST support for enabling data</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_data_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_USER_RANK</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>MCBIST support for rank selection</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_user_rank</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_USER_BANK</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>MCBIST support for bank selection</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_user_bank</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_SCHMOO_MULTIPLE_SETUP_CALL</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>MCBIST for multiple setup</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>schmoo_multiple_setup_call</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_BUFFER_LATENCY</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Additional buffer latency in the case of RDIMMs and LRDIMMs.
            It is expected that this value will come from the VPD
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_buffer_latency</mssAccessorName>
    </attribute>

    <attribute>
        <id> ATTR_EFF_LRDIMM_WORD_X</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Additional buffer control word for LRDIMM building of the BCW</description>
        <valueType>uint64</valueType>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName> eff_lrdimm_word_x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_LRDIMM_MR12_REG</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            LRDIMM MR1,2 register.
            DRAM Rtt_WR for all ranks, DRAM Rtt_Nom for ranks 0 and 1, DRAM driver impedance for all ranks.
            Eff config should set this up.
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>lrdimm_mr12_reg</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_LRDIMM_ADDITIONAL_CNTL_WORDS</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            LRDIMM additional RCD control words as set by DIMM SPD:
            F[3,4]RC10, F[3,4]RC11, F[5,6]RC10, F[5,6]RC11, F[7,8]RC10, F[7,8]RC11, F[9,10]RC10, F[9,10]RC11,
            F[1]RC8, F[3]RC9, F[3]RC8, F[1]RC11, F[1]RC12, F[1]RC13, F[1]RC14, F[1]RC15.
            Eff config should set this up
        </description>
        <valueType>uint64</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>lrdimm_additional_cntl_words</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_LRDIMM_RANK_MULT_MODE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>LRDIMM rank multiplication mode.
        Will be set at an MBA level with one policy to be used</description>
        <valueType>uint8</valueType>
        <enum>NORMAL = 0, 2X_MULT = 2, 4X_MULT = 4</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>lrdimm_rank_mult_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_THROTTLE_CONTROL_RAS_WEIGHT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>RAS weight to use for memory throttle control - set in thermal procedures</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>throttle_control_ras_weight</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_THROTTLE_CONTROL_CAS_WEIGHT</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>CAS weight to use for memory throttle control - set in thermal procedures</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>throttle_control_cas_weight</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_RANDOM_SEED_VALUE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Controls the MCBIST engine in the centaur chip.  The value will be set in mss_eff_config_shmoo.</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_random_seed_value</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MCBIST_RANDOM_SEED_TYPE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Controls the MCBIST engine in the centaur chip.  The value will be set in mss_eff_config_shmoo.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>mcbist_random_seed_type</mssAccessorName>
    </attribute>

    <attribute>
        <id> ATTR_MCBIST_DDR4_PDA_ENABLE</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Controls PDA train enable or PBA. 00 - Disable; 01 - PDA; 02 - PBA(Lrdimm)</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName> mcbist_ddr4_pda_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_DIMM_POWER_CURVE_PERCENT_UPLIFT</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook DIMM power curve percent uplift for this system at max utilization.</description>
        <valueType>uint8</valueType>
        <platInit/>
        <odmVisable/>
        <persistRuntime/>
        <mssAccessorName>mrw_dimm_power_curve_percent_uplift</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_DIMM_POWER_CURVE_PERCENT_UPLIFT_IDLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook DIMM power curve percent uplift for this system at idle utilization.</description>
        <valueType>uint8</valueType>
        <platInit/>
        <odmVisable/>
        <persistRuntime/>
        <mssAccessorName>mrw_dimm_power_curve_percent_uplift_idle</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_MEM_THROTTLE_DENOMINATOR</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook throttle value for denominator cfg_nm_m</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <persistRuntime/>
        <mssAccessorName>mrw_mem_throttle_denominator</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_INIT_STATE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>How far into the ipl istep the centaur has been brought up</description>
        <valueType>uint8</valueType>
        <enum>COLD = 0, CLOCKS_ON = 1, DMI_ACTIVE = 2</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>init_state</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_MAX_DRAM_DATABUS_UTIL</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>
            Machine Readable Workbook value for maximum dram data bus utilization in centi percent (c%).
            Used to determine memory throttle values.
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <persistRuntime/>
        <mssAccessorName>mrw_max_dram_databus_util</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_EFF_VPD_VERSION</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
        The lowest VPD Version of the DIMMs attached to the MBA. Comes directly (in ASCII) of the VINI VZ keyword
    </description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_vpd_version</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_NEST_CAPABLE_FREQUENCIES</id>
        <targetType>TARGET_TYPE_MCBIST</targetType>
        <description>
            The NEST frequencies the memory chip can run at computed by the mss_freq.
            The possibilities are ORed together.  The platform uses these value and
            the MRW to determine what frequency to boot the fabric (nest) if it can.
            There are two values: 8G and 9.6G
        </description>
        <valueType>uint64</valueType>
        <enum>8_0G = 1, 9_6G = 2</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>nest_capable_frequencies</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_STRICT_MBA_PLUG_RULE_CHECKING</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>
           The MRW for a system should set this to TRUE for systems that must obey plug rules.
           Lab environments should default this to off and allow the user to override using normal methods to test.
        </description>
        <valueType>uint8</valueType>
        <enum>FALSE = 0, TRUE = 1</enum>
        <platInit/>
        <mssAccessorName>mrw_strict_mba_plug_rule_checking</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_CDIMM_MASTER_I2C_TEMP_SENSOR_ENABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Used for Custom DIMMs to not enable the reading of the dimm temperature sensor on the master i2c bus</description>
        <valueType>uint8</valueType>
        <enum>OFF = 0, ON = 1</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_cdimm_master_i2c_temp_sensor_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_CDIMM_SPARE_I2C_TEMP_SENSOR_ENABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Used for Custom DIMMs to not enable the reading of the dimm temperature sensor on the spare i2c bus</description>
        <valueType>uint8</valueType>
        <enum>OFF = 0, ON = 1</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_cdimm_spare_i2c_temp_sensor_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_AVDD_OFFSET_DISABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Used for to determine whether to apply an offset to AVDD. Supplied by MRW.</description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 1, ENABLE = 0</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>avdd_offset_disable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VDD_OFFSET_DISABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Used for to determine whether to apply an offset to VDD. Supplied by MRW.</description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 1, ENABLE = 0</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vdd_offset_disable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VCS_OFFSET_DISABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Used for to determine whether to apply an offset to VCS. Supplied by MRW.</description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 1, ENABLE = 0</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vcs_offset_disable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VPP_OFFSET_DISABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Used for to determine whether to apply an offset to VCS. Supplied by MRW.</description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 1, ENABLE = 0</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vpp_offset_disable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VDDR_OFFSET_DISABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Used for to determine whether to apply an offset to VDDR. Supplied by MRW.</description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 1, ENABLE = 0</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vddr_offset_disable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_AVDD_SLOPE_ACTIVE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Slope value used to determine the dynamic VID AVDD adjustment for ACTIVE parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>avdd_slope_active</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_AVDD_SLOPE_INACTIVE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Slope value used to determine the dynamic VID AVDD adjustment for INACTIVE parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>avdd_slope_inactive</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_AVDD_SLOPE_INTERCEPT</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Intercept value used to determine the dynamic VID AVDD adjustment for all parts. In mV.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>avdd_slope_intercept</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VDD_SLOPE_ACTIVE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Slope value used to determine the dynamic VID VDD adjustment for ACTIVE parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vdd_slope_active</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VDD_SLOPE_INACTIVE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Slope value used to determine the dynamic VID VDD adjustment for INACTIVE parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vdd_slope_inactive</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VDD_SLOPE_INTERCEPT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Intercept value used to determine the dynamic VID VDD adjustment for all parts. In mV.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vdd_slope_intercept</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VCS_SLOPE_ACTIVE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Slope value used to determine the dynamic VID VCS adjustment for ACTIVE parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vcs_slope_active</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VCS_SLOPE_INACTIVE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Slope value used to determine the dynamic VID VCS adjustment for INACTIVE parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vcs_slope_inactive</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VCS_SLOPE_INTERCEPT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Intercept value used to determine the dynamic VID VCS adjustment for all parts. In mV.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vcs_slope_intercept</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VPP_SLOPE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Slope value used to determine the dynamic VID VPP adjustment for all parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vpp_slope</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VPP_SLOPE_INTERCEPT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Intercept value used to determine the dynamic VID VPP adjustment for all parts. In mV.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vpp_slope_intercept</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DDR3_VDDR_SLOPE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Slope value used to determine the dynamic VID DDR3 VDDR adjustment for all parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>ddr3_vddr_slope</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DDR3_VDDR_INTERCEPT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Intercept value used to determine the dynamic VID DDR3 VDDR adjustment for all parts. In mV.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>ddr3_vddr_intercept</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DDR4_VDDR_SLOPE</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Slope value used to determine the dynamic VID DDR3 VDDR adjustment for all parts. In uV/Centaur.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>ddr4_vddr_slope</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DDR4_VDDR_INTERCEPT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Intercept value used to determine the dynamic VID DDR3 VDDR adjustment for all parts. In mV.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>ddr4_vddr_intercept</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VOLT_OVERRIDE</id>
        <targetType>TARGET_TYPE_MCBIST</targetType>
        <description>Possible DRAM voltage override.</description>
        <valueType>uint8</valueType>
        <enum>NONE = 0x00, VOLT_135 = 0x01, VOLT_120 = 0x02</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>volt_override</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VOLT_COMPLIANT_DIMMS</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>
            List of Voltages that are compliant with the system.
            DIMMs that do not have voltages listed in their SPD as supported are errored out.
            Procedure defined is currently 1.2V and 1.35V only.
        </description>
        <valueType>uint8</valueType>
        <enum> PROCEDURE_DEFINED = 0x00, ALL_VOLTAGES = 0x01</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>volt_compliant_dimms</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_MCS_PREFETCH_RETRY_THRESHOLD</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>
            Option to control MCS prefetch retry threshold, for performance optimization.
            This attribute controls the number of retries in the prefetch engine.
            Retry threshold available ranges from 16 to 30.
            Note: Values outside those ranges will default to 30.
            In MRW.
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>mrw_mcs_prefetch_retry_threshold</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_POWER_CONTROL_REQUESTED</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Capable power control settings. In MRW.</description>
        <valueType>uint8</valueType>
        <enum>OFF = 0x00, SLOWEXIT = 0x01, FASTEXIT = 0x02</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_power_control_requested</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_AVDD_OFFSET</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Dynamic VID offset applied to AVDD. In mV.</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>avdd_offset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VDD_OFFSET</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Dynamic VID offset applied to VDD. In mV.</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>vdd_offset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VCS_OFFSET</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Dynamic VID offset applied to VCS. In mV.</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>vcs_offset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VPP_OFFSET</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Dynamic VID offset applied to VPP. In mV.</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>vpp_offset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VDDR_OFFSET</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Dynamic VID offset applied to VDDR. In mV.</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <mssAccessorName>vddr_offset</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VDDR_OVERIDE_SPD</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Possible VDDR voltage override.</description>
        <valueType>uint8</valueType>
        <enum>NONE = 0x00, VOLT_1350 = 0x01, VOLT_1200 = 0x02</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>vddr_overide_spd</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_ISDIMMTOC4DQ</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
        ISDIMM DQ mapping that comes from QX keyword on the CDIMM VPD.
    </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>4 80</array>
        <mssAccessorName>vpd_isdimmtoc4dq</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_ISDIMMTOC4DQS</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
        ISDIMM DQQ mapping that comes from QS keyword on the CDIMM VPD.
    </description>
        <valueType>uint8</valueType>
        <platInit/>
        <array>4 20</array>
        <mssAccessorName>vpd_isdimmtoc4dqs</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_ISDIMM_POWER_CURVE_ALGORITHM_VERSION</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Version of algorithm and dependent attributes used to calculate ISDIMM power curve attributes</description>
        <valueType>uint32</valueType>
        <platInit/>
        <writeable/>
        <mssAccessorName>isdimm_power_curve_algorithm_version</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_DDR3_VDDR_MAX_LIMIT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Maximum voltage limit for the dynamic VID DDR3 VDDR voltage setpoint. In mV.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_ddr3_vddr_max_limit</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_DDR4_VDDR_MAX_LIMIT</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>Maximum voltage limit for the dynamic VID DDR4 VDDR voltage setpoint. In mV.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_ddr4_vddr_max_limit</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_MEM_SENSOR_CACHE_ADDR_MAP</id>
        <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
        <description>
            Machine Readable Workbook value detailing the wiring of the 8 dimm temperature
            sensors for non custom dimms, in DIMM A0,A1,B0,B1,C0,C1,D0,D1 order. One nibble
            per sensor where bit0 (MSB) is the i2c bus the sensor is attached to
            (0 for master, 1 for spare) and bits 1:3 are for A2,A1,A0 of the sensor i2c address (where A2 is MSB)
        </description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_mem_sensor_cache_addr_map</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_VMEM_REGULATOR_MAX_DIMM_COUNT</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Maximum number of installed DIMMs per VMEM regulator for all VMEM regulators in the system.</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <mssAccessorName>vmem_regulator_max_dimm_count</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_VMEM_REGULATOR_POWER_LIMIT_PER_DIMM_ADJ_ENABLE</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook enablement of the HWP code to adjust the VMEM regulator power limit based on number of installed DIMMs.</description>
        <valueType>uint8</valueType>
        <enum>FALSE = 0, TRUE = 1</enum>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_vmem_regulator_power_limit_per_dimm_adj_enable</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_MAX_NUMBER_DIMMS_POSSIBLE_PER_VMEM_REGULATOR</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook value for the maximum possible number of dimms that can be installed under any of the VMEM regulators.</description>
        <valueType>uint8</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_max_number_dimms_possible_per_vmem_regulator</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MRW_VMEM_REGULATOR_MEMORY_POWER_LIMIT_PER_DIMM</id>
        <targetType>TARGET_TYPE_SYSTEM</targetType>
        <description>Machine Readable Workbook VMEM regulator power limit per CDIMM assuming a full configuration. Units in cW.</description>
        <valueType>uint32</valueType>
        <platInit/>
        <odmVisable/>
        <mssAccessorName>mrw_vmem_regulator_memory_power_limit_per_dimm</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_DATABUS_UTIL_PER_MBA</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>MBA DRAM data bus utilization percent to use to determine cfg_nm_n_per_mba</description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>databus_util_per_mba</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MSS_UTIL_N_PER_MBA</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>cfg_nm_n_per_mba throttle N value that was calculated from MSS_DATABUS_UTIL_PER_MBA</description>
        <valueType>uint32</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2</array>
        <persistRuntime/>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>util_n_per_mba</mssAccessorName>
    </attribute>


    <attribute>
        <id>ATTR_EFF_DRAM_MAC</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Maximum Activate Count. Used in various locations and is computed in mss_eff_cnfg.
        creator: mss_eff_cnfg
        consumer: various
        firmware notes: none
        </description>
        <valueType>uint16</valueType>
        <enum>UNTESTED = 0, 700K = 700, 600K = 600, 500K = 500, 400K = 400, 300K = 300, 200K = 200,  UNLIMITED = 8</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_dram_mac</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_TMAW</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>Maximum Activate Window. Used in various locations and is computed in mss_eff_cnfg.
        creator: mss_eff_cnfg
        consumer: various
        firmware notes: none
        </description>
        <valueType>uint16</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_dram_tmaw</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_PPR</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Post Package Repair. Used in various locations and is evaluated in mss_eff_cnfg.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>NOT_SUPPORTED = 0, SUPPORTED = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_dram_ppr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_SOFT_PPR</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Soft Post Package Repair. Used in various locations and is evaluated in mss_eff_cnfg.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <enum>NOT_SUPPORTED = 0, SUPPORTED = 1</enum>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_dram_soft_ppr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_MR_LAYOUT_VERSION</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>layout_version</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_MR_DATA_VERSION</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>data_version</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A0</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A0
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A1</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A1
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A2</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A2
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A3</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A3
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a3</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A4</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A4
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a4</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A5</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A5
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a5</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A6</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A6
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a6</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A7</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A7
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a7</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A8</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description> Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A8
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a8</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A9</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A9
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a9</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A10</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A10
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a10</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A11</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A11
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a11</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A12</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A12
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a12</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A13</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A13
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a13</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_A17</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_A17
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_a17</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_C0</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_C0
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_c0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_C1</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_C1
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_c1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_C2</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_C2
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_c2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_BA0</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_BA0
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_ba0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_BA1</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description> Phase rotator value that comes from MR keyword on the CDIMM VPD.
         This controls the IO PHASE_ROT_ADDR_BA1
         creator:vpd
         consumer: various
         fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_ba1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_BG0</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description> Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_BG0    creator:vpd  consumer: various fw notes: </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_bg0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_ADDR_BG1</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_ADDR_BG1
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_addr_bg1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CLK0</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CLK0
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_clk0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CLK1</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CLK1
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_clk1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CMD_ACTN</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CMD_ACTN
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cmd_actn</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CMD_ADDR_WEN_A14</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description> Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CMD_ADDR_WEN_A14
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cmd_addr_wen_a14</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CMD_ADDR_CASN_A15</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CMD_ADDR_CASN_A15
            creator:vpd  consumer: various fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cmd_addr_casn_a15</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CMD_ADDR_RASN_A16</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CMD_ADDR_RASN_A16
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cmd_addr_rasn_a16</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CMD_PAR</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description> Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CMD_PAR
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cmd_par</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_CKE0</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_CKE0
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_cke0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_CKE1</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_CKE1
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_cke1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_CKE2</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_CKE2
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_cke2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_CKE3</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_CKE3
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_cke3</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_CSN0</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_CSN0
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_csn0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_CSN1</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_CSN1
            creator:vpd  consumer:
            various fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_csn1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_CSN2</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_CSN2
            creator:vpd  consumer:
            various fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_csn2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_CSN3</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_CSN3
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_csn3</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_ODT0</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_ODT0
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_odt0</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_ODT1</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description> Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_ODT1
            creator:vpd
            consumer: various
            fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_odt1</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_ODT2</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_ODT2
            creator:vpd  consumer: various fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_odt2</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_CEN_PHASE_ROT_CNTL_ODT3</id>
            <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Phase rotator value that comes from MR keyword on the CDIMM VPD.
            This controls the IO PHASE_ROT_CNTL_ODT3
            creator:vpd
            consumer: various fw notes:
        </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array>2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>phase_rot_cntl_odt3</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_RLO</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            This value comes from the VPD keyword MT byte 60 bits 4:7 for the Logical DIMM associated with port A.
            Byte 124 bits 4:7 for port B, 188 bits 4:7 for port C and 252 bits 4:7 for port D
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <odmVisable/>
        <array>2</array>
        <mssAccessorName>vpd_rlo</mssAccessorName>
        <writeable/>
    </attribute>

    <attribute>
        <id>ATTR_VPD_WLO</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            This value comes from the VPD keyword MT byte 60 bits 0:3 for the Logical DIMM associated with port A.
            Byte 124 bits 0:3 for port B, 188 bits 0:3 for port C and 252 bits 0:3 for port D
        </description>
        <valueType>uint8</valueType>
        <platInit/>
        <odmVisable/>
        <array>2</array>
        <mssAccessorName>vpd_wlo</mssAccessorName>
        <writeable/>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_MODULE_BUS_WIDTH</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Module Memory Bus Width.
            Used in various locations and is evaluated in mss_eff_cnfg.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <mssUnit>bits</mssUnit>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>eff_dram_module_bus_width</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_MIN_CYCLE_TIME</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Minimum Cycle time for SDRAM module.
            Used in various locations and is evaluated in mss_eff_cnfg.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_min_cycle_time</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_MAX_CYCLE_TIME</id>
        <!-- P8 MBA level information -->
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Maximum Cycle time for SDRAM module.
            Used in various locations and is evaluated in mss_eff_cnfg.
            creator: mss_eff_cnfg
            consumer: various
            firmware notes: none
        </description>
        <valueType>uint8</valueType>
        <writeable/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessor>PORT</mssAccessor>
        <mssAccessorName>eff_dram_max_cycle_time</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC00</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW00 Host Interface DQ RTT_NOM Control</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc00</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC01</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW01 Host Interface DQ RTT_WR Control</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc01</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC02</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW02 Host Interface DQ RTT_PARK Control</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc02</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC03</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW03 Host Interface DQ Driver Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc03</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC04</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW04 DRAM Interface MDQ RTT Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc04</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC05</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW05 DRAM Interface MDQ Driver Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc05</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC06</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW06 Command Space Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc06</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC07</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW07 Rank Presence Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc07</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC08</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW08 RankSelection Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc08</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC09</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW09 Power Saving Settings Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc09</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC0A</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW0A LRDIMM Operating Speed </description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc0a</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC0B</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW0B Operating Voltage Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc0b</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC0C</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW0C Buffer Training Mode Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc0c</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC0D</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW0D Reserved for future use</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc0d</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC0E</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW0E Parity Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc0e</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_BC0F</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW0F Error Status Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_bc0f</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F0BC1x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW1x Buffer Configuration Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f0bc1x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F30BC2x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F30BCW2x Lower Nibble DRAM Interface Receive Enable Training Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f30bc2x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F30BC3x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F30BCW3x Lower Nibble DRAM Interface Receive Enable Training Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f30bc3x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F30BC4x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F30BCW4x Lower Nibble MDQS Read Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f30bc4x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F30BC5x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F30BCW5x Upper Nibble MDQS Read Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f30bc5x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F0BC6x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCW6x Fine Granularity Frequency Operating Speed Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f0bc6x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F70BC7x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F70BCW7x Function Space Selector Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f70bc7x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F30BC8x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F30BCW8x Lower Nibble MDQ-MDQS Write Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f30bc8x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F30BC9x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F30BCW9x Upper Nibble MDQ-MDQS Write Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f30bc9x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F30BCAx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F30BCWAx Lower Nibble DRAM Interface Write Leveling Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f30bcax</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F30BCBx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F30BCWBx Upper Nibble DRAM Interface Write Leveling Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f30bcbx</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F0BCCx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCWCx Lower/Upper Nibble Additional Cycles of DRAM Interface Receive Enable Control Word for rank 0</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f0bccx</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F0BCDx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCWDx Lower/Upper Nibble Additional Cycles of DRAM Interface Write Leveling Control Word for rank 0</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f0bcdx</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F0BCEx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCWEx Lower/Upper Nibble Additional Cycles of DRAM Interface Write Leveling Control Word for rank 0</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f0bcex</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F0BCFx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F0BCWFx Lower/Upper Nibble Additional Cycles of DRAM Interface Write Leveling Control Word for rank 2</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f0bcfx</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F1BCCx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F1BCWCx Lower/Upper Nibble Additional Cycles of DRAM Interface Receive Enable Control Word for rank 1</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f1bccx</mssAccessorName>
        </attribute>
        <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F1BCDx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F1BCWDx Lower/Upper Nibble Additional Cycles of DRAM Interface Write Leveling Control Word for rank 1</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f1bcdx</mssAccessorName>
        </attribute>
        <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F1BCEx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F1BCWEx Lower/Upper Nibble Additional Cycles of DRAM Interface Receive Enable Control Word for rank 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f1bcex</mssAccessorName>
        </attribute>
        <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F1BCFx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F1BCWFx Lower/Upper Nibble Additional Cycles of DRAM Interface Write Leveling Control Word for rank 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f1bcfx</mssAccessorName>
        </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F4BC0x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F4BCW0x MRS0 snooped settings</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f4bc0x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F4BC1x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F4BCW1x MRS1 snooped settings</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f4bc1x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F4BC2x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F4BCW2x MRS2 snooped settings</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f4bc2x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F4BC3x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F4BCW3x MRS3 snooped settings</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f4bc3x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F4BC4x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F4BCW4x MRS4 snooped settings</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f4bc4x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F4BC5x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F4BCW5x MRS5 snooped settings</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f4bc5x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F4BC6x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F4BCW6x MRS6 snooped settings</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f4bc6x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F5BC0x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F5BCW0x Upper and Lower MPR bits[7:0] for U0</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f5bc0x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F5BC1x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F5BCW1x Upper and Lower MPR bits[15:8] for U1</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f5bc1x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F5BC2x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F5BCW2x Upper and Lower MPR bits[23:16] for U2</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f5bc2x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F5BC3x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F5BCW3x Upper and Lower MPR bits[31:24] for U3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f5bc3x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F5BC5x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F5BCW5x Host Interface Vref Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f5bc5x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F5BC6x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F5BCW6x DRAM Interface Vref Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f5bc6x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F6BC0x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F6BCW0x Upper and Lower MPR bits[39:32] for U4</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f6bc0x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F6BC1x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F6BCW1x Upper and Lower MPR bits[47:40] for U5</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f6bc1x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F6BC2x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F6BCW2x Upper and Lower MPR bits[55:48] for U6</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f6bc2x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F6BC3x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F6BCW3x Upper and Lower MPR bits[63:56] for U7</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f6bc3x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F6BC4x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F6BCW4x Buffer Training Configuration Control Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f6bc4x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F6BC5x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F6BCW5x Buffer Training Status Word</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f6bc5x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F74BC8x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F74BCW8x MDQ0/4 -Read Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f74bc8x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F74BC9x</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F74BCW9x MDQ1/5 -Read Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f74bc9x</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F74BCAx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F74BCWAx MDQ2/6 -Read Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f74bcax</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F74BCBx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F74BCWBx MDQ3/7 -Read Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f74bcbx</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F74BCCx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F74BCWCx MDQ0/4-MDQS Write Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f74bccx</mssAccessorName>
    </attribute>

   <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F74BCDx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F74BCWDx MDQ1/5-MDQS Write Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f74bcdx</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F74BCEx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F74BCWEx MDQ2/6-MDQS Write Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f74bcex</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DIMM_DDR4_F74BCFx</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>F74BCWFx MDQ3/7-MDQS Write Delay Control Word for ranks 0 to 3</description>
        <valueType>uint8</valueType>
        <writeable />
        <odmVisable />
        <odmChangeable />
        <array> 2 2 </array>
        <mssAccessorName>eff_dimm_ddr4_f74bcfx</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_SPD_CAS_LATENCIES_SUPPORTED</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            CAS Latencies supported (bitmap).
            Located in DDR4 SPD byte 20 (LSB) through byte 23
            The raw data has different meanings for DDR3 and DDR4.
            HWPs must use this DDR neutral enumeration to decode.
            Platform support must call an Accessor HWP.
        </description>
        <valueType>uint64</valueType>
        <array> 2 2 </array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>cas_latencies_supported</mssAccessorName>
        <platInit/>
    </attribute>

    <attribute>
        <id>ATTR_SPD_MODULE_THERMAL_SENSOR</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            Module Thermal Sensor.
            Located in DDR4 SPD byte 14.
        </description>
        <valueType>uint8</valueType>
        <array> 2 2 </array>
        <writeable/>
        <enum>INCORPORATED = 0x80, NOT_INCORPORATED = 0x00</enum>
        <mssAccessorName>spd_module_thermal_sensor</mssAccessorName>
        <platInit/>
    </attribute>

    <attribute>
        <id>ATTR_SPD_MODULE_NOMINAL_VOLTAGE</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            mss_eff_config should decode the nominal voltage
            in milivolts and write out the value
        </description>
        <valueType>uint64</valueType>
        <array> 2 2 </array>
        <mssAccessor>PORT DIMM</mssAccessor>
        <mssAccessorName>spd_module_nominal_voltage</mssAccessorName>
        <!-- Note that current DDR4 spec has reserved bits for bits 2~7 -->
        <enum>OPERABLE = 1</enum>
        <writeable />
        <mssUnits> mV </mssUnits>
        <platInit/>
    </attribute>

    <attribute>
      <id>ATTR_EFF_ODT_RD</id>
      <targetType>TARGET_TYPE_MCS</targetType>
      <description>Read ODT. Used in various locations and comes from the MT keyword of the VPD or is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
        creator: VPD(MT),mss_eff_cnfg_termination
        consumer: various.C files and initfiles
        firmware notes: none</description>
      <valueType>uint8</valueType>
      <platInit/>
      <odmVisable/>
      <odmChangeable/>
      <array>2 2 4</array>
      <mssAccessorName>eff_odt_rd</mssAccessorName>
    </attribute>

    <attribute>
      <id>ATTR_EFF_ODT_WR</id>
      <targetType>TARGET_TYPE_MCS</targetType>
      <description>Write ODT. Used in various locations and comes from the MT keyword of the VPD or is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
        Creator: VPD(MT)/ mss_eff_cnfg_termination
        consumer: various.C and initfile
        firmware notes: none</description>
      <valueType>uint8</valueType>
      <platInit/>
      <odmVisable/>
      <odmChangeable/>
      <array>2 2 4</array>
      <mssAccessorName>eff_odt_wr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_RON</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DRAM Ron.
            Used in various locations and comes from the MT keyword of the VPD or is computed in mss_eff_cnfg_termination.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg. OHM48 is for DDR4.
        </description>
        <valueType>uint8</valueType>
        <enum>INVALID = 0, OHM34 = 34, OHM40 = 40, OHM48 = 48</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2</array>
        <mssAccessorName>eff_dram_ron</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_EFF_DRAM_RTT_NOM</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DRAM Rtt_Nom.
            Used in various locations and comes from the MT keyword of the VPD or is computed in mss_eff_cnfg_termination.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, OHM20 = 20, OHM30 = 30, OHM34 = 34, OHM40 = 40, OHM48 = 48, OHM60 = 60, OHM80 = 80, OHM120 = 120, OHM240 = 240</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <array> 2 2 4</array>
        <mssAccessorName>eff_dram_rtt_nom</mssAccessorName>
    </attribute>


    <attribute>
        <id>ATTR_EFF_DRAM_RTT_WR</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>
            DRAM Rtt_WR.
            Used in various locations and comes from the MT keyword of the VPD or is computed in mss_eff_cnfg_termination.
            Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
        </description>
        <valueType>uint8</valueType>
        <enum>DISABLE = 0, OHM60 = 60, OHM120 = 120, OHM240 = 240, HIGHZ = 1</enum>
        <platInit/>
        <odmVisable/>
        <odmChangeable/>
        <array>2 2 4</array>
        <writeable/>
        <mssAccessorName>eff_dram_rtt_wr</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_VPD_GPO</id>
        <targetType>TARGET_TYPE_MCS</targetType>
        <description>This value comes from the VPD keyword MT bytes 61 MT(61) for the Logical DIMM
        associated with port A.  Bytes 125 for port B, 189 for port C and 253 for port D</description>
        <valueType>uint8</valueType>
        <platInit/>
        <odmVisable/>
        <array>2</array>
        <writeable/>
        <mssAccessorName>vpd_gpo</mssAccessorName>
    </attribute>

</attributes>

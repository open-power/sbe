#!/bin/sh

echo "Creating ODE sandbox..."

# Ensure backing build is accessible.
if [ ! -d "$BACKING_BUILD" ];
then
    echo "Cannot access the backing build: $BACKING_BUILD"
    exit -1
fi

# Delete existing sandbox if it exists.
if [ -d "$SANDBOXBASE" ];
then
    echo "----Removing old sandbox."
    mksb -undo -auto -rc $SANDBOXRC -dir $SANDBOXROOT -sb $SANDBOXNAME
fi
if [ -d "$SANDBOXBASE" ];
then
    rm -rf $SANDBOXBASE
fi

# Create sandbox.
mksb -rc $SANDBOXRC -dir $SANDBOXROOT -back $BACKING_BUILD -sb $SANDBOXNAME \
      -m ppc -auto || exit -1

# workaround scripts expect $sb variable to be populated.
export sb=$SANDBOXBASE/src

execute_in_sandbox "ecc --inject ${SBE_IMG_OUT_LOC}/sbe_seeprom.bin --output  ${SBE_IMG_OUT_LOC}/sbe_seeprom.bin.ecc --p8 "  "ppc" || exit -1

# Run presimsetup workarounds.
echo "----Running presimsetup workarounds."
if [ -f ${CITESTPATH}/etc/workarounds.presimsetup ];
then
    ${CITESTPATH}/etc/workarounds.presimsetup || exit -1
fi

# Run start_simics to populate simics directories.
echo "----Setting up simics."
execute_in_sandbox "start_simics -no_start -machine $MACHINE -batch_mode" \
                   "ppc" || exit -1

# Copy action files. As we are taking actions files from ppe, copy them here
# so that any workaround necessary can be applied over them in pre-simsetup path
mkdir -p $SANDBOXBASE/src/simu/data/cec-chip
cp  $SBEROOT/import/chips/p9/sw_simulation/chip.act $SANDBOXBASE/src/simu/data/cec-chip || exit -1
cp  $SBEROOT/import/chips/p9/sw_simulation/pervasive.act $SANDBOXBASE/src/simu/data/cec-chip || exit -1

# Run postsimsetup workarounds.
echo "----Running postsimsetup workarounds."
if [ -f ${CITESTPATH}/etc/workarounds.postsimsetup ];
then
    ${CITESTPATH}/etc/workarounds.postsimsetup || exit -1
fi


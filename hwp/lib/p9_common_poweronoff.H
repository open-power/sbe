///
/// @file  p9_common_poweronoff.H
/// @brief common procedure for power on/off
///
/// *HWP HWP Owner   : David Young   <davidy@us.ibm.com>
/// *HWP FW Owner    : Sangeetha T S  <sangeet2@in.ibm.com>
/// *HWP Team        : PM
/// *HWP Consumed by : SBE:SGPE:CME
/// *HWP Level       : 2
///

#ifndef __P9_COMMON_POWERONOFF_H__
#define __P9_COMMON_POWERONOFF_H__

namespace p9power
{
    enum powerOperation_t
    {
        POWER_ON      = 0x0,
        POWER_OFF     = 0xFF,
        POWER_ON_VDD  = 0x1,
        POWER_OFF_VDD = 0xFE
    };
}


// Will be auto-generated by Ben Gass's Figtree file
// #define PPM_PFCS C_PPM_PFCS_SCOM
// #define PPM_PFCS_CLR C_PPM_PFCS_SCOM1
// #define PPM_PFCS_OR C_PPM_PFCS_SCOM2

#define PPM_PFCS 0x100f0118
#define PPM_PFCS_CLR 0x100f0119
#define PPM_PFCS_OR 0x100f011a

#define PPM_PFDLY 0x100f011b
#define PPM_PFSNS 0x100f011c
#define PPM_PFOFF 0x100f011d

#if 0
namespace fapi2
{
// Will be auto-generated by error XML file

const unsigned  RC_PMPROC_PFETLIB_BAD_DOMAIN = 0;
const unsigned  RC_PMPROC_PFETLIB_BAD_SCOM = 1;
const unsigned  RC_PMPROC_PFETLIB_BAD_OP = 2;
const unsigned  RC_PMPROC_PFETLIB_RAIL_ON = 3;
const unsigned  RC_PMPROC_PFETLIB_RAIL_OFF = 4;
const unsigned  RC_PROCPM_PFETLIB_TIMEOUT = 5;
const unsigned  RC_PROCPM_PFET_CODE_BAD_MODE = 6;
const unsigned  RC_PROCPM_PFET_GET_ATTR = 7;
}
#endif
#define OR_TARGET_ENABLED 1

/// @typedef p9_common_poweronoff_FP_t
/// function pointer typedef definition for HWP call support
#if OR_TARGET_ENABLED  // Cronus may not support fapi2::TARGET_TYPE_EQ|fapi2::TARGET_TYPE_CORE
typedef fapi2::ReturnCode (*p9_common_poweronoff_FP_t) (
    const fapi2::Target<fapi2::TARGET_TYPE_EQ|
                        fapi2::TARGET_TYPE_CORE>&,
    const p9power::powerOperation_t i_operation);
#else
typedef fapi2::ReturnCode (*p9_common_poweronoff_FP_t) (
    const fapi2::Target<fapi2::TARGET_TYPE_EQ>&, const uint32_t);

#endif

extern "C"
{
/// @brief common procedure for power on/off
///
/// @param [in] i_target    TARGET_TYPE_EQ|TARGET_TYPE_CORE target
/// @param [in] i_operation ENUM(ON,OFF)
///
/// @attr
/// @attritem ATTR_PFET_TIMING - EX target, uint32
///
/// @retval FAPI_RC_SUCCESS
#if OR_TARGET_ENABLED
fapi2::ReturnCode
p9_common_poweronoff(
    const fapi2::Target<fapi2::TARGET_TYPE_EQ|
                        fapi2::TARGET_TYPE_CORE>& i_target,
    const p9power::powerOperation_t i_operation);
#else
fapi2::ReturnCode
p9_common_poweronoff(
    const fapi2::Target<fapi2::TARGET_TYPE_EQ>& i_target,
    const p9power::powerOperation_t i_operation);
#endif

} // extern C

#endif  // __P9_COMMON_POWERONOFF_H__

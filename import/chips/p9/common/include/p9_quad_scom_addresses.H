/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: chips/p9/common/include/p9_quad_scom_addresses.H $            */
/*                                                                        */
/* IBM CONFIDENTIAL                                                       */
/*                                                                        */
/* EKB Project                                                            */
/*                                                                        */
/* COPYRIGHT 2015                                                         */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* The source code for this program is not published or otherwise         */
/* divested of its trade secrets, irrespective of what has been           */
/* deposited with the U.S. Copyright Office.                              */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */
///
/// @file p9_quad_scom_addresses.H
/// @brief  Defines constants for scom addresses
///
// *HWP HWP Owner: Ben Gass <bgass@us.ibm.com>
// *HWP FW Owner: Thi Tran <thi@us.ibm.com>
// *HWP Team: SOA
// *HWP Level: 1
// *HWP Consumed by: FSP:HB:HS:OCC:SBE:CME:SGPE:PGPE:FPPE:IPPE

/*---------------------------------------------------------------
 *
 *---------------------------------------------------------------
 *
 *  Issues:
 *    PEC Sat_id issue                  HW329652
 *    MC regs with same address.        HW323435 (matteo)
 *         Duplicate IOM registers.          HW320456 (designers)
 *    OSC/perv regs same address.       HW323437
 *    TOD reg same address.             HW323439
 *    PHB registers need fixed.         HW320416  ( all regs commented out now )
 *    IO0 registers need fixed.         HW320437
 *
 * Closed
 *    PB.PB_PPE registers need fixed.   HW320435
 *    EX05 registers need fixed.        HW320427  (9020) - L2 ring id's are incorrect
 *    IOFPPE registers need fixed.      HW320424  (9020) - Investigate NULL scope
 *    PEC addresses are wrong.          HW322598  (9020)
 *    MC registers need fixed.          HW320433
 *    VA.VA_NORTH registers need fixed. HW320436
 *
 * Format:
 *
 *  <UNIT>_<SUBUNIT>_<INSTANCE>_<REGISTER>_<ACCESS/TYPE>
 *
 *  Notes: Subunits are only added to make names unique when
 *  there are name collisions.
 *  Only units with more than one instance has instance numbers.
 *  If there is only one, the instance number is omitted.
 *
 *  Instance numbers are chiplet id's for the PERV unit.  The
 *  chiplet id's are mapped to their name and used instead of
 *  instance numbers.  See bellow.
 *
 *  For registers with a single access type the type and access
 *  methods are omitted.
 *
 *  For access types where all bits have the same access methods, the
 *  access method is appended to the name.  If the access methods
 *  are different for some bits, the access type is appended to the
 *  name _SCOM instead of _RO.  The _RW(X) access method is omitted
 *  and assumed to be default.
 *
 *  Valid units / subunits
 *    PU                    : No unit chip level
 *        MCD0[0..1]        : mcd subunit
 *        PIB2OPB[0..1]     : PIB2OPB subunit
 *        OTPROM[0..1]      : otprom subunit
 *        NPU               : common npu subunit
 *        NPU[0..2]         : Npu stacks 0 to 2
 *          CTL             : Npu CTL subunit
 *          DAT             : Npu DAT subunit
 *          SM[0..3]        : Npu SM subunits
 *          NTL[0..1]       : Npu NTL subunit
 *    PERV                  : Pervasive
 *        FSI2PIB           : subunit
 *        FSISHIFT          : subunit
 *        FSII2C            : subunit
 *        FSB               : subunit
 *    EX                    : Ex unit (1/2 quad, 2 cores)
 *        L2                : L2 subunit
 *        L3                : L3 subunit
 *    PEC                   : PCI Pec unit
 *        STACK0            : subunit
 *        STACK1            : subunit
 *        STACK2            : subunit
 *    C                     : core
 *    EQ                    : quad
 *    OBUS                  : obus
 *    CAPP                  : capp
 *    MCBIST                : mcbist
 *    MCA                   : mca
 *    NVBUS                 : (not implemented yet)
 *    PHB                   : (not implemented yet)
 *    MI                    : (not implemented yet)
 *    DMI                   : (not implemented yet)
 *    MCS                   : (not implemented yet)
 *    OCC                   : (not implemented yet)
 *    PPE                   : (not implemented yet)
 *    SBE                   : (not implemented yet)
 *    XBUS                  : (not implemented yet)
 *
 * Pervasive instance names follow chiplet id.
 *
 * Instance/  | Chiplet
 * Chiplet    | name
 * -----------+-----------
 * 0x00       | PIB
 * 0x01       | TP
 * 0x02       | N0
 * 0x03       | N1
 * 0x04       | N2
 * 0x05       | N3
 * 0x06       | XB
 * 0x07       | MC01
 * 0x08       | MC23
 * 0x09       | OB0
 * 0x0A       | OB1
 * 0x0B       | OB2
 * 0x0C       | OB3
 * 0x0D       | PCI0
 * 0x0E       | PCI1
 * 0x0F       | PCI2
 * 0x10       | EP00
 * 0x11       | EP01
 * 0x12       | EP02
 * 0x13       | EP03
 * 0x14       | EP04
 * 0x15       | EP05
 * 0x20       | EC00
 * 0x21       | EC01
 * 0x22       | EC02
 * 0x23       | EC03
 * 0x24       | EC04
 * 0x25       | EC05
 * 0x26       | EC06
 * 0x27       | EC07
 * 0x28       | EC08
 * 0x29       | EC09
 * 0x2A       | EC10
 * 0x2B       | EC11
 * 0x2C       | EC12
 * 0x2D       | EC13
 * 0x2E       | EC14
 * 0x2F       | EC15
 * 0x30       | EC16
 * 0x31       | EC17
 * 0x32       | EC18
 * 0x33       | EC19
 * 0x34       | EC20
 * 0x35       | EC21
 * 0x36       | EC22
 * 0x37       | EC23
 *
 *
 *---------------------------------------------------------------
 *
 * NOTES:
 *
 * there is a SPR ring that goes around the chip with an
 * address(0:9)/tid(0:1) (thread id)/mfspr_data(0:63) and return mfspr_data_v/mfspr_data(0:63)
 *
 *    Add PU_<SUBUNITS>  (only if there are conflicts on these registers)
 *       0x0001XXXX OTPROM
 *       0x0002XXXX FSIM0
 *       0x0003XXXX FSIM1
 *       0x0004XXXX TOD
 *       0x0005XXXX FSI_MBOX
 *       0x0006XXXX OCI_BRIDGE
 *       0x0007XXXX SPI_ADC
 *       0x0008XXXX PIBMEM
 *       0x0009XXXX ADU
 *       0x000AXXXX I2CM
 *       0x000BXXXX SBE_FIFO
 *       0x000DXXXX PSU
 *       0x000EXXXX SBE
 *
 * 0x0000100A for FSI2PIB  => PERV_FSI2PIB
 * 0x00000Cxx for FSISHIFT =>  PERV_FSISHIFT
 * 0x000018xx for FSI I2C =>  PERV_FSII2C
 * 0x000024xx for FSI SBEFIFO => PERV_FSB
 *
 * 0x00000400 PEEK_TABLE
 * 0x00000800 FSI_SLAVE
 * 0x00000C00 FSI_SHIFT
 * 0x00001000 FSI2PIB
 * 0x00001400 FSI_SCRATCHPAD
 * 0x00001800 FSI_I2CM
 * 0x00002400 FSI_SBE_FIFO
 *
 * address fields
 * 0xCCRPxxxx
 *
 * CC=chiplet
 * R=always 0?
 * P=port
 *   0=gpregs
 *   1=normal unit scom ring (exclude)
 *   3=clock controller
 *   4=firs
 *   5=cpm
 *
 * =============================================================================
 * Compiling
 *
 * Precompile the header to save time on subsquent compiles:
 * g++ -I. -c scom_addresses.H
 *
 * Use these options to help reduce the binary size
 * g++ -I. -Os -fdata-sections -ffunction-sections <file>.C -o <output> -Wl,--gc-sections
 *
 *
 *---------------------------------------------------------------
 */

#include <p9_const_common.H>


#ifndef __P9_QUAD_SCOM_ADDRESSES_H
#define __P9_QUAD_SCOM_ADDRESSES_H


#include <p9_scom_template_consts.H>
#include <p9_quad_scom_addresses_fixes.H>


REG64( C_ADDR_TRAP_REG                                         , RULL(0x20010003), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_ADDR_TRAP_REG                                       , RULL(0x20010003), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_ADDR_TRAP_REG                                       , RULL(0x21010003), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_ADDR_TRAP_REG                                       , RULL(0x22010003), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_ADDR_TRAP_REG                                       , RULL(0x23010003), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_ADDR_TRAP_REG                                       , RULL(0x24010003), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_ADDR_TRAP_REG                                       , RULL(0x25010003), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_ADDR_TRAP_REG                                       , RULL(0x26010003), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_ADDR_TRAP_REG                                       , RULL(0x27010003), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_ADDR_TRAP_REG                                       , RULL(0x28010003), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_ADDR_TRAP_REG                                       , RULL(0x29010003), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_ADDR_TRAP_REG                                      , RULL(0x2A010003), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_ADDR_TRAP_REG                                      , RULL(0x2B010003), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_ADDR_TRAP_REG                                      , RULL(0x2C010003), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_ADDR_TRAP_REG                                      , RULL(0x2D010003), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_ADDR_TRAP_REG                                      , RULL(0x2E010003), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_ADDR_TRAP_REG                                      , RULL(0x2F010003), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_ADDR_TRAP_REG                                      , RULL(0x30010003), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_ADDR_TRAP_REG                                      , RULL(0x31010003), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_ADDR_TRAP_REG                                      , RULL(0x32010003), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_ADDR_TRAP_REG                                      , RULL(0x33010003), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_ADDR_TRAP_REG                                      , RULL(0x34010003), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_ADDR_TRAP_REG                                      , RULL(0x35010003), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_ADDR_TRAP_REG                                      , RULL(0x36010003), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_ADDR_TRAP_REG                                      , RULL(0x37010003), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_ADDR_TRAP_REG                                        , RULL(0x10010003), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_ADDR_TRAP_REG                                      , RULL(0x10010003), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_ADDR_TRAP_REG                                      , RULL(0x11010003), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_ADDR_TRAP_REG                                      , RULL(0x12010003), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_ADDR_TRAP_REG                                      , RULL(0x13010003), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_ADDR_TRAP_REG                                      , RULL(0x14010003), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_ADDR_TRAP_REG                                      , RULL(0x15010003), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_ADDR_TRAP_REG                                        , RULL(0x20010003), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010003,
REG64( EX_0_ADDR_TRAP_REG                                      , RULL(0x20010003), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010003,
REG64( EX_1_ADDR_TRAP_REG                                      , RULL(0x22010003), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010003,
REG64( EX_2_ADDR_TRAP_REG                                      , RULL(0x24010003), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010003,
REG64( EX_3_ADDR_TRAP_REG                                      , RULL(0x26010003), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010003,
REG64( EX_4_ADDR_TRAP_REG                                      , RULL(0x28010003), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010003,
REG64( EX_5_ADDR_TRAP_REG                                      , RULL(0x2A010003), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010003,
REG64( EX_6_ADDR_TRAP_REG                                      , RULL(0x2C010003), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010003,
REG64( EX_7_ADDR_TRAP_REG                                      , RULL(0x2E010003), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010003,
REG64( EX_8_ADDR_TRAP_REG                                      , RULL(0x30010003), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010003,
REG64( EX_9_ADDR_TRAP_REG                                      , RULL(0x32010003), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010003,
REG64( EX_10_ADDR_TRAP_REG                                     , RULL(0x34010003), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010003,
REG64( EX_11_ADDR_TRAP_REG                                     , RULL(0x36010003), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010003,

REG64( PEC_0_ADDR_TRAP_REG                                     , RULL(0x0D010003), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_ADDR_TRAP_REG                                     , RULL(0x0E010003), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_ADDR_TRAP_REG                                     , RULL(0x0F010003), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_ASSIST_INTERRUPT_REG                                  , RULL(0x200F0011), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_ASSIST_INTERRUPT_REG                                , RULL(0x200F0011), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_ASSIST_INTERRUPT_REG                                , RULL(0x210F0011), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_ASSIST_INTERRUPT_REG                                , RULL(0x220F0011), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_ASSIST_INTERRUPT_REG                                , RULL(0x230F0011), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_ASSIST_INTERRUPT_REG                                , RULL(0x240F0011), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_ASSIST_INTERRUPT_REG                                , RULL(0x250F0011), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_ASSIST_INTERRUPT_REG                                , RULL(0x260F0011), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_ASSIST_INTERRUPT_REG                                , RULL(0x270F0011), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_ASSIST_INTERRUPT_REG                                , RULL(0x280F0011), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_ASSIST_INTERRUPT_REG                                , RULL(0x290F0011), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_ASSIST_INTERRUPT_REG                               , RULL(0x2A0F0011), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_ASSIST_INTERRUPT_REG                               , RULL(0x2B0F0011), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_ASSIST_INTERRUPT_REG                               , RULL(0x2C0F0011), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_ASSIST_INTERRUPT_REG                               , RULL(0x2D0F0011), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_ASSIST_INTERRUPT_REG                               , RULL(0x2E0F0011), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_ASSIST_INTERRUPT_REG                               , RULL(0x2F0F0011), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_ASSIST_INTERRUPT_REG                               , RULL(0x300F0011), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_ASSIST_INTERRUPT_REG                               , RULL(0x310F0011), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_ASSIST_INTERRUPT_REG                               , RULL(0x320F0011), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_ASSIST_INTERRUPT_REG                               , RULL(0x330F0011), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_ASSIST_INTERRUPT_REG                               , RULL(0x340F0011), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_ASSIST_INTERRUPT_REG                               , RULL(0x350F0011), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_ASSIST_INTERRUPT_REG                               , RULL(0x360F0011), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_ASSIST_INTERRUPT_REG                               , RULL(0x370F0011), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_ASSIST_INTERRUPT_REG                                 , RULL(0x100F0011), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_ASSIST_INTERRUPT_REG                               , RULL(0x100F0011), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_ASSIST_INTERRUPT_REG                               , RULL(0x110F0011), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_ASSIST_INTERRUPT_REG                               , RULL(0x120F0011), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_ASSIST_INTERRUPT_REG                               , RULL(0x130F0011), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_ASSIST_INTERRUPT_REG                               , RULL(0x140F0011), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_ASSIST_INTERRUPT_REG                               , RULL(0x150F0011), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_ASSIST_INTERRUPT_REG                                 , RULL(0x200F0011), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0011,
REG64( EX_0_ASSIST_INTERRUPT_REG                               , RULL(0x200F0011), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0011,
REG64( EX_1_ASSIST_INTERRUPT_REG                               , RULL(0x230F0011), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0011,
REG64( EX_2_ASSIST_INTERRUPT_REG                               , RULL(0x240F0011), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0011,
REG64( EX_3_ASSIST_INTERRUPT_REG                               , RULL(0x260F0011), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0011,
REG64( EX_4_ASSIST_INTERRUPT_REG                               , RULL(0x280F0011), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0011,
REG64( EX_5_ASSIST_INTERRUPT_REG                               , RULL(0x2A0F0011), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0011,
REG64( EX_6_ASSIST_INTERRUPT_REG                               , RULL(0x2C0F0011), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0011,
REG64( EX_7_ASSIST_INTERRUPT_REG                               , RULL(0x2E0F0011), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0011,
REG64( EX_8_ASSIST_INTERRUPT_REG                               , RULL(0x300F0011), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0011,
REG64( EX_9_ASSIST_INTERRUPT_REG                               , RULL(0x320F0011), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0011,
REG64( EX_10_ASSIST_INTERRUPT_REG                              , RULL(0x340F0011), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0011,
REG64( EX_11_ASSIST_INTERRUPT_REG                              , RULL(0x360F0011), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0011,

REG64( PEC_0_ASSIST_INTERRUPT_REG                              , RULL(0x0D0F0011), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_ASSIST_INTERRUPT_REG                              , RULL(0x0E0F0011), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_ASSIST_INTERRUPT_REG                              , RULL(0x0F0F0011), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_ATOMIC_LOCK_MASK_LATCH_REG                            , RULL(0x20010007), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x20010007), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x21010007), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x22010007), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x23010007), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x24010007), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x25010007), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x26010007), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x27010007), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x28010007), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_ATOMIC_LOCK_MASK_LATCH_REG                          , RULL(0x29010007), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2A010007), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2B010007), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2C010007), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2D010007), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2E010007), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2F010007), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x30010007), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x31010007), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x32010007), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x33010007), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x34010007), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x35010007), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x36010007), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x37010007), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_ATOMIC_LOCK_MASK_LATCH_REG                           , RULL(0x10010007), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x10010007), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x11010007), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x12010007), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x13010007), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x14010007), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x15010007), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_ATOMIC_LOCK_MASK_LATCH_REG                           , RULL(0x20010007), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010007,
REG64( EX_0_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x20010007), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010007,
REG64( EX_1_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x22010007), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010007,
REG64( EX_2_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x24010007), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010007,
REG64( EX_3_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x26010007), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010007,
REG64( EX_4_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x28010007), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010007,
REG64( EX_5_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2A010007), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010007,
REG64( EX_6_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2C010007), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010007,
REG64( EX_7_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x2E010007), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010007,
REG64( EX_8_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x30010007), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010007,
REG64( EX_9_ATOMIC_LOCK_MASK_LATCH_REG                         , RULL(0x32010007), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010007,
REG64( EX_10_ATOMIC_LOCK_MASK_LATCH_REG                        , RULL(0x34010007), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010007,
REG64( EX_11_ATOMIC_LOCK_MASK_LATCH_REG                        , RULL(0x36010007), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010007,

REG64( PEC_0_ATOMIC_LOCK_MASK_LATCH_REG                        , RULL(0x0D010007), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_ATOMIC_LOCK_MASK_LATCH_REG                        , RULL(0x0E010007), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_ATOMIC_LOCK_MASK_LATCH_REG                        , RULL(0x0F010007), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_ATOMIC_LOCK_REG                                       , RULL(0x200F03FF), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_ATOMIC_LOCK_REG                                     , RULL(0x200F03FF), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_ATOMIC_LOCK_REG                                     , RULL(0x210F03FF), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_ATOMIC_LOCK_REG                                     , RULL(0x220F03FF), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_ATOMIC_LOCK_REG                                     , RULL(0x230F03FF), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_ATOMIC_LOCK_REG                                     , RULL(0x240F03FF), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_ATOMIC_LOCK_REG                                     , RULL(0x250F03FF), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_ATOMIC_LOCK_REG                                     , RULL(0x260F03FF), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_ATOMIC_LOCK_REG                                     , RULL(0x270F03FF), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_ATOMIC_LOCK_REG                                     , RULL(0x280F03FF), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_ATOMIC_LOCK_REG                                     , RULL(0x290F03FF), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_ATOMIC_LOCK_REG                                    , RULL(0x2A0F03FF), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_ATOMIC_LOCK_REG                                    , RULL(0x2B0F03FF), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_ATOMIC_LOCK_REG                                    , RULL(0x2C0F03FF), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_ATOMIC_LOCK_REG                                    , RULL(0x2D0F03FF), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_ATOMIC_LOCK_REG                                    , RULL(0x2E0F03FF), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_ATOMIC_LOCK_REG                                    , RULL(0x2F0F03FF), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_ATOMIC_LOCK_REG                                    , RULL(0x300F03FF), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_ATOMIC_LOCK_REG                                    , RULL(0x310F03FF), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_ATOMIC_LOCK_REG                                    , RULL(0x320F03FF), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_ATOMIC_LOCK_REG                                    , RULL(0x330F03FF), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_ATOMIC_LOCK_REG                                    , RULL(0x340F03FF), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_ATOMIC_LOCK_REG                                    , RULL(0x350F03FF), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_ATOMIC_LOCK_REG                                    , RULL(0x360F03FF), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_ATOMIC_LOCK_REG                                    , RULL(0x370F03FF), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_ATOMIC_LOCK_REG                                      , RULL(0x100F03FF), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_ATOMIC_LOCK_REG                                    , RULL(0x100F03FF), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_ATOMIC_LOCK_REG                                    , RULL(0x110F03FF), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_ATOMIC_LOCK_REG                                    , RULL(0x120F03FF), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_ATOMIC_LOCK_REG                                    , RULL(0x130F03FF), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_ATOMIC_LOCK_REG                                    , RULL(0x140F03FF), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_ATOMIC_LOCK_REG                                    , RULL(0x150F03FF), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_ATOMIC_LOCK_REG                                      , RULL(0x200F03FF), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F03FF,
REG64( EX_0_ATOMIC_LOCK_REG                                    , RULL(0x200F03FF), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F03FF,
REG64( EX_1_ATOMIC_LOCK_REG                                    , RULL(0x230F03FF), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F03FF,
REG64( EX_2_ATOMIC_LOCK_REG                                    , RULL(0x240F03FF), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F03FF,
REG64( EX_3_ATOMIC_LOCK_REG                                    , RULL(0x260F03FF), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F03FF,
REG64( EX_4_ATOMIC_LOCK_REG                                    , RULL(0x280F03FF), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F03FF,
REG64( EX_5_ATOMIC_LOCK_REG                                    , RULL(0x2A0F03FF), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F03FF,
REG64( EX_6_ATOMIC_LOCK_REG                                    , RULL(0x2C0F03FF), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F03FF,
REG64( EX_7_ATOMIC_LOCK_REG                                    , RULL(0x2E0F03FF), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F03FF,
REG64( EX_8_ATOMIC_LOCK_REG                                    , RULL(0x300F03FF), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F03FF,
REG64( EX_9_ATOMIC_LOCK_REG                                    , RULL(0x320F03FF), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F03FF,
REG64( EX_10_ATOMIC_LOCK_REG                                   , RULL(0x340F03FF), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F03FF,
REG64( EX_11_ATOMIC_LOCK_REG                                   , RULL(0x360F03FF), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F03FF,

REG64( PEC_0_ATOMIC_LOCK_REG                                   , RULL(0x0D0F03FF), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_ATOMIC_LOCK_REG                                   , RULL(0x0E0F03FF), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_ATOMIC_LOCK_REG                                   , RULL(0x0F0F03FF), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_ATTN_INTERRUPT_REG                                    , RULL(0x200F001A), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_ATTN_INTERRUPT_REG                                  , RULL(0x200F001A), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_ATTN_INTERRUPT_REG                                  , RULL(0x210F001A), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_ATTN_INTERRUPT_REG                                  , RULL(0x220F001A), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_ATTN_INTERRUPT_REG                                  , RULL(0x230F001A), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_ATTN_INTERRUPT_REG                                  , RULL(0x240F001A), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_ATTN_INTERRUPT_REG                                  , RULL(0x250F001A), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_ATTN_INTERRUPT_REG                                  , RULL(0x260F001A), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_ATTN_INTERRUPT_REG                                  , RULL(0x270F001A), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_ATTN_INTERRUPT_REG                                  , RULL(0x280F001A), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_ATTN_INTERRUPT_REG                                  , RULL(0x290F001A), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_ATTN_INTERRUPT_REG                                 , RULL(0x2A0F001A), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_ATTN_INTERRUPT_REG                                 , RULL(0x2B0F001A), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_ATTN_INTERRUPT_REG                                 , RULL(0x2C0F001A), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_ATTN_INTERRUPT_REG                                 , RULL(0x2D0F001A), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_ATTN_INTERRUPT_REG                                 , RULL(0x2E0F001A), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_ATTN_INTERRUPT_REG                                 , RULL(0x2F0F001A), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_ATTN_INTERRUPT_REG                                 , RULL(0x300F001A), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_ATTN_INTERRUPT_REG                                 , RULL(0x310F001A), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_ATTN_INTERRUPT_REG                                 , RULL(0x320F001A), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_ATTN_INTERRUPT_REG                                 , RULL(0x330F001A), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_ATTN_INTERRUPT_REG                                 , RULL(0x340F001A), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_ATTN_INTERRUPT_REG                                 , RULL(0x350F001A), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_ATTN_INTERRUPT_REG                                 , RULL(0x360F001A), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_ATTN_INTERRUPT_REG                                 , RULL(0x370F001A), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_ATTN_INTERRUPT_REG                                   , RULL(0x100F001A), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_ATTN_INTERRUPT_REG                                 , RULL(0x100F001A), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_ATTN_INTERRUPT_REG                                 , RULL(0x110F001A), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_ATTN_INTERRUPT_REG                                 , RULL(0x120F001A), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_ATTN_INTERRUPT_REG                                 , RULL(0x130F001A), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_ATTN_INTERRUPT_REG                                 , RULL(0x140F001A), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_ATTN_INTERRUPT_REG                                 , RULL(0x150F001A), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_ATTN_INTERRUPT_REG                                   , RULL(0x200F001A), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F001A,
REG64( EX_0_ATTN_INTERRUPT_REG                                 , RULL(0x200F001A), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F001A,
REG64( EX_1_ATTN_INTERRUPT_REG                                 , RULL(0x230F001A), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F001A,
REG64( EX_2_ATTN_INTERRUPT_REG                                 , RULL(0x240F001A), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F001A,
REG64( EX_3_ATTN_INTERRUPT_REG                                 , RULL(0x260F001A), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F001A,
REG64( EX_4_ATTN_INTERRUPT_REG                                 , RULL(0x280F001A), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F001A,
REG64( EX_5_ATTN_INTERRUPT_REG                                 , RULL(0x2A0F001A), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F001A,
REG64( EX_6_ATTN_INTERRUPT_REG                                 , RULL(0x2C0F001A), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F001A,
REG64( EX_7_ATTN_INTERRUPT_REG                                 , RULL(0x2E0F001A), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F001A,
REG64( EX_8_ATTN_INTERRUPT_REG                                 , RULL(0x300F001A), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F001A,
REG64( EX_9_ATTN_INTERRUPT_REG                                 , RULL(0x320F001A), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F001A,
REG64( EX_10_ATTN_INTERRUPT_REG                                , RULL(0x340F001A), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F001A,
REG64( EX_11_ATTN_INTERRUPT_REG                                , RULL(0x360F001A), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F001A,

REG64( PEC_0_ATTN_INTERRUPT_REG                                , RULL(0x0D0F001A), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_ATTN_INTERRUPT_REG                                , RULL(0x0E0F001A), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_ATTN_INTERRUPT_REG                                , RULL(0x0F0F001A), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_0_STACK0_BARE_REG                                   , RULL(0x04010C54), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK1_BARE_REG                                   , RULL(0x04010C94), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK2_BARE_REG                                   , RULL(0x04010CD4), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_BARE_REG                                   , RULL(0x04011054), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK1_BARE_REG                                   , RULL(0x04011094), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK2_BARE_REG                                   , RULL(0x040110D4), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_BARE_REG                                   , RULL(0x04011454), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK1_BARE_REG                                   , RULL(0x04011494), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK2_BARE_REG                                   , RULL(0x040114D4), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_BARE_REG                                     , RULL(0x04010C54), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK1_BARE_REG                                     , RULL(0x04010C94), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK2_BARE_REG                                     , RULL(0x04010CD4), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RW   );

REG64( C_BIST                                                  , RULL(0x2003000B), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_BIST                                                , RULL(0x2003000B), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_BIST                                                , RULL(0x2103000B), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_BIST                                                , RULL(0x2203000B), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_BIST                                                , RULL(0x2303000B), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_BIST                                                , RULL(0x2403000B), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_BIST                                                , RULL(0x2503000B), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_BIST                                                , RULL(0x2603000B), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_BIST                                                , RULL(0x2703000B), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_BIST                                                , RULL(0x2803000B), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_BIST                                                , RULL(0x2903000B), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_BIST                                               , RULL(0x2A03000B), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_BIST                                               , RULL(0x2B03000B), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_BIST                                               , RULL(0x2C03000B), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_BIST                                               , RULL(0x2D03000B), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_BIST                                               , RULL(0x2E03000B), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_BIST                                               , RULL(0x2F03000B), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_BIST                                               , RULL(0x3003000B), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_BIST                                               , RULL(0x3103000B), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_BIST                                               , RULL(0x3203000B), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_BIST                                               , RULL(0x3303000B), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_BIST                                               , RULL(0x3403000B), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_BIST                                               , RULL(0x3503000B), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_BIST                                               , RULL(0x3603000B), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_BIST                                               , RULL(0x3703000B), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_BIST                                                 , RULL(0x1003000B), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_BIST                                               , RULL(0x1003000B), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_BIST                                               , RULL(0x1103000B), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_BIST                                               , RULL(0x1203000B), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_BIST                                               , RULL(0x1303000B), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_BIST                                               , RULL(0x1403000B), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_BIST                                               , RULL(0x1503000B), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_BIST                                                 , RULL(0x2003000B), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 2103000B,
REG64( EX_0_BIST                                               , RULL(0x2003000B), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 2103000B,
REG64( EX_1_BIST                                               , RULL(0x2203000B), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 2303000B,
REG64( EX_2_BIST                                               , RULL(0x2403000B), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 2503000B,
REG64( EX_3_BIST                                               , RULL(0x2603000B), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 2703000B,
REG64( EX_4_BIST                                               , RULL(0x2803000B), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 2903000B,
REG64( EX_5_BIST                                               , RULL(0x2A03000B), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B03000B,
REG64( EX_6_BIST                                               , RULL(0x2C03000B), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D03000B,
REG64( EX_7_BIST                                               , RULL(0x2E03000B), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F03000B,
REG64( EX_8_BIST                                               , RULL(0x3003000B), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 3103000B,
REG64( EX_9_BIST                                               , RULL(0x3203000B), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 3303000B,
REG64( EX_10_BIST                                              , RULL(0x3403000B), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 3503000B,
REG64( EX_11_BIST                                              , RULL(0x3603000B), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 3703000B,

REG64( PEC_0_BIST                                              , RULL(0x0D03000B), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_BIST                                              , RULL(0x0E03000B), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_BIST                                              , RULL(0x0F03000B), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CC_ATOMIC_LOCK_REG                                    , RULL(0x200303FF), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CC_ATOMIC_LOCK_REG                                  , RULL(0x200303FF), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CC_ATOMIC_LOCK_REG                                  , RULL(0x210303FF), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CC_ATOMIC_LOCK_REG                                  , RULL(0x220303FF), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CC_ATOMIC_LOCK_REG                                  , RULL(0x230303FF), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CC_ATOMIC_LOCK_REG                                  , RULL(0x240303FF), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CC_ATOMIC_LOCK_REG                                  , RULL(0x250303FF), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CC_ATOMIC_LOCK_REG                                  , RULL(0x260303FF), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CC_ATOMIC_LOCK_REG                                  , RULL(0x270303FF), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CC_ATOMIC_LOCK_REG                                  , RULL(0x280303FF), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CC_ATOMIC_LOCK_REG                                  , RULL(0x290303FF), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CC_ATOMIC_LOCK_REG                                 , RULL(0x2A0303FF), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CC_ATOMIC_LOCK_REG                                 , RULL(0x2B0303FF), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CC_ATOMIC_LOCK_REG                                 , RULL(0x2C0303FF), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CC_ATOMIC_LOCK_REG                                 , RULL(0x2D0303FF), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CC_ATOMIC_LOCK_REG                                 , RULL(0x2E0303FF), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CC_ATOMIC_LOCK_REG                                 , RULL(0x2F0303FF), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CC_ATOMIC_LOCK_REG                                 , RULL(0x300303FF), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CC_ATOMIC_LOCK_REG                                 , RULL(0x310303FF), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CC_ATOMIC_LOCK_REG                                 , RULL(0x320303FF), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CC_ATOMIC_LOCK_REG                                 , RULL(0x330303FF), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CC_ATOMIC_LOCK_REG                                 , RULL(0x340303FF), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CC_ATOMIC_LOCK_REG                                 , RULL(0x350303FF), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CC_ATOMIC_LOCK_REG                                 , RULL(0x360303FF), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CC_ATOMIC_LOCK_REG                                 , RULL(0x370303FF), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CC_ATOMIC_LOCK_REG                                   , RULL(0x100303FF), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CC_ATOMIC_LOCK_REG                                 , RULL(0x100303FF), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CC_ATOMIC_LOCK_REG                                 , RULL(0x110303FF), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CC_ATOMIC_LOCK_REG                                 , RULL(0x120303FF), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CC_ATOMIC_LOCK_REG                                 , RULL(0x130303FF), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CC_ATOMIC_LOCK_REG                                 , RULL(0x140303FF), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CC_ATOMIC_LOCK_REG                                 , RULL(0x150303FF), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CC_ATOMIC_LOCK_REG                                   , RULL(0x200303FF), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210303FF,
REG64( EX_0_CC_ATOMIC_LOCK_REG                                 , RULL(0x200303FF), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210303FF,
REG64( EX_1_CC_ATOMIC_LOCK_REG                                 , RULL(0x220303FF), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230303FF,
REG64( EX_2_CC_ATOMIC_LOCK_REG                                 , RULL(0x240303FF), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250303FF,
REG64( EX_3_CC_ATOMIC_LOCK_REG                                 , RULL(0x260303FF), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270303FF,
REG64( EX_4_CC_ATOMIC_LOCK_REG                                 , RULL(0x280303FF), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290303FF,
REG64( EX_5_CC_ATOMIC_LOCK_REG                                 , RULL(0x2A0303FF), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0303FF,
REG64( EX_6_CC_ATOMIC_LOCK_REG                                 , RULL(0x2C0303FF), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0303FF,
REG64( EX_7_CC_ATOMIC_LOCK_REG                                 , RULL(0x2E0303FF), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0303FF,
REG64( EX_8_CC_ATOMIC_LOCK_REG                                 , RULL(0x300303FF), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310303FF,
REG64( EX_9_CC_ATOMIC_LOCK_REG                                 , RULL(0x320303FF), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330303FF,
REG64( EX_10_CC_ATOMIC_LOCK_REG                                , RULL(0x340303FF), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350303FF,
REG64( EX_11_CC_ATOMIC_LOCK_REG                                , RULL(0x360303FF), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370303FF,

REG64( PEC_0_CC_ATOMIC_LOCK_REG                                , RULL(0x0D0303FF), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CC_ATOMIC_LOCK_REG                                , RULL(0x0E0303FF), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CC_ATOMIC_LOCK_REG                                , RULL(0x0F0303FF), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CC_PROTECT_MODE_REG                                   , RULL(0x200303FE), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CC_PROTECT_MODE_REG                                 , RULL(0x200303FE), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CC_PROTECT_MODE_REG                                 , RULL(0x210303FE), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CC_PROTECT_MODE_REG                                 , RULL(0x220303FE), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CC_PROTECT_MODE_REG                                 , RULL(0x230303FE), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CC_PROTECT_MODE_REG                                 , RULL(0x240303FE), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CC_PROTECT_MODE_REG                                 , RULL(0x250303FE), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CC_PROTECT_MODE_REG                                 , RULL(0x260303FE), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CC_PROTECT_MODE_REG                                 , RULL(0x270303FE), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CC_PROTECT_MODE_REG                                 , RULL(0x280303FE), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CC_PROTECT_MODE_REG                                 , RULL(0x290303FE), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CC_PROTECT_MODE_REG                                , RULL(0x2A0303FE), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CC_PROTECT_MODE_REG                                , RULL(0x2B0303FE), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CC_PROTECT_MODE_REG                                , RULL(0x2C0303FE), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CC_PROTECT_MODE_REG                                , RULL(0x2D0303FE), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CC_PROTECT_MODE_REG                                , RULL(0x2E0303FE), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CC_PROTECT_MODE_REG                                , RULL(0x2F0303FE), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CC_PROTECT_MODE_REG                                , RULL(0x300303FE), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CC_PROTECT_MODE_REG                                , RULL(0x310303FE), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CC_PROTECT_MODE_REG                                , RULL(0x320303FE), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CC_PROTECT_MODE_REG                                , RULL(0x330303FE), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CC_PROTECT_MODE_REG                                , RULL(0x340303FE), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CC_PROTECT_MODE_REG                                , RULL(0x350303FE), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CC_PROTECT_MODE_REG                                , RULL(0x360303FE), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CC_PROTECT_MODE_REG                                , RULL(0x370303FE), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CC_PROTECT_MODE_REG                                  , RULL(0x100303FE), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CC_PROTECT_MODE_REG                                , RULL(0x100303FE), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CC_PROTECT_MODE_REG                                , RULL(0x110303FE), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CC_PROTECT_MODE_REG                                , RULL(0x120303FE), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CC_PROTECT_MODE_REG                                , RULL(0x130303FE), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CC_PROTECT_MODE_REG                                , RULL(0x140303FE), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CC_PROTECT_MODE_REG                                , RULL(0x150303FE), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CC_PROTECT_MODE_REG                                  , RULL(0x200303FE), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210303FE,
REG64( EX_0_CC_PROTECT_MODE_REG                                , RULL(0x200303FE), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210303FE,
REG64( EX_1_CC_PROTECT_MODE_REG                                , RULL(0x220303FE), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230303FE,
REG64( EX_2_CC_PROTECT_MODE_REG                                , RULL(0x240303FE), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250303FE,
REG64( EX_3_CC_PROTECT_MODE_REG                                , RULL(0x260303FE), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270303FE,
REG64( EX_4_CC_PROTECT_MODE_REG                                , RULL(0x280303FE), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290303FE,
REG64( EX_5_CC_PROTECT_MODE_REG                                , RULL(0x2A0303FE), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0303FE,
REG64( EX_6_CC_PROTECT_MODE_REG                                , RULL(0x2C0303FE), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0303FE,
REG64( EX_7_CC_PROTECT_MODE_REG                                , RULL(0x2E0303FE), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0303FE,
REG64( EX_8_CC_PROTECT_MODE_REG                                , RULL(0x300303FE), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310303FE,
REG64( EX_9_CC_PROTECT_MODE_REG                                , RULL(0x320303FE), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330303FE,
REG64( EX_10_CC_PROTECT_MODE_REG                               , RULL(0x340303FE), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350303FE,
REG64( EX_11_CC_PROTECT_MODE_REG                               , RULL(0x360303FE), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370303FE,

REG64( PEC_0_CC_PROTECT_MODE_REG                               , RULL(0x0D0303FE), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CC_PROTECT_MODE_REG                               , RULL(0x0E0303FE), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CC_PROTECT_MODE_REG                               , RULL(0x0F0303FE), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_0_STACK0_CERR_RPT0_REG                              , RULL(0x04010C4A), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_0_STACK1_CERR_RPT0_REG                              , RULL(0x04010C8A), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_0_STACK2_CERR_RPT0_REG                              , RULL(0x04010CCA), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK0_CERR_RPT0_REG                              , RULL(0x0401104A), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK1_CERR_RPT0_REG                              , RULL(0x0401108A), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK2_CERR_RPT0_REG                              , RULL(0x040110CA), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK0_CERR_RPT0_REG                              , RULL(0x0401144A), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK1_CERR_RPT0_REG                              , RULL(0x0401148A), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK2_CERR_RPT0_REG                              , RULL(0x040114CA), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK0_CERR_RPT0_REG                                , RULL(0x04010C4A), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK1_CERR_RPT0_REG                                , RULL(0x04010C8A), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK2_CERR_RPT0_REG                                , RULL(0x04010CCA), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RO   );

REG64( PEC_0_STACK0_CERR_RPT1_REG                              , RULL(0x04010C4B), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_0_STACK1_CERR_RPT1_REG                              , RULL(0x04010C8B), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_0_STACK2_CERR_RPT1_REG                              , RULL(0x04010CCB), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK0_CERR_RPT1_REG                              , RULL(0x0401104B), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK1_CERR_RPT1_REG                              , RULL(0x0401108B), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK2_CERR_RPT1_REG                              , RULL(0x040110CB), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK0_CERR_RPT1_REG                              , RULL(0x0401144B), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK1_CERR_RPT1_REG                              , RULL(0x0401148B), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK2_CERR_RPT1_REG                              , RULL(0x040114CB), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK0_CERR_RPT1_REG                                , RULL(0x04010C4B), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK1_CERR_RPT1_REG                                , RULL(0x04010C8B), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK2_CERR_RPT1_REG                                , RULL(0x04010CCB), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RO   );

REG64( C_CLK_REGION                                            , RULL(0x20030006), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CLK_REGION                                          , RULL(0x20030006), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CLK_REGION                                          , RULL(0x21030006), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CLK_REGION                                          , RULL(0x22030006), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CLK_REGION                                          , RULL(0x23030006), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CLK_REGION                                          , RULL(0x24030006), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CLK_REGION                                          , RULL(0x25030006), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CLK_REGION                                          , RULL(0x26030006), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CLK_REGION                                          , RULL(0x27030006), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CLK_REGION                                          , RULL(0x28030006), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CLK_REGION                                          , RULL(0x29030006), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CLK_REGION                                         , RULL(0x2A030006), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CLK_REGION                                         , RULL(0x2B030006), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CLK_REGION                                         , RULL(0x2C030006), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CLK_REGION                                         , RULL(0x2D030006), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CLK_REGION                                         , RULL(0x2E030006), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CLK_REGION                                         , RULL(0x2F030006), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CLK_REGION                                         , RULL(0x30030006), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CLK_REGION                                         , RULL(0x31030006), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CLK_REGION                                         , RULL(0x32030006), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CLK_REGION                                         , RULL(0x33030006), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CLK_REGION                                         , RULL(0x34030006), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CLK_REGION                                         , RULL(0x35030006), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CLK_REGION                                         , RULL(0x36030006), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CLK_REGION                                         , RULL(0x37030006), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CLK_REGION                                           , RULL(0x10030006), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CLK_REGION                                         , RULL(0x10030006), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CLK_REGION                                         , RULL(0x11030006), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CLK_REGION                                         , RULL(0x12030006), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CLK_REGION                                         , RULL(0x13030006), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CLK_REGION                                         , RULL(0x14030006), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CLK_REGION                                         , RULL(0x15030006), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CLK_REGION                                           , RULL(0x20030006), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030006,
REG64( EX_0_CLK_REGION                                         , RULL(0x20030006), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030006,
REG64( EX_1_CLK_REGION                                         , RULL(0x22030006), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030006,
REG64( EX_2_CLK_REGION                                         , RULL(0x24030006), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030006,
REG64( EX_3_CLK_REGION                                         , RULL(0x26030006), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030006,
REG64( EX_4_CLK_REGION                                         , RULL(0x28030006), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030006,
REG64( EX_5_CLK_REGION                                         , RULL(0x2A030006), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030006,
REG64( EX_6_CLK_REGION                                         , RULL(0x2C030006), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030006,
REG64( EX_7_CLK_REGION                                         , RULL(0x2E030006), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030006,
REG64( EX_8_CLK_REGION                                         , RULL(0x30030006), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030006,
REG64( EX_9_CLK_REGION                                         , RULL(0x32030006), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030006,
REG64( EX_10_CLK_REGION                                        , RULL(0x34030006), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030006,
REG64( EX_11_CLK_REGION                                        , RULL(0x36030006), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030006,

REG64( PEC_0_CLK_REGION                                        , RULL(0x0D030006), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CLK_REGION                                        , RULL(0x0E030006), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CLK_REGION                                        , RULL(0x0F030006), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CLOCK_STAT_ARY                                        , RULL(0x2003000A), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CLOCK_STAT_ARY                                      , RULL(0x2003000A), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CLOCK_STAT_ARY                                      , RULL(0x2103000A), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CLOCK_STAT_ARY                                      , RULL(0x2203000A), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CLOCK_STAT_ARY                                      , RULL(0x2303000A), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CLOCK_STAT_ARY                                      , RULL(0x2403000A), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CLOCK_STAT_ARY                                      , RULL(0x2503000A), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CLOCK_STAT_ARY                                      , RULL(0x2603000A), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CLOCK_STAT_ARY                                      , RULL(0x2703000A), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CLOCK_STAT_ARY                                      , RULL(0x2803000A), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CLOCK_STAT_ARY                                      , RULL(0x2903000A), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CLOCK_STAT_ARY                                     , RULL(0x2A03000A), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CLOCK_STAT_ARY                                     , RULL(0x2B03000A), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CLOCK_STAT_ARY                                     , RULL(0x2C03000A), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CLOCK_STAT_ARY                                     , RULL(0x2D03000A), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CLOCK_STAT_ARY                                     , RULL(0x2E03000A), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CLOCK_STAT_ARY                                     , RULL(0x2F03000A), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CLOCK_STAT_ARY                                     , RULL(0x3003000A), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CLOCK_STAT_ARY                                     , RULL(0x3103000A), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CLOCK_STAT_ARY                                     , RULL(0x3203000A), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CLOCK_STAT_ARY                                     , RULL(0x3303000A), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CLOCK_STAT_ARY                                     , RULL(0x3403000A), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CLOCK_STAT_ARY                                     , RULL(0x3503000A), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CLOCK_STAT_ARY                                     , RULL(0x3603000A), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CLOCK_STAT_ARY                                     , RULL(0x3703000A), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CLOCK_STAT_ARY                                       , RULL(0x1003000A), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CLOCK_STAT_ARY                                     , RULL(0x1003000A), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CLOCK_STAT_ARY                                     , RULL(0x1103000A), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CLOCK_STAT_ARY                                     , RULL(0x1203000A), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CLOCK_STAT_ARY                                     , RULL(0x1303000A), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CLOCK_STAT_ARY                                     , RULL(0x1403000A), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CLOCK_STAT_ARY                                     , RULL(0x1503000A), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CLOCK_STAT_ARY                                       , RULL(0x2003000A), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 2103000A,
REG64( EX_0_CLOCK_STAT_ARY                                     , RULL(0x2003000A), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 2103000A,
REG64( EX_1_CLOCK_STAT_ARY                                     , RULL(0x2203000A), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 2303000A,
REG64( EX_2_CLOCK_STAT_ARY                                     , RULL(0x2403000A), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 2503000A,
REG64( EX_3_CLOCK_STAT_ARY                                     , RULL(0x2603000A), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 2703000A,
REG64( EX_4_CLOCK_STAT_ARY                                     , RULL(0x2803000A), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 2903000A,
REG64( EX_5_CLOCK_STAT_ARY                                     , RULL(0x2A03000A), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B03000A,
REG64( EX_6_CLOCK_STAT_ARY                                     , RULL(0x2C03000A), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D03000A,
REG64( EX_7_CLOCK_STAT_ARY                                     , RULL(0x2E03000A), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F03000A,
REG64( EX_8_CLOCK_STAT_ARY                                     , RULL(0x3003000A), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 3103000A,
REG64( EX_9_CLOCK_STAT_ARY                                     , RULL(0x3203000A), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 3303000A,
REG64( EX_10_CLOCK_STAT_ARY                                    , RULL(0x3403000A), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 3503000A,
REG64( EX_11_CLOCK_STAT_ARY                                    , RULL(0x3603000A), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 3703000A,

REG64( PEC_0_CLOCK_STAT_ARY                                    , RULL(0x0D03000A), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CLOCK_STAT_ARY                                    , RULL(0x0E03000A), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CLOCK_STAT_ARY                                    , RULL(0x0F03000A), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CLOCK_STAT_NSL                                        , RULL(0x20030009), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CLOCK_STAT_NSL                                      , RULL(0x20030009), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CLOCK_STAT_NSL                                      , RULL(0x21030009), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CLOCK_STAT_NSL                                      , RULL(0x22030009), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CLOCK_STAT_NSL                                      , RULL(0x23030009), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CLOCK_STAT_NSL                                      , RULL(0x24030009), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CLOCK_STAT_NSL                                      , RULL(0x25030009), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CLOCK_STAT_NSL                                      , RULL(0x26030009), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CLOCK_STAT_NSL                                      , RULL(0x27030009), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CLOCK_STAT_NSL                                      , RULL(0x28030009), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CLOCK_STAT_NSL                                      , RULL(0x29030009), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CLOCK_STAT_NSL                                     , RULL(0x2A030009), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CLOCK_STAT_NSL                                     , RULL(0x2B030009), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CLOCK_STAT_NSL                                     , RULL(0x2C030009), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CLOCK_STAT_NSL                                     , RULL(0x2D030009), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CLOCK_STAT_NSL                                     , RULL(0x2E030009), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CLOCK_STAT_NSL                                     , RULL(0x2F030009), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CLOCK_STAT_NSL                                     , RULL(0x30030009), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CLOCK_STAT_NSL                                     , RULL(0x31030009), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CLOCK_STAT_NSL                                     , RULL(0x32030009), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CLOCK_STAT_NSL                                     , RULL(0x33030009), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CLOCK_STAT_NSL                                     , RULL(0x34030009), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CLOCK_STAT_NSL                                     , RULL(0x35030009), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CLOCK_STAT_NSL                                     , RULL(0x36030009), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CLOCK_STAT_NSL                                     , RULL(0x37030009), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CLOCK_STAT_NSL                                       , RULL(0x10030009), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CLOCK_STAT_NSL                                     , RULL(0x10030009), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CLOCK_STAT_NSL                                     , RULL(0x11030009), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CLOCK_STAT_NSL                                     , RULL(0x12030009), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CLOCK_STAT_NSL                                     , RULL(0x13030009), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CLOCK_STAT_NSL                                     , RULL(0x14030009), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CLOCK_STAT_NSL                                     , RULL(0x15030009), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CLOCK_STAT_NSL                                       , RULL(0x20030009), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030009,
REG64( EX_0_CLOCK_STAT_NSL                                     , RULL(0x20030009), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030009,
REG64( EX_1_CLOCK_STAT_NSL                                     , RULL(0x22030009), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030009,
REG64( EX_2_CLOCK_STAT_NSL                                     , RULL(0x24030009), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030009,
REG64( EX_3_CLOCK_STAT_NSL                                     , RULL(0x26030009), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030009,
REG64( EX_4_CLOCK_STAT_NSL                                     , RULL(0x28030009), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030009,
REG64( EX_5_CLOCK_STAT_NSL                                     , RULL(0x2A030009), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030009,
REG64( EX_6_CLOCK_STAT_NSL                                     , RULL(0x2C030009), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030009,
REG64( EX_7_CLOCK_STAT_NSL                                     , RULL(0x2E030009), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030009,
REG64( EX_8_CLOCK_STAT_NSL                                     , RULL(0x30030009), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030009,
REG64( EX_9_CLOCK_STAT_NSL                                     , RULL(0x32030009), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030009,
REG64( EX_10_CLOCK_STAT_NSL                                    , RULL(0x34030009), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030009,
REG64( EX_11_CLOCK_STAT_NSL                                    , RULL(0x36030009), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030009,

REG64( PEC_0_CLOCK_STAT_NSL                                    , RULL(0x0D030009), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CLOCK_STAT_NSL                                    , RULL(0x0E030009), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CLOCK_STAT_NSL                                    , RULL(0x0F030009), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CLOCK_STAT_SL                                         , RULL(0x20030008), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CLOCK_STAT_SL                                       , RULL(0x20030008), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CLOCK_STAT_SL                                       , RULL(0x21030008), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CLOCK_STAT_SL                                       , RULL(0x22030008), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CLOCK_STAT_SL                                       , RULL(0x23030008), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CLOCK_STAT_SL                                       , RULL(0x24030008), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CLOCK_STAT_SL                                       , RULL(0x25030008), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CLOCK_STAT_SL                                       , RULL(0x26030008), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CLOCK_STAT_SL                                       , RULL(0x27030008), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CLOCK_STAT_SL                                       , RULL(0x28030008), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CLOCK_STAT_SL                                       , RULL(0x29030008), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CLOCK_STAT_SL                                      , RULL(0x2A030008), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CLOCK_STAT_SL                                      , RULL(0x2B030008), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CLOCK_STAT_SL                                      , RULL(0x2C030008), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CLOCK_STAT_SL                                      , RULL(0x2D030008), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CLOCK_STAT_SL                                      , RULL(0x2E030008), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CLOCK_STAT_SL                                      , RULL(0x2F030008), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CLOCK_STAT_SL                                      , RULL(0x30030008), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CLOCK_STAT_SL                                      , RULL(0x31030008), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CLOCK_STAT_SL                                      , RULL(0x32030008), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CLOCK_STAT_SL                                      , RULL(0x33030008), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CLOCK_STAT_SL                                      , RULL(0x34030008), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CLOCK_STAT_SL                                      , RULL(0x35030008), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CLOCK_STAT_SL                                      , RULL(0x36030008), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CLOCK_STAT_SL                                      , RULL(0x37030008), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CLOCK_STAT_SL                                        , RULL(0x10030008), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CLOCK_STAT_SL                                      , RULL(0x10030008), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CLOCK_STAT_SL                                      , RULL(0x11030008), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CLOCK_STAT_SL                                      , RULL(0x12030008), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CLOCK_STAT_SL                                      , RULL(0x13030008), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CLOCK_STAT_SL                                      , RULL(0x14030008), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CLOCK_STAT_SL                                      , RULL(0x15030008), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CLOCK_STAT_SL                                        , RULL(0x20030008), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030008,
REG64( EX_0_CLOCK_STAT_SL                                      , RULL(0x20030008), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030008,
REG64( EX_1_CLOCK_STAT_SL                                      , RULL(0x22030008), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030008,
REG64( EX_2_CLOCK_STAT_SL                                      , RULL(0x24030008), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030008,
REG64( EX_3_CLOCK_STAT_SL                                      , RULL(0x26030008), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030008,
REG64( EX_4_CLOCK_STAT_SL                                      , RULL(0x28030008), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030008,
REG64( EX_5_CLOCK_STAT_SL                                      , RULL(0x2A030008), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030008,
REG64( EX_6_CLOCK_STAT_SL                                      , RULL(0x2C030008), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030008,
REG64( EX_7_CLOCK_STAT_SL                                      , RULL(0x2E030008), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030008,
REG64( EX_8_CLOCK_STAT_SL                                      , RULL(0x30030008), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030008,
REG64( EX_9_CLOCK_STAT_SL                                      , RULL(0x32030008), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030008,
REG64( EX_10_CLOCK_STAT_SL                                     , RULL(0x34030008), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030008,
REG64( EX_11_CLOCK_STAT_SL                                     , RULL(0x36030008), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030008,

REG64( PEC_0_CLOCK_STAT_SL                                     , RULL(0x0D030008), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CLOCK_STAT_SL                                     , RULL(0x0E030008), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CLOCK_STAT_SL                                     , RULL(0x0F030008), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( EX_CME_LCL_DBG_PPE                                      , RULL(0x109010120), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_DBG_PPE1                                     , RULL(0x109010138), SH_UNT_EX       ,
       SH_ACS_PPE1      );
REG64( EX_CME_LCL_DBG_PPE2                                     , RULL(0x109010130), SH_UNT_EX       ,
       SH_ACS_PPE2      );
REG64( EX_0_CME_LCL_DBG_PPE                                    , RULL(0x109010120), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_DBG_PPE1                                   , RULL(0x109010138), SH_UNT_EX_0     ,
       SH_ACS_PPE1      );
REG64( EX_0_CME_LCL_DBG_PPE2                                   , RULL(0x109010130), SH_UNT_EX_0     ,
       SH_ACS_PPE2      );
REG64( EX_1_CME_LCL_DBG_PPE                                    , RULL(0x109020120), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_DBG_PPE1                                   , RULL(0x109020138), SH_UNT_EX_1     ,
       SH_ACS_PPE1      );
REG64( EX_1_CME_LCL_DBG_PPE2                                   , RULL(0x109020130), SH_UNT_EX_1     ,
       SH_ACS_PPE2      );
REG64( EX_2_CME_LCL_DBG_PPE                                    , RULL(0x10A010120), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_DBG_PPE1                                   , RULL(0x10A010138), SH_UNT_EX_2     ,
       SH_ACS_PPE1      );
REG64( EX_2_CME_LCL_DBG_PPE2                                   , RULL(0x10A010130), SH_UNT_EX_2     ,
       SH_ACS_PPE2      );
REG64( EX_3_CME_LCL_DBG_PPE                                    , RULL(0x10A020120), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_DBG_PPE1                                   , RULL(0x10A020138), SH_UNT_EX_3     ,
       SH_ACS_PPE1      );
REG64( EX_3_CME_LCL_DBG_PPE2                                   , RULL(0x10A020130), SH_UNT_EX_3     ,
       SH_ACS_PPE2      );
REG64( EX_4_CME_LCL_DBG_PPE                                    , RULL(0x10B010120), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_DBG_PPE1                                   , RULL(0x10B010138), SH_UNT_EX_4     ,
       SH_ACS_PPE1      );
REG64( EX_4_CME_LCL_DBG_PPE2                                   , RULL(0x10B010130), SH_UNT_EX_4     ,
       SH_ACS_PPE2      );
REG64( EX_5_CME_LCL_DBG_PPE                                    , RULL(0x10B020120), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_DBG_PPE1                                   , RULL(0x10B020138), SH_UNT_EX_5     ,
       SH_ACS_PPE1      );
REG64( EX_5_CME_LCL_DBG_PPE2                                   , RULL(0x10B020130), SH_UNT_EX_5     ,
       SH_ACS_PPE2      );
REG64( EX_6_CME_LCL_DBG_PPE                                    , RULL(0x10C010120), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_DBG_PPE1                                   , RULL(0x10C010138), SH_UNT_EX_6     ,
       SH_ACS_PPE1      );
REG64( EX_6_CME_LCL_DBG_PPE2                                   , RULL(0x10C010130), SH_UNT_EX_6     ,
       SH_ACS_PPE2      );
REG64( EX_7_CME_LCL_DBG_PPE                                    , RULL(0x10C020120), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_DBG_PPE1                                   , RULL(0x10C020138), SH_UNT_EX_7     ,
       SH_ACS_PPE1      );
REG64( EX_7_CME_LCL_DBG_PPE2                                   , RULL(0x10C020130), SH_UNT_EX_7     ,
       SH_ACS_PPE2      );
REG64( EX_8_CME_LCL_DBG_PPE                                    , RULL(0x10D010120), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_DBG_PPE1                                   , RULL(0x10D010138), SH_UNT_EX_8     ,
       SH_ACS_PPE1      );
REG64( EX_8_CME_LCL_DBG_PPE2                                   , RULL(0x10D010130), SH_UNT_EX_8     ,
       SH_ACS_PPE2      );
REG64( EX_9_CME_LCL_DBG_PPE                                    , RULL(0x10D020120), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_DBG_PPE1                                   , RULL(0x10D020138), SH_UNT_EX_9     ,
       SH_ACS_PPE1      );
REG64( EX_9_CME_LCL_DBG_PPE2                                   , RULL(0x10D020130), SH_UNT_EX_9     ,
       SH_ACS_PPE2      );
REG64( EX_10_CME_LCL_DBG_PPE                                   , RULL(0x10E010120), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_DBG_PPE1                                  , RULL(0x10E010138), SH_UNT_EX_10    ,
       SH_ACS_PPE1      );
REG64( EX_10_CME_LCL_DBG_PPE2                                  , RULL(0x10E010130), SH_UNT_EX_10    ,
       SH_ACS_PPE2      );
REG64( EX_11_CME_LCL_DBG_PPE                                   , RULL(0x10E020120), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_DBG_PPE1                                  , RULL(0x10E020138), SH_UNT_EX_11    ,
       SH_ACS_PPE1      );
REG64( EX_11_CME_LCL_DBG_PPE2                                  , RULL(0x10E020130), SH_UNT_EX_11    ,
       SH_ACS_PPE2      );

REG64( EQ_CME_LCL_EIMR                                         , RULL(0x10012826), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012426,
REG64( EQ_0_CME_LCL_EIMR                                       , RULL(0x10012826), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012426,
REG64( EQ_1_CME_LCL_EIMR                                       , RULL(0x11012826), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012426,
REG64( EQ_2_CME_LCL_EIMR                                       , RULL(0x12012826), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012426,
REG64( EQ_3_CME_LCL_EIMR                                       , RULL(0x13012826), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012426,
REG64( EQ_4_CME_LCL_EIMR                                       , RULL(0x14012826), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012426,
REG64( EQ_5_CME_LCL_EIMR                                       , RULL(0x15012826), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012426,
REG64( EX_CME_LCL_EIMR_PPE                                     , RULL(0x109010020), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_EIMR_PPE1                                    , RULL(0x109010038), SH_UNT_EX       ,
       SH_ACS_PPE1      );
REG64( EX_CME_LCL_EIMR_PPE2                                    , RULL(0x109010030), SH_UNT_EX       ,
       SH_ACS_PPE2      );
REG64( EX_CME_LCL_EIMR_SCOM                                    , RULL(0x10012426), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_LCL_EIMR_PPE                                   , RULL(0x109010020), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_EIMR_PPE1                                  , RULL(0x109010038), SH_UNT_EX_0     ,
       SH_ACS_PPE1      );
REG64( EX_0_CME_LCL_EIMR_PPE2                                  , RULL(0x109010030), SH_UNT_EX_0     ,
       SH_ACS_PPE2      );
REG64( EX_0_CME_LCL_EIMR_SCOM                                  , RULL(0x10012426), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_LCL_EIMR_PPE                                   , RULL(0x109020020), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_EIMR_PPE1                                  , RULL(0x109020038), SH_UNT_EX_1     ,
       SH_ACS_PPE1      );
REG64( EX_1_CME_LCL_EIMR_PPE2                                  , RULL(0x109020030), SH_UNT_EX_1     ,
       SH_ACS_PPE2      );
REG64( EX_1_CME_LCL_EIMR_SCOM                                  , RULL(0x10012826), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_LCL_EIMR_PPE                                   , RULL(0x10A010020), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_EIMR_PPE1                                  , RULL(0x10A010038), SH_UNT_EX_2     ,
       SH_ACS_PPE1      );
REG64( EX_2_CME_LCL_EIMR_PPE2                                  , RULL(0x10A010030), SH_UNT_EX_2     ,
       SH_ACS_PPE2      );
REG64( EX_2_CME_LCL_EIMR_SCOM                                  , RULL(0x11012426), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_LCL_EIMR_PPE                                   , RULL(0x10A020020), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_EIMR_PPE1                                  , RULL(0x10A020038), SH_UNT_EX_3     ,
       SH_ACS_PPE1      );
REG64( EX_3_CME_LCL_EIMR_PPE2                                  , RULL(0x10A020030), SH_UNT_EX_3     ,
       SH_ACS_PPE2      );
REG64( EX_3_CME_LCL_EIMR_SCOM                                  , RULL(0x11012826), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_LCL_EIMR_PPE                                   , RULL(0x10B010020), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_EIMR_PPE1                                  , RULL(0x10B010038), SH_UNT_EX_4     ,
       SH_ACS_PPE1      );
REG64( EX_4_CME_LCL_EIMR_PPE2                                  , RULL(0x10B010030), SH_UNT_EX_4     ,
       SH_ACS_PPE2      );
REG64( EX_4_CME_LCL_EIMR_SCOM                                  , RULL(0x12012426), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_LCL_EIMR_PPE                                   , RULL(0x10B020020), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_EIMR_PPE1                                  , RULL(0x10B020038), SH_UNT_EX_5     ,
       SH_ACS_PPE1      );
REG64( EX_5_CME_LCL_EIMR_PPE2                                  , RULL(0x10B020030), SH_UNT_EX_5     ,
       SH_ACS_PPE2      );
REG64( EX_5_CME_LCL_EIMR_SCOM                                  , RULL(0x12012826), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_LCL_EIMR_PPE                                   , RULL(0x10C010020), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_EIMR_PPE1                                  , RULL(0x10C010038), SH_UNT_EX_6     ,
       SH_ACS_PPE1      );
REG64( EX_6_CME_LCL_EIMR_PPE2                                  , RULL(0x10C010030), SH_UNT_EX_6     ,
       SH_ACS_PPE2      );
REG64( EX_6_CME_LCL_EIMR_SCOM                                  , RULL(0x13012426), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_LCL_EIMR_PPE                                   , RULL(0x10C020020), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_EIMR_PPE1                                  , RULL(0x10C020038), SH_UNT_EX_7     ,
       SH_ACS_PPE1      );
REG64( EX_7_CME_LCL_EIMR_PPE2                                  , RULL(0x10C020030), SH_UNT_EX_7     ,
       SH_ACS_PPE2      );
REG64( EX_7_CME_LCL_EIMR_SCOM                                  , RULL(0x13012826), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_LCL_EIMR_PPE                                   , RULL(0x10D010020), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_EIMR_PPE1                                  , RULL(0x10D010038), SH_UNT_EX_8     ,
       SH_ACS_PPE1      );
REG64( EX_8_CME_LCL_EIMR_PPE2                                  , RULL(0x10D010030), SH_UNT_EX_8     ,
       SH_ACS_PPE2      );
REG64( EX_8_CME_LCL_EIMR_SCOM                                  , RULL(0x14012426), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_LCL_EIMR_PPE                                   , RULL(0x10D020020), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_EIMR_PPE1                                  , RULL(0x10D020038), SH_UNT_EX_9     ,
       SH_ACS_PPE1      );
REG64( EX_9_CME_LCL_EIMR_PPE2                                  , RULL(0x10D020030), SH_UNT_EX_9     ,
       SH_ACS_PPE2      );
REG64( EX_9_CME_LCL_EIMR_SCOM                                  , RULL(0x14012826), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_LCL_EIMR_PPE                                  , RULL(0x10E010020), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_EIMR_PPE1                                 , RULL(0x10E010038), SH_UNT_EX_10    ,
       SH_ACS_PPE1      );
REG64( EX_10_CME_LCL_EIMR_PPE2                                 , RULL(0x10E010030), SH_UNT_EX_10    ,
       SH_ACS_PPE2      );
REG64( EX_10_CME_LCL_EIMR_SCOM                                 , RULL(0x15012426), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_LCL_EIMR_PPE                                  , RULL(0x10E020020), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_EIMR_PPE1                                 , RULL(0x10E020038), SH_UNT_EX_11    ,
       SH_ACS_PPE1      );
REG64( EX_11_CME_LCL_EIMR_PPE2                                 , RULL(0x10E020030), SH_UNT_EX_11    ,
       SH_ACS_PPE2      );
REG64( EX_11_CME_LCL_EIMR_SCOM                                 , RULL(0x15012826), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_LCL_EINR                                         , RULL(0x1001282A), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001242A,
REG64( EQ_0_CME_LCL_EINR                                       , RULL(0x1001282A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001242A,
REG64( EQ_1_CME_LCL_EINR                                       , RULL(0x1101282A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101242A,
REG64( EQ_2_CME_LCL_EINR                                       , RULL(0x1201282A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201242A,
REG64( EQ_3_CME_LCL_EINR                                       , RULL(0x1301282A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301242A,
REG64( EQ_4_CME_LCL_EINR                                       , RULL(0x1401282A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401242A,
REG64( EQ_5_CME_LCL_EINR                                       , RULL(0x1501282A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501242A,
REG64( EX_CME_LCL_EINR_PPE                                     , RULL(0x1090100A0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_EINR_SCOM                                    , RULL(0x1001242A), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_LCL_EINR_PPE                                   , RULL(0x1090100A0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_EINR_SCOM                                  , RULL(0x1001242A), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_LCL_EINR_PPE                                   , RULL(0x1090200A0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_EINR_SCOM                                  , RULL(0x1001282A), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_LCL_EINR_PPE                                   , RULL(0x10A0100A0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_EINR_SCOM                                  , RULL(0x1101242A), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_LCL_EINR_PPE                                   , RULL(0x10A0200A0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_EINR_SCOM                                  , RULL(0x1101282A), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_LCL_EINR_PPE                                   , RULL(0x10B0100A0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_EINR_SCOM                                  , RULL(0x1201242A), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_LCL_EINR_PPE                                   , RULL(0x10B0200A0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_EINR_SCOM                                  , RULL(0x1201282A), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_LCL_EINR_PPE                                   , RULL(0x10C0100A0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_EINR_SCOM                                  , RULL(0x1301242A), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_LCL_EINR_PPE                                   , RULL(0x10C0200A0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_EINR_SCOM                                  , RULL(0x1301282A), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_LCL_EINR_PPE                                   , RULL(0x10D0100A0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_EINR_SCOM                                  , RULL(0x1401242A), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_LCL_EINR_PPE                                   , RULL(0x10D0200A0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_EINR_SCOM                                  , RULL(0x1401282A), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_LCL_EINR_PPE                                  , RULL(0x10E0100A0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_EINR_SCOM                                 , RULL(0x1501242A), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_LCL_EINR_PPE                                  , RULL(0x10E0200A0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_EINR_SCOM                                 , RULL(0x1501282A), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_LCL_EIPR                                         , RULL(0x10012827), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012427,
REG64( EQ_0_CME_LCL_EIPR                                       , RULL(0x10012827), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012427,
REG64( EQ_1_CME_LCL_EIPR                                       , RULL(0x11012827), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012427,
REG64( EQ_2_CME_LCL_EIPR                                       , RULL(0x12012827), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012427,
REG64( EQ_3_CME_LCL_EIPR                                       , RULL(0x13012827), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012427,
REG64( EQ_4_CME_LCL_EIPR                                       , RULL(0x14012827), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012427,
REG64( EQ_5_CME_LCL_EIPR                                       , RULL(0x15012827), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012427,
REG64( EX_CME_LCL_EIPR_PPE                                     , RULL(0x109010040), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_EIPR_PPE1                                    , RULL(0x109010058), SH_UNT_EX       ,
       SH_ACS_PPE1      );
REG64( EX_CME_LCL_EIPR_PPE2                                    , RULL(0x109010050), SH_UNT_EX       ,
       SH_ACS_PPE2      );
REG64( EX_CME_LCL_EIPR_SCOM                                    , RULL(0x10012427), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_LCL_EIPR_PPE                                   , RULL(0x109010040), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_EIPR_PPE1                                  , RULL(0x109010058), SH_UNT_EX_0     ,
       SH_ACS_PPE1      );
REG64( EX_0_CME_LCL_EIPR_PPE2                                  , RULL(0x109010050), SH_UNT_EX_0     ,
       SH_ACS_PPE2      );
REG64( EX_0_CME_LCL_EIPR_SCOM                                  , RULL(0x10012427), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_LCL_EIPR_PPE                                   , RULL(0x109020040), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_EIPR_PPE1                                  , RULL(0x109020058), SH_UNT_EX_1     ,
       SH_ACS_PPE1      );
REG64( EX_1_CME_LCL_EIPR_PPE2                                  , RULL(0x109020050), SH_UNT_EX_1     ,
       SH_ACS_PPE2      );
REG64( EX_1_CME_LCL_EIPR_SCOM                                  , RULL(0x10012827), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_LCL_EIPR_PPE                                   , RULL(0x10A010040), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_EIPR_PPE1                                  , RULL(0x10A010058), SH_UNT_EX_2     ,
       SH_ACS_PPE1      );
REG64( EX_2_CME_LCL_EIPR_PPE2                                  , RULL(0x10A010050), SH_UNT_EX_2     ,
       SH_ACS_PPE2      );
REG64( EX_2_CME_LCL_EIPR_SCOM                                  , RULL(0x11012427), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_LCL_EIPR_PPE                                   , RULL(0x10A020040), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_EIPR_PPE1                                  , RULL(0x10A020058), SH_UNT_EX_3     ,
       SH_ACS_PPE1      );
REG64( EX_3_CME_LCL_EIPR_PPE2                                  , RULL(0x10A020050), SH_UNT_EX_3     ,
       SH_ACS_PPE2      );
REG64( EX_3_CME_LCL_EIPR_SCOM                                  , RULL(0x11012827), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_LCL_EIPR_PPE                                   , RULL(0x10B010040), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_EIPR_PPE1                                  , RULL(0x10B010058), SH_UNT_EX_4     ,
       SH_ACS_PPE1      );
REG64( EX_4_CME_LCL_EIPR_PPE2                                  , RULL(0x10B010050), SH_UNT_EX_4     ,
       SH_ACS_PPE2      );
REG64( EX_4_CME_LCL_EIPR_SCOM                                  , RULL(0x12012427), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_LCL_EIPR_PPE                                   , RULL(0x10B020040), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_EIPR_PPE1                                  , RULL(0x10B020058), SH_UNT_EX_5     ,
       SH_ACS_PPE1      );
REG64( EX_5_CME_LCL_EIPR_PPE2                                  , RULL(0x10B020050), SH_UNT_EX_5     ,
       SH_ACS_PPE2      );
REG64( EX_5_CME_LCL_EIPR_SCOM                                  , RULL(0x12012827), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_LCL_EIPR_PPE                                   , RULL(0x10C010040), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_EIPR_PPE1                                  , RULL(0x10C010058), SH_UNT_EX_6     ,
       SH_ACS_PPE1      );
REG64( EX_6_CME_LCL_EIPR_PPE2                                  , RULL(0x10C010050), SH_UNT_EX_6     ,
       SH_ACS_PPE2      );
REG64( EX_6_CME_LCL_EIPR_SCOM                                  , RULL(0x13012427), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_LCL_EIPR_PPE                                   , RULL(0x10C020040), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_EIPR_PPE1                                  , RULL(0x10C020058), SH_UNT_EX_7     ,
       SH_ACS_PPE1      );
REG64( EX_7_CME_LCL_EIPR_PPE2                                  , RULL(0x10C020050), SH_UNT_EX_7     ,
       SH_ACS_PPE2      );
REG64( EX_7_CME_LCL_EIPR_SCOM                                  , RULL(0x13012827), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_LCL_EIPR_PPE                                   , RULL(0x10D010040), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_EIPR_PPE1                                  , RULL(0x10D010058), SH_UNT_EX_8     ,
       SH_ACS_PPE1      );
REG64( EX_8_CME_LCL_EIPR_PPE2                                  , RULL(0x10D010050), SH_UNT_EX_8     ,
       SH_ACS_PPE2      );
REG64( EX_8_CME_LCL_EIPR_SCOM                                  , RULL(0x14012427), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_LCL_EIPR_PPE                                   , RULL(0x10D020040), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_EIPR_PPE1                                  , RULL(0x10D020058), SH_UNT_EX_9     ,
       SH_ACS_PPE1      );
REG64( EX_9_CME_LCL_EIPR_PPE2                                  , RULL(0x10D020050), SH_UNT_EX_9     ,
       SH_ACS_PPE2      );
REG64( EX_9_CME_LCL_EIPR_SCOM                                  , RULL(0x14012827), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_LCL_EIPR_PPE                                  , RULL(0x10E010040), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_EIPR_PPE1                                 , RULL(0x10E010058), SH_UNT_EX_10    ,
       SH_ACS_PPE1      );
REG64( EX_10_CME_LCL_EIPR_PPE2                                 , RULL(0x10E010050), SH_UNT_EX_10    ,
       SH_ACS_PPE2      );
REG64( EX_10_CME_LCL_EIPR_SCOM                                 , RULL(0x15012427), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_LCL_EIPR_PPE                                  , RULL(0x10E020040), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_EIPR_PPE1                                 , RULL(0x10E020058), SH_UNT_EX_11    ,
       SH_ACS_PPE1      );
REG64( EX_11_CME_LCL_EIPR_PPE2                                 , RULL(0x10E020050), SH_UNT_EX_11    ,
       SH_ACS_PPE2      );
REG64( EX_11_CME_LCL_EIPR_SCOM                                 , RULL(0x15012827), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EX_CME_LCL_EISR_PPE                                     , RULL(0x109010000), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_EISR_PPE1                                    , RULL(0x109010018), SH_UNT_EX       ,
       SH_ACS_PPE1      );
REG64( EX_CME_LCL_EISR_PPE2                                    , RULL(0x109010010), SH_UNT_EX       ,
       SH_ACS_PPE2      );
REG64( EX_0_CME_LCL_EISR_PPE                                   , RULL(0x109010000), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_EISR_PPE1                                  , RULL(0x109010018), SH_UNT_EX_0     ,
       SH_ACS_PPE1      );
REG64( EX_0_CME_LCL_EISR_PPE2                                  , RULL(0x109010010), SH_UNT_EX_0     ,
       SH_ACS_PPE2      );
REG64( EX_1_CME_LCL_EISR_PPE                                   , RULL(0x109020000), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_EISR_PPE1                                  , RULL(0x109020018), SH_UNT_EX_1     ,
       SH_ACS_PPE1      );
REG64( EX_1_CME_LCL_EISR_PPE2                                  , RULL(0x109020010), SH_UNT_EX_1     ,
       SH_ACS_PPE2      );
REG64( EX_2_CME_LCL_EISR_PPE                                   , RULL(0x10A010000), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_EISR_PPE1                                  , RULL(0x10A010018), SH_UNT_EX_2     ,
       SH_ACS_PPE1      );
REG64( EX_2_CME_LCL_EISR_PPE2                                  , RULL(0x10A010010), SH_UNT_EX_2     ,
       SH_ACS_PPE2      );
REG64( EX_3_CME_LCL_EISR_PPE                                   , RULL(0x10A020000), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_EISR_PPE1                                  , RULL(0x10A020018), SH_UNT_EX_3     ,
       SH_ACS_PPE1      );
REG64( EX_3_CME_LCL_EISR_PPE2                                  , RULL(0x10A020010), SH_UNT_EX_3     ,
       SH_ACS_PPE2      );
REG64( EX_4_CME_LCL_EISR_PPE                                   , RULL(0x10B010000), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_EISR_PPE1                                  , RULL(0x10B010018), SH_UNT_EX_4     ,
       SH_ACS_PPE1      );
REG64( EX_4_CME_LCL_EISR_PPE2                                  , RULL(0x10B010010), SH_UNT_EX_4     ,
       SH_ACS_PPE2      );
REG64( EX_5_CME_LCL_EISR_PPE                                   , RULL(0x10B020000), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_EISR_PPE1                                  , RULL(0x10B020018), SH_UNT_EX_5     ,
       SH_ACS_PPE1      );
REG64( EX_5_CME_LCL_EISR_PPE2                                  , RULL(0x10B020010), SH_UNT_EX_5     ,
       SH_ACS_PPE2      );
REG64( EX_6_CME_LCL_EISR_PPE                                   , RULL(0x10C010000), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_EISR_PPE1                                  , RULL(0x10C010018), SH_UNT_EX_6     ,
       SH_ACS_PPE1      );
REG64( EX_6_CME_LCL_EISR_PPE2                                  , RULL(0x10C010010), SH_UNT_EX_6     ,
       SH_ACS_PPE2      );
REG64( EX_7_CME_LCL_EISR_PPE                                   , RULL(0x10C020000), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_EISR_PPE1                                  , RULL(0x10C020018), SH_UNT_EX_7     ,
       SH_ACS_PPE1      );
REG64( EX_7_CME_LCL_EISR_PPE2                                  , RULL(0x10C020010), SH_UNT_EX_7     ,
       SH_ACS_PPE2      );
REG64( EX_8_CME_LCL_EISR_PPE                                   , RULL(0x10D010000), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_EISR_PPE1                                  , RULL(0x10D010018), SH_UNT_EX_8     ,
       SH_ACS_PPE1      );
REG64( EX_8_CME_LCL_EISR_PPE2                                  , RULL(0x10D010010), SH_UNT_EX_8     ,
       SH_ACS_PPE2      );
REG64( EX_9_CME_LCL_EISR_PPE                                   , RULL(0x10D020000), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_EISR_PPE1                                  , RULL(0x10D020018), SH_UNT_EX_9     ,
       SH_ACS_PPE1      );
REG64( EX_9_CME_LCL_EISR_PPE2                                  , RULL(0x10D020010), SH_UNT_EX_9     ,
       SH_ACS_PPE2      );
REG64( EX_10_CME_LCL_EISR_PPE                                  , RULL(0x10E010000), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_EISR_PPE1                                 , RULL(0x10E010018), SH_UNT_EX_10    ,
       SH_ACS_PPE1      );
REG64( EX_10_CME_LCL_EISR_PPE2                                 , RULL(0x10E010010), SH_UNT_EX_10    ,
       SH_ACS_PPE2      );
REG64( EX_11_CME_LCL_EISR_PPE                                  , RULL(0x10E020000), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_EISR_PPE1                                 , RULL(0x10E020018), SH_UNT_EX_11    ,
       SH_ACS_PPE1      );
REG64( EX_11_CME_LCL_EISR_PPE2                                 , RULL(0x10E020010), SH_UNT_EX_11    ,
       SH_ACS_PPE2      );

REG64( EQ_CME_LCL_EISTR                                        , RULL(0x10012829), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012429,
REG64( EQ_0_CME_LCL_EISTR                                      , RULL(0x10012829), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012429,
REG64( EQ_1_CME_LCL_EISTR                                      , RULL(0x11012829), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012429,
REG64( EQ_2_CME_LCL_EISTR                                      , RULL(0x12012829), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012429,
REG64( EQ_3_CME_LCL_EISTR                                      , RULL(0x13012829), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012429,
REG64( EQ_4_CME_LCL_EISTR                                      , RULL(0x14012829), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012429,
REG64( EQ_5_CME_LCL_EISTR                                      , RULL(0x15012829), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012429,
REG64( EX_CME_LCL_EISTR_PPE                                    , RULL(0x109010080), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_EISTR_SCOM                                   , RULL(0x10012429), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_LCL_EISTR_PPE                                  , RULL(0x109010080), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_EISTR_SCOM                                 , RULL(0x10012429), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_LCL_EISTR_PPE                                  , RULL(0x109020080), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_EISTR_SCOM                                 , RULL(0x10012829), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_LCL_EISTR_PPE                                  , RULL(0x10A010080), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_EISTR_SCOM                                 , RULL(0x11012429), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_LCL_EISTR_PPE                                  , RULL(0x10A020080), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_EISTR_SCOM                                 , RULL(0x11012829), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_LCL_EISTR_PPE                                  , RULL(0x10B010080), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_EISTR_SCOM                                 , RULL(0x12012429), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_LCL_EISTR_PPE                                  , RULL(0x10B020080), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_EISTR_SCOM                                 , RULL(0x12012829), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_LCL_EISTR_PPE                                  , RULL(0x10C010080), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_EISTR_SCOM                                 , RULL(0x13012429), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_LCL_EISTR_PPE                                  , RULL(0x10C020080), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_EISTR_SCOM                                 , RULL(0x13012829), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_LCL_EISTR_PPE                                  , RULL(0x10D010080), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_EISTR_SCOM                                 , RULL(0x14012429), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_LCL_EISTR_PPE                                  , RULL(0x10D020080), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_EISTR_SCOM                                 , RULL(0x14012829), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_LCL_EISTR_PPE                                 , RULL(0x10E010080), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_EISTR_SCOM                                , RULL(0x15012429), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_LCL_EISTR_PPE                                 , RULL(0x10E020080), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_EISTR_SCOM                                , RULL(0x15012829), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_LCL_EITR                                         , RULL(0x10012828), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012428,
REG64( EQ_0_CME_LCL_EITR                                       , RULL(0x10012828), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012428,
REG64( EQ_1_CME_LCL_EITR                                       , RULL(0x11012828), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012428,
REG64( EQ_2_CME_LCL_EITR                                       , RULL(0x12012828), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012428,
REG64( EQ_3_CME_LCL_EITR                                       , RULL(0x13012828), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012428,
REG64( EQ_4_CME_LCL_EITR                                       , RULL(0x14012828), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012428,
REG64( EQ_5_CME_LCL_EITR                                       , RULL(0x15012828), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012428,
REG64( EX_CME_LCL_EITR_PPE                                     , RULL(0x109010060), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_EITR_PPE1                                    , RULL(0x109010078), SH_UNT_EX       ,
       SH_ACS_PPE1      );
REG64( EX_CME_LCL_EITR_PPE2                                    , RULL(0x109010070), SH_UNT_EX       ,
       SH_ACS_PPE2      );
REG64( EX_CME_LCL_EITR_SCOM                                    , RULL(0x10012428), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_LCL_EITR_PPE                                   , RULL(0x109010060), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_EITR_PPE1                                  , RULL(0x109010078), SH_UNT_EX_0     ,
       SH_ACS_PPE1      );
REG64( EX_0_CME_LCL_EITR_PPE2                                  , RULL(0x109010070), SH_UNT_EX_0     ,
       SH_ACS_PPE2      );
REG64( EX_0_CME_LCL_EITR_SCOM                                  , RULL(0x10012428), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_LCL_EITR_PPE                                   , RULL(0x109020060), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_EITR_PPE1                                  , RULL(0x109020078), SH_UNT_EX_1     ,
       SH_ACS_PPE1      );
REG64( EX_1_CME_LCL_EITR_PPE2                                  , RULL(0x109020070), SH_UNT_EX_1     ,
       SH_ACS_PPE2      );
REG64( EX_1_CME_LCL_EITR_SCOM                                  , RULL(0x10012828), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_LCL_EITR_PPE                                   , RULL(0x10A010060), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_EITR_PPE1                                  , RULL(0x10A010078), SH_UNT_EX_2     ,
       SH_ACS_PPE1      );
REG64( EX_2_CME_LCL_EITR_PPE2                                  , RULL(0x10A010070), SH_UNT_EX_2     ,
       SH_ACS_PPE2      );
REG64( EX_2_CME_LCL_EITR_SCOM                                  , RULL(0x11012428), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_LCL_EITR_PPE                                   , RULL(0x10A020060), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_EITR_PPE1                                  , RULL(0x10A020078), SH_UNT_EX_3     ,
       SH_ACS_PPE1      );
REG64( EX_3_CME_LCL_EITR_PPE2                                  , RULL(0x10A020070), SH_UNT_EX_3     ,
       SH_ACS_PPE2      );
REG64( EX_3_CME_LCL_EITR_SCOM                                  , RULL(0x11012828), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_LCL_EITR_PPE                                   , RULL(0x10B010060), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_EITR_PPE1                                  , RULL(0x10B010078), SH_UNT_EX_4     ,
       SH_ACS_PPE1      );
REG64( EX_4_CME_LCL_EITR_PPE2                                  , RULL(0x10B010070), SH_UNT_EX_4     ,
       SH_ACS_PPE2      );
REG64( EX_4_CME_LCL_EITR_SCOM                                  , RULL(0x12012428), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_LCL_EITR_PPE                                   , RULL(0x10B020060), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_EITR_PPE1                                  , RULL(0x10B020078), SH_UNT_EX_5     ,
       SH_ACS_PPE1      );
REG64( EX_5_CME_LCL_EITR_PPE2                                  , RULL(0x10B020070), SH_UNT_EX_5     ,
       SH_ACS_PPE2      );
REG64( EX_5_CME_LCL_EITR_SCOM                                  , RULL(0x12012828), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_LCL_EITR_PPE                                   , RULL(0x10C010060), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_EITR_PPE1                                  , RULL(0x10C010078), SH_UNT_EX_6     ,
       SH_ACS_PPE1      );
REG64( EX_6_CME_LCL_EITR_PPE2                                  , RULL(0x10C010070), SH_UNT_EX_6     ,
       SH_ACS_PPE2      );
REG64( EX_6_CME_LCL_EITR_SCOM                                  , RULL(0x13012428), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_LCL_EITR_PPE                                   , RULL(0x10C020060), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_EITR_PPE1                                  , RULL(0x10C020078), SH_UNT_EX_7     ,
       SH_ACS_PPE1      );
REG64( EX_7_CME_LCL_EITR_PPE2                                  , RULL(0x10C020070), SH_UNT_EX_7     ,
       SH_ACS_PPE2      );
REG64( EX_7_CME_LCL_EITR_SCOM                                  , RULL(0x13012828), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_LCL_EITR_PPE                                   , RULL(0x10D010060), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_EITR_PPE1                                  , RULL(0x10D010078), SH_UNT_EX_8     ,
       SH_ACS_PPE1      );
REG64( EX_8_CME_LCL_EITR_PPE2                                  , RULL(0x10D010070), SH_UNT_EX_8     ,
       SH_ACS_PPE2      );
REG64( EX_8_CME_LCL_EITR_SCOM                                  , RULL(0x14012428), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_LCL_EITR_PPE                                   , RULL(0x10D020060), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_EITR_PPE1                                  , RULL(0x10D020078), SH_UNT_EX_9     ,
       SH_ACS_PPE1      );
REG64( EX_9_CME_LCL_EITR_PPE2                                  , RULL(0x10D020070), SH_UNT_EX_9     ,
       SH_ACS_PPE2      );
REG64( EX_9_CME_LCL_EITR_SCOM                                  , RULL(0x14012828), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_LCL_EITR_PPE                                  , RULL(0x10E010060), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_EITR_PPE1                                 , RULL(0x10E010078), SH_UNT_EX_10    ,
       SH_ACS_PPE1      );
REG64( EX_10_CME_LCL_EITR_PPE2                                 , RULL(0x10E010070), SH_UNT_EX_10    ,
       SH_ACS_PPE2      );
REG64( EX_10_CME_LCL_EITR_SCOM                                 , RULL(0x15012428), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_LCL_EITR_PPE                                  , RULL(0x10E020060), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_EITR_PPE1                                 , RULL(0x10E020078), SH_UNT_EX_11    ,
       SH_ACS_PPE1      );
REG64( EX_11_CME_LCL_EITR_PPE2                                 , RULL(0x10E020070), SH_UNT_EX_11    ,
       SH_ACS_PPE2      );
REG64( EX_11_CME_LCL_EITR_SCOM                                 , RULL(0x15012828), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EX_CME_LCL_ICCR_PPE                                     , RULL(0x109010700), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_ICCR_PPE1                                    , RULL(0x109010718), SH_UNT_EX       ,
       SH_ACS_PPE1      );
REG64( EX_CME_LCL_ICCR_PPE2                                    , RULL(0x109010710), SH_UNT_EX       ,
       SH_ACS_PPE2      );
REG64( EX_0_CME_LCL_ICCR_PPE                                   , RULL(0x109010700), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_ICCR_PPE1                                  , RULL(0x109010718), SH_UNT_EX_0     ,
       SH_ACS_PPE1      );
REG64( EX_0_CME_LCL_ICCR_PPE2                                  , RULL(0x109010710), SH_UNT_EX_0     ,
       SH_ACS_PPE2      );
REG64( EX_1_CME_LCL_ICCR_PPE                                   , RULL(0x109020700), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_ICCR_PPE1                                  , RULL(0x109020718), SH_UNT_EX_1     ,
       SH_ACS_PPE1      );
REG64( EX_1_CME_LCL_ICCR_PPE2                                  , RULL(0x109020710), SH_UNT_EX_1     ,
       SH_ACS_PPE2      );
REG64( EX_2_CME_LCL_ICCR_PPE                                   , RULL(0x10A010700), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_ICCR_PPE1                                  , RULL(0x10A010718), SH_UNT_EX_2     ,
       SH_ACS_PPE1      );
REG64( EX_2_CME_LCL_ICCR_PPE2                                  , RULL(0x10A010710), SH_UNT_EX_2     ,
       SH_ACS_PPE2      );
REG64( EX_3_CME_LCL_ICCR_PPE                                   , RULL(0x10A020700), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_ICCR_PPE1                                  , RULL(0x10A020718), SH_UNT_EX_3     ,
       SH_ACS_PPE1      );
REG64( EX_3_CME_LCL_ICCR_PPE2                                  , RULL(0x10A020710), SH_UNT_EX_3     ,
       SH_ACS_PPE2      );
REG64( EX_4_CME_LCL_ICCR_PPE                                   , RULL(0x10B010700), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_ICCR_PPE1                                  , RULL(0x10B010718), SH_UNT_EX_4     ,
       SH_ACS_PPE1      );
REG64( EX_4_CME_LCL_ICCR_PPE2                                  , RULL(0x10B010710), SH_UNT_EX_4     ,
       SH_ACS_PPE2      );
REG64( EX_5_CME_LCL_ICCR_PPE                                   , RULL(0x10B020700), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_ICCR_PPE1                                  , RULL(0x10B020718), SH_UNT_EX_5     ,
       SH_ACS_PPE1      );
REG64( EX_5_CME_LCL_ICCR_PPE2                                  , RULL(0x10B020710), SH_UNT_EX_5     ,
       SH_ACS_PPE2      );
REG64( EX_6_CME_LCL_ICCR_PPE                                   , RULL(0x10C010700), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_ICCR_PPE1                                  , RULL(0x10C010718), SH_UNT_EX_6     ,
       SH_ACS_PPE1      );
REG64( EX_6_CME_LCL_ICCR_PPE2                                  , RULL(0x10C010710), SH_UNT_EX_6     ,
       SH_ACS_PPE2      );
REG64( EX_7_CME_LCL_ICCR_PPE                                   , RULL(0x10C020700), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_ICCR_PPE1                                  , RULL(0x10C020718), SH_UNT_EX_7     ,
       SH_ACS_PPE1      );
REG64( EX_7_CME_LCL_ICCR_PPE2                                  , RULL(0x10C020710), SH_UNT_EX_7     ,
       SH_ACS_PPE2      );
REG64( EX_8_CME_LCL_ICCR_PPE                                   , RULL(0x10D010700), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_ICCR_PPE1                                  , RULL(0x10D010718), SH_UNT_EX_8     ,
       SH_ACS_PPE1      );
REG64( EX_8_CME_LCL_ICCR_PPE2                                  , RULL(0x10D010710), SH_UNT_EX_8     ,
       SH_ACS_PPE2      );
REG64( EX_9_CME_LCL_ICCR_PPE                                   , RULL(0x10D020700), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_ICCR_PPE1                                  , RULL(0x10D020718), SH_UNT_EX_9     ,
       SH_ACS_PPE1      );
REG64( EX_9_CME_LCL_ICCR_PPE2                                  , RULL(0x10D020710), SH_UNT_EX_9     ,
       SH_ACS_PPE2      );
REG64( EX_10_CME_LCL_ICCR_PPE                                  , RULL(0x10E010700), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_ICCR_PPE1                                 , RULL(0x10E010718), SH_UNT_EX_10    ,
       SH_ACS_PPE1      );
REG64( EX_10_CME_LCL_ICCR_PPE2                                 , RULL(0x10E010710), SH_UNT_EX_10    ,
       SH_ACS_PPE2      );
REG64( EX_11_CME_LCL_ICCR_PPE                                  , RULL(0x10E020700), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_ICCR_PPE1                                 , RULL(0x10E020718), SH_UNT_EX_11    ,
       SH_ACS_PPE1      );
REG64( EX_11_CME_LCL_ICCR_PPE2                                 , RULL(0x10E020710), SH_UNT_EX_11    ,
       SH_ACS_PPE2      );

REG64( EQ_CME_LCL_ICRR                                         , RULL(0x1001282C), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001242C,
REG64( EQ_0_CME_LCL_ICRR                                       , RULL(0x1001282C), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001242C,
REG64( EQ_1_CME_LCL_ICRR                                       , RULL(0x1101282C), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101242C,
REG64( EQ_2_CME_LCL_ICRR                                       , RULL(0x1201282C), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201242C,
REG64( EQ_3_CME_LCL_ICRR                                       , RULL(0x1301282C), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301242C,
REG64( EQ_4_CME_LCL_ICRR                                       , RULL(0x1401282C), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401242C,
REG64( EQ_5_CME_LCL_ICRR                                       , RULL(0x1501282C), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501242C,
REG64( EX_CME_LCL_ICRR_PPE                                     , RULL(0x109010740), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_ICRR_SCOM                                    , RULL(0x1001242C), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_LCL_ICRR_PPE                                   , RULL(0x109010740), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_ICRR_SCOM                                  , RULL(0x1001242C), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_LCL_ICRR_PPE                                   , RULL(0x109020740), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_ICRR_SCOM                                  , RULL(0x1001282C), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_LCL_ICRR_PPE                                   , RULL(0x10A010740), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_ICRR_SCOM                                  , RULL(0x1101242C), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_LCL_ICRR_PPE                                   , RULL(0x10A020740), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_ICRR_SCOM                                  , RULL(0x1101282C), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_LCL_ICRR_PPE                                   , RULL(0x10B010740), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_ICRR_SCOM                                  , RULL(0x1201242C), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_LCL_ICRR_PPE                                   , RULL(0x10B020740), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_ICRR_SCOM                                  , RULL(0x1201282C), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_LCL_ICRR_PPE                                   , RULL(0x10C010740), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_ICRR_SCOM                                  , RULL(0x1301242C), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_LCL_ICRR_PPE                                   , RULL(0x10C020740), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_ICRR_SCOM                                  , RULL(0x1301282C), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_LCL_ICRR_PPE                                   , RULL(0x10D010740), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_ICRR_SCOM                                  , RULL(0x1401242C), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_LCL_ICRR_PPE                                   , RULL(0x10D020740), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_ICRR_SCOM                                  , RULL(0x1401282C), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_LCL_ICRR_PPE                                  , RULL(0x10E010740), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_ICRR_SCOM                                 , RULL(0x1501242C), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_LCL_ICRR_PPE                                  , RULL(0x10E020740), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_ICRR_SCOM                                 , RULL(0x1501282C), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EX_CME_LCL_ICSR_PPE                                     , RULL(0x109010720), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_ICSR_PPE                                   , RULL(0x109010720), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_ICSR_PPE                                   , RULL(0x109020720), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_ICSR_PPE                                   , RULL(0x10A010720), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_ICSR_PPE                                   , RULL(0x10A020720), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_ICSR_PPE                                   , RULL(0x10B010720), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_ICSR_PPE                                   , RULL(0x10B020720), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_ICSR_PPE                                   , RULL(0x10C010720), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_ICSR_PPE                                   , RULL(0x10C020720), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_ICSR_PPE                                   , RULL(0x10D010720), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_ICSR_PPE                                   , RULL(0x10D020720), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_ICSR_PPE                                  , RULL(0x10E010720), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_ICSR_PPE                                  , RULL(0x10E020720), SH_UNT_EX_11    ,
       SH_ACS_PPE       );

REG64( EX_CME_LCL_LMCR_PPE                                     , RULL(0x1090101A0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_LMCR_PPE                                   , RULL(0x1090101A0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_LMCR_PPE                                   , RULL(0x1090201A0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_LMCR_PPE                                   , RULL(0x10A0101A0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_LMCR_PPE                                   , RULL(0x10A0201A0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_LMCR_PPE                                   , RULL(0x10B0101A0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_LMCR_PPE                                   , RULL(0x10B0201A0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_LMCR_PPE                                   , RULL(0x10C0101A0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_LMCR_PPE                                   , RULL(0x10C0201A0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_LMCR_PPE                                   , RULL(0x10D0101A0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_LMCR_PPE                                   , RULL(0x10D0201A0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_LMCR_PPE                                  , RULL(0x10E0101A0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_LMCR_PPE                                  , RULL(0x10E0201A0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );

REG64( EX_CME_LCL_PECESR0_PPE                                  , RULL(0x109010280), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_PECESR0_PPE                                , RULL(0x109010280), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_PECESR0_PPE                                , RULL(0x109020280), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_PECESR0_PPE                                , RULL(0x10A010280), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_PECESR0_PPE                                , RULL(0x10A020280), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_PECESR0_PPE                                , RULL(0x10B010280), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_PECESR0_PPE                                , RULL(0x10B020280), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_PECESR0_PPE                                , RULL(0x10C010280), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_PECESR0_PPE                                , RULL(0x10C020280), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_PECESR0_PPE                                , RULL(0x10D010280), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_PECESR0_PPE                                , RULL(0x10D020280), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_PECESR0_PPE                               , RULL(0x10E010280), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_PECESR0_PPE                               , RULL(0x10E020280), SH_UNT_EX_11    ,
       SH_ACS_PPE       );

REG64( EX_CME_LCL_PECESR1_PPE                                  , RULL(0x1090102A0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_PECESR1_PPE                                , RULL(0x1090102A0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_PECESR1_PPE                                , RULL(0x1090202A0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_PECESR1_PPE                                , RULL(0x10A0102A0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_PECESR1_PPE                                , RULL(0x10A0202A0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_PECESR1_PPE                                , RULL(0x10B0102A0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_PECESR1_PPE                                , RULL(0x10B0202A0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_PECESR1_PPE                                , RULL(0x10C0102A0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_PECESR1_PPE                                , RULL(0x10C0202A0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_PECESR1_PPE                                , RULL(0x10D0102A0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_PECESR1_PPE                                , RULL(0x10D0202A0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_PECESR1_PPE                               , RULL(0x10E0102A0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_PECESR1_PPE                               , RULL(0x10E0202A0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );

REG64( EQ_CME_LCL_SISR                                         , RULL(0x1001282B), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001242B,
REG64( EQ_0_CME_LCL_SISR                                       , RULL(0x1001282B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001242B,
REG64( EQ_1_CME_LCL_SISR                                       , RULL(0x1101282B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101242B,
REG64( EQ_2_CME_LCL_SISR                                       , RULL(0x1201282B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201242B,
REG64( EQ_3_CME_LCL_SISR                                       , RULL(0x1301282B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301242B,
REG64( EQ_4_CME_LCL_SISR                                       , RULL(0x1401282B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401242B,
REG64( EQ_5_CME_LCL_SISR                                       , RULL(0x1501282B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501242B,
REG64( EX_CME_LCL_SISR_PPE                                     , RULL(0x109010520), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_LCL_SISR_SCOM                                    , RULL(0x1001242B), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_LCL_SISR_PPE                                   , RULL(0x109010520), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_SISR_SCOM                                  , RULL(0x1001242B), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_LCL_SISR_PPE                                   , RULL(0x109020520), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_SISR_SCOM                                  , RULL(0x1001282B), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_LCL_SISR_PPE                                   , RULL(0x10A010520), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_SISR_SCOM                                  , RULL(0x1101242B), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_LCL_SISR_PPE                                   , RULL(0x10A020520), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_SISR_SCOM                                  , RULL(0x1101282B), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_LCL_SISR_PPE                                   , RULL(0x10B010520), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_SISR_SCOM                                  , RULL(0x1201242B), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_LCL_SISR_PPE                                   , RULL(0x10B020520), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_SISR_SCOM                                  , RULL(0x1201282B), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_LCL_SISR_PPE                                   , RULL(0x10C010520), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_SISR_SCOM                                  , RULL(0x1301242B), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_LCL_SISR_PPE                                   , RULL(0x10C020520), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_SISR_SCOM                                  , RULL(0x1301282B), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_LCL_SISR_PPE                                   , RULL(0x10D010520), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_SISR_SCOM                                  , RULL(0x1401242B), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_LCL_SISR_PPE                                   , RULL(0x10D020520), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_SISR_SCOM                                  , RULL(0x1401282B), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_LCL_SISR_PPE                                  , RULL(0x10E010520), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_SISR_SCOM                                 , RULL(0x1501242B), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_LCL_SISR_PPE                                  , RULL(0x10E020520), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_SISR_SCOM                                 , RULL(0x1501282B), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EX_CME_LCL_TSEL_PPE                                     , RULL(0x109010100), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_0_CME_LCL_TSEL_PPE                                   , RULL(0x109010100), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_LCL_TSEL_PPE                                   , RULL(0x109020100), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_LCL_TSEL_PPE                                   , RULL(0x10A010100), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_LCL_TSEL_PPE                                   , RULL(0x10A020100), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_LCL_TSEL_PPE                                   , RULL(0x10B010100), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_LCL_TSEL_PPE                                   , RULL(0x10B020100), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_LCL_TSEL_PPE                                   , RULL(0x10C010100), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_LCL_TSEL_PPE                                   , RULL(0x10C020100), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_LCL_TSEL_PPE                                   , RULL(0x10D010100), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_LCL_TSEL_PPE                                   , RULL(0x10D020100), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_10_CME_LCL_TSEL_PPE                                  , RULL(0x10E010100), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_LCL_TSEL_PPE                                  , RULL(0x10E020100), SH_UNT_EX_11    ,
       SH_ACS_PPE       );

REG64( EQ_CME_SCOM_AFSR                                        , RULL(0x10012813), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10012413,
REG64( EQ_0_CME_SCOM_AFSR                                      , RULL(0x10012813), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10012413,
REG64( EQ_1_CME_SCOM_AFSR                                      , RULL(0x11012813), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11012413,
REG64( EQ_2_CME_SCOM_AFSR                                      , RULL(0x12012813), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12012413,
REG64( EQ_3_CME_SCOM_AFSR                                      , RULL(0x13012813), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13012413,
REG64( EQ_4_CME_SCOM_AFSR                                      , RULL(0x14012813), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14012413,
REG64( EQ_5_CME_SCOM_AFSR                                      , RULL(0x15012813), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15012413,
REG64( EX_CME_SCOM_AFSR_PPE                                    , RULL(0x109010160), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_AFSR_SCOM                                   , RULL(0x10012413), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_CME_SCOM_AFSR_PPE                                  , RULL(0x109010160), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_AFSR_SCOM                                 , RULL(0x10012413), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_CME_SCOM_AFSR_PPE                                  , RULL(0x109020160), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_AFSR_SCOM                                 , RULL(0x10012813), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_CME_SCOM_AFSR_PPE                                  , RULL(0x10A010160), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_AFSR_SCOM                                 , RULL(0x11012413), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_CME_SCOM_AFSR_PPE                                  , RULL(0x10A020160), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_AFSR_SCOM                                 , RULL(0x11012813), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_CME_SCOM_AFSR_PPE                                  , RULL(0x10B010160), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_AFSR_SCOM                                 , RULL(0x12012413), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_CME_SCOM_AFSR_PPE                                  , RULL(0x10B020160), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_AFSR_SCOM                                 , RULL(0x12012813), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_CME_SCOM_AFSR_PPE                                  , RULL(0x10C010160), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_AFSR_SCOM                                 , RULL(0x13012413), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_CME_SCOM_AFSR_PPE                                  , RULL(0x10C020160), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_AFSR_SCOM                                 , RULL(0x13012813), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_CME_SCOM_AFSR_PPE                                  , RULL(0x10D010160), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_AFSR_SCOM                                 , RULL(0x14012413), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_CME_SCOM_AFSR_PPE                                  , RULL(0x10D020160), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_AFSR_SCOM                                 , RULL(0x14012813), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_CME_SCOM_AFSR_PPE                                 , RULL(0x10E010160), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_AFSR_SCOM                                , RULL(0x15012413), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_CME_SCOM_AFSR_PPE                                 , RULL(0x10E020160), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_AFSR_SCOM                                , RULL(0x15012813), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_CME_SCOM_AFTR                                        , RULL(0x10012814), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012414,
REG64( EQ_0_CME_SCOM_AFTR                                      , RULL(0x10012814), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012414,
REG64( EQ_1_CME_SCOM_AFTR                                      , RULL(0x11012814), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012414,
REG64( EQ_2_CME_SCOM_AFTR                                      , RULL(0x12012814), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012414,
REG64( EQ_3_CME_SCOM_AFTR                                      , RULL(0x13012814), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012414,
REG64( EQ_4_CME_SCOM_AFTR                                      , RULL(0x14012814), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012414,
REG64( EQ_5_CME_SCOM_AFTR                                      , RULL(0x15012814), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012414,
REG64( EX_CME_SCOM_AFTR_PPE                                    , RULL(0x109010180), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_AFTR_SCOM                                   , RULL(0x10012414), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_AFTR_PPE                                  , RULL(0x109010180), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_AFTR_SCOM                                 , RULL(0x10012414), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_AFTR_PPE                                  , RULL(0x109020180), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_AFTR_SCOM                                 , RULL(0x10012814), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_AFTR_PPE                                  , RULL(0x10A010180), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_AFTR_SCOM                                 , RULL(0x11012414), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_AFTR_PPE                                  , RULL(0x10A020180), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_AFTR_SCOM                                 , RULL(0x11012814), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_AFTR_PPE                                  , RULL(0x10B010180), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_AFTR_SCOM                                 , RULL(0x12012414), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_AFTR_PPE                                  , RULL(0x10B020180), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_AFTR_SCOM                                 , RULL(0x12012814), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_AFTR_PPE                                  , RULL(0x10C010180), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_AFTR_SCOM                                 , RULL(0x13012414), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_AFTR_PPE                                  , RULL(0x10C020180), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_AFTR_SCOM                                 , RULL(0x13012814), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_AFTR_PPE                                  , RULL(0x10D010180), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_AFTR_SCOM                                 , RULL(0x14012414), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_AFTR_PPE                                  , RULL(0x10D020180), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_AFTR_SCOM                                 , RULL(0x14012814), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_AFTR_PPE                                 , RULL(0x10E010180), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_AFTR_SCOM                                , RULL(0x15012414), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_AFTR_PPE                                 , RULL(0x10E020180), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_AFTR_SCOM                                , RULL(0x15012814), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_BCEBAR0                                     , RULL(0x10012810), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012410,
REG64( EQ_0_CME_SCOM_BCEBAR0                                   , RULL(0x10012810), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012410,
REG64( EQ_1_CME_SCOM_BCEBAR0                                   , RULL(0x11012810), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012410,
REG64( EQ_2_CME_SCOM_BCEBAR0                                   , RULL(0x12012810), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012410,
REG64( EQ_3_CME_SCOM_BCEBAR0                                   , RULL(0x13012810), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012410,
REG64( EQ_4_CME_SCOM_BCEBAR0                                   , RULL(0x14012810), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012410,
REG64( EQ_5_CME_SCOM_BCEBAR0                                   , RULL(0x15012810), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012410,
REG64( EX_CME_SCOM_BCEBAR0                                     , RULL(0x10012410), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_BCEBAR0                                   , RULL(0x10012410), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_BCEBAR0                                   , RULL(0x10012810), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_BCEBAR0                                   , RULL(0x11012410), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_BCEBAR0                                   , RULL(0x11012810), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_BCEBAR0                                   , RULL(0x12012410), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_BCEBAR0                                   , RULL(0x12012810), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_BCEBAR0                                   , RULL(0x13012410), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_BCEBAR0                                   , RULL(0x13012810), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_BCEBAR0                                   , RULL(0x14012410), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_BCEBAR0                                   , RULL(0x14012810), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_BCEBAR0                                  , RULL(0x15012410), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_BCEBAR0                                  , RULL(0x15012810), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_BCEBAR1                                     , RULL(0x10012811), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012411,
REG64( EQ_0_CME_SCOM_BCEBAR1                                   , RULL(0x10012811), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012411,
REG64( EQ_1_CME_SCOM_BCEBAR1                                   , RULL(0x11012811), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012411,
REG64( EQ_2_CME_SCOM_BCEBAR1                                   , RULL(0x12012811), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012411,
REG64( EQ_3_CME_SCOM_BCEBAR1                                   , RULL(0x13012811), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012411,
REG64( EQ_4_CME_SCOM_BCEBAR1                                   , RULL(0x14012811), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012411,
REG64( EQ_5_CME_SCOM_BCEBAR1                                   , RULL(0x15012811), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012411,
REG64( EX_CME_SCOM_BCEBAR1                                     , RULL(0x10012411), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_BCEBAR1                                   , RULL(0x10012411), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_BCEBAR1                                   , RULL(0x10012811), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_BCEBAR1                                   , RULL(0x11012411), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_BCEBAR1                                   , RULL(0x11012811), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_BCEBAR1                                   , RULL(0x12012411), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_BCEBAR1                                   , RULL(0x12012811), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_BCEBAR1                                   , RULL(0x13012411), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_BCEBAR1                                   , RULL(0x13012811), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_BCEBAR1                                   , RULL(0x14012411), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_BCEBAR1                                   , RULL(0x14012811), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_BCEBAR1                                  , RULL(0x15012411), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_BCEBAR1                                  , RULL(0x15012811), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_BCECSR                                      , RULL(0x1001280F), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001240F,
REG64( EQ_0_CME_SCOM_BCECSR                                    , RULL(0x1001280F), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001240F,
REG64( EQ_1_CME_SCOM_BCECSR                                    , RULL(0x1101280F), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101240F,
REG64( EQ_2_CME_SCOM_BCECSR                                    , RULL(0x1201280F), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201240F,
REG64( EQ_3_CME_SCOM_BCECSR                                    , RULL(0x1301280F), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301240F,
REG64( EQ_4_CME_SCOM_BCECSR                                    , RULL(0x1401280F), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401240F,
REG64( EQ_5_CME_SCOM_BCECSR                                    , RULL(0x1501280F), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501240F,
REG64( EX_CME_SCOM_BCECSR_PPE                                  , RULL(0x1090101F0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_BCECSR_SCOM                                 , RULL(0x1001240F), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_CME_SCOM_BCECSR_PPE                                , RULL(0x1090101F0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_BCECSR_SCOM                               , RULL(0x1001240F), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_CME_SCOM_BCECSR_PPE                                , RULL(0x1090201F0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_BCECSR_SCOM                               , RULL(0x1001280F), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_CME_SCOM_BCECSR_PPE                                , RULL(0x10A0101F0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_BCECSR_SCOM                               , RULL(0x1101240F), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_CME_SCOM_BCECSR_PPE                                , RULL(0x10A0201F0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_BCECSR_SCOM                               , RULL(0x1101280F), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_CME_SCOM_BCECSR_PPE                                , RULL(0x10B0101F0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_BCECSR_SCOM                               , RULL(0x1201240F), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_CME_SCOM_BCECSR_PPE                                , RULL(0x10B0201F0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_BCECSR_SCOM                               , RULL(0x1201280F), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_CME_SCOM_BCECSR_PPE                                , RULL(0x10C0101F0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_BCECSR_SCOM                               , RULL(0x1301240F), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_CME_SCOM_BCECSR_PPE                                , RULL(0x10C0201F0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_BCECSR_SCOM                               , RULL(0x1301280F), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_CME_SCOM_BCECSR_PPE                                , RULL(0x10D0101F0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_BCECSR_SCOM                               , RULL(0x1401240F), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_CME_SCOM_BCECSR_PPE                                , RULL(0x10D0201F0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_BCECSR_SCOM                               , RULL(0x1401280F), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_CME_SCOM_BCECSR_PPE                               , RULL(0x10E0101F0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_BCECSR_SCOM                              , RULL(0x1501240F), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_CME_SCOM_BCECSR_PPE                               , RULL(0x10E0201F0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_BCECSR_SCOM                              , RULL(0x1501280F), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_CME_SCOM_EIIR                                        , RULL(0x10012819), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10012419,
REG64( EQ_0_CME_SCOM_EIIR                                      , RULL(0x10012819), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10012419,
REG64( EQ_1_CME_SCOM_EIIR                                      , RULL(0x11012819), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11012419,
REG64( EQ_2_CME_SCOM_EIIR                                      , RULL(0x12012819), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12012419,
REG64( EQ_3_CME_SCOM_EIIR                                      , RULL(0x13012819), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13012419,
REG64( EQ_4_CME_SCOM_EIIR                                      , RULL(0x14012819), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14012419,
REG64( EQ_5_CME_SCOM_EIIR                                      , RULL(0x15012819), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15012419,
REG64( EX_CME_SCOM_EIIR                                        , RULL(0x10012419), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_CME_SCOM_EIIR                                      , RULL(0x10012419), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_CME_SCOM_EIIR                                      , RULL(0x10012819), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_CME_SCOM_EIIR                                      , RULL(0x11012419), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_CME_SCOM_EIIR                                      , RULL(0x11012819), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_CME_SCOM_EIIR                                      , RULL(0x12012419), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_CME_SCOM_EIIR                                      , RULL(0x12012819), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_CME_SCOM_EIIR                                      , RULL(0x13012419), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_CME_SCOM_EIIR                                      , RULL(0x13012819), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_CME_SCOM_EIIR                                      , RULL(0x14012419), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_CME_SCOM_EIIR                                      , RULL(0x14012819), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_CME_SCOM_EIIR                                     , RULL(0x15012419), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_CME_SCOM_EIIR                                     , RULL(0x15012819), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_CME_SCOM_FLAGS                                       , RULL(0x10012820), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012420,
REG64( EQ_CME_SCOM_FLAGS_CLEAR                                 , RULL(0x10012821), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 10012421,
REG64( EQ_CME_SCOM_FLAGS_OR                                    , RULL(0x10012822), SH_UNT_EQ       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10012422,
REG64( EQ_0_CME_SCOM_FLAGS                                     , RULL(0x10012820), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012420,
REG64( EQ_0_CME_SCOM_FLAGS_CLEAR                               , RULL(0x10012821), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 10012421,
REG64( EQ_0_CME_SCOM_FLAGS_OR                                  , RULL(0x10012822), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10012422,
REG64( EQ_1_CME_SCOM_FLAGS                                     , RULL(0x11012820), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012420,
REG64( EQ_1_CME_SCOM_FLAGS_CLEAR                               , RULL(0x11012821), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 11012421,
REG64( EQ_1_CME_SCOM_FLAGS_OR                                  , RULL(0x11012822), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 11012422,
REG64( EQ_2_CME_SCOM_FLAGS                                     , RULL(0x12012820), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012420,
REG64( EQ_2_CME_SCOM_FLAGS_CLEAR                               , RULL(0x12012821), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 12012421,
REG64( EQ_2_CME_SCOM_FLAGS_OR                                  , RULL(0x12012822), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 12012422,
REG64( EQ_3_CME_SCOM_FLAGS                                     , RULL(0x13012820), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012420,
REG64( EQ_3_CME_SCOM_FLAGS_CLEAR                               , RULL(0x13012821), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 13012421,
REG64( EQ_3_CME_SCOM_FLAGS_OR                                  , RULL(0x13012822), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 13012422,
REG64( EQ_4_CME_SCOM_FLAGS                                     , RULL(0x14012820), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012420,
REG64( EQ_4_CME_SCOM_FLAGS_CLEAR                               , RULL(0x14012821), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 14012421,
REG64( EQ_4_CME_SCOM_FLAGS_OR                                  , RULL(0x14012822), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 14012422,
REG64( EQ_5_CME_SCOM_FLAGS                                     , RULL(0x15012820), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012420,
REG64( EQ_5_CME_SCOM_FLAGS_CLEAR                               , RULL(0x15012821), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 15012421,
REG64( EQ_5_CME_SCOM_FLAGS_OR                                  , RULL(0x15012822), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 15012422,
REG64( EX_CME_SCOM_FLAGS_PPE                                   , RULL(0x109010400), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_FLAGS_PPE1                                  , RULL(0x109010418), SH_UNT_EX       ,
       SH_ACS_PPE1      );
REG64( EX_CME_SCOM_FLAGS_PPE2                                  , RULL(0x109010410), SH_UNT_EX       ,
       SH_ACS_PPE2      );
REG64( EX_CME_SCOM_FLAGS_SCOM                                  , RULL(0x10012420), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_CME_SCOM_FLAGS_SCOM1                                 , RULL(0x10012421), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_CME_SCOM_FLAGS_SCOM2                                 , RULL(0x10012422), SH_UNT_EX       , SH_ACS_SCOM2_OR  );
REG64( EX_0_CME_SCOM_FLAGS_PPE                                 , RULL(0x109010400), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_FLAGS_PPE1                                , RULL(0x109010418), SH_UNT_EX_0     ,
       SH_ACS_PPE1      );
REG64( EX_0_CME_SCOM_FLAGS_PPE2                                , RULL(0x109010410), SH_UNT_EX_0     ,
       SH_ACS_PPE2      );
REG64( EX_0_CME_SCOM_FLAGS_SCOM                                , RULL(0x10012420), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_FLAGS_SCOM1                               , RULL(0x10012421), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_0_CME_SCOM_FLAGS_SCOM2                               , RULL(0x10012422), SH_UNT_EX_0     , SH_ACS_SCOM2_OR  );
REG64( EX_1_CME_SCOM_FLAGS_PPE                                 , RULL(0x109020400), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_FLAGS_PPE1                                , RULL(0x109020418), SH_UNT_EX_1     ,
       SH_ACS_PPE1      );
REG64( EX_1_CME_SCOM_FLAGS_PPE2                                , RULL(0x109020410), SH_UNT_EX_1     ,
       SH_ACS_PPE2      );
REG64( EX_1_CME_SCOM_FLAGS_SCOM                                , RULL(0x10012820), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_FLAGS_SCOM1                               , RULL(0x10012821), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_1_CME_SCOM_FLAGS_SCOM2                               , RULL(0x10012822), SH_UNT_EX_1     , SH_ACS_SCOM2_OR  );
REG64( EX_2_CME_SCOM_FLAGS_PPE                                 , RULL(0x10A010400), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_FLAGS_PPE1                                , RULL(0x10A010418), SH_UNT_EX_2     ,
       SH_ACS_PPE1      );
REG64( EX_2_CME_SCOM_FLAGS_PPE2                                , RULL(0x10A010410), SH_UNT_EX_2     ,
       SH_ACS_PPE2      );
REG64( EX_2_CME_SCOM_FLAGS_SCOM                                , RULL(0x11012420), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_FLAGS_SCOM1                               , RULL(0x11012421), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_2_CME_SCOM_FLAGS_SCOM2                               , RULL(0x11012422), SH_UNT_EX_2     , SH_ACS_SCOM2_OR  );
REG64( EX_3_CME_SCOM_FLAGS_PPE                                 , RULL(0x10A020400), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_FLAGS_PPE1                                , RULL(0x10A020418), SH_UNT_EX_3     ,
       SH_ACS_PPE1      );
REG64( EX_3_CME_SCOM_FLAGS_PPE2                                , RULL(0x10A020410), SH_UNT_EX_3     ,
       SH_ACS_PPE2      );
REG64( EX_3_CME_SCOM_FLAGS_SCOM                                , RULL(0x11012820), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_FLAGS_SCOM1                               , RULL(0x11012821), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_3_CME_SCOM_FLAGS_SCOM2                               , RULL(0x11012822), SH_UNT_EX_3     , SH_ACS_SCOM2_OR  );
REG64( EX_4_CME_SCOM_FLAGS_PPE                                 , RULL(0x10B010400), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_FLAGS_PPE1                                , RULL(0x10B010418), SH_UNT_EX_4     ,
       SH_ACS_PPE1      );
REG64( EX_4_CME_SCOM_FLAGS_PPE2                                , RULL(0x10B010410), SH_UNT_EX_4     ,
       SH_ACS_PPE2      );
REG64( EX_4_CME_SCOM_FLAGS_SCOM                                , RULL(0x12012420), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_FLAGS_SCOM1                               , RULL(0x12012421), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_4_CME_SCOM_FLAGS_SCOM2                               , RULL(0x12012422), SH_UNT_EX_4     , SH_ACS_SCOM2_OR  );
REG64( EX_5_CME_SCOM_FLAGS_PPE                                 , RULL(0x10B020400), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_FLAGS_PPE1                                , RULL(0x10B020418), SH_UNT_EX_5     ,
       SH_ACS_PPE1      );
REG64( EX_5_CME_SCOM_FLAGS_PPE2                                , RULL(0x10B020410), SH_UNT_EX_5     ,
       SH_ACS_PPE2      );
REG64( EX_5_CME_SCOM_FLAGS_SCOM                                , RULL(0x12012820), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_FLAGS_SCOM1                               , RULL(0x12012821), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_5_CME_SCOM_FLAGS_SCOM2                               , RULL(0x12012822), SH_UNT_EX_5     , SH_ACS_SCOM2_OR  );
REG64( EX_6_CME_SCOM_FLAGS_PPE                                 , RULL(0x10C010400), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_FLAGS_PPE1                                , RULL(0x10C010418), SH_UNT_EX_6     ,
       SH_ACS_PPE1      );
REG64( EX_6_CME_SCOM_FLAGS_PPE2                                , RULL(0x10C010410), SH_UNT_EX_6     ,
       SH_ACS_PPE2      );
REG64( EX_6_CME_SCOM_FLAGS_SCOM                                , RULL(0x13012420), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_FLAGS_SCOM1                               , RULL(0x13012421), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_6_CME_SCOM_FLAGS_SCOM2                               , RULL(0x13012422), SH_UNT_EX_6     , SH_ACS_SCOM2_OR  );
REG64( EX_7_CME_SCOM_FLAGS_PPE                                 , RULL(0x10C020400), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_FLAGS_PPE1                                , RULL(0x10C020418), SH_UNT_EX_7     ,
       SH_ACS_PPE1      );
REG64( EX_7_CME_SCOM_FLAGS_PPE2                                , RULL(0x10C020410), SH_UNT_EX_7     ,
       SH_ACS_PPE2      );
REG64( EX_7_CME_SCOM_FLAGS_SCOM                                , RULL(0x13012820), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_FLAGS_SCOM1                               , RULL(0x13012821), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_7_CME_SCOM_FLAGS_SCOM2                               , RULL(0x13012822), SH_UNT_EX_7     , SH_ACS_SCOM2_OR  );
REG64( EX_8_CME_SCOM_FLAGS_PPE                                 , RULL(0x10D010400), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_FLAGS_PPE1                                , RULL(0x10D010418), SH_UNT_EX_8     ,
       SH_ACS_PPE1      );
REG64( EX_8_CME_SCOM_FLAGS_PPE2                                , RULL(0x10D010410), SH_UNT_EX_8     ,
       SH_ACS_PPE2      );
REG64( EX_8_CME_SCOM_FLAGS_SCOM                                , RULL(0x14012420), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_FLAGS_SCOM1                               , RULL(0x14012421), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_8_CME_SCOM_FLAGS_SCOM2                               , RULL(0x14012422), SH_UNT_EX_8     , SH_ACS_SCOM2_OR  );
REG64( EX_9_CME_SCOM_FLAGS_PPE                                 , RULL(0x10D020400), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_FLAGS_PPE1                                , RULL(0x10D020418), SH_UNT_EX_9     ,
       SH_ACS_PPE1      );
REG64( EX_9_CME_SCOM_FLAGS_PPE2                                , RULL(0x10D020410), SH_UNT_EX_9     ,
       SH_ACS_PPE2      );
REG64( EX_9_CME_SCOM_FLAGS_SCOM                                , RULL(0x14012820), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_FLAGS_SCOM1                               , RULL(0x14012821), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_9_CME_SCOM_FLAGS_SCOM2                               , RULL(0x14012822), SH_UNT_EX_9     , SH_ACS_SCOM2_OR  );
REG64( EX_10_CME_SCOM_FLAGS_PPE                                , RULL(0x10E010400), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_FLAGS_PPE1                               , RULL(0x10E010418), SH_UNT_EX_10    ,
       SH_ACS_PPE1      );
REG64( EX_10_CME_SCOM_FLAGS_PPE2                               , RULL(0x10E010410), SH_UNT_EX_10    ,
       SH_ACS_PPE2      );
REG64( EX_10_CME_SCOM_FLAGS_SCOM                               , RULL(0x15012420), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_FLAGS_SCOM1                              , RULL(0x15012421), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_10_CME_SCOM_FLAGS_SCOM2                              , RULL(0x15012422), SH_UNT_EX_10    , SH_ACS_SCOM2_OR  );
REG64( EX_11_CME_SCOM_FLAGS_PPE                                , RULL(0x10E020400), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_FLAGS_PPE1                               , RULL(0x10E020418), SH_UNT_EX_11    ,
       SH_ACS_PPE1      );
REG64( EX_11_CME_SCOM_FLAGS_PPE2                               , RULL(0x10E020410), SH_UNT_EX_11    ,
       SH_ACS_PPE2      );
REG64( EX_11_CME_SCOM_FLAGS_SCOM                               , RULL(0x15012820), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_FLAGS_SCOM1                              , RULL(0x15012821), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_11_CME_SCOM_FLAGS_SCOM2                              , RULL(0x15012822), SH_UNT_EX_11    , SH_ACS_SCOM2_OR  );

REG64( EQ_CME_SCOM_FWMR                                        , RULL(0x1001281A), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001241A,
REG64( EQ_CME_SCOM_FWMR_CLEAR                                  , RULL(0x1001281B), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1001241B,
REG64( EQ_CME_SCOM_FWMR_OR                                     , RULL(0x1001281C), SH_UNT_EQ       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1001241C,
REG64( EQ_0_CME_SCOM_FWMR                                      , RULL(0x1001281A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001241A,
REG64( EQ_0_CME_SCOM_FWMR_CLEAR                                , RULL(0x1001281B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1001241B,
REG64( EQ_0_CME_SCOM_FWMR_OR                                   , RULL(0x1001281C), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1001241C,
REG64( EQ_1_CME_SCOM_FWMR                                      , RULL(0x1101281A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1101241A,
REG64( EQ_1_CME_SCOM_FWMR_CLEAR                                , RULL(0x1101281B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1101241B,
REG64( EQ_1_CME_SCOM_FWMR_OR                                   , RULL(0x1101281C), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1101241C,
REG64( EQ_2_CME_SCOM_FWMR                                      , RULL(0x1201281A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1201241A,
REG64( EQ_2_CME_SCOM_FWMR_CLEAR                                , RULL(0x1201281B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1201241B,
REG64( EQ_2_CME_SCOM_FWMR_OR                                   , RULL(0x1201281C), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1201241C,
REG64( EQ_3_CME_SCOM_FWMR                                      , RULL(0x1301281A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1301241A,
REG64( EQ_3_CME_SCOM_FWMR_CLEAR                                , RULL(0x1301281B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1301241B,
REG64( EQ_3_CME_SCOM_FWMR_OR                                   , RULL(0x1301281C), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1301241C,
REG64( EQ_4_CME_SCOM_FWMR                                      , RULL(0x1401281A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1401241A,
REG64( EQ_4_CME_SCOM_FWMR_CLEAR                                , RULL(0x1401281B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1401241B,
REG64( EQ_4_CME_SCOM_FWMR_OR                                   , RULL(0x1401281C), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1401241C,
REG64( EQ_5_CME_SCOM_FWMR                                      , RULL(0x1501281A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1501241A,
REG64( EQ_5_CME_SCOM_FWMR_CLEAR                                , RULL(0x1501281B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1501241B,
REG64( EQ_5_CME_SCOM_FWMR_OR                                   , RULL(0x1501281C), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1501241C,
REG64( EX_CME_SCOM_FWMR                                        , RULL(0x1001241A), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_CME_SCOM_FWMR_CLEAR                                  , RULL(0x1001241B), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_CME_SCOM_FWMR_OR                                     , RULL(0x1001241C), SH_UNT_EX       , SH_ACS_SCOM2_OR  );
REG64( EX_0_CME_SCOM_FWMR                                      , RULL(0x1001241A), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_FWMR_CLEAR                                , RULL(0x1001241B), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_0_CME_SCOM_FWMR_OR                                   , RULL(0x1001241C), SH_UNT_EX_0     , SH_ACS_SCOM2_OR  );
REG64( EX_1_CME_SCOM_FWMR                                      , RULL(0x1001281A), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_FWMR_CLEAR                                , RULL(0x1001281B), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_1_CME_SCOM_FWMR_OR                                   , RULL(0x1001281C), SH_UNT_EX_1     , SH_ACS_SCOM2_OR  );
REG64( EX_2_CME_SCOM_FWMR                                      , RULL(0x1101241A), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_FWMR_CLEAR                                , RULL(0x1101241B), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_2_CME_SCOM_FWMR_OR                                   , RULL(0x1101241C), SH_UNT_EX_2     , SH_ACS_SCOM2_OR  );
REG64( EX_3_CME_SCOM_FWMR                                      , RULL(0x1101281A), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_FWMR_CLEAR                                , RULL(0x1101281B), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_3_CME_SCOM_FWMR_OR                                   , RULL(0x1101281C), SH_UNT_EX_3     , SH_ACS_SCOM2_OR  );
REG64( EX_4_CME_SCOM_FWMR                                      , RULL(0x1201241A), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_FWMR_CLEAR                                , RULL(0x1201241B), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_4_CME_SCOM_FWMR_OR                                   , RULL(0x1201241C), SH_UNT_EX_4     , SH_ACS_SCOM2_OR  );
REG64( EX_5_CME_SCOM_FWMR                                      , RULL(0x1201281A), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_FWMR_CLEAR                                , RULL(0x1201281B), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_5_CME_SCOM_FWMR_OR                                   , RULL(0x1201281C), SH_UNT_EX_5     , SH_ACS_SCOM2_OR  );
REG64( EX_6_CME_SCOM_FWMR                                      , RULL(0x1301241A), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_FWMR_CLEAR                                , RULL(0x1301241B), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_6_CME_SCOM_FWMR_OR                                   , RULL(0x1301241C), SH_UNT_EX_6     , SH_ACS_SCOM2_OR  );
REG64( EX_7_CME_SCOM_FWMR                                      , RULL(0x1301281A), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_FWMR_CLEAR                                , RULL(0x1301281B), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_7_CME_SCOM_FWMR_OR                                   , RULL(0x1301281C), SH_UNT_EX_7     , SH_ACS_SCOM2_OR  );
REG64( EX_8_CME_SCOM_FWMR                                      , RULL(0x1401241A), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_FWMR_CLEAR                                , RULL(0x1401241B), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_8_CME_SCOM_FWMR_OR                                   , RULL(0x1401241C), SH_UNT_EX_8     , SH_ACS_SCOM2_OR  );
REG64( EX_9_CME_SCOM_FWMR                                      , RULL(0x1401281A), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_FWMR_CLEAR                                , RULL(0x1401281B), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_9_CME_SCOM_FWMR_OR                                   , RULL(0x1401281C), SH_UNT_EX_9     , SH_ACS_SCOM2_OR  );
REG64( EX_10_CME_SCOM_FWMR                                     , RULL(0x1501241A), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_FWMR_CLEAR                               , RULL(0x1501241B), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_10_CME_SCOM_FWMR_OR                                  , RULL(0x1501241C), SH_UNT_EX_10    , SH_ACS_SCOM2_OR  );
REG64( EX_11_CME_SCOM_FWMR                                     , RULL(0x1501281A), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_FWMR_CLEAR                               , RULL(0x1501281B), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_11_CME_SCOM_FWMR_OR                                  , RULL(0x1501281C), SH_UNT_EX_11    , SH_ACS_SCOM2_OR  );

REG64( EQ_CME_SCOM_LFIR                                        , RULL(0x10012800), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012400,
REG64( EQ_CME_SCOM_LFIR_AND                                    , RULL(0x10012801), SH_UNT_EQ       ,
       SH_ACS_SCOM1_AND ); //DUPS: 10012401,
REG64( EQ_CME_SCOM_LFIR_OR                                     , RULL(0x10012802), SH_UNT_EQ       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10012402,
REG64( EQ_0_CME_SCOM_LFIR                                      , RULL(0x10012800), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012400,
REG64( EQ_0_CME_SCOM_LFIR_AND                                  , RULL(0x10012801), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_AND ); //DUPS: 10012401,
REG64( EQ_0_CME_SCOM_LFIR_OR                                   , RULL(0x10012802), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10012402,
REG64( EQ_1_CME_SCOM_LFIR                                      , RULL(0x11012800), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012400,
REG64( EQ_1_CME_SCOM_LFIR_AND                                  , RULL(0x11012801), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_AND ); //DUPS: 11012401,
REG64( EQ_1_CME_SCOM_LFIR_OR                                   , RULL(0x11012802), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 11012402,
REG64( EQ_2_CME_SCOM_LFIR                                      , RULL(0x12012800), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012400,
REG64( EQ_2_CME_SCOM_LFIR_AND                                  , RULL(0x12012801), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_AND ); //DUPS: 12012401,
REG64( EQ_2_CME_SCOM_LFIR_OR                                   , RULL(0x12012802), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 12012402,
REG64( EQ_3_CME_SCOM_LFIR                                      , RULL(0x13012800), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012400,
REG64( EQ_3_CME_SCOM_LFIR_AND                                  , RULL(0x13012801), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_AND ); //DUPS: 13012401,
REG64( EQ_3_CME_SCOM_LFIR_OR                                   , RULL(0x13012802), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 13012402,
REG64( EQ_4_CME_SCOM_LFIR                                      , RULL(0x14012800), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012400,
REG64( EQ_4_CME_SCOM_LFIR_AND                                  , RULL(0x14012801), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_AND ); //DUPS: 14012401,
REG64( EQ_4_CME_SCOM_LFIR_OR                                   , RULL(0x14012802), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 14012402,
REG64( EQ_5_CME_SCOM_LFIR                                      , RULL(0x15012800), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012400,
REG64( EQ_5_CME_SCOM_LFIR_AND                                  , RULL(0x15012801), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_AND ); //DUPS: 15012401,
REG64( EQ_5_CME_SCOM_LFIR_OR                                   , RULL(0x15012802), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 15012402,
REG64( EX_CME_SCOM_LFIR                                        , RULL(0x10012400), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_CME_SCOM_LFIR_AND                                    , RULL(0x10012401), SH_UNT_EX       , SH_ACS_SCOM1_AND );
REG64( EX_CME_SCOM_LFIR_OR                                     , RULL(0x10012402), SH_UNT_EX       , SH_ACS_SCOM2_OR  );
REG64( EX_0_CME_SCOM_LFIR                                      , RULL(0x10012400), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_LFIR_AND                                  , RULL(0x10012401), SH_UNT_EX_0     , SH_ACS_SCOM1_AND );
REG64( EX_0_CME_SCOM_LFIR_OR                                   , RULL(0x10012402), SH_UNT_EX_0     , SH_ACS_SCOM2_OR  );
REG64( EX_1_CME_SCOM_LFIR                                      , RULL(0x10012800), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_LFIR_AND                                  , RULL(0x10012801), SH_UNT_EX_1     , SH_ACS_SCOM1_AND );
REG64( EX_1_CME_SCOM_LFIR_OR                                   , RULL(0x10012802), SH_UNT_EX_1     , SH_ACS_SCOM2_OR  );
REG64( EX_2_CME_SCOM_LFIR                                      , RULL(0x11012400), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_LFIR_AND                                  , RULL(0x11012401), SH_UNT_EX_2     , SH_ACS_SCOM1_AND );
REG64( EX_2_CME_SCOM_LFIR_OR                                   , RULL(0x11012402), SH_UNT_EX_2     , SH_ACS_SCOM2_OR  );
REG64( EX_3_CME_SCOM_LFIR                                      , RULL(0x11012800), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_LFIR_AND                                  , RULL(0x11012801), SH_UNT_EX_3     , SH_ACS_SCOM1_AND );
REG64( EX_3_CME_SCOM_LFIR_OR                                   , RULL(0x11012802), SH_UNT_EX_3     , SH_ACS_SCOM2_OR  );
REG64( EX_4_CME_SCOM_LFIR                                      , RULL(0x12012400), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_LFIR_AND                                  , RULL(0x12012401), SH_UNT_EX_4     , SH_ACS_SCOM1_AND );
REG64( EX_4_CME_SCOM_LFIR_OR                                   , RULL(0x12012402), SH_UNT_EX_4     , SH_ACS_SCOM2_OR  );
REG64( EX_5_CME_SCOM_LFIR                                      , RULL(0x12012800), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_LFIR_AND                                  , RULL(0x12012801), SH_UNT_EX_5     , SH_ACS_SCOM1_AND );
REG64( EX_5_CME_SCOM_LFIR_OR                                   , RULL(0x12012802), SH_UNT_EX_5     , SH_ACS_SCOM2_OR  );
REG64( EX_6_CME_SCOM_LFIR                                      , RULL(0x13012400), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_LFIR_AND                                  , RULL(0x13012401), SH_UNT_EX_6     , SH_ACS_SCOM1_AND );
REG64( EX_6_CME_SCOM_LFIR_OR                                   , RULL(0x13012402), SH_UNT_EX_6     , SH_ACS_SCOM2_OR  );
REG64( EX_7_CME_SCOM_LFIR                                      , RULL(0x13012800), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_LFIR_AND                                  , RULL(0x13012801), SH_UNT_EX_7     , SH_ACS_SCOM1_AND );
REG64( EX_7_CME_SCOM_LFIR_OR                                   , RULL(0x13012802), SH_UNT_EX_7     , SH_ACS_SCOM2_OR  );
REG64( EX_8_CME_SCOM_LFIR                                      , RULL(0x14012400), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_LFIR_AND                                  , RULL(0x14012401), SH_UNT_EX_8     , SH_ACS_SCOM1_AND );
REG64( EX_8_CME_SCOM_LFIR_OR                                   , RULL(0x14012402), SH_UNT_EX_8     , SH_ACS_SCOM2_OR  );
REG64( EX_9_CME_SCOM_LFIR                                      , RULL(0x14012800), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_LFIR_AND                                  , RULL(0x14012801), SH_UNT_EX_9     , SH_ACS_SCOM1_AND );
REG64( EX_9_CME_SCOM_LFIR_OR                                   , RULL(0x14012802), SH_UNT_EX_9     , SH_ACS_SCOM2_OR  );
REG64( EX_10_CME_SCOM_LFIR                                     , RULL(0x15012400), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_LFIR_AND                                 , RULL(0x15012401), SH_UNT_EX_10    , SH_ACS_SCOM1_AND );
REG64( EX_10_CME_SCOM_LFIR_OR                                  , RULL(0x15012402), SH_UNT_EX_10    , SH_ACS_SCOM2_OR  );
REG64( EX_11_CME_SCOM_LFIR                                     , RULL(0x15012800), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_LFIR_AND                                 , RULL(0x15012801), SH_UNT_EX_11    , SH_ACS_SCOM1_AND );
REG64( EX_11_CME_SCOM_LFIR_OR                                  , RULL(0x15012802), SH_UNT_EX_11    , SH_ACS_SCOM2_OR  );

REG64( EQ_CME_SCOM_LFIRACT0                                    , RULL(0x10012806), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012406,
REG64( EQ_0_CME_SCOM_LFIRACT0                                  , RULL(0x10012806), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012406,
REG64( EQ_1_CME_SCOM_LFIRACT0                                  , RULL(0x11012806), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012406,
REG64( EQ_2_CME_SCOM_LFIRACT0                                  , RULL(0x12012806), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012406,
REG64( EQ_3_CME_SCOM_LFIRACT0                                  , RULL(0x13012806), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012406,
REG64( EQ_4_CME_SCOM_LFIRACT0                                  , RULL(0x14012806), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012406,
REG64( EQ_5_CME_SCOM_LFIRACT0                                  , RULL(0x15012806), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012406,
REG64( EX_CME_SCOM_LFIRACT0                                    , RULL(0x10012406), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_LFIRACT0                                  , RULL(0x10012406), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_LFIRACT0                                  , RULL(0x10012806), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_LFIRACT0                                  , RULL(0x11012406), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_LFIRACT0                                  , RULL(0x11012806), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_LFIRACT0                                  , RULL(0x12012406), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_LFIRACT0                                  , RULL(0x12012806), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_LFIRACT0                                  , RULL(0x13012406), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_LFIRACT0                                  , RULL(0x13012806), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_LFIRACT0                                  , RULL(0x14012406), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_LFIRACT0                                  , RULL(0x14012806), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_LFIRACT0                                 , RULL(0x15012406), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_LFIRACT0                                 , RULL(0x15012806), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_LFIRACT1                                    , RULL(0x10012807), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012407,
REG64( EQ_0_CME_SCOM_LFIRACT1                                  , RULL(0x10012807), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012407,
REG64( EQ_1_CME_SCOM_LFIRACT1                                  , RULL(0x11012807), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012407,
REG64( EQ_2_CME_SCOM_LFIRACT1                                  , RULL(0x12012807), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012407,
REG64( EQ_3_CME_SCOM_LFIRACT1                                  , RULL(0x13012807), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012407,
REG64( EQ_4_CME_SCOM_LFIRACT1                                  , RULL(0x14012807), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012407,
REG64( EQ_5_CME_SCOM_LFIRACT1                                  , RULL(0x15012807), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012407,
REG64( EX_CME_SCOM_LFIRACT1                                    , RULL(0x10012407), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_LFIRACT1                                  , RULL(0x10012407), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_LFIRACT1                                  , RULL(0x10012807), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_LFIRACT1                                  , RULL(0x11012407), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_LFIRACT1                                  , RULL(0x11012807), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_LFIRACT1                                  , RULL(0x12012407), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_LFIRACT1                                  , RULL(0x12012807), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_LFIRACT1                                  , RULL(0x13012407), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_LFIRACT1                                  , RULL(0x13012807), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_LFIRACT1                                  , RULL(0x14012407), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_LFIRACT1                                  , RULL(0x14012807), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_LFIRACT1                                 , RULL(0x15012407), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_LFIRACT1                                 , RULL(0x15012807), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_LFIRMASK                                    , RULL(0x10012803), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012403,
REG64( EQ_CME_SCOM_LFIRMASK_AND                                , RULL(0x10012804), SH_UNT_EQ       ,
       SH_ACS_SCOM1_AND ); //DUPS: 10012404,
REG64( EQ_CME_SCOM_LFIRMASK_OR                                 , RULL(0x10012805), SH_UNT_EQ       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10012405,
REG64( EQ_0_CME_SCOM_LFIRMASK                                  , RULL(0x10012803), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012403,
REG64( EQ_0_CME_SCOM_LFIRMASK_AND                              , RULL(0x10012804), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_AND ); //DUPS: 10012404,
REG64( EQ_0_CME_SCOM_LFIRMASK_OR                               , RULL(0x10012805), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10012405,
REG64( EQ_1_CME_SCOM_LFIRMASK                                  , RULL(0x11012803), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012403,
REG64( EQ_1_CME_SCOM_LFIRMASK_AND                              , RULL(0x11012804), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_AND ); //DUPS: 11012404,
REG64( EQ_1_CME_SCOM_LFIRMASK_OR                               , RULL(0x11012805), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 11012405,
REG64( EQ_2_CME_SCOM_LFIRMASK                                  , RULL(0x12012803), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012403,
REG64( EQ_2_CME_SCOM_LFIRMASK_AND                              , RULL(0x12012804), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_AND ); //DUPS: 12012404,
REG64( EQ_2_CME_SCOM_LFIRMASK_OR                               , RULL(0x12012805), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 12012405,
REG64( EQ_3_CME_SCOM_LFIRMASK                                  , RULL(0x13012803), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012403,
REG64( EQ_3_CME_SCOM_LFIRMASK_AND                              , RULL(0x13012804), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_AND ); //DUPS: 13012404,
REG64( EQ_3_CME_SCOM_LFIRMASK_OR                               , RULL(0x13012805), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 13012405,
REG64( EQ_4_CME_SCOM_LFIRMASK                                  , RULL(0x14012803), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012403,
REG64( EQ_4_CME_SCOM_LFIRMASK_AND                              , RULL(0x14012804), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_AND ); //DUPS: 14012404,
REG64( EQ_4_CME_SCOM_LFIRMASK_OR                               , RULL(0x14012805), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 14012405,
REG64( EQ_5_CME_SCOM_LFIRMASK                                  , RULL(0x15012803), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012403,
REG64( EQ_5_CME_SCOM_LFIRMASK_AND                              , RULL(0x15012804), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_AND ); //DUPS: 15012404,
REG64( EQ_5_CME_SCOM_LFIRMASK_OR                               , RULL(0x15012805), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 15012405,
REG64( EX_CME_SCOM_LFIRMASK                                    , RULL(0x10012403), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_CME_SCOM_LFIRMASK_AND                                , RULL(0x10012404), SH_UNT_EX       , SH_ACS_SCOM1_AND );
REG64( EX_CME_SCOM_LFIRMASK_OR                                 , RULL(0x10012405), SH_UNT_EX       , SH_ACS_SCOM2_OR  );
REG64( EX_0_CME_SCOM_LFIRMASK                                  , RULL(0x10012403), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_LFIRMASK_AND                              , RULL(0x10012404), SH_UNT_EX_0     , SH_ACS_SCOM1_AND );
REG64( EX_0_CME_SCOM_LFIRMASK_OR                               , RULL(0x10012405), SH_UNT_EX_0     , SH_ACS_SCOM2_OR  );
REG64( EX_1_CME_SCOM_LFIRMASK                                  , RULL(0x10012803), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_LFIRMASK_AND                              , RULL(0x10012804), SH_UNT_EX_1     , SH_ACS_SCOM1_AND );
REG64( EX_1_CME_SCOM_LFIRMASK_OR                               , RULL(0x10012805), SH_UNT_EX_1     , SH_ACS_SCOM2_OR  );
REG64( EX_2_CME_SCOM_LFIRMASK                                  , RULL(0x11012403), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_LFIRMASK_AND                              , RULL(0x11012404), SH_UNT_EX_2     , SH_ACS_SCOM1_AND );
REG64( EX_2_CME_SCOM_LFIRMASK_OR                               , RULL(0x11012405), SH_UNT_EX_2     , SH_ACS_SCOM2_OR  );
REG64( EX_3_CME_SCOM_LFIRMASK                                  , RULL(0x11012803), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_LFIRMASK_AND                              , RULL(0x11012804), SH_UNT_EX_3     , SH_ACS_SCOM1_AND );
REG64( EX_3_CME_SCOM_LFIRMASK_OR                               , RULL(0x11012805), SH_UNT_EX_3     , SH_ACS_SCOM2_OR  );
REG64( EX_4_CME_SCOM_LFIRMASK                                  , RULL(0x12012403), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_LFIRMASK_AND                              , RULL(0x12012404), SH_UNT_EX_4     , SH_ACS_SCOM1_AND );
REG64( EX_4_CME_SCOM_LFIRMASK_OR                               , RULL(0x12012405), SH_UNT_EX_4     , SH_ACS_SCOM2_OR  );
REG64( EX_5_CME_SCOM_LFIRMASK                                  , RULL(0x12012803), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_LFIRMASK_AND                              , RULL(0x12012804), SH_UNT_EX_5     , SH_ACS_SCOM1_AND );
REG64( EX_5_CME_SCOM_LFIRMASK_OR                               , RULL(0x12012805), SH_UNT_EX_5     , SH_ACS_SCOM2_OR  );
REG64( EX_6_CME_SCOM_LFIRMASK                                  , RULL(0x13012403), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_LFIRMASK_AND                              , RULL(0x13012404), SH_UNT_EX_6     , SH_ACS_SCOM1_AND );
REG64( EX_6_CME_SCOM_LFIRMASK_OR                               , RULL(0x13012405), SH_UNT_EX_6     , SH_ACS_SCOM2_OR  );
REG64( EX_7_CME_SCOM_LFIRMASK                                  , RULL(0x13012803), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_LFIRMASK_AND                              , RULL(0x13012804), SH_UNT_EX_7     , SH_ACS_SCOM1_AND );
REG64( EX_7_CME_SCOM_LFIRMASK_OR                               , RULL(0x13012805), SH_UNT_EX_7     , SH_ACS_SCOM2_OR  );
REG64( EX_8_CME_SCOM_LFIRMASK                                  , RULL(0x14012403), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_LFIRMASK_AND                              , RULL(0x14012404), SH_UNT_EX_8     , SH_ACS_SCOM1_AND );
REG64( EX_8_CME_SCOM_LFIRMASK_OR                               , RULL(0x14012405), SH_UNT_EX_8     , SH_ACS_SCOM2_OR  );
REG64( EX_9_CME_SCOM_LFIRMASK                                  , RULL(0x14012803), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_LFIRMASK_AND                              , RULL(0x14012804), SH_UNT_EX_9     , SH_ACS_SCOM1_AND );
REG64( EX_9_CME_SCOM_LFIRMASK_OR                               , RULL(0x14012805), SH_UNT_EX_9     , SH_ACS_SCOM2_OR  );
REG64( EX_10_CME_SCOM_LFIRMASK                                 , RULL(0x15012403), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_LFIRMASK_AND                             , RULL(0x15012404), SH_UNT_EX_10    , SH_ACS_SCOM1_AND );
REG64( EX_10_CME_SCOM_LFIRMASK_OR                              , RULL(0x15012405), SH_UNT_EX_10    , SH_ACS_SCOM2_OR  );
REG64( EX_11_CME_SCOM_LFIRMASK                                 , RULL(0x15012803), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_LFIRMASK_AND                             , RULL(0x15012804), SH_UNT_EX_11    , SH_ACS_SCOM1_AND );
REG64( EX_11_CME_SCOM_LFIRMASK_OR                              , RULL(0x15012805), SH_UNT_EX_11    , SH_ACS_SCOM2_OR  );

REG64( EQ_CME_SCOM_PMCRS0                                      , RULL(0x10012842), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012442,
REG64( EQ_0_CME_SCOM_PMCRS0                                    , RULL(0x10012842), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012442,
REG64( EQ_1_CME_SCOM_PMCRS0                                    , RULL(0x11012842), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012442,
REG64( EQ_2_CME_SCOM_PMCRS0                                    , RULL(0x12012842), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012442,
REG64( EQ_3_CME_SCOM_PMCRS0                                    , RULL(0x13012842), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012442,
REG64( EQ_4_CME_SCOM_PMCRS0                                    , RULL(0x14012842), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012442,
REG64( EQ_5_CME_SCOM_PMCRS0                                    , RULL(0x15012842), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012442,
REG64( EX_CME_SCOM_PMCRS0_PPE                                  , RULL(0x109010240), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PMCRS0_SCOM                                 , RULL(0x10012442), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PMCRS0_PPE                                , RULL(0x109010240), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PMCRS0_SCOM                               , RULL(0x10012442), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PMCRS0_PPE                                , RULL(0x109020240), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PMCRS0_SCOM                               , RULL(0x10012842), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PMCRS0_PPE                                , RULL(0x10A010240), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PMCRS0_SCOM                               , RULL(0x11012442), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PMCRS0_PPE                                , RULL(0x10A020240), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PMCRS0_SCOM                               , RULL(0x11012842), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PMCRS0_PPE                                , RULL(0x10B010240), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PMCRS0_SCOM                               , RULL(0x12012442), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PMCRS0_PPE                                , RULL(0x10B020240), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PMCRS0_SCOM                               , RULL(0x12012842), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PMCRS0_PPE                                , RULL(0x10C010240), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PMCRS0_SCOM                               , RULL(0x13012442), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PMCRS0_PPE                                , RULL(0x10C020240), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PMCRS0_SCOM                               , RULL(0x13012842), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PMCRS0_PPE                                , RULL(0x10D010240), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PMCRS0_SCOM                               , RULL(0x14012442), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PMCRS0_PPE                                , RULL(0x10D020240), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PMCRS0_SCOM                               , RULL(0x14012842), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PMCRS0_PPE                               , RULL(0x10E010240), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PMCRS0_SCOM                              , RULL(0x15012442), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PMCRS0_PPE                               , RULL(0x10E020240), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PMCRS0_SCOM                              , RULL(0x15012842), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PMCRS1                                      , RULL(0x10012843), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012443,
REG64( EQ_0_CME_SCOM_PMCRS1                                    , RULL(0x10012843), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012443,
REG64( EQ_1_CME_SCOM_PMCRS1                                    , RULL(0x11012843), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012443,
REG64( EQ_2_CME_SCOM_PMCRS1                                    , RULL(0x12012843), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012443,
REG64( EQ_3_CME_SCOM_PMCRS1                                    , RULL(0x13012843), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012443,
REG64( EQ_4_CME_SCOM_PMCRS1                                    , RULL(0x14012843), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012443,
REG64( EQ_5_CME_SCOM_PMCRS1                                    , RULL(0x15012843), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012443,
REG64( EX_CME_SCOM_PMCRS1_PPE                                  , RULL(0x109010260), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PMCRS1_SCOM                                 , RULL(0x10012443), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PMCRS1_PPE                                , RULL(0x109010260), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PMCRS1_SCOM                               , RULL(0x10012443), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PMCRS1_PPE                                , RULL(0x109020260), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PMCRS1_SCOM                               , RULL(0x10012843), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PMCRS1_PPE                                , RULL(0x10A010260), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PMCRS1_SCOM                               , RULL(0x11012443), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PMCRS1_PPE                                , RULL(0x10A020260), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PMCRS1_SCOM                               , RULL(0x11012843), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PMCRS1_PPE                                , RULL(0x10B010260), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PMCRS1_SCOM                               , RULL(0x12012443), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PMCRS1_PPE                                , RULL(0x10B020260), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PMCRS1_SCOM                               , RULL(0x12012843), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PMCRS1_PPE                                , RULL(0x10C010260), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PMCRS1_SCOM                               , RULL(0x13012443), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PMCRS1_PPE                                , RULL(0x10C020260), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PMCRS1_SCOM                               , RULL(0x13012843), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PMCRS1_PPE                                , RULL(0x10D010260), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PMCRS1_SCOM                               , RULL(0x14012443), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PMCRS1_PPE                                , RULL(0x10D020260), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PMCRS1_SCOM                               , RULL(0x14012843), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PMCRS1_PPE                               , RULL(0x10E010260), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PMCRS1_SCOM                              , RULL(0x15012443), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PMCRS1_PPE                               , RULL(0x10E020260), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PMCRS1_SCOM                              , RULL(0x15012843), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PMSRS0                                      , RULL(0x10012840), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012440,
REG64( EQ_0_CME_SCOM_PMSRS0                                    , RULL(0x10012840), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012440,
REG64( EQ_1_CME_SCOM_PMSRS0                                    , RULL(0x11012840), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012440,
REG64( EQ_2_CME_SCOM_PMSRS0                                    , RULL(0x12012840), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012440,
REG64( EQ_3_CME_SCOM_PMSRS0                                    , RULL(0x13012840), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012440,
REG64( EQ_4_CME_SCOM_PMSRS0                                    , RULL(0x14012840), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012440,
REG64( EQ_5_CME_SCOM_PMSRS0                                    , RULL(0x15012840), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012440,
REG64( EX_CME_SCOM_PMSRS0_PPE                                  , RULL(0x109010200), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PMSRS0_SCOM                                 , RULL(0x10012440), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PMSRS0_PPE                                , RULL(0x109010200), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PMSRS0_SCOM                               , RULL(0x10012440), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PMSRS0_PPE                                , RULL(0x109020200), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PMSRS0_SCOM                               , RULL(0x10012840), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PMSRS0_PPE                                , RULL(0x10A010200), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PMSRS0_SCOM                               , RULL(0x11012440), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PMSRS0_PPE                                , RULL(0x10A020200), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PMSRS0_SCOM                               , RULL(0x11012840), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PMSRS0_PPE                                , RULL(0x10B010200), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PMSRS0_SCOM                               , RULL(0x12012440), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PMSRS0_PPE                                , RULL(0x10B020200), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PMSRS0_SCOM                               , RULL(0x12012840), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PMSRS0_PPE                                , RULL(0x10C010200), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PMSRS0_SCOM                               , RULL(0x13012440), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PMSRS0_PPE                                , RULL(0x10C020200), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PMSRS0_SCOM                               , RULL(0x13012840), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PMSRS0_PPE                                , RULL(0x10D010200), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PMSRS0_SCOM                               , RULL(0x14012440), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PMSRS0_PPE                                , RULL(0x10D020200), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PMSRS0_SCOM                               , RULL(0x14012840), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PMSRS0_PPE                               , RULL(0x10E010200), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PMSRS0_SCOM                              , RULL(0x15012440), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PMSRS0_PPE                               , RULL(0x10E020200), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PMSRS0_SCOM                              , RULL(0x15012840), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PMSRS1                                      , RULL(0x10012841), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012441,
REG64( EQ_0_CME_SCOM_PMSRS1                                    , RULL(0x10012841), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012441,
REG64( EQ_1_CME_SCOM_PMSRS1                                    , RULL(0x11012841), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012441,
REG64( EQ_2_CME_SCOM_PMSRS1                                    , RULL(0x12012841), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012441,
REG64( EQ_3_CME_SCOM_PMSRS1                                    , RULL(0x13012841), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012441,
REG64( EQ_4_CME_SCOM_PMSRS1                                    , RULL(0x14012841), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012441,
REG64( EQ_5_CME_SCOM_PMSRS1                                    , RULL(0x15012841), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012441,
REG64( EX_CME_SCOM_PMSRS1_PPE                                  , RULL(0x109010220), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PMSRS1_SCOM                                 , RULL(0x10012441), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PMSRS1_PPE                                , RULL(0x109010220), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PMSRS1_SCOM                               , RULL(0x10012441), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PMSRS1_PPE                                , RULL(0x109020220), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PMSRS1_SCOM                               , RULL(0x10012841), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PMSRS1_PPE                                , RULL(0x10A010220), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PMSRS1_SCOM                               , RULL(0x11012441), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PMSRS1_PPE                                , RULL(0x10A020220), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PMSRS1_SCOM                               , RULL(0x11012841), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PMSRS1_PPE                                , RULL(0x10B010220), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PMSRS1_SCOM                               , RULL(0x12012441), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PMSRS1_PPE                                , RULL(0x10B020220), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PMSRS1_SCOM                               , RULL(0x12012841), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PMSRS1_PPE                                , RULL(0x10C010220), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PMSRS1_SCOM                               , RULL(0x13012441), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PMSRS1_PPE                                , RULL(0x10C020220), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PMSRS1_SCOM                               , RULL(0x13012841), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PMSRS1_PPE                                , RULL(0x10D010220), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PMSRS1_SCOM                               , RULL(0x14012441), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PMSRS1_PPE                                , RULL(0x10D020220), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PMSRS1_SCOM                               , RULL(0x14012841), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PMSRS1_PPE                               , RULL(0x10E010220), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PMSRS1_SCOM                              , RULL(0x15012441), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PMSRS1_PPE                               , RULL(0x10E020220), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PMSRS1_SCOM                              , RULL(0x15012841), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PSCRS00                                     , RULL(0x10012844), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012444,
REG64( EQ_0_CME_SCOM_PSCRS00                                   , RULL(0x10012844), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012444,
REG64( EQ_1_CME_SCOM_PSCRS00                                   , RULL(0x11012844), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012444,
REG64( EQ_2_CME_SCOM_PSCRS00                                   , RULL(0x12012844), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012444,
REG64( EQ_3_CME_SCOM_PSCRS00                                   , RULL(0x13012844), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012444,
REG64( EQ_4_CME_SCOM_PSCRS00                                   , RULL(0x14012844), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012444,
REG64( EQ_5_CME_SCOM_PSCRS00                                   , RULL(0x15012844), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012444,
REG64( EX_CME_SCOM_PSCRS00_PPE                                 , RULL(0x109010300), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PSCRS00_SCOM                                , RULL(0x10012444), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PSCRS00_PPE                               , RULL(0x109010300), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PSCRS00_SCOM                              , RULL(0x10012444), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PSCRS00_PPE                               , RULL(0x109020300), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PSCRS00_SCOM                              , RULL(0x10012844), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PSCRS00_PPE                               , RULL(0x10A010300), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PSCRS00_SCOM                              , RULL(0x11012444), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PSCRS00_PPE                               , RULL(0x10A020300), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PSCRS00_SCOM                              , RULL(0x11012844), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PSCRS00_PPE                               , RULL(0x10B010300), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PSCRS00_SCOM                              , RULL(0x12012444), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PSCRS00_PPE                               , RULL(0x10B020300), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PSCRS00_SCOM                              , RULL(0x12012844), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PSCRS00_PPE                               , RULL(0x10C010300), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PSCRS00_SCOM                              , RULL(0x13012444), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PSCRS00_PPE                               , RULL(0x10C020300), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PSCRS00_SCOM                              , RULL(0x13012844), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PSCRS00_PPE                               , RULL(0x10D010300), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PSCRS00_SCOM                              , RULL(0x14012444), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PSCRS00_PPE                               , RULL(0x10D020300), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PSCRS00_SCOM                              , RULL(0x14012844), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PSCRS00_PPE                              , RULL(0x10E010300), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PSCRS00_SCOM                             , RULL(0x15012444), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PSCRS00_PPE                              , RULL(0x10E020300), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PSCRS00_SCOM                             , RULL(0x15012844), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PSCRS01                                     , RULL(0x10012845), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012445,
REG64( EQ_0_CME_SCOM_PSCRS01                                   , RULL(0x10012845), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012445,
REG64( EQ_1_CME_SCOM_PSCRS01                                   , RULL(0x11012845), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012445,
REG64( EQ_2_CME_SCOM_PSCRS01                                   , RULL(0x12012845), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012445,
REG64( EQ_3_CME_SCOM_PSCRS01                                   , RULL(0x13012845), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012445,
REG64( EQ_4_CME_SCOM_PSCRS01                                   , RULL(0x14012845), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012445,
REG64( EQ_5_CME_SCOM_PSCRS01                                   , RULL(0x15012845), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012445,
REG64( EX_CME_SCOM_PSCRS01_PPE                                 , RULL(0x109010320), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PSCRS01_SCOM                                , RULL(0x10012445), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PSCRS01_PPE                               , RULL(0x109010320), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PSCRS01_SCOM                              , RULL(0x10012445), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PSCRS01_PPE                               , RULL(0x109020320), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PSCRS01_SCOM                              , RULL(0x10012845), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PSCRS01_PPE                               , RULL(0x10A010320), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PSCRS01_SCOM                              , RULL(0x11012445), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PSCRS01_PPE                               , RULL(0x10A020320), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PSCRS01_SCOM                              , RULL(0x11012845), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PSCRS01_PPE                               , RULL(0x10B010320), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PSCRS01_SCOM                              , RULL(0x12012445), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PSCRS01_PPE                               , RULL(0x10B020320), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PSCRS01_SCOM                              , RULL(0x12012845), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PSCRS01_PPE                               , RULL(0x10C010320), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PSCRS01_SCOM                              , RULL(0x13012445), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PSCRS01_PPE                               , RULL(0x10C020320), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PSCRS01_SCOM                              , RULL(0x13012845), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PSCRS01_PPE                               , RULL(0x10D010320), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PSCRS01_SCOM                              , RULL(0x14012445), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PSCRS01_PPE                               , RULL(0x10D020320), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PSCRS01_SCOM                              , RULL(0x14012845), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PSCRS01_PPE                              , RULL(0x10E010320), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PSCRS01_SCOM                             , RULL(0x15012445), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PSCRS01_PPE                              , RULL(0x10E020320), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PSCRS01_SCOM                             , RULL(0x15012845), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PSCRS02                                     , RULL(0x10012846), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012446,
REG64( EQ_0_CME_SCOM_PSCRS02                                   , RULL(0x10012846), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012446,
REG64( EQ_1_CME_SCOM_PSCRS02                                   , RULL(0x11012846), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012446,
REG64( EQ_2_CME_SCOM_PSCRS02                                   , RULL(0x12012846), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012446,
REG64( EQ_3_CME_SCOM_PSCRS02                                   , RULL(0x13012846), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012446,
REG64( EQ_4_CME_SCOM_PSCRS02                                   , RULL(0x14012846), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012446,
REG64( EQ_5_CME_SCOM_PSCRS02                                   , RULL(0x15012846), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012446,
REG64( EX_CME_SCOM_PSCRS02_PPE                                 , RULL(0x109010340), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PSCRS02_SCOM                                , RULL(0x10012446), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PSCRS02_PPE                               , RULL(0x109010340), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PSCRS02_SCOM                              , RULL(0x10012446), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PSCRS02_PPE                               , RULL(0x109020340), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PSCRS02_SCOM                              , RULL(0x10012846), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PSCRS02_PPE                               , RULL(0x10A010340), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PSCRS02_SCOM                              , RULL(0x11012446), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PSCRS02_PPE                               , RULL(0x10A020340), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PSCRS02_SCOM                              , RULL(0x11012846), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PSCRS02_PPE                               , RULL(0x10B010340), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PSCRS02_SCOM                              , RULL(0x12012446), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PSCRS02_PPE                               , RULL(0x10B020340), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PSCRS02_SCOM                              , RULL(0x12012846), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PSCRS02_PPE                               , RULL(0x10C010340), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PSCRS02_SCOM                              , RULL(0x13012446), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PSCRS02_PPE                               , RULL(0x10C020340), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PSCRS02_SCOM                              , RULL(0x13012846), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PSCRS02_PPE                               , RULL(0x10D010340), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PSCRS02_SCOM                              , RULL(0x14012446), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PSCRS02_PPE                               , RULL(0x10D020340), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PSCRS02_SCOM                              , RULL(0x14012846), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PSCRS02_PPE                              , RULL(0x10E010340), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PSCRS02_SCOM                             , RULL(0x15012446), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PSCRS02_PPE                              , RULL(0x10E020340), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PSCRS02_SCOM                             , RULL(0x15012846), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PSCRS03                                     , RULL(0x10012847), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012447,
REG64( EQ_0_CME_SCOM_PSCRS03                                   , RULL(0x10012847), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012447,
REG64( EQ_1_CME_SCOM_PSCRS03                                   , RULL(0x11012847), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012447,
REG64( EQ_2_CME_SCOM_PSCRS03                                   , RULL(0x12012847), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012447,
REG64( EQ_3_CME_SCOM_PSCRS03                                   , RULL(0x13012847), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012447,
REG64( EQ_4_CME_SCOM_PSCRS03                                   , RULL(0x14012847), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012447,
REG64( EQ_5_CME_SCOM_PSCRS03                                   , RULL(0x15012847), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012447,
REG64( EX_CME_SCOM_PSCRS03_PPE                                 , RULL(0x109010360), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PSCRS03_SCOM                                , RULL(0x10012447), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PSCRS03_PPE                               , RULL(0x109010360), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PSCRS03_SCOM                              , RULL(0x10012447), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PSCRS03_PPE                               , RULL(0x109020360), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PSCRS03_SCOM                              , RULL(0x10012847), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PSCRS03_PPE                               , RULL(0x10A010360), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PSCRS03_SCOM                              , RULL(0x11012447), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PSCRS03_PPE                               , RULL(0x10A020360), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PSCRS03_SCOM                              , RULL(0x11012847), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PSCRS03_PPE                               , RULL(0x10B010360), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PSCRS03_SCOM                              , RULL(0x12012447), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PSCRS03_PPE                               , RULL(0x10B020360), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PSCRS03_SCOM                              , RULL(0x12012847), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PSCRS03_PPE                               , RULL(0x10C010360), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PSCRS03_SCOM                              , RULL(0x13012447), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PSCRS03_PPE                               , RULL(0x10C020360), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PSCRS03_SCOM                              , RULL(0x13012847), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PSCRS03_PPE                               , RULL(0x10D010360), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PSCRS03_SCOM                              , RULL(0x14012447), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PSCRS03_PPE                               , RULL(0x10D020360), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PSCRS03_SCOM                              , RULL(0x14012847), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PSCRS03_PPE                              , RULL(0x10E010360), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PSCRS03_SCOM                             , RULL(0x15012447), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PSCRS03_PPE                              , RULL(0x10E020360), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PSCRS03_SCOM                             , RULL(0x15012847), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PSCRS10                                     , RULL(0x10012848), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012448,
REG64( EQ_0_CME_SCOM_PSCRS10                                   , RULL(0x10012848), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012448,
REG64( EQ_1_CME_SCOM_PSCRS10                                   , RULL(0x11012848), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012448,
REG64( EQ_2_CME_SCOM_PSCRS10                                   , RULL(0x12012848), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012448,
REG64( EQ_3_CME_SCOM_PSCRS10                                   , RULL(0x13012848), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012448,
REG64( EQ_4_CME_SCOM_PSCRS10                                   , RULL(0x14012848), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012448,
REG64( EQ_5_CME_SCOM_PSCRS10                                   , RULL(0x15012848), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012448,
REG64( EX_CME_SCOM_PSCRS10_PPE                                 , RULL(0x109010380), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PSCRS10_SCOM                                , RULL(0x10012448), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PSCRS10_PPE                               , RULL(0x109010380), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PSCRS10_SCOM                              , RULL(0x10012448), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PSCRS10_PPE                               , RULL(0x109020380), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PSCRS10_SCOM                              , RULL(0x10012848), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PSCRS10_PPE                               , RULL(0x10A010380), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PSCRS10_SCOM                              , RULL(0x11012448), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PSCRS10_PPE                               , RULL(0x10A020380), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PSCRS10_SCOM                              , RULL(0x11012848), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PSCRS10_PPE                               , RULL(0x10B010380), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PSCRS10_SCOM                              , RULL(0x12012448), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PSCRS10_PPE                               , RULL(0x10B020380), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PSCRS10_SCOM                              , RULL(0x12012848), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PSCRS10_PPE                               , RULL(0x10C010380), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PSCRS10_SCOM                              , RULL(0x13012448), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PSCRS10_PPE                               , RULL(0x10C020380), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PSCRS10_SCOM                              , RULL(0x13012848), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PSCRS10_PPE                               , RULL(0x10D010380), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PSCRS10_SCOM                              , RULL(0x14012448), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PSCRS10_PPE                               , RULL(0x10D020380), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PSCRS10_SCOM                              , RULL(0x14012848), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PSCRS10_PPE                              , RULL(0x10E010380), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PSCRS10_SCOM                             , RULL(0x15012448), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PSCRS10_PPE                              , RULL(0x10E020380), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PSCRS10_SCOM                             , RULL(0x15012848), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PSCRS11                                     , RULL(0x10012849), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012449,
REG64( EQ_0_CME_SCOM_PSCRS11                                   , RULL(0x10012849), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012449,
REG64( EQ_1_CME_SCOM_PSCRS11                                   , RULL(0x11012849), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012449,
REG64( EQ_2_CME_SCOM_PSCRS11                                   , RULL(0x12012849), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012449,
REG64( EQ_3_CME_SCOM_PSCRS11                                   , RULL(0x13012849), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012449,
REG64( EQ_4_CME_SCOM_PSCRS11                                   , RULL(0x14012849), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012449,
REG64( EQ_5_CME_SCOM_PSCRS11                                   , RULL(0x15012849), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012449,
REG64( EX_CME_SCOM_PSCRS11_PPE                                 , RULL(0x1090103A0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PSCRS11_SCOM                                , RULL(0x10012449), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PSCRS11_PPE                               , RULL(0x1090103A0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PSCRS11_SCOM                              , RULL(0x10012449), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PSCRS11_PPE                               , RULL(0x1090203A0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PSCRS11_SCOM                              , RULL(0x10012849), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PSCRS11_PPE                               , RULL(0x10A0103A0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PSCRS11_SCOM                              , RULL(0x11012449), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PSCRS11_PPE                               , RULL(0x10A0203A0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PSCRS11_SCOM                              , RULL(0x11012849), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PSCRS11_PPE                               , RULL(0x10B0103A0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PSCRS11_SCOM                              , RULL(0x12012449), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PSCRS11_PPE                               , RULL(0x10B0203A0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PSCRS11_SCOM                              , RULL(0x12012849), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PSCRS11_PPE                               , RULL(0x10C0103A0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PSCRS11_SCOM                              , RULL(0x13012449), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PSCRS11_PPE                               , RULL(0x10C0203A0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PSCRS11_SCOM                              , RULL(0x13012849), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PSCRS11_PPE                               , RULL(0x10D0103A0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PSCRS11_SCOM                              , RULL(0x14012449), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PSCRS11_PPE                               , RULL(0x10D0203A0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PSCRS11_SCOM                              , RULL(0x14012849), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PSCRS11_PPE                              , RULL(0x10E0103A0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PSCRS11_SCOM                             , RULL(0x15012449), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PSCRS11_PPE                              , RULL(0x10E0203A0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PSCRS11_SCOM                             , RULL(0x15012849), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PSCRS12                                     , RULL(0x1001284A), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001244A,
REG64( EQ_0_CME_SCOM_PSCRS12                                   , RULL(0x1001284A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001244A,
REG64( EQ_1_CME_SCOM_PSCRS12                                   , RULL(0x1101284A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1101244A,
REG64( EQ_2_CME_SCOM_PSCRS12                                   , RULL(0x1201284A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1201244A,
REG64( EQ_3_CME_SCOM_PSCRS12                                   , RULL(0x1301284A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1301244A,
REG64( EQ_4_CME_SCOM_PSCRS12                                   , RULL(0x1401284A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1401244A,
REG64( EQ_5_CME_SCOM_PSCRS12                                   , RULL(0x1501284A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1501244A,
REG64( EX_CME_SCOM_PSCRS12_PPE                                 , RULL(0x1090103C0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PSCRS12_SCOM                                , RULL(0x1001244A), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PSCRS12_PPE                               , RULL(0x1090103C0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1001244A), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PSCRS12_PPE                               , RULL(0x1090203C0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1001284A), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PSCRS12_PPE                               , RULL(0x10A0103C0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1101244A), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PSCRS12_PPE                               , RULL(0x10A0203C0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1101284A), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PSCRS12_PPE                               , RULL(0x10B0103C0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1201244A), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PSCRS12_PPE                               , RULL(0x10B0203C0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1201284A), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PSCRS12_PPE                               , RULL(0x10C0103C0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1301244A), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PSCRS12_PPE                               , RULL(0x10C0203C0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1301284A), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PSCRS12_PPE                               , RULL(0x10D0103C0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1401244A), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PSCRS12_PPE                               , RULL(0x10D0203C0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PSCRS12_SCOM                              , RULL(0x1401284A), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PSCRS12_PPE                              , RULL(0x10E0103C0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PSCRS12_SCOM                             , RULL(0x1501244A), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PSCRS12_PPE                              , RULL(0x10E0203C0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PSCRS12_SCOM                             , RULL(0x1501284A), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_PSCRS13                                     , RULL(0x1001284B), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001244B,
REG64( EQ_0_CME_SCOM_PSCRS13                                   , RULL(0x1001284B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001244B,
REG64( EQ_1_CME_SCOM_PSCRS13                                   , RULL(0x1101284B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1101244B,
REG64( EQ_2_CME_SCOM_PSCRS13                                   , RULL(0x1201284B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1201244B,
REG64( EQ_3_CME_SCOM_PSCRS13                                   , RULL(0x1301284B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1301244B,
REG64( EQ_4_CME_SCOM_PSCRS13                                   , RULL(0x1401284B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1401244B,
REG64( EQ_5_CME_SCOM_PSCRS13                                   , RULL(0x1501284B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1501244B,
REG64( EX_CME_SCOM_PSCRS13_PPE                                 , RULL(0x1090103E0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_PSCRS13_SCOM                                , RULL(0x1001244B), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_PSCRS13_PPE                               , RULL(0x1090103E0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1001244B), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_PSCRS13_PPE                               , RULL(0x1090203E0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1001284B), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_PSCRS13_PPE                               , RULL(0x10A0103E0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1101244B), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_PSCRS13_PPE                               , RULL(0x10A0203E0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1101284B), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_PSCRS13_PPE                               , RULL(0x10B0103E0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1201244B), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_PSCRS13_PPE                               , RULL(0x10B0203E0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1201284B), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_PSCRS13_PPE                               , RULL(0x10C0103E0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1301244B), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_PSCRS13_PPE                               , RULL(0x10C0203E0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1301284B), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_PSCRS13_PPE                               , RULL(0x10D0103E0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1401244B), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_PSCRS13_PPE                               , RULL(0x10D0203E0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_PSCRS13_SCOM                              , RULL(0x1401284B), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_PSCRS13_PPE                              , RULL(0x10E0103E0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_PSCRS13_SCOM                             , RULL(0x1501244B), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_PSCRS13_PPE                              , RULL(0x10E0203E0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_PSCRS13_SCOM                             , RULL(0x1501284B), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_QFMR                                        , RULL(0x10012812), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012412,
REG64( EQ_0_CME_SCOM_QFMR                                      , RULL(0x10012812), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012412,
REG64( EQ_1_CME_SCOM_QFMR                                      , RULL(0x11012812), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012412,
REG64( EQ_2_CME_SCOM_QFMR                                      , RULL(0x12012812), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012412,
REG64( EQ_3_CME_SCOM_QFMR                                      , RULL(0x13012812), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012412,
REG64( EQ_4_CME_SCOM_QFMR                                      , RULL(0x14012812), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012412,
REG64( EQ_5_CME_SCOM_QFMR                                      , RULL(0x15012812), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012412,
REG64( EX_CME_SCOM_QFMR_PPE                                    , RULL(0x109010140), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_QFMR_SCOM                                   , RULL(0x10012412), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_QFMR_PPE                                  , RULL(0x109010140), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_QFMR_SCOM                                 , RULL(0x10012412), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_QFMR_PPE                                  , RULL(0x109020140), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_QFMR_SCOM                                 , RULL(0x10012812), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_QFMR_PPE                                  , RULL(0x10A010140), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_QFMR_SCOM                                 , RULL(0x11012412), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_QFMR_PPE                                  , RULL(0x10A020140), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_QFMR_SCOM                                 , RULL(0x11012812), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_QFMR_PPE                                  , RULL(0x10B010140), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_QFMR_SCOM                                 , RULL(0x12012412), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_QFMR_PPE                                  , RULL(0x10B020140), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_QFMR_SCOM                                 , RULL(0x12012812), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_QFMR_PPE                                  , RULL(0x10C010140), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_QFMR_SCOM                                 , RULL(0x13012412), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_QFMR_PPE                                  , RULL(0x10C020140), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_QFMR_SCOM                                 , RULL(0x13012812), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_QFMR_PPE                                  , RULL(0x10D010140), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_QFMR_SCOM                                 , RULL(0x14012412), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_QFMR_PPE                                  , RULL(0x10D020140), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_QFMR_SCOM                                 , RULL(0x14012812), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_QFMR_PPE                                 , RULL(0x10E010140), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_QFMR_SCOM                                , RULL(0x15012412), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_QFMR_PPE                                 , RULL(0x10E020140), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_QFMR_SCOM                                , RULL(0x15012812), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_SICR_SCOM                                   , RULL(0x1001281D), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001241D,
REG64( EQ_CME_SCOM_SICR_SCOM1                                  , RULL(0x1001281E), SH_UNT_EQ       ,
       SH_ACS_SCOM1     ); //DUPS: 1001241E,
REG64( EQ_CME_SCOM_SICR_SCOM2                                  , RULL(0x1001281F), SH_UNT_EQ       ,
       SH_ACS_SCOM2     ); //DUPS: 1001241F,
REG64( EQ_0_CME_SCOM_SICR_SCOM                                 , RULL(0x1001281D), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001241D,
REG64( EQ_0_CME_SCOM_SICR_SCOM1                                , RULL(0x1001281E), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1     ); //DUPS: 1001241E,
REG64( EQ_0_CME_SCOM_SICR_SCOM2                                , RULL(0x1001281F), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2     ); //DUPS: 1001241F,
REG64( EQ_1_CME_SCOM_SICR_SCOM                                 , RULL(0x1101281D), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101241D,
REG64( EQ_1_CME_SCOM_SICR_SCOM1                                , RULL(0x1101281E), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1     ); //DUPS: 1101241E,
REG64( EQ_1_CME_SCOM_SICR_SCOM2                                , RULL(0x1101281F), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2     ); //DUPS: 1101241F,
REG64( EQ_2_CME_SCOM_SICR_SCOM                                 , RULL(0x1201281D), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201241D,
REG64( EQ_2_CME_SCOM_SICR_SCOM1                                , RULL(0x1201281E), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1     ); //DUPS: 1201241E,
REG64( EQ_2_CME_SCOM_SICR_SCOM2                                , RULL(0x1201281F), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2     ); //DUPS: 1201241F,
REG64( EQ_3_CME_SCOM_SICR_SCOM                                 , RULL(0x1301281D), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301241D,
REG64( EQ_3_CME_SCOM_SICR_SCOM1                                , RULL(0x1301281E), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1     ); //DUPS: 1301241E,
REG64( EQ_3_CME_SCOM_SICR_SCOM2                                , RULL(0x1301281F), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2     ); //DUPS: 1301241F,
REG64( EQ_4_CME_SCOM_SICR_SCOM                                 , RULL(0x1401281D), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401241D,
REG64( EQ_4_CME_SCOM_SICR_SCOM1                                , RULL(0x1401281E), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1     ); //DUPS: 1401241E,
REG64( EQ_4_CME_SCOM_SICR_SCOM2                                , RULL(0x1401281F), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2     ); //DUPS: 1401241F,
REG64( EQ_5_CME_SCOM_SICR_SCOM                                 , RULL(0x1501281D), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501241D,
REG64( EQ_5_CME_SCOM_SICR_SCOM1                                , RULL(0x1501281E), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1     ); //DUPS: 1501241E,
REG64( EQ_5_CME_SCOM_SICR_SCOM2                                , RULL(0x1501281F), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2     ); //DUPS: 1501241F,
REG64( EX_CME_SCOM_SICR_PPE                                    , RULL(0x109010500), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_SICR_PPE1                                   , RULL(0x109010518), SH_UNT_EX       ,
       SH_ACS_PPE1      );
REG64( EX_CME_SCOM_SICR_PPE2                                   , RULL(0x109010510), SH_UNT_EX       ,
       SH_ACS_PPE2      );
REG64( EX_CME_SCOM_SICR_SCOM                                   , RULL(0x1001241D), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_CME_SCOM_SICR_SCOM1                                  , RULL(0x1001241E), SH_UNT_EX       , SH_ACS_SCOM1     );
REG64( EX_CME_SCOM_SICR_SCOM2                                  , RULL(0x1001241F), SH_UNT_EX       , SH_ACS_SCOM2     );
REG64( EX_0_CME_SCOM_SICR_PPE                                  , RULL(0x109010500), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_SICR_PPE1                                 , RULL(0x109010518), SH_UNT_EX_0     ,
       SH_ACS_PPE1      );
REG64( EX_0_CME_SCOM_SICR_PPE2                                 , RULL(0x109010510), SH_UNT_EX_0     ,
       SH_ACS_PPE2      );
REG64( EX_0_CME_SCOM_SICR_SCOM                                 , RULL(0x1001241D), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_0_CME_SCOM_SICR_SCOM1                                , RULL(0x1001241E), SH_UNT_EX_0     , SH_ACS_SCOM1     );
REG64( EX_0_CME_SCOM_SICR_SCOM2                                , RULL(0x1001241F), SH_UNT_EX_0     , SH_ACS_SCOM2     );
REG64( EX_1_CME_SCOM_SICR_PPE                                  , RULL(0x109020500), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_SICR_PPE1                                 , RULL(0x109020518), SH_UNT_EX_1     ,
       SH_ACS_PPE1      );
REG64( EX_1_CME_SCOM_SICR_PPE2                                 , RULL(0x109020510), SH_UNT_EX_1     ,
       SH_ACS_PPE2      );
REG64( EX_1_CME_SCOM_SICR_SCOM                                 , RULL(0x1001281D), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_1_CME_SCOM_SICR_SCOM1                                , RULL(0x1001281E), SH_UNT_EX_1     , SH_ACS_SCOM1     );
REG64( EX_1_CME_SCOM_SICR_SCOM2                                , RULL(0x1001281F), SH_UNT_EX_1     , SH_ACS_SCOM2     );
REG64( EX_2_CME_SCOM_SICR_PPE                                  , RULL(0x10A010500), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_SICR_PPE1                                 , RULL(0x10A010518), SH_UNT_EX_2     ,
       SH_ACS_PPE1      );
REG64( EX_2_CME_SCOM_SICR_PPE2                                 , RULL(0x10A010510), SH_UNT_EX_2     ,
       SH_ACS_PPE2      );
REG64( EX_2_CME_SCOM_SICR_SCOM                                 , RULL(0x1101241D), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_2_CME_SCOM_SICR_SCOM1                                , RULL(0x1101241E), SH_UNT_EX_2     , SH_ACS_SCOM1     );
REG64( EX_2_CME_SCOM_SICR_SCOM2                                , RULL(0x1101241F), SH_UNT_EX_2     , SH_ACS_SCOM2     );
REG64( EX_3_CME_SCOM_SICR_PPE                                  , RULL(0x10A020500), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_SICR_PPE1                                 , RULL(0x10A020518), SH_UNT_EX_3     ,
       SH_ACS_PPE1      );
REG64( EX_3_CME_SCOM_SICR_PPE2                                 , RULL(0x10A020510), SH_UNT_EX_3     ,
       SH_ACS_PPE2      );
REG64( EX_3_CME_SCOM_SICR_SCOM                                 , RULL(0x1101281D), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_3_CME_SCOM_SICR_SCOM1                                , RULL(0x1101281E), SH_UNT_EX_3     , SH_ACS_SCOM1     );
REG64( EX_3_CME_SCOM_SICR_SCOM2                                , RULL(0x1101281F), SH_UNT_EX_3     , SH_ACS_SCOM2     );
REG64( EX_4_CME_SCOM_SICR_PPE                                  , RULL(0x10B010500), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_SICR_PPE1                                 , RULL(0x10B010518), SH_UNT_EX_4     ,
       SH_ACS_PPE1      );
REG64( EX_4_CME_SCOM_SICR_PPE2                                 , RULL(0x10B010510), SH_UNT_EX_4     ,
       SH_ACS_PPE2      );
REG64( EX_4_CME_SCOM_SICR_SCOM                                 , RULL(0x1201241D), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_4_CME_SCOM_SICR_SCOM1                                , RULL(0x1201241E), SH_UNT_EX_4     , SH_ACS_SCOM1     );
REG64( EX_4_CME_SCOM_SICR_SCOM2                                , RULL(0x1201241F), SH_UNT_EX_4     , SH_ACS_SCOM2     );
REG64( EX_5_CME_SCOM_SICR_PPE                                  , RULL(0x10B020500), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_SICR_PPE1                                 , RULL(0x10B020518), SH_UNT_EX_5     ,
       SH_ACS_PPE1      );
REG64( EX_5_CME_SCOM_SICR_PPE2                                 , RULL(0x10B020510), SH_UNT_EX_5     ,
       SH_ACS_PPE2      );
REG64( EX_5_CME_SCOM_SICR_SCOM                                 , RULL(0x1201281D), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_5_CME_SCOM_SICR_SCOM1                                , RULL(0x1201281E), SH_UNT_EX_5     , SH_ACS_SCOM1     );
REG64( EX_5_CME_SCOM_SICR_SCOM2                                , RULL(0x1201281F), SH_UNT_EX_5     , SH_ACS_SCOM2     );
REG64( EX_6_CME_SCOM_SICR_PPE                                  , RULL(0x10C010500), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_SICR_PPE1                                 , RULL(0x10C010518), SH_UNT_EX_6     ,
       SH_ACS_PPE1      );
REG64( EX_6_CME_SCOM_SICR_PPE2                                 , RULL(0x10C010510), SH_UNT_EX_6     ,
       SH_ACS_PPE2      );
REG64( EX_6_CME_SCOM_SICR_SCOM                                 , RULL(0x1301241D), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_6_CME_SCOM_SICR_SCOM1                                , RULL(0x1301241E), SH_UNT_EX_6     , SH_ACS_SCOM1     );
REG64( EX_6_CME_SCOM_SICR_SCOM2                                , RULL(0x1301241F), SH_UNT_EX_6     , SH_ACS_SCOM2     );
REG64( EX_7_CME_SCOM_SICR_PPE                                  , RULL(0x10C020500), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_SICR_PPE1                                 , RULL(0x10C020518), SH_UNT_EX_7     ,
       SH_ACS_PPE1      );
REG64( EX_7_CME_SCOM_SICR_PPE2                                 , RULL(0x10C020510), SH_UNT_EX_7     ,
       SH_ACS_PPE2      );
REG64( EX_7_CME_SCOM_SICR_SCOM                                 , RULL(0x1301281D), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_7_CME_SCOM_SICR_SCOM1                                , RULL(0x1301281E), SH_UNT_EX_7     , SH_ACS_SCOM1     );
REG64( EX_7_CME_SCOM_SICR_SCOM2                                , RULL(0x1301281F), SH_UNT_EX_7     , SH_ACS_SCOM2     );
REG64( EX_8_CME_SCOM_SICR_PPE                                  , RULL(0x10D010500), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_SICR_PPE1                                 , RULL(0x10D010518), SH_UNT_EX_8     ,
       SH_ACS_PPE1      );
REG64( EX_8_CME_SCOM_SICR_PPE2                                 , RULL(0x10D010510), SH_UNT_EX_8     ,
       SH_ACS_PPE2      );
REG64( EX_8_CME_SCOM_SICR_SCOM                                 , RULL(0x1401241D), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_8_CME_SCOM_SICR_SCOM1                                , RULL(0x1401241E), SH_UNT_EX_8     , SH_ACS_SCOM1     );
REG64( EX_8_CME_SCOM_SICR_SCOM2                                , RULL(0x1401241F), SH_UNT_EX_8     , SH_ACS_SCOM2     );
REG64( EX_9_CME_SCOM_SICR_PPE                                  , RULL(0x10D020500), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_SICR_PPE1                                 , RULL(0x10D020518), SH_UNT_EX_9     ,
       SH_ACS_PPE1      );
REG64( EX_9_CME_SCOM_SICR_PPE2                                 , RULL(0x10D020510), SH_UNT_EX_9     ,
       SH_ACS_PPE2      );
REG64( EX_9_CME_SCOM_SICR_SCOM                                 , RULL(0x1401281D), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_9_CME_SCOM_SICR_SCOM1                                , RULL(0x1401281E), SH_UNT_EX_9     , SH_ACS_SCOM1     );
REG64( EX_9_CME_SCOM_SICR_SCOM2                                , RULL(0x1401281F), SH_UNT_EX_9     , SH_ACS_SCOM2     );
REG64( EX_10_CME_SCOM_SICR_PPE                                 , RULL(0x10E010500), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_SICR_PPE1                                , RULL(0x10E010518), SH_UNT_EX_10    ,
       SH_ACS_PPE1      );
REG64( EX_10_CME_SCOM_SICR_PPE2                                , RULL(0x10E010510), SH_UNT_EX_10    ,
       SH_ACS_PPE2      );
REG64( EX_10_CME_SCOM_SICR_SCOM                                , RULL(0x1501241D), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_10_CME_SCOM_SICR_SCOM1                               , RULL(0x1501241E), SH_UNT_EX_10    , SH_ACS_SCOM1     );
REG64( EX_10_CME_SCOM_SICR_SCOM2                               , RULL(0x1501241F), SH_UNT_EX_10    , SH_ACS_SCOM2     );
REG64( EX_11_CME_SCOM_SICR_PPE                                 , RULL(0x10E020500), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_SICR_PPE1                                , RULL(0x10E020518), SH_UNT_EX_11    ,
       SH_ACS_PPE1      );
REG64( EX_11_CME_SCOM_SICR_PPE2                                , RULL(0x10E020510), SH_UNT_EX_11    ,
       SH_ACS_PPE2      );
REG64( EX_11_CME_SCOM_SICR_SCOM                                , RULL(0x1501281D), SH_UNT_EX_11    , SH_ACS_SCOM      );
REG64( EX_11_CME_SCOM_SICR_SCOM1                               , RULL(0x1501281E), SH_UNT_EX_11    , SH_ACS_SCOM1     );
REG64( EX_11_CME_SCOM_SICR_SCOM2                               , RULL(0x1501281F), SH_UNT_EX_11    , SH_ACS_SCOM2     );

REG64( EQ_CME_SCOM_SRTCH0                                      , RULL(0x10012823), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012423,
REG64( EQ_0_CME_SCOM_SRTCH0                                    , RULL(0x10012823), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012423,
REG64( EQ_1_CME_SCOM_SRTCH0                                    , RULL(0x11012823), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012423,
REG64( EQ_2_CME_SCOM_SRTCH0                                    , RULL(0x12012823), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012423,
REG64( EQ_3_CME_SCOM_SRTCH0                                    , RULL(0x13012823), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012423,
REG64( EQ_4_CME_SCOM_SRTCH0                                    , RULL(0x14012823), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012423,
REG64( EQ_5_CME_SCOM_SRTCH0                                    , RULL(0x15012823), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012423,
REG64( EX_CME_SCOM_SRTCH0_PPE                                  , RULL(0x109010420), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_SRTCH0_SCOM                                 , RULL(0x10012423), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_SRTCH0_PPE                                , RULL(0x109010420), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_SRTCH0_SCOM                               , RULL(0x10012423), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_SRTCH0_PPE                                , RULL(0x109020420), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_SRTCH0_SCOM                               , RULL(0x10012823), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_SRTCH0_PPE                                , RULL(0x10A010420), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_SRTCH0_SCOM                               , RULL(0x11012423), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_SRTCH0_PPE                                , RULL(0x10A020420), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_SRTCH0_SCOM                               , RULL(0x11012823), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_SRTCH0_PPE                                , RULL(0x10B010420), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_SRTCH0_SCOM                               , RULL(0x12012423), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_SRTCH0_PPE                                , RULL(0x10B020420), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_SRTCH0_SCOM                               , RULL(0x12012823), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_SRTCH0_PPE                                , RULL(0x10C010420), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_SRTCH0_SCOM                               , RULL(0x13012423), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_SRTCH0_PPE                                , RULL(0x10C020420), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_SRTCH0_SCOM                               , RULL(0x13012823), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_SRTCH0_PPE                                , RULL(0x10D010420), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_SRTCH0_SCOM                               , RULL(0x14012423), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_SRTCH0_PPE                                , RULL(0x10D020420), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_SRTCH0_SCOM                               , RULL(0x14012823), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_SRTCH0_PPE                               , RULL(0x10E010420), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_SRTCH0_SCOM                              , RULL(0x15012423), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_SRTCH0_PPE                               , RULL(0x10E020420), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_SRTCH0_SCOM                              , RULL(0x15012823), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_SRTCH1                                      , RULL(0x10012824), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012424,
REG64( EQ_0_CME_SCOM_SRTCH1                                    , RULL(0x10012824), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012424,
REG64( EQ_1_CME_SCOM_SRTCH1                                    , RULL(0x11012824), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012424,
REG64( EQ_2_CME_SCOM_SRTCH1                                    , RULL(0x12012824), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012424,
REG64( EQ_3_CME_SCOM_SRTCH1                                    , RULL(0x13012824), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012424,
REG64( EQ_4_CME_SCOM_SRTCH1                                    , RULL(0x14012824), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012424,
REG64( EQ_5_CME_SCOM_SRTCH1                                    , RULL(0x15012824), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012424,
REG64( EX_CME_SCOM_SRTCH1_PPE                                  , RULL(0x109010440), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_SRTCH1_SCOM                                 , RULL(0x10012424), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CME_SCOM_SRTCH1_PPE                                , RULL(0x109010440), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_SRTCH1_SCOM                               , RULL(0x10012424), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CME_SCOM_SRTCH1_PPE                                , RULL(0x109020440), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_SRTCH1_SCOM                               , RULL(0x10012824), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CME_SCOM_SRTCH1_PPE                                , RULL(0x10A010440), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_SRTCH1_SCOM                               , RULL(0x11012424), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CME_SCOM_SRTCH1_PPE                                , RULL(0x10A020440), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_SRTCH1_SCOM                               , RULL(0x11012824), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CME_SCOM_SRTCH1_PPE                                , RULL(0x10B010440), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_SRTCH1_SCOM                               , RULL(0x12012424), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CME_SCOM_SRTCH1_PPE                                , RULL(0x10B020440), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_SRTCH1_SCOM                               , RULL(0x12012824), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CME_SCOM_SRTCH1_PPE                                , RULL(0x10C010440), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_SRTCH1_SCOM                               , RULL(0x13012424), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CME_SCOM_SRTCH1_PPE                                , RULL(0x10C020440), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_SRTCH1_SCOM                               , RULL(0x13012824), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CME_SCOM_SRTCH1_PPE                                , RULL(0x10D010440), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_SRTCH1_SCOM                               , RULL(0x14012424), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CME_SCOM_SRTCH1_PPE                                , RULL(0x10D020440), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_SRTCH1_SCOM                               , RULL(0x14012824), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CME_SCOM_SRTCH1_PPE                               , RULL(0x10E010440), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_SRTCH1_SCOM                              , RULL(0x15012424), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CME_SCOM_SRTCH1_PPE                               , RULL(0x10E020440), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_SRTCH1_SCOM                              , RULL(0x15012824), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CME_SCOM_VDSR                                        , RULL(0x10012817), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012417,
REG64( EQ_0_CME_SCOM_VDSR                                      , RULL(0x10012817), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012417,
REG64( EQ_1_CME_SCOM_VDSR                                      , RULL(0x11012817), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012417,
REG64( EQ_2_CME_SCOM_VDSR                                      , RULL(0x12012817), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012417,
REG64( EQ_3_CME_SCOM_VDSR                                      , RULL(0x13012817), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012417,
REG64( EQ_4_CME_SCOM_VDSR                                      , RULL(0x14012817), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012417,
REG64( EQ_5_CME_SCOM_VDSR                                      , RULL(0x15012817), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012417,
REG64( EX_CME_SCOM_VDSR_PPE                                    , RULL(0x109010640), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_VDSR_SCOM                                   , RULL(0x10012417), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_VDSR_PPE                                  , RULL(0x109010640), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_VDSR_SCOM                                 , RULL(0x10012417), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_VDSR_PPE                                  , RULL(0x109020640), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_VDSR_SCOM                                 , RULL(0x10012817), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_VDSR_PPE                                  , RULL(0x10A010640), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_VDSR_SCOM                                 , RULL(0x11012417), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_VDSR_PPE                                  , RULL(0x10A020640), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_VDSR_SCOM                                 , RULL(0x11012817), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_VDSR_PPE                                  , RULL(0x10B010640), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_VDSR_SCOM                                 , RULL(0x12012417), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_VDSR_PPE                                  , RULL(0x10B020640), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_VDSR_SCOM                                 , RULL(0x12012817), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_VDSR_PPE                                  , RULL(0x10C010640), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_VDSR_SCOM                                 , RULL(0x13012417), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_VDSR_PPE                                  , RULL(0x10C020640), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_VDSR_SCOM                                 , RULL(0x13012817), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_VDSR_PPE                                  , RULL(0x10D010640), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_VDSR_SCOM                                 , RULL(0x14012417), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_VDSR_PPE                                  , RULL(0x10D020640), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_VDSR_SCOM                                 , RULL(0x14012817), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_VDSR_PPE                                 , RULL(0x10E010640), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_VDSR_SCOM                                , RULL(0x15012417), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_VDSR_PPE                                 , RULL(0x10E020640), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_VDSR_SCOM                                , RULL(0x15012817), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_VTSR0                                       , RULL(0x10012815), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012415,
REG64( EQ_0_CME_SCOM_VTSR0                                     , RULL(0x10012815), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012415,
REG64( EQ_1_CME_SCOM_VTSR0                                     , RULL(0x11012815), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012415,
REG64( EQ_2_CME_SCOM_VTSR0                                     , RULL(0x12012815), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012415,
REG64( EQ_3_CME_SCOM_VTSR0                                     , RULL(0x13012815), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012415,
REG64( EQ_4_CME_SCOM_VTSR0                                     , RULL(0x14012815), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012415,
REG64( EQ_5_CME_SCOM_VTSR0                                     , RULL(0x15012815), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012415,
REG64( EX_CME_SCOM_VTSR0_PPE                                   , RULL(0x109010600), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_VTSR0_SCOM                                  , RULL(0x10012415), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_VTSR0_PPE                                 , RULL(0x109010600), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_VTSR0_SCOM                                , RULL(0x10012415), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_VTSR0_PPE                                 , RULL(0x109020600), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_VTSR0_SCOM                                , RULL(0x10012815), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_VTSR0_PPE                                 , RULL(0x10A010600), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_VTSR0_SCOM                                , RULL(0x11012415), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_VTSR0_PPE                                 , RULL(0x10A020600), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_VTSR0_SCOM                                , RULL(0x11012815), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_VTSR0_PPE                                 , RULL(0x10B010600), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_VTSR0_SCOM                                , RULL(0x12012415), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_VTSR0_PPE                                 , RULL(0x10B020600), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_VTSR0_SCOM                                , RULL(0x12012815), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_VTSR0_PPE                                 , RULL(0x10C010600), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_VTSR0_SCOM                                , RULL(0x13012415), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_VTSR0_PPE                                 , RULL(0x10C020600), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_VTSR0_SCOM                                , RULL(0x13012815), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_VTSR0_PPE                                 , RULL(0x10D010600), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_VTSR0_SCOM                                , RULL(0x14012415), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_VTSR0_PPE                                 , RULL(0x10D020600), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_VTSR0_SCOM                                , RULL(0x14012815), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_VTSR0_PPE                                , RULL(0x10E010600), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_VTSR0_SCOM                               , RULL(0x15012415), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_VTSR0_PPE                                , RULL(0x10E020600), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_VTSR0_SCOM                               , RULL(0x15012815), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_VTSR1                                       , RULL(0x10012816), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012416,
REG64( EQ_0_CME_SCOM_VTSR1                                     , RULL(0x10012816), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012416,
REG64( EQ_1_CME_SCOM_VTSR1                                     , RULL(0x11012816), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012416,
REG64( EQ_2_CME_SCOM_VTSR1                                     , RULL(0x12012816), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012416,
REG64( EQ_3_CME_SCOM_VTSR1                                     , RULL(0x13012816), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012416,
REG64( EQ_4_CME_SCOM_VTSR1                                     , RULL(0x14012816), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012416,
REG64( EQ_5_CME_SCOM_VTSR1                                     , RULL(0x15012816), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012416,
REG64( EX_CME_SCOM_VTSR1_PPE                                   , RULL(0x109010620), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_VTSR1_SCOM                                  , RULL(0x10012416), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_VTSR1_PPE                                 , RULL(0x109010620), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_VTSR1_SCOM                                , RULL(0x10012416), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_VTSR1_PPE                                 , RULL(0x109020620), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_VTSR1_SCOM                                , RULL(0x10012816), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_VTSR1_PPE                                 , RULL(0x10A010620), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_VTSR1_SCOM                                , RULL(0x11012416), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_VTSR1_PPE                                 , RULL(0x10A020620), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_VTSR1_SCOM                                , RULL(0x11012816), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_VTSR1_PPE                                 , RULL(0x10B010620), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_VTSR1_SCOM                                , RULL(0x12012416), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_VTSR1_PPE                                 , RULL(0x10B020620), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_VTSR1_SCOM                                , RULL(0x12012816), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_VTSR1_PPE                                 , RULL(0x10C010620), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_VTSR1_SCOM                                , RULL(0x13012416), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_VTSR1_PPE                                 , RULL(0x10C020620), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_VTSR1_SCOM                                , RULL(0x13012816), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_VTSR1_PPE                                 , RULL(0x10D010620), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_VTSR1_SCOM                                , RULL(0x14012416), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_VTSR1_PPE                                 , RULL(0x10D020620), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_VTSR1_SCOM                                , RULL(0x14012816), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_VTSR1_PPE                                , RULL(0x10E010620), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_VTSR1_SCOM                               , RULL(0x15012416), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_VTSR1_PPE                                , RULL(0x10E020620), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_VTSR1_SCOM                               , RULL(0x15012816), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_XIPCBMD0                                    , RULL(0x1001283C), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243C,
REG64( EQ_0_CME_SCOM_XIPCBMD0                                  , RULL(0x1001283C), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243C,
REG64( EQ_1_CME_SCOM_XIPCBMD0                                  , RULL(0x1101283C), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101243C,
REG64( EQ_2_CME_SCOM_XIPCBMD0                                  , RULL(0x1201283C), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201243C,
REG64( EQ_3_CME_SCOM_XIPCBMD0                                  , RULL(0x1301283C), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301243C,
REG64( EQ_4_CME_SCOM_XIPCBMD0                                  , RULL(0x1401283C), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401243C,
REG64( EQ_5_CME_SCOM_XIPCBMD0                                  , RULL(0x1501283C), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501243C,
REG64( EX_CME_SCOM_XIPCBMD0_PPE                                , RULL(0x109010580), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_XIPCBMD0_SCOM                               , RULL(0x1001243C), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x109010580), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1001243C), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x109020580), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1001283C), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x10A010580), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1101243C), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x10A020580), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1101283C), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x10B010580), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1201243C), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x10B020580), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1201283C), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x10C010580), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1301243C), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x10C020580), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1301283C), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x10D010580), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1401243C), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_XIPCBMD0_PPE                              , RULL(0x10D020580), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_XIPCBMD0_SCOM                             , RULL(0x1401283C), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_XIPCBMD0_PPE                             , RULL(0x10E010580), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_XIPCBMD0_SCOM                            , RULL(0x1501243C), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_XIPCBMD0_PPE                             , RULL(0x10E020580), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_XIPCBMD0_SCOM                            , RULL(0x1501283C), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_XIPCBMD1                                    , RULL(0x1001283D), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243D,
REG64( EQ_0_CME_SCOM_XIPCBMD1                                  , RULL(0x1001283D), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243D,
REG64( EQ_1_CME_SCOM_XIPCBMD1                                  , RULL(0x1101283D), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101243D,
REG64( EQ_2_CME_SCOM_XIPCBMD1                                  , RULL(0x1201283D), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201243D,
REG64( EQ_3_CME_SCOM_XIPCBMD1                                  , RULL(0x1301283D), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301243D,
REG64( EQ_4_CME_SCOM_XIPCBMD1                                  , RULL(0x1401283D), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401243D,
REG64( EQ_5_CME_SCOM_XIPCBMD1                                  , RULL(0x1501283D), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501243D,
REG64( EX_CME_SCOM_XIPCBMD1_PPE                                , RULL(0x1090105A0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_XIPCBMD1_SCOM                               , RULL(0x1001243D), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x1090105A0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1001243D), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x1090205A0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1001283D), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x10A0105A0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1101243D), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x10A0205A0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1101283D), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x10B0105A0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1201243D), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x10B0205A0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1201283D), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x10C0105A0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1301243D), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x10C0205A0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1301283D), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x10D0105A0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1401243D), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_XIPCBMD1_PPE                              , RULL(0x10D0205A0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_XIPCBMD1_SCOM                             , RULL(0x1401283D), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_XIPCBMD1_PPE                             , RULL(0x10E0105A0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_XIPCBMD1_SCOM                            , RULL(0x1501243D), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_XIPCBMD1_PPE                             , RULL(0x10E0205A0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_XIPCBMD1_SCOM                            , RULL(0x1501283D), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_XIPCBMI0                                    , RULL(0x1001283E), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243E,
REG64( EQ_0_CME_SCOM_XIPCBMI0                                  , RULL(0x1001283E), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243E,
REG64( EQ_1_CME_SCOM_XIPCBMI0                                  , RULL(0x1101283E), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101243E,
REG64( EQ_2_CME_SCOM_XIPCBMI0                                  , RULL(0x1201283E), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201243E,
REG64( EQ_3_CME_SCOM_XIPCBMI0                                  , RULL(0x1301283E), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301243E,
REG64( EQ_4_CME_SCOM_XIPCBMI0                                  , RULL(0x1401283E), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401243E,
REG64( EQ_5_CME_SCOM_XIPCBMI0                                  , RULL(0x1501283E), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501243E,
REG64( EX_CME_SCOM_XIPCBMI0_PPE                                , RULL(0x1090105C0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_XIPCBMI0_SCOM                               , RULL(0x1001243E), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x1090105C0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1001243E), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x1090205C0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1001283E), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x10A0105C0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1101243E), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x10A0205C0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1101283E), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x10B0105C0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1201243E), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x10B0205C0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1201283E), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x10C0105C0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1301243E), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x10C0205C0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1301283E), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x10D0105C0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1401243E), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_XIPCBMI0_PPE                              , RULL(0x10D0205C0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_XIPCBMI0_SCOM                             , RULL(0x1401283E), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_XIPCBMI0_PPE                             , RULL(0x10E0105C0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_XIPCBMI0_SCOM                            , RULL(0x1501243E), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_XIPCBMI0_PPE                             , RULL(0x10E0205C0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_XIPCBMI0_SCOM                            , RULL(0x1501283E), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_XIPCBMI1                                    , RULL(0x1001283F), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243F,
REG64( EQ_0_CME_SCOM_XIPCBMI1                                  , RULL(0x1001283F), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243F,
REG64( EQ_1_CME_SCOM_XIPCBMI1                                  , RULL(0x1101283F), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101243F,
REG64( EQ_2_CME_SCOM_XIPCBMI1                                  , RULL(0x1201283F), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201243F,
REG64( EQ_3_CME_SCOM_XIPCBMI1                                  , RULL(0x1301283F), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301243F,
REG64( EQ_4_CME_SCOM_XIPCBMI1                                  , RULL(0x1401283F), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401243F,
REG64( EQ_5_CME_SCOM_XIPCBMI1                                  , RULL(0x1501283F), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501243F,
REG64( EX_CME_SCOM_XIPCBMI1_PPE                                , RULL(0x1090105E0), SH_UNT_EX       ,
       SH_ACS_PPE       );
REG64( EX_CME_SCOM_XIPCBMI1_SCOM                               , RULL(0x1001243F), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x1090105E0), SH_UNT_EX_0     ,
       SH_ACS_PPE       );
REG64( EX_0_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1001243F), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x1090205E0), SH_UNT_EX_1     ,
       SH_ACS_PPE       );
REG64( EX_1_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1001283F), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x10A0105E0), SH_UNT_EX_2     ,
       SH_ACS_PPE       );
REG64( EX_2_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1101243F), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x10A0205E0), SH_UNT_EX_3     ,
       SH_ACS_PPE       );
REG64( EX_3_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1101283F), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x10B0105E0), SH_UNT_EX_4     ,
       SH_ACS_PPE       );
REG64( EX_4_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1201243F), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x10B0205E0), SH_UNT_EX_5     ,
       SH_ACS_PPE       );
REG64( EX_5_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1201283F), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x10C0105E0), SH_UNT_EX_6     ,
       SH_ACS_PPE       );
REG64( EX_6_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1301243F), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x10C0205E0), SH_UNT_EX_7     ,
       SH_ACS_PPE       );
REG64( EX_7_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1301283F), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x10D0105E0), SH_UNT_EX_8     ,
       SH_ACS_PPE       );
REG64( EX_8_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1401243F), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_XIPCBMI1_PPE                              , RULL(0x10D0205E0), SH_UNT_EX_9     ,
       SH_ACS_PPE       );
REG64( EX_9_CME_SCOM_XIPCBMI1_SCOM                             , RULL(0x1401283F), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_XIPCBMI1_PPE                             , RULL(0x10E0105E0), SH_UNT_EX_10    ,
       SH_ACS_PPE       );
REG64( EX_10_CME_SCOM_XIPCBMI1_SCOM                            , RULL(0x1501243F), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_XIPCBMI1_PPE                             , RULL(0x10E0205E0), SH_UNT_EX_11    ,
       SH_ACS_PPE       );
REG64( EX_11_CME_SCOM_XIPCBMI1_SCOM                            , RULL(0x1501283F), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_XIPCBQ0                                     , RULL(0x1001283A), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243A,
REG64( EQ_0_CME_SCOM_XIPCBQ0                                   , RULL(0x1001283A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243A,
REG64( EQ_1_CME_SCOM_XIPCBQ0                                   , RULL(0x1101283A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101243A,
REG64( EQ_2_CME_SCOM_XIPCBQ0                                   , RULL(0x1201283A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201243A,
REG64( EQ_3_CME_SCOM_XIPCBQ0                                   , RULL(0x1301283A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301243A,
REG64( EQ_4_CME_SCOM_XIPCBQ0                                   , RULL(0x1401283A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401243A,
REG64( EQ_5_CME_SCOM_XIPCBQ0                                   , RULL(0x1501283A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501243A,
REG64( EX_CME_SCOM_XIPCBQ0                                     , RULL(0x1001243A), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_XIPCBQ0                                   , RULL(0x1001243A), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_XIPCBQ0                                   , RULL(0x1001283A), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_XIPCBQ0                                   , RULL(0x1101243A), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_XIPCBQ0                                   , RULL(0x1101283A), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_XIPCBQ0                                   , RULL(0x1201243A), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_XIPCBQ0                                   , RULL(0x1201283A), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_XIPCBQ0                                   , RULL(0x1301243A), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_XIPCBQ0                                   , RULL(0x1301283A), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_XIPCBQ0                                   , RULL(0x1401243A), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_XIPCBQ0                                   , RULL(0x1401283A), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_XIPCBQ0                                  , RULL(0x1501243A), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_XIPCBQ0                                  , RULL(0x1501283A), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_CME_SCOM_XIPCBQ1                                     , RULL(0x1001283B), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243B,
REG64( EQ_0_CME_SCOM_XIPCBQ1                                   , RULL(0x1001283B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1001243B,
REG64( EQ_1_CME_SCOM_XIPCBQ1                                   , RULL(0x1101283B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1101243B,
REG64( EQ_2_CME_SCOM_XIPCBQ1                                   , RULL(0x1201283B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1201243B,
REG64( EQ_3_CME_SCOM_XIPCBQ1                                   , RULL(0x1301283B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1301243B,
REG64( EQ_4_CME_SCOM_XIPCBQ1                                   , RULL(0x1401283B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1401243B,
REG64( EQ_5_CME_SCOM_XIPCBQ1                                   , RULL(0x1501283B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 1501243B,
REG64( EX_CME_SCOM_XIPCBQ1                                     , RULL(0x1001243B), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_CME_SCOM_XIPCBQ1                                   , RULL(0x1001243B), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_CME_SCOM_XIPCBQ1                                   , RULL(0x1001283B), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_CME_SCOM_XIPCBQ1                                   , RULL(0x1101243B), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_CME_SCOM_XIPCBQ1                                   , RULL(0x1101283B), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_CME_SCOM_XIPCBQ1                                   , RULL(0x1201243B), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_CME_SCOM_XIPCBQ1                                   , RULL(0x1201283B), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_CME_SCOM_XIPCBQ1                                   , RULL(0x1301243B), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_CME_SCOM_XIPCBQ1                                   , RULL(0x1301283B), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_CME_SCOM_XIPCBQ1                                   , RULL(0x1401243B), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_CME_SCOM_XIPCBQ1                                   , RULL(0x1401283B), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_CME_SCOM_XIPCBQ1                                  , RULL(0x1501243B), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_CME_SCOM_XIPCBQ1                                  , RULL(0x1501283B), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( C_CONTROL_REG                                           , RULL(0x20050012), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CONTROL_REG                                         , RULL(0x20050012), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CONTROL_REG                                         , RULL(0x21050012), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CONTROL_REG                                         , RULL(0x22050012), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CONTROL_REG                                         , RULL(0x23050012), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CONTROL_REG                                         , RULL(0x24050012), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CONTROL_REG                                         , RULL(0x25050012), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CONTROL_REG                                         , RULL(0x26050012), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CONTROL_REG                                         , RULL(0x27050012), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CONTROL_REG                                         , RULL(0x28050012), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CONTROL_REG                                         , RULL(0x29050012), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CONTROL_REG                                        , RULL(0x2A050012), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CONTROL_REG                                        , RULL(0x2B050012), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CONTROL_REG                                        , RULL(0x2C050012), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CONTROL_REG                                        , RULL(0x2D050012), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CONTROL_REG                                        , RULL(0x2E050012), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CONTROL_REG                                        , RULL(0x2F050012), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CONTROL_REG                                        , RULL(0x30050012), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CONTROL_REG                                        , RULL(0x31050012), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CONTROL_REG                                        , RULL(0x32050012), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CONTROL_REG                                        , RULL(0x33050012), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CONTROL_REG                                        , RULL(0x34050012), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CONTROL_REG                                        , RULL(0x35050012), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CONTROL_REG                                        , RULL(0x36050012), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CONTROL_REG                                        , RULL(0x37050012), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CONTROL_REG                                          , RULL(0x10050012), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CONTROL_REG                                        , RULL(0x10050012), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CONTROL_REG                                        , RULL(0x11050012), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CONTROL_REG                                        , RULL(0x12050012), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CONTROL_REG                                        , RULL(0x13050012), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CONTROL_REG                                        , RULL(0x14050012), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CONTROL_REG                                        , RULL(0x15050012), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CONTROL_REG                                          , RULL(0x20050012), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21050012,
REG64( EX_0_CONTROL_REG                                        , RULL(0x20050012), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21050012,
REG64( EX_1_CONTROL_REG                                        , RULL(0x22050012), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23050012,
REG64( EX_2_CONTROL_REG                                        , RULL(0x24050012), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25050012,
REG64( EX_3_CONTROL_REG                                        , RULL(0x26050012), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27050012,
REG64( EX_4_CONTROL_REG                                        , RULL(0x28050012), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29050012,
REG64( EX_5_CONTROL_REG                                        , RULL(0x2A050012), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B050012,
REG64( EX_6_CONTROL_REG                                        , RULL(0x2C050012), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D050012,
REG64( EX_7_CONTROL_REG                                        , RULL(0x2E050012), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F050012,
REG64( EX_8_CONTROL_REG                                        , RULL(0x30050012), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31050012,
REG64( EX_9_CONTROL_REG                                        , RULL(0x32050012), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33050012,
REG64( EX_10_CONTROL_REG                                       , RULL(0x34050012), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35050012,
REG64( EX_11_CONTROL_REG                                       , RULL(0x36050012), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37050012,

REG64( PEC_0_CONTROL_REG                                       , RULL(0x0D050012), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CONTROL_REG                                       , RULL(0x0E050012), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CONTROL_REG                                       , RULL(0x0F050012), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CORE_ACTION0                                          , RULL(0x20010A46), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_CORE_ACTION0                                        , RULL(0x20010A46), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_CORE_ACTION0                                        , RULL(0x21010A46), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_CORE_ACTION0                                        , RULL(0x22010A46), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_CORE_ACTION0                                        , RULL(0x23010A46), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_CORE_ACTION0                                        , RULL(0x24010A46), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_CORE_ACTION0                                        , RULL(0x25010A46), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_CORE_ACTION0                                        , RULL(0x26010A46), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_CORE_ACTION0                                        , RULL(0x27010A46), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_CORE_ACTION0                                        , RULL(0x28010A46), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_CORE_ACTION0                                        , RULL(0x29010A46), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_CORE_ACTION0                                       , RULL(0x2A010A46), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_CORE_ACTION0                                       , RULL(0x2B010A46), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_CORE_ACTION0                                       , RULL(0x2C010A46), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_CORE_ACTION0                                       , RULL(0x2D010A46), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_CORE_ACTION0                                       , RULL(0x2E010A46), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_CORE_ACTION0                                       , RULL(0x2F010A46), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_CORE_ACTION0                                       , RULL(0x30010A46), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_CORE_ACTION0                                       , RULL(0x31010A46), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_CORE_ACTION0                                       , RULL(0x32010A46), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_CORE_ACTION0                                       , RULL(0x33010A46), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_CORE_ACTION0                                       , RULL(0x34010A46), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_CORE_ACTION0                                       , RULL(0x35010A46), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_CORE_ACTION0                                       , RULL(0x36010A46), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_CORE_ACTION0                                       , RULL(0x37010A46), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_CORE_ACTION0                                    , RULL(0x20010A46), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A46,
REG64( EX_10_L2_CORE_ACTION0                                   , RULL(0x34010A46), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A46,
REG64( EX_11_L2_CORE_ACTION0                                   , RULL(0x36010A46), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A46,
REG64( EX_1_L2_CORE_ACTION0                                    , RULL(0x22010A46), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A46,
REG64( EX_2_L2_CORE_ACTION0                                    , RULL(0x24010A46), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A46,
REG64( EX_3_L2_CORE_ACTION0                                    , RULL(0x26010A46), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A46,
REG64( EX_4_L2_CORE_ACTION0                                    , RULL(0x28010A46), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A46,
REG64( EX_5_L2_CORE_ACTION0                                    , RULL(0x2A010A46), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A46,
REG64( EX_6_L2_CORE_ACTION0                                    , RULL(0x2C010A46), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A46,
REG64( EX_7_L2_CORE_ACTION0                                    , RULL(0x2E010A46), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A46,
REG64( EX_8_L2_CORE_ACTION0                                    , RULL(0x30010A46), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A46,
REG64( EX_9_L2_CORE_ACTION0                                    , RULL(0x32010A46), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A46,
REG64( EX_L2_CORE_ACTION0                                      , RULL(0x20010A46), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A46,

REG64( C_CORE_ACTION1                                          , RULL(0x20010A47), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_CORE_ACTION1                                        , RULL(0x20010A47), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_CORE_ACTION1                                        , RULL(0x21010A47), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_CORE_ACTION1                                        , RULL(0x22010A47), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_CORE_ACTION1                                        , RULL(0x23010A47), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_CORE_ACTION1                                        , RULL(0x24010A47), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_CORE_ACTION1                                        , RULL(0x25010A47), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_CORE_ACTION1                                        , RULL(0x26010A47), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_CORE_ACTION1                                        , RULL(0x27010A47), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_CORE_ACTION1                                        , RULL(0x28010A47), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_CORE_ACTION1                                        , RULL(0x29010A47), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_CORE_ACTION1                                       , RULL(0x2A010A47), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_CORE_ACTION1                                       , RULL(0x2B010A47), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_CORE_ACTION1                                       , RULL(0x2C010A47), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_CORE_ACTION1                                       , RULL(0x2D010A47), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_CORE_ACTION1                                       , RULL(0x2E010A47), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_CORE_ACTION1                                       , RULL(0x2F010A47), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_CORE_ACTION1                                       , RULL(0x30010A47), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_CORE_ACTION1                                       , RULL(0x31010A47), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_CORE_ACTION1                                       , RULL(0x32010A47), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_CORE_ACTION1                                       , RULL(0x33010A47), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_CORE_ACTION1                                       , RULL(0x34010A47), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_CORE_ACTION1                                       , RULL(0x35010A47), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_CORE_ACTION1                                       , RULL(0x36010A47), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_CORE_ACTION1                                       , RULL(0x37010A47), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_CORE_ACTION1                                    , RULL(0x20010A47), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A47,
REG64( EX_10_L2_CORE_ACTION1                                   , RULL(0x34010A47), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A47,
REG64( EX_11_L2_CORE_ACTION1                                   , RULL(0x36010A47), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A47,
REG64( EX_1_L2_CORE_ACTION1                                    , RULL(0x22010A47), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A47,
REG64( EX_2_L2_CORE_ACTION1                                    , RULL(0x24010A47), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A47,
REG64( EX_3_L2_CORE_ACTION1                                    , RULL(0x26010A47), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A47,
REG64( EX_4_L2_CORE_ACTION1                                    , RULL(0x28010A47), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A47,
REG64( EX_5_L2_CORE_ACTION1                                    , RULL(0x2A010A47), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A47,
REG64( EX_6_L2_CORE_ACTION1                                    , RULL(0x2C010A47), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A47,
REG64( EX_7_L2_CORE_ACTION1                                    , RULL(0x2E010A47), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A47,
REG64( EX_8_L2_CORE_ACTION1                                    , RULL(0x30010A47), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A47,
REG64( EX_9_L2_CORE_ACTION1                                    , RULL(0x32010A47), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A47,
REG64( EX_L2_CORE_ACTION1                                      , RULL(0x20010A47), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A47,

REG64( C_CORE_FIR                                              , RULL(0x20010A40), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CORE_FIR_AND                                          , RULL(0x20010A41), SH_UNT_C        , SH_ACS_SCOM1_AND );
REG64( C_CORE_FIR_OR                                           , RULL(0x20010A42), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CORE_FIR                                            , RULL(0x20010A40), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CORE_FIR_AND                                        , RULL(0x20010A41), SH_UNT_C_0      , SH_ACS_SCOM1_AND );
REG64( C_0_CORE_FIR_OR                                         , RULL(0x20010A42), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CORE_FIR                                            , RULL(0x21010A40), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CORE_FIR_AND                                        , RULL(0x21010A41), SH_UNT_C_1      , SH_ACS_SCOM1_AND );
REG64( C_1_CORE_FIR_OR                                         , RULL(0x21010A42), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CORE_FIR                                            , RULL(0x22010A40), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CORE_FIR_AND                                        , RULL(0x22010A41), SH_UNT_C_2      , SH_ACS_SCOM1_AND );
REG64( C_2_CORE_FIR_OR                                         , RULL(0x22010A42), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CORE_FIR                                            , RULL(0x23010A40), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CORE_FIR_AND                                        , RULL(0x23010A41), SH_UNT_C_3      , SH_ACS_SCOM1_AND );
REG64( C_3_CORE_FIR_OR                                         , RULL(0x23010A42), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CORE_FIR                                            , RULL(0x24010A40), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CORE_FIR_AND                                        , RULL(0x24010A41), SH_UNT_C_4      , SH_ACS_SCOM1_AND );
REG64( C_4_CORE_FIR_OR                                         , RULL(0x24010A42), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CORE_FIR                                            , RULL(0x25010A40), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CORE_FIR_AND                                        , RULL(0x25010A41), SH_UNT_C_5      , SH_ACS_SCOM1_AND );
REG64( C_5_CORE_FIR_OR                                         , RULL(0x25010A42), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CORE_FIR                                            , RULL(0x26010A40), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CORE_FIR_AND                                        , RULL(0x26010A41), SH_UNT_C_6      , SH_ACS_SCOM1_AND );
REG64( C_6_CORE_FIR_OR                                         , RULL(0x26010A42), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CORE_FIR                                            , RULL(0x27010A40), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CORE_FIR_AND                                        , RULL(0x27010A41), SH_UNT_C_7      , SH_ACS_SCOM1_AND );
REG64( C_7_CORE_FIR_OR                                         , RULL(0x27010A42), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CORE_FIR                                            , RULL(0x28010A40), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CORE_FIR_AND                                        , RULL(0x28010A41), SH_UNT_C_8      , SH_ACS_SCOM1_AND );
REG64( C_8_CORE_FIR_OR                                         , RULL(0x28010A42), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CORE_FIR                                            , RULL(0x29010A40), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CORE_FIR_AND                                        , RULL(0x29010A41), SH_UNT_C_9      , SH_ACS_SCOM1_AND );
REG64( C_9_CORE_FIR_OR                                         , RULL(0x29010A42), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CORE_FIR                                           , RULL(0x2A010A40), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CORE_FIR_AND                                       , RULL(0x2A010A41), SH_UNT_C_10     , SH_ACS_SCOM1_AND );
REG64( C_10_CORE_FIR_OR                                        , RULL(0x2A010A42), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CORE_FIR                                           , RULL(0x2B010A40), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CORE_FIR_AND                                       , RULL(0x2B010A41), SH_UNT_C_11     , SH_ACS_SCOM1_AND );
REG64( C_11_CORE_FIR_OR                                        , RULL(0x2B010A42), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CORE_FIR                                           , RULL(0x2C010A40), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CORE_FIR_AND                                       , RULL(0x2C010A41), SH_UNT_C_12     , SH_ACS_SCOM1_AND );
REG64( C_12_CORE_FIR_OR                                        , RULL(0x2C010A42), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CORE_FIR                                           , RULL(0x2D010A40), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CORE_FIR_AND                                       , RULL(0x2D010A41), SH_UNT_C_13     , SH_ACS_SCOM1_AND );
REG64( C_13_CORE_FIR_OR                                        , RULL(0x2D010A42), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CORE_FIR                                           , RULL(0x2E010A40), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CORE_FIR_AND                                       , RULL(0x2E010A41), SH_UNT_C_14     , SH_ACS_SCOM1_AND );
REG64( C_14_CORE_FIR_OR                                        , RULL(0x2E010A42), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CORE_FIR                                           , RULL(0x2F010A40), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CORE_FIR_AND                                       , RULL(0x2F010A41), SH_UNT_C_15     , SH_ACS_SCOM1_AND );
REG64( C_15_CORE_FIR_OR                                        , RULL(0x2F010A42), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CORE_FIR                                           , RULL(0x30010A40), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CORE_FIR_AND                                       , RULL(0x30010A41), SH_UNT_C_16     , SH_ACS_SCOM1_AND );
REG64( C_16_CORE_FIR_OR                                        , RULL(0x30010A42), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CORE_FIR                                           , RULL(0x31010A40), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CORE_FIR_AND                                       , RULL(0x31010A41), SH_UNT_C_17     , SH_ACS_SCOM1_AND );
REG64( C_17_CORE_FIR_OR                                        , RULL(0x31010A42), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CORE_FIR                                           , RULL(0x32010A40), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CORE_FIR_AND                                       , RULL(0x32010A41), SH_UNT_C_18     , SH_ACS_SCOM1_AND );
REG64( C_18_CORE_FIR_OR                                        , RULL(0x32010A42), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CORE_FIR                                           , RULL(0x33010A40), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CORE_FIR_AND                                       , RULL(0x33010A41), SH_UNT_C_19     , SH_ACS_SCOM1_AND );
REG64( C_19_CORE_FIR_OR                                        , RULL(0x33010A42), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CORE_FIR                                           , RULL(0x34010A40), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CORE_FIR_AND                                       , RULL(0x34010A41), SH_UNT_C_20     , SH_ACS_SCOM1_AND );
REG64( C_20_CORE_FIR_OR                                        , RULL(0x34010A42), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CORE_FIR                                           , RULL(0x35010A40), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CORE_FIR_AND                                       , RULL(0x35010A41), SH_UNT_C_21     , SH_ACS_SCOM1_AND );
REG64( C_21_CORE_FIR_OR                                        , RULL(0x35010A42), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CORE_FIR                                           , RULL(0x36010A40), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CORE_FIR_AND                                       , RULL(0x36010A41), SH_UNT_C_22     , SH_ACS_SCOM1_AND );
REG64( C_22_CORE_FIR_OR                                        , RULL(0x36010A42), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CORE_FIR                                           , RULL(0x37010A40), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CORE_FIR_AND                                       , RULL(0x37010A41), SH_UNT_C_23     , SH_ACS_SCOM1_AND );
REG64( C_23_CORE_FIR_OR                                        , RULL(0x37010A42), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_0_L2_CORE_FIR                                        , RULL(0x20010A40), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A40,
REG64( EX_0_L2_CORE_FIR_AND                                    , RULL(0x20010A41), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 21010A41,
REG64( EX_0_L2_CORE_FIR_OR                                     , RULL(0x20010A42), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 21010A42,
REG64( EX_10_L2_CORE_FIR                                       , RULL(0x34010A40), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A40,
REG64( EX_10_L2_CORE_FIR_AND                                   , RULL(0x34010A41), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_AND ); //DUPS: 35010A41,
REG64( EX_10_L2_CORE_FIR_OR                                    , RULL(0x34010A42), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 35010A42,
REG64( EX_11_L2_CORE_FIR                                       , RULL(0x36010A40), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A40,
REG64( EX_11_L2_CORE_FIR_AND                                   , RULL(0x36010A41), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_AND ); //DUPS: 37010A41,
REG64( EX_11_L2_CORE_FIR_OR                                    , RULL(0x36010A42), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 37010A42,
REG64( EX_1_L2_CORE_FIR                                        , RULL(0x22010A40), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A40,
REG64( EX_1_L2_CORE_FIR_AND                                    , RULL(0x22010A41), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 23010A41,
REG64( EX_1_L2_CORE_FIR_OR                                     , RULL(0x22010A42), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 23010A42,
REG64( EX_2_L2_CORE_FIR                                        , RULL(0x24010A40), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A40,
REG64( EX_2_L2_CORE_FIR_AND                                    , RULL(0x24010A41), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 25010A41,
REG64( EX_2_L2_CORE_FIR_OR                                     , RULL(0x24010A42), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 25010A42,
REG64( EX_3_L2_CORE_FIR                                        , RULL(0x26010A40), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A40,
REG64( EX_3_L2_CORE_FIR_AND                                    , RULL(0x26010A41), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 27010A41,
REG64( EX_3_L2_CORE_FIR_OR                                     , RULL(0x26010A42), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 27010A42,
REG64( EX_4_L2_CORE_FIR                                        , RULL(0x28010A40), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A40,
REG64( EX_4_L2_CORE_FIR_AND                                    , RULL(0x28010A41), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 29010A41,
REG64( EX_4_L2_CORE_FIR_OR                                     , RULL(0x28010A42), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 29010A42,
REG64( EX_5_L2_CORE_FIR                                        , RULL(0x2A010A40), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A40,
REG64( EX_5_L2_CORE_FIR_AND                                    , RULL(0x2A010A41), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 2B010A41,
REG64( EX_5_L2_CORE_FIR_OR                                     , RULL(0x2A010A42), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B010A42,
REG64( EX_6_L2_CORE_FIR                                        , RULL(0x2C010A40), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A40,
REG64( EX_6_L2_CORE_FIR_AND                                    , RULL(0x2C010A41), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 2D010A41,
REG64( EX_6_L2_CORE_FIR_OR                                     , RULL(0x2C010A42), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D010A42,
REG64( EX_7_L2_CORE_FIR                                        , RULL(0x2E010A40), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A40,
REG64( EX_7_L2_CORE_FIR_AND                                    , RULL(0x2E010A41), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 2F010A41,
REG64( EX_7_L2_CORE_FIR_OR                                     , RULL(0x2E010A42), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F010A42,
REG64( EX_8_L2_CORE_FIR                                        , RULL(0x30010A40), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A40,
REG64( EX_8_L2_CORE_FIR_AND                                    , RULL(0x30010A41), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 31010A41,
REG64( EX_8_L2_CORE_FIR_OR                                     , RULL(0x30010A42), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 31010A42,
REG64( EX_9_L2_CORE_FIR                                        , RULL(0x32010A40), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A40,
REG64( EX_9_L2_CORE_FIR_AND                                    , RULL(0x32010A41), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 33010A41,
REG64( EX_9_L2_CORE_FIR_OR                                     , RULL(0x32010A42), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 33010A42,
REG64( EX_L2_CORE_FIR                                          , RULL(0x20010A40), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A40,
REG64( EX_L2_CORE_FIR_AND                                      , RULL(0x20010A41), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_AND ); //DUPS: 21010A41,
REG64( EX_L2_CORE_FIR_OR                                       , RULL(0x20010A42), SH_UNT_EX_L2    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 21010A42,

REG64( C_CORE_FIRMASK                                          , RULL(0x20010A43), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CORE_FIRMASK_AND                                      , RULL(0x20010A44), SH_UNT_C        , SH_ACS_SCOM1_AND );
REG64( C_CORE_FIRMASK_OR                                       , RULL(0x20010A45), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CORE_FIRMASK                                        , RULL(0x20010A43), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CORE_FIRMASK_AND                                    , RULL(0x20010A44), SH_UNT_C_0      , SH_ACS_SCOM1_AND );
REG64( C_0_CORE_FIRMASK_OR                                     , RULL(0x20010A45), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CORE_FIRMASK                                        , RULL(0x21010A43), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CORE_FIRMASK_AND                                    , RULL(0x21010A44), SH_UNT_C_1      , SH_ACS_SCOM1_AND );
REG64( C_1_CORE_FIRMASK_OR                                     , RULL(0x21010A45), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CORE_FIRMASK                                        , RULL(0x22010A43), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CORE_FIRMASK_AND                                    , RULL(0x22010A44), SH_UNT_C_2      , SH_ACS_SCOM1_AND );
REG64( C_2_CORE_FIRMASK_OR                                     , RULL(0x22010A45), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CORE_FIRMASK                                        , RULL(0x23010A43), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CORE_FIRMASK_AND                                    , RULL(0x23010A44), SH_UNT_C_3      , SH_ACS_SCOM1_AND );
REG64( C_3_CORE_FIRMASK_OR                                     , RULL(0x23010A45), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CORE_FIRMASK                                        , RULL(0x24010A43), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CORE_FIRMASK_AND                                    , RULL(0x24010A44), SH_UNT_C_4      , SH_ACS_SCOM1_AND );
REG64( C_4_CORE_FIRMASK_OR                                     , RULL(0x24010A45), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CORE_FIRMASK                                        , RULL(0x25010A43), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CORE_FIRMASK_AND                                    , RULL(0x25010A44), SH_UNT_C_5      , SH_ACS_SCOM1_AND );
REG64( C_5_CORE_FIRMASK_OR                                     , RULL(0x25010A45), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CORE_FIRMASK                                        , RULL(0x26010A43), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CORE_FIRMASK_AND                                    , RULL(0x26010A44), SH_UNT_C_6      , SH_ACS_SCOM1_AND );
REG64( C_6_CORE_FIRMASK_OR                                     , RULL(0x26010A45), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CORE_FIRMASK                                        , RULL(0x27010A43), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CORE_FIRMASK_AND                                    , RULL(0x27010A44), SH_UNT_C_7      , SH_ACS_SCOM1_AND );
REG64( C_7_CORE_FIRMASK_OR                                     , RULL(0x27010A45), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CORE_FIRMASK                                        , RULL(0x28010A43), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CORE_FIRMASK_AND                                    , RULL(0x28010A44), SH_UNT_C_8      , SH_ACS_SCOM1_AND );
REG64( C_8_CORE_FIRMASK_OR                                     , RULL(0x28010A45), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CORE_FIRMASK                                        , RULL(0x29010A43), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CORE_FIRMASK_AND                                    , RULL(0x29010A44), SH_UNT_C_9      , SH_ACS_SCOM1_AND );
REG64( C_9_CORE_FIRMASK_OR                                     , RULL(0x29010A45), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CORE_FIRMASK                                       , RULL(0x2A010A43), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CORE_FIRMASK_AND                                   , RULL(0x2A010A44), SH_UNT_C_10     , SH_ACS_SCOM1_AND );
REG64( C_10_CORE_FIRMASK_OR                                    , RULL(0x2A010A45), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CORE_FIRMASK                                       , RULL(0x2B010A43), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CORE_FIRMASK_AND                                   , RULL(0x2B010A44), SH_UNT_C_11     , SH_ACS_SCOM1_AND );
REG64( C_11_CORE_FIRMASK_OR                                    , RULL(0x2B010A45), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CORE_FIRMASK                                       , RULL(0x2C010A43), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CORE_FIRMASK_AND                                   , RULL(0x2C010A44), SH_UNT_C_12     , SH_ACS_SCOM1_AND );
REG64( C_12_CORE_FIRMASK_OR                                    , RULL(0x2C010A45), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CORE_FIRMASK                                       , RULL(0x2D010A43), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CORE_FIRMASK_AND                                   , RULL(0x2D010A44), SH_UNT_C_13     , SH_ACS_SCOM1_AND );
REG64( C_13_CORE_FIRMASK_OR                                    , RULL(0x2D010A45), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CORE_FIRMASK                                       , RULL(0x2E010A43), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CORE_FIRMASK_AND                                   , RULL(0x2E010A44), SH_UNT_C_14     , SH_ACS_SCOM1_AND );
REG64( C_14_CORE_FIRMASK_OR                                    , RULL(0x2E010A45), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CORE_FIRMASK                                       , RULL(0x2F010A43), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CORE_FIRMASK_AND                                   , RULL(0x2F010A44), SH_UNT_C_15     , SH_ACS_SCOM1_AND );
REG64( C_15_CORE_FIRMASK_OR                                    , RULL(0x2F010A45), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CORE_FIRMASK                                       , RULL(0x30010A43), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CORE_FIRMASK_AND                                   , RULL(0x30010A44), SH_UNT_C_16     , SH_ACS_SCOM1_AND );
REG64( C_16_CORE_FIRMASK_OR                                    , RULL(0x30010A45), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CORE_FIRMASK                                       , RULL(0x31010A43), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CORE_FIRMASK_AND                                   , RULL(0x31010A44), SH_UNT_C_17     , SH_ACS_SCOM1_AND );
REG64( C_17_CORE_FIRMASK_OR                                    , RULL(0x31010A45), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CORE_FIRMASK                                       , RULL(0x32010A43), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CORE_FIRMASK_AND                                   , RULL(0x32010A44), SH_UNT_C_18     , SH_ACS_SCOM1_AND );
REG64( C_18_CORE_FIRMASK_OR                                    , RULL(0x32010A45), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CORE_FIRMASK                                       , RULL(0x33010A43), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CORE_FIRMASK_AND                                   , RULL(0x33010A44), SH_UNT_C_19     , SH_ACS_SCOM1_AND );
REG64( C_19_CORE_FIRMASK_OR                                    , RULL(0x33010A45), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CORE_FIRMASK                                       , RULL(0x34010A43), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CORE_FIRMASK_AND                                   , RULL(0x34010A44), SH_UNT_C_20     , SH_ACS_SCOM1_AND );
REG64( C_20_CORE_FIRMASK_OR                                    , RULL(0x34010A45), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CORE_FIRMASK                                       , RULL(0x35010A43), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CORE_FIRMASK_AND                                   , RULL(0x35010A44), SH_UNT_C_21     , SH_ACS_SCOM1_AND );
REG64( C_21_CORE_FIRMASK_OR                                    , RULL(0x35010A45), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CORE_FIRMASK                                       , RULL(0x36010A43), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CORE_FIRMASK_AND                                   , RULL(0x36010A44), SH_UNT_C_22     , SH_ACS_SCOM1_AND );
REG64( C_22_CORE_FIRMASK_OR                                    , RULL(0x36010A45), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CORE_FIRMASK                                       , RULL(0x37010A43), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CORE_FIRMASK_AND                                   , RULL(0x37010A44), SH_UNT_C_23     , SH_ACS_SCOM1_AND );
REG64( C_23_CORE_FIRMASK_OR                                    , RULL(0x37010A45), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_0_L2_CORE_FIRMASK                                    , RULL(0x20010A43), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A43,
REG64( EX_0_L2_CORE_FIRMASK_AND                                , RULL(0x20010A44), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 21010A44,
REG64( EX_0_L2_CORE_FIRMASK_OR                                 , RULL(0x20010A45), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 21010A45,
REG64( EX_10_L2_CORE_FIRMASK                                   , RULL(0x34010A43), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A43,
REG64( EX_10_L2_CORE_FIRMASK_AND                               , RULL(0x34010A44), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_AND ); //DUPS: 35010A44,
REG64( EX_10_L2_CORE_FIRMASK_OR                                , RULL(0x34010A45), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 35010A45,
REG64( EX_11_L2_CORE_FIRMASK                                   , RULL(0x36010A43), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A43,
REG64( EX_11_L2_CORE_FIRMASK_AND                               , RULL(0x36010A44), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_AND ); //DUPS: 37010A44,
REG64( EX_11_L2_CORE_FIRMASK_OR                                , RULL(0x36010A45), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 37010A45,
REG64( EX_1_L2_CORE_FIRMASK                                    , RULL(0x22010A43), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A43,
REG64( EX_1_L2_CORE_FIRMASK_AND                                , RULL(0x22010A44), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 23010A44,
REG64( EX_1_L2_CORE_FIRMASK_OR                                 , RULL(0x22010A45), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 23010A45,
REG64( EX_2_L2_CORE_FIRMASK                                    , RULL(0x24010A43), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A43,
REG64( EX_2_L2_CORE_FIRMASK_AND                                , RULL(0x24010A44), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 25010A44,
REG64( EX_2_L2_CORE_FIRMASK_OR                                 , RULL(0x24010A45), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 25010A45,
REG64( EX_3_L2_CORE_FIRMASK                                    , RULL(0x26010A43), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A43,
REG64( EX_3_L2_CORE_FIRMASK_AND                                , RULL(0x26010A44), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 27010A44,
REG64( EX_3_L2_CORE_FIRMASK_OR                                 , RULL(0x26010A45), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 27010A45,
REG64( EX_4_L2_CORE_FIRMASK                                    , RULL(0x28010A43), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A43,
REG64( EX_4_L2_CORE_FIRMASK_AND                                , RULL(0x28010A44), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 29010A44,
REG64( EX_4_L2_CORE_FIRMASK_OR                                 , RULL(0x28010A45), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 29010A45,
REG64( EX_5_L2_CORE_FIRMASK                                    , RULL(0x2A010A43), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A43,
REG64( EX_5_L2_CORE_FIRMASK_AND                                , RULL(0x2A010A44), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 2B010A44,
REG64( EX_5_L2_CORE_FIRMASK_OR                                 , RULL(0x2A010A45), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B010A45,
REG64( EX_6_L2_CORE_FIRMASK                                    , RULL(0x2C010A43), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A43,
REG64( EX_6_L2_CORE_FIRMASK_AND                                , RULL(0x2C010A44), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 2D010A44,
REG64( EX_6_L2_CORE_FIRMASK_OR                                 , RULL(0x2C010A45), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D010A45,
REG64( EX_7_L2_CORE_FIRMASK                                    , RULL(0x2E010A43), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A43,
REG64( EX_7_L2_CORE_FIRMASK_AND                                , RULL(0x2E010A44), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 2F010A44,
REG64( EX_7_L2_CORE_FIRMASK_OR                                 , RULL(0x2E010A45), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F010A45,
REG64( EX_8_L2_CORE_FIRMASK                                    , RULL(0x30010A43), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A43,
REG64( EX_8_L2_CORE_FIRMASK_AND                                , RULL(0x30010A44), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 31010A44,
REG64( EX_8_L2_CORE_FIRMASK_OR                                 , RULL(0x30010A45), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 31010A45,
REG64( EX_9_L2_CORE_FIRMASK                                    , RULL(0x32010A43), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A43,
REG64( EX_9_L2_CORE_FIRMASK_AND                                , RULL(0x32010A44), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_AND ); //DUPS: 33010A44,
REG64( EX_9_L2_CORE_FIRMASK_OR                                 , RULL(0x32010A45), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 33010A45,
REG64( EX_L2_CORE_FIRMASK                                      , RULL(0x20010A43), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A43,
REG64( EX_L2_CORE_FIRMASK_AND                                  , RULL(0x20010A44), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_AND ); //DUPS: 21010A44,
REG64( EX_L2_CORE_FIRMASK_OR                                   , RULL(0x20010A45), SH_UNT_EX_L2    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 21010A45,

REG64( C_CORE_FUSES                                            , RULL(0x20010AA7), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CORE_FUSES                                          , RULL(0x20010AA7), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CORE_FUSES                                          , RULL(0x21010AA7), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CORE_FUSES                                          , RULL(0x22010AA7), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CORE_FUSES                                          , RULL(0x23010AA7), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CORE_FUSES                                          , RULL(0x24010AA7), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CORE_FUSES                                          , RULL(0x25010AA7), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CORE_FUSES                                          , RULL(0x26010AA7), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CORE_FUSES                                          , RULL(0x27010AA7), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CORE_FUSES                                          , RULL(0x28010AA7), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CORE_FUSES                                          , RULL(0x29010AA7), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CORE_FUSES                                         , RULL(0x2A010AA7), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CORE_FUSES                                         , RULL(0x2B010AA7), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CORE_FUSES                                         , RULL(0x2C010AA7), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CORE_FUSES                                         , RULL(0x2D010AA7), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CORE_FUSES                                         , RULL(0x2E010AA7), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CORE_FUSES                                         , RULL(0x2F010AA7), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CORE_FUSES                                         , RULL(0x30010AA7), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CORE_FUSES                                         , RULL(0x31010AA7), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CORE_FUSES                                         , RULL(0x32010AA7), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CORE_FUSES                                         , RULL(0x33010AA7), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CORE_FUSES                                         , RULL(0x34010AA7), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CORE_FUSES                                         , RULL(0x35010AA7), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CORE_FUSES                                         , RULL(0x36010AA7), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CORE_FUSES                                         , RULL(0x37010AA7), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_CORE_FUSES                                      , RULL(0x20010AA7), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010AA7,
REG64( EX_10_L2_CORE_FUSES                                     , RULL(0x34010AA7), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010AA7,
REG64( EX_11_L2_CORE_FUSES                                     , RULL(0x36010AA7), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010AA7,
REG64( EX_1_L2_CORE_FUSES                                      , RULL(0x22010AA7), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010AA7,
REG64( EX_2_L2_CORE_FUSES                                      , RULL(0x24010AA7), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010AA7,
REG64( EX_3_L2_CORE_FUSES                                      , RULL(0x26010AA7), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010AA7,
REG64( EX_4_L2_CORE_FUSES                                      , RULL(0x28010AA7), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010AA7,
REG64( EX_5_L2_CORE_FUSES                                      , RULL(0x2A010AA7), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010AA7,
REG64( EX_6_L2_CORE_FUSES                                      , RULL(0x2C010AA7), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010AA7,
REG64( EX_7_L2_CORE_FUSES                                      , RULL(0x2E010AA7), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010AA7,
REG64( EX_8_L2_CORE_FUSES                                      , RULL(0x30010AA7), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010AA7,
REG64( EX_9_L2_CORE_FUSES                                      , RULL(0x32010AA7), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010AA7,
REG64( EX_L2_CORE_FUSES                                        , RULL(0x20010AA7), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010AA7,

REG64( C_CORE_WOF                                              , RULL(0x20010A48), SH_UNT_C        ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_0_CORE_WOF                                            , RULL(0x20010A48), SH_UNT_C_0      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_1_CORE_WOF                                            , RULL(0x21010A48), SH_UNT_C_1      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_2_CORE_WOF                                            , RULL(0x22010A48), SH_UNT_C_2      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_3_CORE_WOF                                            , RULL(0x23010A48), SH_UNT_C_3      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_4_CORE_WOF                                            , RULL(0x24010A48), SH_UNT_C_4      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_5_CORE_WOF                                            , RULL(0x25010A48), SH_UNT_C_5      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_6_CORE_WOF                                            , RULL(0x26010A48), SH_UNT_C_6      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_7_CORE_WOF                                            , RULL(0x27010A48), SH_UNT_C_7      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_8_CORE_WOF                                            , RULL(0x28010A48), SH_UNT_C_8      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_9_CORE_WOF                                            , RULL(0x29010A48), SH_UNT_C_9      ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_10_CORE_WOF                                           , RULL(0x2A010A48), SH_UNT_C_10     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_11_CORE_WOF                                           , RULL(0x2B010A48), SH_UNT_C_11     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_12_CORE_WOF                                           , RULL(0x2C010A48), SH_UNT_C_12     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_13_CORE_WOF                                           , RULL(0x2D010A48), SH_UNT_C_13     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_14_CORE_WOF                                           , RULL(0x2E010A48), SH_UNT_C_14     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_15_CORE_WOF                                           , RULL(0x2F010A48), SH_UNT_C_15     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_16_CORE_WOF                                           , RULL(0x30010A48), SH_UNT_C_16     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_17_CORE_WOF                                           , RULL(0x31010A48), SH_UNT_C_17     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_18_CORE_WOF                                           , RULL(0x32010A48), SH_UNT_C_18     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_19_CORE_WOF                                           , RULL(0x33010A48), SH_UNT_C_19     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_20_CORE_WOF                                           , RULL(0x34010A48), SH_UNT_C_20     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_21_CORE_WOF                                           , RULL(0x35010A48), SH_UNT_C_21     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_22_CORE_WOF                                           , RULL(0x36010A48), SH_UNT_C_22     ,
       SH_ACS_SCOM_WCLRREG );
REG64( C_23_CORE_WOF                                           , RULL(0x37010A48), SH_UNT_C_23     ,
       SH_ACS_SCOM_WCLRREG );
REG64( EX_CORE_WOF                                             , RULL(0x20010A48), SH_UNT_EX       ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 21010A48,
REG64( EX_0_CORE_WOF                                           , RULL(0x20010A48), SH_UNT_EX_0     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 21010A48,
REG64( EX_1_CORE_WOF                                           , RULL(0x22010A48), SH_UNT_EX_1     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 23010A48,
REG64( EX_2_CORE_WOF                                           , RULL(0x24010A48), SH_UNT_EX_2     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 25010A48,
REG64( EX_3_CORE_WOF                                           , RULL(0x26010A48), SH_UNT_EX_3     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 27010A48,
REG64( EX_4_CORE_WOF                                           , RULL(0x28010A48), SH_UNT_EX_4     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 29010A48,
REG64( EX_5_CORE_WOF                                           , RULL(0x2A010A48), SH_UNT_EX_5     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 2B010A48,
REG64( EX_6_CORE_WOF                                           , RULL(0x2C010A48), SH_UNT_EX_6     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 2D010A48,
REG64( EX_7_CORE_WOF                                           , RULL(0x2E010A48), SH_UNT_EX_7     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 2F010A48,
REG64( EX_8_CORE_WOF                                           , RULL(0x30010A48), SH_UNT_EX_8     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 31010A48,
REG64( EX_9_CORE_WOF                                           , RULL(0x32010A48), SH_UNT_EX_9     ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 33010A48,
REG64( EX_10_CORE_WOF                                          , RULL(0x34010A48), SH_UNT_EX_10    ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 35010A48,
REG64( EX_11_CORE_WOF                                          , RULL(0x36010A48), SH_UNT_EX_11    ,
       SH_ACS_SCOM_WCLRREG ); //DUPS: 37010A48,

REG64( C_CPLT_CONF0                                            , RULL(0x20000008), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPLT_CONF0_OR                                         , RULL(0x20000018), SH_UNT_C        , SH_ACS_SCOM1_OR  );
REG64( C_CPLT_CONF0_CLEAR                                      , RULL(0x20000028), SH_UNT_C        ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_0_CPLT_CONF0                                          , RULL(0x20000008), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPLT_CONF0_OR                                       , RULL(0x20000018), SH_UNT_C_0      , SH_ACS_SCOM1_OR  );
REG64( C_0_CPLT_CONF0_CLEAR                                    , RULL(0x20000028), SH_UNT_C_0      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_1_CPLT_CONF0                                          , RULL(0x21000008), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPLT_CONF0_OR                                       , RULL(0x21000018), SH_UNT_C_1      , SH_ACS_SCOM1_OR  );
REG64( C_1_CPLT_CONF0_CLEAR                                    , RULL(0x21000028), SH_UNT_C_1      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_2_CPLT_CONF0                                          , RULL(0x22000008), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPLT_CONF0_OR                                       , RULL(0x22000018), SH_UNT_C_2      , SH_ACS_SCOM1_OR  );
REG64( C_2_CPLT_CONF0_CLEAR                                    , RULL(0x22000028), SH_UNT_C_2      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_3_CPLT_CONF0                                          , RULL(0x23000008), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPLT_CONF0_OR                                       , RULL(0x23000018), SH_UNT_C_3      , SH_ACS_SCOM1_OR  );
REG64( C_3_CPLT_CONF0_CLEAR                                    , RULL(0x23000028), SH_UNT_C_3      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_4_CPLT_CONF0                                          , RULL(0x24000008), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPLT_CONF0_OR                                       , RULL(0x24000018), SH_UNT_C_4      , SH_ACS_SCOM1_OR  );
REG64( C_4_CPLT_CONF0_CLEAR                                    , RULL(0x24000028), SH_UNT_C_4      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_5_CPLT_CONF0                                          , RULL(0x25000008), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPLT_CONF0_OR                                       , RULL(0x25000018), SH_UNT_C_5      , SH_ACS_SCOM1_OR  );
REG64( C_5_CPLT_CONF0_CLEAR                                    , RULL(0x25000028), SH_UNT_C_5      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_6_CPLT_CONF0                                          , RULL(0x26000008), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPLT_CONF0_OR                                       , RULL(0x26000018), SH_UNT_C_6      , SH_ACS_SCOM1_OR  );
REG64( C_6_CPLT_CONF0_CLEAR                                    , RULL(0x26000028), SH_UNT_C_6      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_7_CPLT_CONF0                                          , RULL(0x27000008), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPLT_CONF0_OR                                       , RULL(0x27000018), SH_UNT_C_7      , SH_ACS_SCOM1_OR  );
REG64( C_7_CPLT_CONF0_CLEAR                                    , RULL(0x27000028), SH_UNT_C_7      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_8_CPLT_CONF0                                          , RULL(0x28000008), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPLT_CONF0_OR                                       , RULL(0x28000018), SH_UNT_C_8      , SH_ACS_SCOM1_OR  );
REG64( C_8_CPLT_CONF0_CLEAR                                    , RULL(0x28000028), SH_UNT_C_8      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_9_CPLT_CONF0                                          , RULL(0x29000008), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPLT_CONF0_OR                                       , RULL(0x29000018), SH_UNT_C_9      , SH_ACS_SCOM1_OR  );
REG64( C_9_CPLT_CONF0_CLEAR                                    , RULL(0x29000028), SH_UNT_C_9      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_10_CPLT_CONF0                                         , RULL(0x2A000008), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPLT_CONF0_OR                                      , RULL(0x2A000018), SH_UNT_C_10     , SH_ACS_SCOM1_OR  );
REG64( C_10_CPLT_CONF0_CLEAR                                   , RULL(0x2A000028), SH_UNT_C_10     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_11_CPLT_CONF0                                         , RULL(0x2B000008), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPLT_CONF0_OR                                      , RULL(0x2B000018), SH_UNT_C_11     , SH_ACS_SCOM1_OR  );
REG64( C_11_CPLT_CONF0_CLEAR                                   , RULL(0x2B000028), SH_UNT_C_11     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_12_CPLT_CONF0                                         , RULL(0x2C000008), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPLT_CONF0_OR                                      , RULL(0x2C000018), SH_UNT_C_12     , SH_ACS_SCOM1_OR  );
REG64( C_12_CPLT_CONF0_CLEAR                                   , RULL(0x2C000028), SH_UNT_C_12     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_13_CPLT_CONF0                                         , RULL(0x2D000008), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPLT_CONF0_OR                                      , RULL(0x2D000018), SH_UNT_C_13     , SH_ACS_SCOM1_OR  );
REG64( C_13_CPLT_CONF0_CLEAR                                   , RULL(0x2D000028), SH_UNT_C_13     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_14_CPLT_CONF0                                         , RULL(0x2E000008), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPLT_CONF0_OR                                      , RULL(0x2E000018), SH_UNT_C_14     , SH_ACS_SCOM1_OR  );
REG64( C_14_CPLT_CONF0_CLEAR                                   , RULL(0x2E000028), SH_UNT_C_14     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_15_CPLT_CONF0                                         , RULL(0x2F000008), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPLT_CONF0_OR                                      , RULL(0x2F000018), SH_UNT_C_15     , SH_ACS_SCOM1_OR  );
REG64( C_15_CPLT_CONF0_CLEAR                                   , RULL(0x2F000028), SH_UNT_C_15     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_16_CPLT_CONF0                                         , RULL(0x30000008), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPLT_CONF0_OR                                      , RULL(0x30000018), SH_UNT_C_16     , SH_ACS_SCOM1_OR  );
REG64( C_16_CPLT_CONF0_CLEAR                                   , RULL(0x30000028), SH_UNT_C_16     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_17_CPLT_CONF0                                         , RULL(0x31000008), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPLT_CONF0_OR                                      , RULL(0x31000018), SH_UNT_C_17     , SH_ACS_SCOM1_OR  );
REG64( C_17_CPLT_CONF0_CLEAR                                   , RULL(0x31000028), SH_UNT_C_17     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_18_CPLT_CONF0                                         , RULL(0x32000008), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPLT_CONF0_OR                                      , RULL(0x32000018), SH_UNT_C_18     , SH_ACS_SCOM1_OR  );
REG64( C_18_CPLT_CONF0_CLEAR                                   , RULL(0x32000028), SH_UNT_C_18     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_19_CPLT_CONF0                                         , RULL(0x33000008), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPLT_CONF0_OR                                      , RULL(0x33000018), SH_UNT_C_19     , SH_ACS_SCOM1_OR  );
REG64( C_19_CPLT_CONF0_CLEAR                                   , RULL(0x33000028), SH_UNT_C_19     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_20_CPLT_CONF0                                         , RULL(0x34000008), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPLT_CONF0_OR                                      , RULL(0x34000018), SH_UNT_C_20     , SH_ACS_SCOM1_OR  );
REG64( C_20_CPLT_CONF0_CLEAR                                   , RULL(0x34000028), SH_UNT_C_20     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_21_CPLT_CONF0                                         , RULL(0x35000008), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPLT_CONF0_OR                                      , RULL(0x35000018), SH_UNT_C_21     , SH_ACS_SCOM1_OR  );
REG64( C_21_CPLT_CONF0_CLEAR                                   , RULL(0x35000028), SH_UNT_C_21     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_22_CPLT_CONF0                                         , RULL(0x36000008), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPLT_CONF0_OR                                      , RULL(0x36000018), SH_UNT_C_22     , SH_ACS_SCOM1_OR  );
REG64( C_22_CPLT_CONF0_CLEAR                                   , RULL(0x36000028), SH_UNT_C_22     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_23_CPLT_CONF0                                         , RULL(0x37000008), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPLT_CONF0_OR                                      , RULL(0x37000018), SH_UNT_C_23     , SH_ACS_SCOM1_OR  );
REG64( C_23_CPLT_CONF0_CLEAR                                   , RULL(0x37000028), SH_UNT_C_23     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_CPLT_CONF0                                           , RULL(0x10000008), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_CPLT_CONF0_OR                                        , RULL(0x10000018), SH_UNT_EQ       , SH_ACS_SCOM1_OR  );
REG64( EQ_CPLT_CONF0_CLEAR                                     , RULL(0x10000028), SH_UNT_EQ       ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_0_CPLT_CONF0                                         , RULL(0x10000008), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_CPLT_CONF0_OR                                      , RULL(0x10000018), SH_UNT_EQ_0     , SH_ACS_SCOM1_OR  );
REG64( EQ_0_CPLT_CONF0_CLEAR                                   , RULL(0x10000028), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_1_CPLT_CONF0                                         , RULL(0x11000008), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_CPLT_CONF0_OR                                      , RULL(0x11000018), SH_UNT_EQ_1     , SH_ACS_SCOM1_OR  );
REG64( EQ_1_CPLT_CONF0_CLEAR                                   , RULL(0x11000028), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_2_CPLT_CONF0                                         , RULL(0x12000008), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_CPLT_CONF0_OR                                      , RULL(0x12000018), SH_UNT_EQ_2     , SH_ACS_SCOM1_OR  );
REG64( EQ_2_CPLT_CONF0_CLEAR                                   , RULL(0x12000028), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_3_CPLT_CONF0                                         , RULL(0x13000008), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_CPLT_CONF0_OR                                      , RULL(0x13000018), SH_UNT_EQ_3     , SH_ACS_SCOM1_OR  );
REG64( EQ_3_CPLT_CONF0_CLEAR                                   , RULL(0x13000028), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_4_CPLT_CONF0                                         , RULL(0x14000008), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_CPLT_CONF0_OR                                      , RULL(0x14000018), SH_UNT_EQ_4     , SH_ACS_SCOM1_OR  );
REG64( EQ_4_CPLT_CONF0_CLEAR                                   , RULL(0x14000028), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_5_CPLT_CONF0                                         , RULL(0x15000008), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_CPLT_CONF0_OR                                      , RULL(0x15000018), SH_UNT_EQ_5     , SH_ACS_SCOM1_OR  );
REG64( EQ_5_CPLT_CONF0_CLEAR                                   , RULL(0x15000028), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EX_CPLT_CONF0                                           , RULL(0x20000008), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 21000008,
REG64( EX_CPLT_CONF0_OR                                        , RULL(0x20000018), SH_UNT_EX       ,
       SH_ACS_SCOM1_OR  ); //DUPS: 21000018,
REG64( EX_CPLT_CONF0_CLEAR                                     , RULL(0x20000028), SH_UNT_EX       ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 21000028,
REG64( EX_0_CPLT_CONF0                                         , RULL(0x20000008), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 21000008,
REG64( EX_0_CPLT_CONF0_OR                                      , RULL(0x20000018), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 21000018,
REG64( EX_0_CPLT_CONF0_CLEAR                                   , RULL(0x20000028), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 21000028,
REG64( EX_1_CPLT_CONF0                                         , RULL(0x22000008), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 23000008,
REG64( EX_1_CPLT_CONF0_OR                                      , RULL(0x22000018), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 23000018,
REG64( EX_1_CPLT_CONF0_CLEAR                                   , RULL(0x22000028), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 23000028,
REG64( EX_2_CPLT_CONF0                                         , RULL(0x24000008), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 25000008,
REG64( EX_2_CPLT_CONF0_OR                                      , RULL(0x24000018), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 25000018,
REG64( EX_2_CPLT_CONF0_CLEAR                                   , RULL(0x24000028), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 25000028,
REG64( EX_3_CPLT_CONF0                                         , RULL(0x26000008), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 27000008,
REG64( EX_3_CPLT_CONF0_OR                                      , RULL(0x26000018), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 27000018,
REG64( EX_3_CPLT_CONF0_CLEAR                                   , RULL(0x26000028), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 27000028,
REG64( EX_4_CPLT_CONF0                                         , RULL(0x28000008), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 29000008,
REG64( EX_4_CPLT_CONF0_OR                                      , RULL(0x28000018), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 29000018,
REG64( EX_4_CPLT_CONF0_CLEAR                                   , RULL(0x28000028), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 29000028,
REG64( EX_5_CPLT_CONF0                                         , RULL(0x2A000008), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B000008,
REG64( EX_5_CPLT_CONF0_OR                                      , RULL(0x2A000018), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2B000018,
REG64( EX_5_CPLT_CONF0_CLEAR                                   , RULL(0x2A000028), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2B000028,
REG64( EX_6_CPLT_CONF0                                         , RULL(0x2C000008), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D000008,
REG64( EX_6_CPLT_CONF0_OR                                      , RULL(0x2C000018), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2D000018,
REG64( EX_6_CPLT_CONF0_CLEAR                                   , RULL(0x2C000028), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2D000028,
REG64( EX_7_CPLT_CONF0                                         , RULL(0x2E000008), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F000008,
REG64( EX_7_CPLT_CONF0_OR                                      , RULL(0x2E000018), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2F000018,
REG64( EX_7_CPLT_CONF0_CLEAR                                   , RULL(0x2E000028), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2F000028,
REG64( EX_8_CPLT_CONF0                                         , RULL(0x30000008), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 31000008,
REG64( EX_8_CPLT_CONF0_OR                                      , RULL(0x30000018), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 31000018,
REG64( EX_8_CPLT_CONF0_CLEAR                                   , RULL(0x30000028), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 31000028,
REG64( EX_9_CPLT_CONF0                                         , RULL(0x32000008), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 33000008,
REG64( EX_9_CPLT_CONF0_OR                                      , RULL(0x32000018), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 33000018,
REG64( EX_9_CPLT_CONF0_CLEAR                                   , RULL(0x32000028), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 33000028,
REG64( EX_10_CPLT_CONF0                                        , RULL(0x34000008), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 35000008,
REG64( EX_10_CPLT_CONF0_OR                                     , RULL(0x34000018), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_OR  ); //DUPS: 35000018,
REG64( EX_10_CPLT_CONF0_CLEAR                                  , RULL(0x34000028), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 35000028,
REG64( EX_11_CPLT_CONF0                                        , RULL(0x36000008), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 37000008,
REG64( EX_11_CPLT_CONF0_OR                                     , RULL(0x36000018), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_OR  ); //DUPS: 37000018,
REG64( EX_11_CPLT_CONF0_CLEAR                                  , RULL(0x36000028), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 37000028,

REG64( PEC_0_CPLT_CONF0                                        , RULL(0x0D000008), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_0_CPLT_CONF0_OR                                     , RULL(0x0D000018), SH_UNT_PEC_0    , SH_ACS_SCOM1_OR  );
REG64( PEC_0_CPLT_CONF0_CLEAR                                  , RULL(0x0D000028), SH_UNT_PEC_0    ,
       SH_ACS_SCOM2_CLEAR );
REG64( PEC_1_CPLT_CONF0                                        , RULL(0x0E000008), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_1_CPLT_CONF0_OR                                     , RULL(0x0E000018), SH_UNT_PEC_1    , SH_ACS_SCOM1_OR  );
REG64( PEC_1_CPLT_CONF0_CLEAR                                  , RULL(0x0E000028), SH_UNT_PEC_1    ,
       SH_ACS_SCOM2_CLEAR );
REG64( PEC_2_CPLT_CONF0                                        , RULL(0x0F000008), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );
REG64( PEC_2_CPLT_CONF0_OR                                     , RULL(0x0F000018), SH_UNT_PEC_2    , SH_ACS_SCOM1_OR  );
REG64( PEC_2_CPLT_CONF0_CLEAR                                  , RULL(0x0F000028), SH_UNT_PEC_2    ,
       SH_ACS_SCOM2_CLEAR );

REG64( C_CPLT_CONF1                                            , RULL(0x20000009), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPLT_CONF1_OR                                         , RULL(0x20000019), SH_UNT_C        , SH_ACS_SCOM1_OR  );
REG64( C_CPLT_CONF1_CLEAR                                      , RULL(0x20000029), SH_UNT_C        ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_0_CPLT_CONF1                                          , RULL(0x20000009), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPLT_CONF1_OR                                       , RULL(0x20000019), SH_UNT_C_0      , SH_ACS_SCOM1_OR  );
REG64( C_0_CPLT_CONF1_CLEAR                                    , RULL(0x20000029), SH_UNT_C_0      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_1_CPLT_CONF1                                          , RULL(0x21000009), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPLT_CONF1_OR                                       , RULL(0x21000019), SH_UNT_C_1      , SH_ACS_SCOM1_OR  );
REG64( C_1_CPLT_CONF1_CLEAR                                    , RULL(0x21000029), SH_UNT_C_1      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_2_CPLT_CONF1                                          , RULL(0x22000009), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPLT_CONF1_OR                                       , RULL(0x22000019), SH_UNT_C_2      , SH_ACS_SCOM1_OR  );
REG64( C_2_CPLT_CONF1_CLEAR                                    , RULL(0x22000029), SH_UNT_C_2      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_3_CPLT_CONF1                                          , RULL(0x23000009), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPLT_CONF1_OR                                       , RULL(0x23000019), SH_UNT_C_3      , SH_ACS_SCOM1_OR  );
REG64( C_3_CPLT_CONF1_CLEAR                                    , RULL(0x23000029), SH_UNT_C_3      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_4_CPLT_CONF1                                          , RULL(0x24000009), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPLT_CONF1_OR                                       , RULL(0x24000019), SH_UNT_C_4      , SH_ACS_SCOM1_OR  );
REG64( C_4_CPLT_CONF1_CLEAR                                    , RULL(0x24000029), SH_UNT_C_4      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_5_CPLT_CONF1                                          , RULL(0x25000009), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPLT_CONF1_OR                                       , RULL(0x25000019), SH_UNT_C_5      , SH_ACS_SCOM1_OR  );
REG64( C_5_CPLT_CONF1_CLEAR                                    , RULL(0x25000029), SH_UNT_C_5      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_6_CPLT_CONF1                                          , RULL(0x26000009), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPLT_CONF1_OR                                       , RULL(0x26000019), SH_UNT_C_6      , SH_ACS_SCOM1_OR  );
REG64( C_6_CPLT_CONF1_CLEAR                                    , RULL(0x26000029), SH_UNT_C_6      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_7_CPLT_CONF1                                          , RULL(0x27000009), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPLT_CONF1_OR                                       , RULL(0x27000019), SH_UNT_C_7      , SH_ACS_SCOM1_OR  );
REG64( C_7_CPLT_CONF1_CLEAR                                    , RULL(0x27000029), SH_UNT_C_7      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_8_CPLT_CONF1                                          , RULL(0x28000009), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPLT_CONF1_OR                                       , RULL(0x28000019), SH_UNT_C_8      , SH_ACS_SCOM1_OR  );
REG64( C_8_CPLT_CONF1_CLEAR                                    , RULL(0x28000029), SH_UNT_C_8      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_9_CPLT_CONF1                                          , RULL(0x29000009), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPLT_CONF1_OR                                       , RULL(0x29000019), SH_UNT_C_9      , SH_ACS_SCOM1_OR  );
REG64( C_9_CPLT_CONF1_CLEAR                                    , RULL(0x29000029), SH_UNT_C_9      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_10_CPLT_CONF1                                         , RULL(0x2A000009), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPLT_CONF1_OR                                      , RULL(0x2A000019), SH_UNT_C_10     , SH_ACS_SCOM1_OR  );
REG64( C_10_CPLT_CONF1_CLEAR                                   , RULL(0x2A000029), SH_UNT_C_10     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_11_CPLT_CONF1                                         , RULL(0x2B000009), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPLT_CONF1_OR                                      , RULL(0x2B000019), SH_UNT_C_11     , SH_ACS_SCOM1_OR  );
REG64( C_11_CPLT_CONF1_CLEAR                                   , RULL(0x2B000029), SH_UNT_C_11     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_12_CPLT_CONF1                                         , RULL(0x2C000009), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPLT_CONF1_OR                                      , RULL(0x2C000019), SH_UNT_C_12     , SH_ACS_SCOM1_OR  );
REG64( C_12_CPLT_CONF1_CLEAR                                   , RULL(0x2C000029), SH_UNT_C_12     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_13_CPLT_CONF1                                         , RULL(0x2D000009), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPLT_CONF1_OR                                      , RULL(0x2D000019), SH_UNT_C_13     , SH_ACS_SCOM1_OR  );
REG64( C_13_CPLT_CONF1_CLEAR                                   , RULL(0x2D000029), SH_UNT_C_13     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_14_CPLT_CONF1                                         , RULL(0x2E000009), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPLT_CONF1_OR                                      , RULL(0x2E000019), SH_UNT_C_14     , SH_ACS_SCOM1_OR  );
REG64( C_14_CPLT_CONF1_CLEAR                                   , RULL(0x2E000029), SH_UNT_C_14     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_15_CPLT_CONF1                                         , RULL(0x2F000009), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPLT_CONF1_OR                                      , RULL(0x2F000019), SH_UNT_C_15     , SH_ACS_SCOM1_OR  );
REG64( C_15_CPLT_CONF1_CLEAR                                   , RULL(0x2F000029), SH_UNT_C_15     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_16_CPLT_CONF1                                         , RULL(0x30000009), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPLT_CONF1_OR                                      , RULL(0x30000019), SH_UNT_C_16     , SH_ACS_SCOM1_OR  );
REG64( C_16_CPLT_CONF1_CLEAR                                   , RULL(0x30000029), SH_UNT_C_16     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_17_CPLT_CONF1                                         , RULL(0x31000009), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPLT_CONF1_OR                                      , RULL(0x31000019), SH_UNT_C_17     , SH_ACS_SCOM1_OR  );
REG64( C_17_CPLT_CONF1_CLEAR                                   , RULL(0x31000029), SH_UNT_C_17     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_18_CPLT_CONF1                                         , RULL(0x32000009), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPLT_CONF1_OR                                      , RULL(0x32000019), SH_UNT_C_18     , SH_ACS_SCOM1_OR  );
REG64( C_18_CPLT_CONF1_CLEAR                                   , RULL(0x32000029), SH_UNT_C_18     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_19_CPLT_CONF1                                         , RULL(0x33000009), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPLT_CONF1_OR                                      , RULL(0x33000019), SH_UNT_C_19     , SH_ACS_SCOM1_OR  );
REG64( C_19_CPLT_CONF1_CLEAR                                   , RULL(0x33000029), SH_UNT_C_19     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_20_CPLT_CONF1                                         , RULL(0x34000009), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPLT_CONF1_OR                                      , RULL(0x34000019), SH_UNT_C_20     , SH_ACS_SCOM1_OR  );
REG64( C_20_CPLT_CONF1_CLEAR                                   , RULL(0x34000029), SH_UNT_C_20     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_21_CPLT_CONF1                                         , RULL(0x35000009), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPLT_CONF1_OR                                      , RULL(0x35000019), SH_UNT_C_21     , SH_ACS_SCOM1_OR  );
REG64( C_21_CPLT_CONF1_CLEAR                                   , RULL(0x35000029), SH_UNT_C_21     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_22_CPLT_CONF1                                         , RULL(0x36000009), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPLT_CONF1_OR                                      , RULL(0x36000019), SH_UNT_C_22     , SH_ACS_SCOM1_OR  );
REG64( C_22_CPLT_CONF1_CLEAR                                   , RULL(0x36000029), SH_UNT_C_22     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_23_CPLT_CONF1                                         , RULL(0x37000009), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPLT_CONF1_OR                                      , RULL(0x37000019), SH_UNT_C_23     , SH_ACS_SCOM1_OR  );
REG64( C_23_CPLT_CONF1_CLEAR                                   , RULL(0x37000029), SH_UNT_C_23     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_CPLT_CONF1                                           , RULL(0x10000009), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_CPLT_CONF1_OR                                        , RULL(0x10000019), SH_UNT_EQ       , SH_ACS_SCOM1_OR  );
REG64( EQ_CPLT_CONF1_CLEAR                                     , RULL(0x10000029), SH_UNT_EQ       ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_0_CPLT_CONF1                                         , RULL(0x10000009), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_CPLT_CONF1_OR                                      , RULL(0x10000019), SH_UNT_EQ_0     , SH_ACS_SCOM1_OR  );
REG64( EQ_0_CPLT_CONF1_CLEAR                                   , RULL(0x10000029), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_1_CPLT_CONF1                                         , RULL(0x11000009), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_CPLT_CONF1_OR                                      , RULL(0x11000019), SH_UNT_EQ_1     , SH_ACS_SCOM1_OR  );
REG64( EQ_1_CPLT_CONF1_CLEAR                                   , RULL(0x11000029), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_2_CPLT_CONF1                                         , RULL(0x12000009), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_CPLT_CONF1_OR                                      , RULL(0x12000019), SH_UNT_EQ_2     , SH_ACS_SCOM1_OR  );
REG64( EQ_2_CPLT_CONF1_CLEAR                                   , RULL(0x12000029), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_3_CPLT_CONF1                                         , RULL(0x13000009), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_CPLT_CONF1_OR                                      , RULL(0x13000019), SH_UNT_EQ_3     , SH_ACS_SCOM1_OR  );
REG64( EQ_3_CPLT_CONF1_CLEAR                                   , RULL(0x13000029), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_4_CPLT_CONF1                                         , RULL(0x14000009), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_CPLT_CONF1_OR                                      , RULL(0x14000019), SH_UNT_EQ_4     , SH_ACS_SCOM1_OR  );
REG64( EQ_4_CPLT_CONF1_CLEAR                                   , RULL(0x14000029), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_5_CPLT_CONF1                                         , RULL(0x15000009), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_CPLT_CONF1_OR                                      , RULL(0x15000019), SH_UNT_EQ_5     , SH_ACS_SCOM1_OR  );
REG64( EQ_5_CPLT_CONF1_CLEAR                                   , RULL(0x15000029), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EX_CPLT_CONF1                                           , RULL(0x20000009), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 21000009,
REG64( EX_CPLT_CONF1_OR                                        , RULL(0x20000019), SH_UNT_EX       ,
       SH_ACS_SCOM1_OR  ); //DUPS: 21000019,
REG64( EX_CPLT_CONF1_CLEAR                                     , RULL(0x20000029), SH_UNT_EX       ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 21000029,
REG64( EX_0_CPLT_CONF1                                         , RULL(0x20000009), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 21000009,
REG64( EX_0_CPLT_CONF1_OR                                      , RULL(0x20000019), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 21000019,
REG64( EX_0_CPLT_CONF1_CLEAR                                   , RULL(0x20000029), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 21000029,
REG64( EX_1_CPLT_CONF1                                         , RULL(0x22000009), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 23000009,
REG64( EX_1_CPLT_CONF1_OR                                      , RULL(0x22000019), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 23000019,
REG64( EX_1_CPLT_CONF1_CLEAR                                   , RULL(0x22000029), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 23000029,
REG64( EX_2_CPLT_CONF1                                         , RULL(0x24000009), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 25000009,
REG64( EX_2_CPLT_CONF1_OR                                      , RULL(0x24000019), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 25000019,
REG64( EX_2_CPLT_CONF1_CLEAR                                   , RULL(0x24000029), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 25000029,
REG64( EX_3_CPLT_CONF1                                         , RULL(0x26000009), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 27000009,
REG64( EX_3_CPLT_CONF1_OR                                      , RULL(0x26000019), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 27000019,
REG64( EX_3_CPLT_CONF1_CLEAR                                   , RULL(0x26000029), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 27000029,
REG64( EX_4_CPLT_CONF1                                         , RULL(0x28000009), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 29000009,
REG64( EX_4_CPLT_CONF1_OR                                      , RULL(0x28000019), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 29000019,
REG64( EX_4_CPLT_CONF1_CLEAR                                   , RULL(0x28000029), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 29000029,
REG64( EX_5_CPLT_CONF1                                         , RULL(0x2A000009), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B000009,
REG64( EX_5_CPLT_CONF1_OR                                      , RULL(0x2A000019), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2B000019,
REG64( EX_5_CPLT_CONF1_CLEAR                                   , RULL(0x2A000029), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2B000029,
REG64( EX_6_CPLT_CONF1                                         , RULL(0x2C000009), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D000009,
REG64( EX_6_CPLT_CONF1_OR                                      , RULL(0x2C000019), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2D000019,
REG64( EX_6_CPLT_CONF1_CLEAR                                   , RULL(0x2C000029), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2D000029,
REG64( EX_7_CPLT_CONF1                                         , RULL(0x2E000009), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F000009,
REG64( EX_7_CPLT_CONF1_OR                                      , RULL(0x2E000019), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2F000019,
REG64( EX_7_CPLT_CONF1_CLEAR                                   , RULL(0x2E000029), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2F000029,
REG64( EX_8_CPLT_CONF1                                         , RULL(0x30000009), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 31000009,
REG64( EX_8_CPLT_CONF1_OR                                      , RULL(0x30000019), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 31000019,
REG64( EX_8_CPLT_CONF1_CLEAR                                   , RULL(0x30000029), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 31000029,
REG64( EX_9_CPLT_CONF1                                         , RULL(0x32000009), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 33000009,
REG64( EX_9_CPLT_CONF1_OR                                      , RULL(0x32000019), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 33000019,
REG64( EX_9_CPLT_CONF1_CLEAR                                   , RULL(0x32000029), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 33000029,
REG64( EX_10_CPLT_CONF1                                        , RULL(0x34000009), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 35000009,
REG64( EX_10_CPLT_CONF1_OR                                     , RULL(0x34000019), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_OR  ); //DUPS: 35000019,
REG64( EX_10_CPLT_CONF1_CLEAR                                  , RULL(0x34000029), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 35000029,
REG64( EX_11_CPLT_CONF1                                        , RULL(0x36000009), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 37000009,
REG64( EX_11_CPLT_CONF1_OR                                     , RULL(0x36000019), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_OR  ); //DUPS: 37000019,
REG64( EX_11_CPLT_CONF1_CLEAR                                  , RULL(0x36000029), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 37000029,

REG64( PEC_0_CPLT_CONF1                                        , RULL(0x0D000009), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_0_CPLT_CONF1_OR                                     , RULL(0x0D000019), SH_UNT_PEC_0    , SH_ACS_SCOM1_OR  );
REG64( PEC_0_CPLT_CONF1_CLEAR                                  , RULL(0x0D000029), SH_UNT_PEC_0    ,
       SH_ACS_SCOM2_CLEAR );
REG64( PEC_1_CPLT_CONF1                                        , RULL(0x0E000009), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_1_CPLT_CONF1_OR                                     , RULL(0x0E000019), SH_UNT_PEC_1    , SH_ACS_SCOM1_OR  );
REG64( PEC_1_CPLT_CONF1_CLEAR                                  , RULL(0x0E000029), SH_UNT_PEC_1    ,
       SH_ACS_SCOM2_CLEAR );
REG64( PEC_2_CPLT_CONF1                                        , RULL(0x0F000009), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );
REG64( PEC_2_CPLT_CONF1_OR                                     , RULL(0x0F000019), SH_UNT_PEC_2    , SH_ACS_SCOM1_OR  );
REG64( PEC_2_CPLT_CONF1_CLEAR                                  , RULL(0x0F000029), SH_UNT_PEC_2    ,
       SH_ACS_SCOM2_CLEAR );

REG64( C_CPLT_CTRL0                                            , RULL(0x20000000), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPLT_CTRL0_OR                                         , RULL(0x20000010), SH_UNT_C        , SH_ACS_SCOM1_OR  );
REG64( C_CPLT_CTRL0_CLEAR                                      , RULL(0x20000020), SH_UNT_C        ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_0_CPLT_CTRL0                                          , RULL(0x20000000), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPLT_CTRL0_OR                                       , RULL(0x20000010), SH_UNT_C_0      , SH_ACS_SCOM1_OR  );
REG64( C_0_CPLT_CTRL0_CLEAR                                    , RULL(0x20000020), SH_UNT_C_0      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_1_CPLT_CTRL0                                          , RULL(0x21000000), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPLT_CTRL0_OR                                       , RULL(0x21000010), SH_UNT_C_1      , SH_ACS_SCOM1_OR  );
REG64( C_1_CPLT_CTRL0_CLEAR                                    , RULL(0x21000020), SH_UNT_C_1      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_2_CPLT_CTRL0                                          , RULL(0x22000000), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPLT_CTRL0_OR                                       , RULL(0x22000010), SH_UNT_C_2      , SH_ACS_SCOM1_OR  );
REG64( C_2_CPLT_CTRL0_CLEAR                                    , RULL(0x22000020), SH_UNT_C_2      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_3_CPLT_CTRL0                                          , RULL(0x23000000), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPLT_CTRL0_OR                                       , RULL(0x23000010), SH_UNT_C_3      , SH_ACS_SCOM1_OR  );
REG64( C_3_CPLT_CTRL0_CLEAR                                    , RULL(0x23000020), SH_UNT_C_3      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_4_CPLT_CTRL0                                          , RULL(0x24000000), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPLT_CTRL0_OR                                       , RULL(0x24000010), SH_UNT_C_4      , SH_ACS_SCOM1_OR  );
REG64( C_4_CPLT_CTRL0_CLEAR                                    , RULL(0x24000020), SH_UNT_C_4      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_5_CPLT_CTRL0                                          , RULL(0x25000000), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPLT_CTRL0_OR                                       , RULL(0x25000010), SH_UNT_C_5      , SH_ACS_SCOM1_OR  );
REG64( C_5_CPLT_CTRL0_CLEAR                                    , RULL(0x25000020), SH_UNT_C_5      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_6_CPLT_CTRL0                                          , RULL(0x26000000), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPLT_CTRL0_OR                                       , RULL(0x26000010), SH_UNT_C_6      , SH_ACS_SCOM1_OR  );
REG64( C_6_CPLT_CTRL0_CLEAR                                    , RULL(0x26000020), SH_UNT_C_6      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_7_CPLT_CTRL0                                          , RULL(0x27000000), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPLT_CTRL0_OR                                       , RULL(0x27000010), SH_UNT_C_7      , SH_ACS_SCOM1_OR  );
REG64( C_7_CPLT_CTRL0_CLEAR                                    , RULL(0x27000020), SH_UNT_C_7      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_8_CPLT_CTRL0                                          , RULL(0x28000000), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPLT_CTRL0_OR                                       , RULL(0x28000010), SH_UNT_C_8      , SH_ACS_SCOM1_OR  );
REG64( C_8_CPLT_CTRL0_CLEAR                                    , RULL(0x28000020), SH_UNT_C_8      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_9_CPLT_CTRL0                                          , RULL(0x29000000), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPLT_CTRL0_OR                                       , RULL(0x29000010), SH_UNT_C_9      , SH_ACS_SCOM1_OR  );
REG64( C_9_CPLT_CTRL0_CLEAR                                    , RULL(0x29000020), SH_UNT_C_9      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_10_CPLT_CTRL0                                         , RULL(0x2A000000), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPLT_CTRL0_OR                                      , RULL(0x2A000010), SH_UNT_C_10     , SH_ACS_SCOM1_OR  );
REG64( C_10_CPLT_CTRL0_CLEAR                                   , RULL(0x2A000020), SH_UNT_C_10     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_11_CPLT_CTRL0                                         , RULL(0x2B000000), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPLT_CTRL0_OR                                      , RULL(0x2B000010), SH_UNT_C_11     , SH_ACS_SCOM1_OR  );
REG64( C_11_CPLT_CTRL0_CLEAR                                   , RULL(0x2B000020), SH_UNT_C_11     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_12_CPLT_CTRL0                                         , RULL(0x2C000000), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPLT_CTRL0_OR                                      , RULL(0x2C000010), SH_UNT_C_12     , SH_ACS_SCOM1_OR  );
REG64( C_12_CPLT_CTRL0_CLEAR                                   , RULL(0x2C000020), SH_UNT_C_12     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_13_CPLT_CTRL0                                         , RULL(0x2D000000), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPLT_CTRL0_OR                                      , RULL(0x2D000010), SH_UNT_C_13     , SH_ACS_SCOM1_OR  );
REG64( C_13_CPLT_CTRL0_CLEAR                                   , RULL(0x2D000020), SH_UNT_C_13     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_14_CPLT_CTRL0                                         , RULL(0x2E000000), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPLT_CTRL0_OR                                      , RULL(0x2E000010), SH_UNT_C_14     , SH_ACS_SCOM1_OR  );
REG64( C_14_CPLT_CTRL0_CLEAR                                   , RULL(0x2E000020), SH_UNT_C_14     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_15_CPLT_CTRL0                                         , RULL(0x2F000000), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPLT_CTRL0_OR                                      , RULL(0x2F000010), SH_UNT_C_15     , SH_ACS_SCOM1_OR  );
REG64( C_15_CPLT_CTRL0_CLEAR                                   , RULL(0x2F000020), SH_UNT_C_15     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_16_CPLT_CTRL0                                         , RULL(0x30000000), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPLT_CTRL0_OR                                      , RULL(0x30000010), SH_UNT_C_16     , SH_ACS_SCOM1_OR  );
REG64( C_16_CPLT_CTRL0_CLEAR                                   , RULL(0x30000020), SH_UNT_C_16     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_17_CPLT_CTRL0                                         , RULL(0x31000000), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPLT_CTRL0_OR                                      , RULL(0x31000010), SH_UNT_C_17     , SH_ACS_SCOM1_OR  );
REG64( C_17_CPLT_CTRL0_CLEAR                                   , RULL(0x31000020), SH_UNT_C_17     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_18_CPLT_CTRL0                                         , RULL(0x32000000), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPLT_CTRL0_OR                                      , RULL(0x32000010), SH_UNT_C_18     , SH_ACS_SCOM1_OR  );
REG64( C_18_CPLT_CTRL0_CLEAR                                   , RULL(0x32000020), SH_UNT_C_18     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_19_CPLT_CTRL0                                         , RULL(0x33000000), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPLT_CTRL0_OR                                      , RULL(0x33000010), SH_UNT_C_19     , SH_ACS_SCOM1_OR  );
REG64( C_19_CPLT_CTRL0_CLEAR                                   , RULL(0x33000020), SH_UNT_C_19     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_20_CPLT_CTRL0                                         , RULL(0x34000000), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPLT_CTRL0_OR                                      , RULL(0x34000010), SH_UNT_C_20     , SH_ACS_SCOM1_OR  );
REG64( C_20_CPLT_CTRL0_CLEAR                                   , RULL(0x34000020), SH_UNT_C_20     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_21_CPLT_CTRL0                                         , RULL(0x35000000), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPLT_CTRL0_OR                                      , RULL(0x35000010), SH_UNT_C_21     , SH_ACS_SCOM1_OR  );
REG64( C_21_CPLT_CTRL0_CLEAR                                   , RULL(0x35000020), SH_UNT_C_21     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_22_CPLT_CTRL0                                         , RULL(0x36000000), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPLT_CTRL0_OR                                      , RULL(0x36000010), SH_UNT_C_22     , SH_ACS_SCOM1_OR  );
REG64( C_22_CPLT_CTRL0_CLEAR                                   , RULL(0x36000020), SH_UNT_C_22     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_23_CPLT_CTRL0                                         , RULL(0x37000000), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPLT_CTRL0_OR                                      , RULL(0x37000010), SH_UNT_C_23     , SH_ACS_SCOM1_OR  );
REG64( C_23_CPLT_CTRL0_CLEAR                                   , RULL(0x37000020), SH_UNT_C_23     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_CPLT_CTRL0                                           , RULL(0x10000000), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_CPLT_CTRL0_OR                                        , RULL(0x10000010), SH_UNT_EQ       , SH_ACS_SCOM1_OR  );
REG64( EQ_CPLT_CTRL0_CLEAR                                     , RULL(0x10000020), SH_UNT_EQ       ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_0_CPLT_CTRL0                                         , RULL(0x10000000), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_CPLT_CTRL0_OR                                      , RULL(0x10000010), SH_UNT_EQ_0     , SH_ACS_SCOM1_OR  );
REG64( EQ_0_CPLT_CTRL0_CLEAR                                   , RULL(0x10000020), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_1_CPLT_CTRL0                                         , RULL(0x11000000), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_CPLT_CTRL0_OR                                      , RULL(0x11000010), SH_UNT_EQ_1     , SH_ACS_SCOM1_OR  );
REG64( EQ_1_CPLT_CTRL0_CLEAR                                   , RULL(0x11000020), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_2_CPLT_CTRL0                                         , RULL(0x12000000), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_CPLT_CTRL0_OR                                      , RULL(0x12000010), SH_UNT_EQ_2     , SH_ACS_SCOM1_OR  );
REG64( EQ_2_CPLT_CTRL0_CLEAR                                   , RULL(0x12000020), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_3_CPLT_CTRL0                                         , RULL(0x13000000), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_CPLT_CTRL0_OR                                      , RULL(0x13000010), SH_UNT_EQ_3     , SH_ACS_SCOM1_OR  );
REG64( EQ_3_CPLT_CTRL0_CLEAR                                   , RULL(0x13000020), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_4_CPLT_CTRL0                                         , RULL(0x14000000), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_CPLT_CTRL0_OR                                      , RULL(0x14000010), SH_UNT_EQ_4     , SH_ACS_SCOM1_OR  );
REG64( EQ_4_CPLT_CTRL0_CLEAR                                   , RULL(0x14000020), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_5_CPLT_CTRL0                                         , RULL(0x15000000), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_CPLT_CTRL0_OR                                      , RULL(0x15000010), SH_UNT_EQ_5     , SH_ACS_SCOM1_OR  );
REG64( EQ_5_CPLT_CTRL0_CLEAR                                   , RULL(0x15000020), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EX_CPLT_CTRL0                                           , RULL(0x20000000), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 21000000,
REG64( EX_CPLT_CTRL0_OR                                        , RULL(0x20000010), SH_UNT_EX       ,
       SH_ACS_SCOM1_OR  ); //DUPS: 21000010,
REG64( EX_CPLT_CTRL0_CLEAR                                     , RULL(0x20000020), SH_UNT_EX       ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 21000020,
REG64( EX_0_CPLT_CTRL0                                         , RULL(0x20000000), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 21000000,
REG64( EX_0_CPLT_CTRL0_OR                                      , RULL(0x20000010), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 21000010,
REG64( EX_0_CPLT_CTRL0_CLEAR                                   , RULL(0x20000020), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 21000020,
REG64( EX_1_CPLT_CTRL0                                         , RULL(0x22000000), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 23000000,
REG64( EX_1_CPLT_CTRL0_OR                                      , RULL(0x22000010), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 23000010,
REG64( EX_1_CPLT_CTRL0_CLEAR                                   , RULL(0x22000020), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 23000020,
REG64( EX_2_CPLT_CTRL0                                         , RULL(0x24000000), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 25000000,
REG64( EX_2_CPLT_CTRL0_OR                                      , RULL(0x24000010), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 25000010,
REG64( EX_2_CPLT_CTRL0_CLEAR                                   , RULL(0x24000020), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 25000020,
REG64( EX_3_CPLT_CTRL0                                         , RULL(0x26000000), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 27000000,
REG64( EX_3_CPLT_CTRL0_OR                                      , RULL(0x26000010), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 27000010,
REG64( EX_3_CPLT_CTRL0_CLEAR                                   , RULL(0x26000020), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 27000020,
REG64( EX_4_CPLT_CTRL0                                         , RULL(0x28000000), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 29000000,
REG64( EX_4_CPLT_CTRL0_OR                                      , RULL(0x28000010), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 29000010,
REG64( EX_4_CPLT_CTRL0_CLEAR                                   , RULL(0x28000020), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 29000020,
REG64( EX_5_CPLT_CTRL0                                         , RULL(0x2A000000), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B000000,
REG64( EX_5_CPLT_CTRL0_OR                                      , RULL(0x2A000010), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2B000010,
REG64( EX_5_CPLT_CTRL0_CLEAR                                   , RULL(0x2A000020), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2B000020,
REG64( EX_6_CPLT_CTRL0                                         , RULL(0x2C000000), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D000000,
REG64( EX_6_CPLT_CTRL0_OR                                      , RULL(0x2C000010), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2D000010,
REG64( EX_6_CPLT_CTRL0_CLEAR                                   , RULL(0x2C000020), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2D000020,
REG64( EX_7_CPLT_CTRL0                                         , RULL(0x2E000000), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F000000,
REG64( EX_7_CPLT_CTRL0_OR                                      , RULL(0x2E000010), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2F000010,
REG64( EX_7_CPLT_CTRL0_CLEAR                                   , RULL(0x2E000020), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2F000020,
REG64( EX_8_CPLT_CTRL0                                         , RULL(0x30000000), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 31000000,
REG64( EX_8_CPLT_CTRL0_OR                                      , RULL(0x30000010), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 31000010,
REG64( EX_8_CPLT_CTRL0_CLEAR                                   , RULL(0x30000020), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 31000020,
REG64( EX_9_CPLT_CTRL0                                         , RULL(0x32000000), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 33000000,
REG64( EX_9_CPLT_CTRL0_OR                                      , RULL(0x32000010), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 33000010,
REG64( EX_9_CPLT_CTRL0_CLEAR                                   , RULL(0x32000020), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 33000020,
REG64( EX_10_CPLT_CTRL0                                        , RULL(0x34000000), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 35000000,
REG64( EX_10_CPLT_CTRL0_OR                                     , RULL(0x34000010), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_OR  ); //DUPS: 35000010,
REG64( EX_10_CPLT_CTRL0_CLEAR                                  , RULL(0x34000020), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 35000020,
REG64( EX_11_CPLT_CTRL0                                        , RULL(0x36000000), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 37000000,
REG64( EX_11_CPLT_CTRL0_OR                                     , RULL(0x36000010), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_OR  ); //DUPS: 37000010,
REG64( EX_11_CPLT_CTRL0_CLEAR                                  , RULL(0x36000020), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 37000020,

REG64( PEC_0_CPLT_CTRL0                                        , RULL(0x0D000000), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_0_CPLT_CTRL0_OR                                     , RULL(0x0D000010), SH_UNT_PEC_0    , SH_ACS_SCOM1_OR  );
REG64( PEC_0_CPLT_CTRL0_CLEAR                                  , RULL(0x0D000020), SH_UNT_PEC_0    ,
       SH_ACS_SCOM2_CLEAR );
REG64( PEC_1_CPLT_CTRL0                                        , RULL(0x0E000000), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_1_CPLT_CTRL0_OR                                     , RULL(0x0E000010), SH_UNT_PEC_1    , SH_ACS_SCOM1_OR  );
REG64( PEC_1_CPLT_CTRL0_CLEAR                                  , RULL(0x0E000020), SH_UNT_PEC_1    ,
       SH_ACS_SCOM2_CLEAR );
REG64( PEC_2_CPLT_CTRL0                                        , RULL(0x0F000000), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );
REG64( PEC_2_CPLT_CTRL0_OR                                     , RULL(0x0F000010), SH_UNT_PEC_2    , SH_ACS_SCOM1_OR  );
REG64( PEC_2_CPLT_CTRL0_CLEAR                                  , RULL(0x0F000020), SH_UNT_PEC_2    ,
       SH_ACS_SCOM2_CLEAR );

REG64( C_CPLT_CTRL1                                            , RULL(0x20000001), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPLT_CTRL1_OR                                         , RULL(0x20000011), SH_UNT_C        , SH_ACS_SCOM1_OR  );
REG64( C_CPLT_CTRL1_CLEAR                                      , RULL(0x20000021), SH_UNT_C        ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_0_CPLT_CTRL1                                          , RULL(0x20000001), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPLT_CTRL1_OR                                       , RULL(0x20000011), SH_UNT_C_0      , SH_ACS_SCOM1_OR  );
REG64( C_0_CPLT_CTRL1_CLEAR                                    , RULL(0x20000021), SH_UNT_C_0      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_1_CPLT_CTRL1                                          , RULL(0x21000001), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPLT_CTRL1_OR                                       , RULL(0x21000011), SH_UNT_C_1      , SH_ACS_SCOM1_OR  );
REG64( C_1_CPLT_CTRL1_CLEAR                                    , RULL(0x21000021), SH_UNT_C_1      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_2_CPLT_CTRL1                                          , RULL(0x22000001), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPLT_CTRL1_OR                                       , RULL(0x22000011), SH_UNT_C_2      , SH_ACS_SCOM1_OR  );
REG64( C_2_CPLT_CTRL1_CLEAR                                    , RULL(0x22000021), SH_UNT_C_2      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_3_CPLT_CTRL1                                          , RULL(0x23000001), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPLT_CTRL1_OR                                       , RULL(0x23000011), SH_UNT_C_3      , SH_ACS_SCOM1_OR  );
REG64( C_3_CPLT_CTRL1_CLEAR                                    , RULL(0x23000021), SH_UNT_C_3      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_4_CPLT_CTRL1                                          , RULL(0x24000001), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPLT_CTRL1_OR                                       , RULL(0x24000011), SH_UNT_C_4      , SH_ACS_SCOM1_OR  );
REG64( C_4_CPLT_CTRL1_CLEAR                                    , RULL(0x24000021), SH_UNT_C_4      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_5_CPLT_CTRL1                                          , RULL(0x25000001), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPLT_CTRL1_OR                                       , RULL(0x25000011), SH_UNT_C_5      , SH_ACS_SCOM1_OR  );
REG64( C_5_CPLT_CTRL1_CLEAR                                    , RULL(0x25000021), SH_UNT_C_5      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_6_CPLT_CTRL1                                          , RULL(0x26000001), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPLT_CTRL1_OR                                       , RULL(0x26000011), SH_UNT_C_6      , SH_ACS_SCOM1_OR  );
REG64( C_6_CPLT_CTRL1_CLEAR                                    , RULL(0x26000021), SH_UNT_C_6      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_7_CPLT_CTRL1                                          , RULL(0x27000001), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPLT_CTRL1_OR                                       , RULL(0x27000011), SH_UNT_C_7      , SH_ACS_SCOM1_OR  );
REG64( C_7_CPLT_CTRL1_CLEAR                                    , RULL(0x27000021), SH_UNT_C_7      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_8_CPLT_CTRL1                                          , RULL(0x28000001), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPLT_CTRL1_OR                                       , RULL(0x28000011), SH_UNT_C_8      , SH_ACS_SCOM1_OR  );
REG64( C_8_CPLT_CTRL1_CLEAR                                    , RULL(0x28000021), SH_UNT_C_8      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_9_CPLT_CTRL1                                          , RULL(0x29000001), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPLT_CTRL1_OR                                       , RULL(0x29000011), SH_UNT_C_9      , SH_ACS_SCOM1_OR  );
REG64( C_9_CPLT_CTRL1_CLEAR                                    , RULL(0x29000021), SH_UNT_C_9      ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_10_CPLT_CTRL1                                         , RULL(0x2A000001), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPLT_CTRL1_OR                                      , RULL(0x2A000011), SH_UNT_C_10     , SH_ACS_SCOM1_OR  );
REG64( C_10_CPLT_CTRL1_CLEAR                                   , RULL(0x2A000021), SH_UNT_C_10     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_11_CPLT_CTRL1                                         , RULL(0x2B000001), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPLT_CTRL1_OR                                      , RULL(0x2B000011), SH_UNT_C_11     , SH_ACS_SCOM1_OR  );
REG64( C_11_CPLT_CTRL1_CLEAR                                   , RULL(0x2B000021), SH_UNT_C_11     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_12_CPLT_CTRL1                                         , RULL(0x2C000001), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPLT_CTRL1_OR                                      , RULL(0x2C000011), SH_UNT_C_12     , SH_ACS_SCOM1_OR  );
REG64( C_12_CPLT_CTRL1_CLEAR                                   , RULL(0x2C000021), SH_UNT_C_12     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_13_CPLT_CTRL1                                         , RULL(0x2D000001), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPLT_CTRL1_OR                                      , RULL(0x2D000011), SH_UNT_C_13     , SH_ACS_SCOM1_OR  );
REG64( C_13_CPLT_CTRL1_CLEAR                                   , RULL(0x2D000021), SH_UNT_C_13     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_14_CPLT_CTRL1                                         , RULL(0x2E000001), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPLT_CTRL1_OR                                      , RULL(0x2E000011), SH_UNT_C_14     , SH_ACS_SCOM1_OR  );
REG64( C_14_CPLT_CTRL1_CLEAR                                   , RULL(0x2E000021), SH_UNT_C_14     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_15_CPLT_CTRL1                                         , RULL(0x2F000001), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPLT_CTRL1_OR                                      , RULL(0x2F000011), SH_UNT_C_15     , SH_ACS_SCOM1_OR  );
REG64( C_15_CPLT_CTRL1_CLEAR                                   , RULL(0x2F000021), SH_UNT_C_15     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_16_CPLT_CTRL1                                         , RULL(0x30000001), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPLT_CTRL1_OR                                      , RULL(0x30000011), SH_UNT_C_16     , SH_ACS_SCOM1_OR  );
REG64( C_16_CPLT_CTRL1_CLEAR                                   , RULL(0x30000021), SH_UNT_C_16     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_17_CPLT_CTRL1                                         , RULL(0x31000001), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPLT_CTRL1_OR                                      , RULL(0x31000011), SH_UNT_C_17     , SH_ACS_SCOM1_OR  );
REG64( C_17_CPLT_CTRL1_CLEAR                                   , RULL(0x31000021), SH_UNT_C_17     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_18_CPLT_CTRL1                                         , RULL(0x32000001), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPLT_CTRL1_OR                                      , RULL(0x32000011), SH_UNT_C_18     , SH_ACS_SCOM1_OR  );
REG64( C_18_CPLT_CTRL1_CLEAR                                   , RULL(0x32000021), SH_UNT_C_18     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_19_CPLT_CTRL1                                         , RULL(0x33000001), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPLT_CTRL1_OR                                      , RULL(0x33000011), SH_UNT_C_19     , SH_ACS_SCOM1_OR  );
REG64( C_19_CPLT_CTRL1_CLEAR                                   , RULL(0x33000021), SH_UNT_C_19     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_20_CPLT_CTRL1                                         , RULL(0x34000001), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPLT_CTRL1_OR                                      , RULL(0x34000011), SH_UNT_C_20     , SH_ACS_SCOM1_OR  );
REG64( C_20_CPLT_CTRL1_CLEAR                                   , RULL(0x34000021), SH_UNT_C_20     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_21_CPLT_CTRL1                                         , RULL(0x35000001), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPLT_CTRL1_OR                                      , RULL(0x35000011), SH_UNT_C_21     , SH_ACS_SCOM1_OR  );
REG64( C_21_CPLT_CTRL1_CLEAR                                   , RULL(0x35000021), SH_UNT_C_21     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_22_CPLT_CTRL1                                         , RULL(0x36000001), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPLT_CTRL1_OR                                      , RULL(0x36000011), SH_UNT_C_22     , SH_ACS_SCOM1_OR  );
REG64( C_22_CPLT_CTRL1_CLEAR                                   , RULL(0x36000021), SH_UNT_C_22     ,
       SH_ACS_SCOM2_CLEAR );
REG64( C_23_CPLT_CTRL1                                         , RULL(0x37000001), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPLT_CTRL1_OR                                      , RULL(0x37000011), SH_UNT_C_23     , SH_ACS_SCOM1_OR  );
REG64( C_23_CPLT_CTRL1_CLEAR                                   , RULL(0x37000021), SH_UNT_C_23     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_CPLT_CTRL1                                           , RULL(0x10000001), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_CPLT_CTRL1_OR                                        , RULL(0x10000011), SH_UNT_EQ       , SH_ACS_SCOM1_OR  );
REG64( EQ_CPLT_CTRL1_CLEAR                                     , RULL(0x10000021), SH_UNT_EQ       ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_0_CPLT_CTRL1                                         , RULL(0x10000001), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_CPLT_CTRL1_OR                                      , RULL(0x10000011), SH_UNT_EQ_0     , SH_ACS_SCOM1_OR  );
REG64( EQ_0_CPLT_CTRL1_CLEAR                                   , RULL(0x10000021), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_1_CPLT_CTRL1                                         , RULL(0x11000001), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_CPLT_CTRL1_OR                                      , RULL(0x11000011), SH_UNT_EQ_1     , SH_ACS_SCOM1_OR  );
REG64( EQ_1_CPLT_CTRL1_CLEAR                                   , RULL(0x11000021), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_2_CPLT_CTRL1                                         , RULL(0x12000001), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_CPLT_CTRL1_OR                                      , RULL(0x12000011), SH_UNT_EQ_2     , SH_ACS_SCOM1_OR  );
REG64( EQ_2_CPLT_CTRL1_CLEAR                                   , RULL(0x12000021), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_3_CPLT_CTRL1                                         , RULL(0x13000001), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_CPLT_CTRL1_OR                                      , RULL(0x13000011), SH_UNT_EQ_3     , SH_ACS_SCOM1_OR  );
REG64( EQ_3_CPLT_CTRL1_CLEAR                                   , RULL(0x13000021), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_4_CPLT_CTRL1                                         , RULL(0x14000001), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_CPLT_CTRL1_OR                                      , RULL(0x14000011), SH_UNT_EQ_4     , SH_ACS_SCOM1_OR  );
REG64( EQ_4_CPLT_CTRL1_CLEAR                                   , RULL(0x14000021), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EQ_5_CPLT_CTRL1                                         , RULL(0x15000001), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_CPLT_CTRL1_OR                                      , RULL(0x15000011), SH_UNT_EQ_5     , SH_ACS_SCOM1_OR  );
REG64( EQ_5_CPLT_CTRL1_CLEAR                                   , RULL(0x15000021), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_CLEAR );
REG64( EX_CPLT_CTRL1                                           , RULL(0x20000001), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 21000001,
REG64( EX_CPLT_CTRL1_OR                                        , RULL(0x20000011), SH_UNT_EX       ,
       SH_ACS_SCOM1_OR  ); //DUPS: 21000011,
REG64( EX_CPLT_CTRL1_CLEAR                                     , RULL(0x20000021), SH_UNT_EX       ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 21000021,
REG64( EX_0_CPLT_CTRL1                                         , RULL(0x20000001), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 21000001,
REG64( EX_0_CPLT_CTRL1_OR                                      , RULL(0x20000011), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 21000011,
REG64( EX_0_CPLT_CTRL1_CLEAR                                   , RULL(0x20000021), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 21000021,
REG64( EX_1_CPLT_CTRL1                                         , RULL(0x22000001), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 23000001,
REG64( EX_1_CPLT_CTRL1_OR                                      , RULL(0x22000011), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 23000011,
REG64( EX_1_CPLT_CTRL1_CLEAR                                   , RULL(0x22000021), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 23000021,
REG64( EX_2_CPLT_CTRL1                                         , RULL(0x24000001), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 25000001,
REG64( EX_2_CPLT_CTRL1_OR                                      , RULL(0x24000011), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 25000011,
REG64( EX_2_CPLT_CTRL1_CLEAR                                   , RULL(0x24000021), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 25000021,
REG64( EX_3_CPLT_CTRL1                                         , RULL(0x26000001), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 27000001,
REG64( EX_3_CPLT_CTRL1_OR                                      , RULL(0x26000011), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 27000011,
REG64( EX_3_CPLT_CTRL1_CLEAR                                   , RULL(0x26000021), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 27000021,
REG64( EX_4_CPLT_CTRL1                                         , RULL(0x28000001), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 29000001,
REG64( EX_4_CPLT_CTRL1_OR                                      , RULL(0x28000011), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 29000011,
REG64( EX_4_CPLT_CTRL1_CLEAR                                   , RULL(0x28000021), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 29000021,
REG64( EX_5_CPLT_CTRL1                                         , RULL(0x2A000001), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B000001,
REG64( EX_5_CPLT_CTRL1_OR                                      , RULL(0x2A000011), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2B000011,
REG64( EX_5_CPLT_CTRL1_CLEAR                                   , RULL(0x2A000021), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2B000021,
REG64( EX_6_CPLT_CTRL1                                         , RULL(0x2C000001), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D000001,
REG64( EX_6_CPLT_CTRL1_OR                                      , RULL(0x2C000011), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2D000011,
REG64( EX_6_CPLT_CTRL1_CLEAR                                   , RULL(0x2C000021), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2D000021,
REG64( EX_7_CPLT_CTRL1                                         , RULL(0x2E000001), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F000001,
REG64( EX_7_CPLT_CTRL1_OR                                      , RULL(0x2E000011), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 2F000011,
REG64( EX_7_CPLT_CTRL1_CLEAR                                   , RULL(0x2E000021), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 2F000021,
REG64( EX_8_CPLT_CTRL1                                         , RULL(0x30000001), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 31000001,
REG64( EX_8_CPLT_CTRL1_OR                                      , RULL(0x30000011), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 31000011,
REG64( EX_8_CPLT_CTRL1_CLEAR                                   , RULL(0x30000021), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 31000021,
REG64( EX_9_CPLT_CTRL1                                         , RULL(0x32000001), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 33000001,
REG64( EX_9_CPLT_CTRL1_OR                                      , RULL(0x32000011), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_OR  ); //DUPS: 33000011,
REG64( EX_9_CPLT_CTRL1_CLEAR                                   , RULL(0x32000021), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 33000021,
REG64( EX_10_CPLT_CTRL1                                        , RULL(0x34000001), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 35000001,
REG64( EX_10_CPLT_CTRL1_OR                                     , RULL(0x34000011), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_OR  ); //DUPS: 35000011,
REG64( EX_10_CPLT_CTRL1_CLEAR                                  , RULL(0x34000021), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 35000021,
REG64( EX_11_CPLT_CTRL1                                        , RULL(0x36000001), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 37000001,
REG64( EX_11_CPLT_CTRL1_OR                                     , RULL(0x36000011), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_OR  ); //DUPS: 37000011,
REG64( EX_11_CPLT_CTRL1_CLEAR                                  , RULL(0x36000021), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_CLEAR ); //DUPS: 37000021,

REG64( PEC_0_CPLT_CTRL1                                        , RULL(0x0D000001), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_0_CPLT_CTRL1_OR                                     , RULL(0x0D000011), SH_UNT_PEC_0    , SH_ACS_SCOM1_OR  );
REG64( PEC_0_CPLT_CTRL1_CLEAR                                  , RULL(0x0D000021), SH_UNT_PEC_0    ,
       SH_ACS_SCOM2_CLEAR );
REG64( PEC_1_CPLT_CTRL1                                        , RULL(0x0E000001), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_1_CPLT_CTRL1_OR                                     , RULL(0x0E000011), SH_UNT_PEC_1    , SH_ACS_SCOM1_OR  );
REG64( PEC_1_CPLT_CTRL1_CLEAR                                  , RULL(0x0E000021), SH_UNT_PEC_1    ,
       SH_ACS_SCOM2_CLEAR );
REG64( PEC_2_CPLT_CTRL1                                        , RULL(0x0F000001), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );
REG64( PEC_2_CPLT_CTRL1_OR                                     , RULL(0x0F000011), SH_UNT_PEC_2    , SH_ACS_SCOM1_OR  );
REG64( PEC_2_CPLT_CTRL1_CLEAR                                  , RULL(0x0F000021), SH_UNT_PEC_2    ,
       SH_ACS_SCOM2_CLEAR );

REG64( C_CPLT_MASK0                                            , RULL(0x20000101), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CPLT_MASK0                                          , RULL(0x20000101), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CPLT_MASK0                                          , RULL(0x21000101), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CPLT_MASK0                                          , RULL(0x22000101), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CPLT_MASK0                                          , RULL(0x23000101), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CPLT_MASK0                                          , RULL(0x24000101), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CPLT_MASK0                                          , RULL(0x25000101), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CPLT_MASK0                                          , RULL(0x26000101), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CPLT_MASK0                                          , RULL(0x27000101), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CPLT_MASK0                                          , RULL(0x28000101), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CPLT_MASK0                                          , RULL(0x29000101), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CPLT_MASK0                                         , RULL(0x2A000101), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CPLT_MASK0                                         , RULL(0x2B000101), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CPLT_MASK0                                         , RULL(0x2C000101), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CPLT_MASK0                                         , RULL(0x2D000101), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CPLT_MASK0                                         , RULL(0x2E000101), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CPLT_MASK0                                         , RULL(0x2F000101), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CPLT_MASK0                                         , RULL(0x30000101), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CPLT_MASK0                                         , RULL(0x31000101), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CPLT_MASK0                                         , RULL(0x32000101), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CPLT_MASK0                                         , RULL(0x33000101), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CPLT_MASK0                                         , RULL(0x34000101), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CPLT_MASK0                                         , RULL(0x35000101), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CPLT_MASK0                                         , RULL(0x36000101), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CPLT_MASK0                                         , RULL(0x37000101), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CPLT_MASK0                                           , RULL(0x10000101), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CPLT_MASK0                                         , RULL(0x10000101), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CPLT_MASK0                                         , RULL(0x11000101), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CPLT_MASK0                                         , RULL(0x12000101), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CPLT_MASK0                                         , RULL(0x13000101), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CPLT_MASK0                                         , RULL(0x14000101), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CPLT_MASK0                                         , RULL(0x15000101), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CPLT_MASK0                                           , RULL(0x20000101), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21000101,
REG64( EX_0_CPLT_MASK0                                         , RULL(0x20000101), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21000101,
REG64( EX_1_CPLT_MASK0                                         , RULL(0x22000101), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23000101,
REG64( EX_2_CPLT_MASK0                                         , RULL(0x24000101), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25000101,
REG64( EX_3_CPLT_MASK0                                         , RULL(0x26000101), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27000101,
REG64( EX_4_CPLT_MASK0                                         , RULL(0x28000101), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29000101,
REG64( EX_5_CPLT_MASK0                                         , RULL(0x2A000101), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B000101,
REG64( EX_6_CPLT_MASK0                                         , RULL(0x2C000101), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D000101,
REG64( EX_7_CPLT_MASK0                                         , RULL(0x2E000101), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F000101,
REG64( EX_8_CPLT_MASK0                                         , RULL(0x30000101), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31000101,
REG64( EX_9_CPLT_MASK0                                         , RULL(0x32000101), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33000101,
REG64( EX_10_CPLT_MASK0                                        , RULL(0x34000101), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35000101,
REG64( EX_11_CPLT_MASK0                                        , RULL(0x36000101), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37000101,

REG64( PEC_0_CPLT_MASK0                                        , RULL(0x0D000101), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CPLT_MASK0                                        , RULL(0x0E000101), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CPLT_MASK0                                        , RULL(0x0F000101), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CPLT_STAT0                                            , RULL(0x20000100), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CPLT_STAT0                                          , RULL(0x20000100), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CPLT_STAT0                                          , RULL(0x21000100), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CPLT_STAT0                                          , RULL(0x22000100), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CPLT_STAT0                                          , RULL(0x23000100), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CPLT_STAT0                                          , RULL(0x24000100), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CPLT_STAT0                                          , RULL(0x25000100), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CPLT_STAT0                                          , RULL(0x26000100), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CPLT_STAT0                                          , RULL(0x27000100), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CPLT_STAT0                                          , RULL(0x28000100), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CPLT_STAT0                                          , RULL(0x29000100), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CPLT_STAT0                                         , RULL(0x2A000100), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CPLT_STAT0                                         , RULL(0x2B000100), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CPLT_STAT0                                         , RULL(0x2C000100), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CPLT_STAT0                                         , RULL(0x2D000100), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CPLT_STAT0                                         , RULL(0x2E000100), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CPLT_STAT0                                         , RULL(0x2F000100), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CPLT_STAT0                                         , RULL(0x30000100), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CPLT_STAT0                                         , RULL(0x31000100), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CPLT_STAT0                                         , RULL(0x32000100), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CPLT_STAT0                                         , RULL(0x33000100), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CPLT_STAT0                                         , RULL(0x34000100), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CPLT_STAT0                                         , RULL(0x35000100), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CPLT_STAT0                                         , RULL(0x36000100), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CPLT_STAT0                                         , RULL(0x37000100), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CPLT_STAT0                                           , RULL(0x10000100), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CPLT_STAT0                                         , RULL(0x10000100), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CPLT_STAT0                                         , RULL(0x11000100), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CPLT_STAT0                                         , RULL(0x12000100), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CPLT_STAT0                                         , RULL(0x13000100), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CPLT_STAT0                                         , RULL(0x14000100), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CPLT_STAT0                                         , RULL(0x15000100), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CPLT_STAT0                                           , RULL(0x20000100), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21000100,
REG64( EX_0_CPLT_STAT0                                         , RULL(0x20000100), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21000100,
REG64( EX_1_CPLT_STAT0                                         , RULL(0x22000100), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23000100,
REG64( EX_2_CPLT_STAT0                                         , RULL(0x24000100), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25000100,
REG64( EX_3_CPLT_STAT0                                         , RULL(0x26000100), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27000100,
REG64( EX_4_CPLT_STAT0                                         , RULL(0x28000100), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29000100,
REG64( EX_5_CPLT_STAT0                                         , RULL(0x2A000100), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B000100,
REG64( EX_6_CPLT_STAT0                                         , RULL(0x2C000100), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D000100,
REG64( EX_7_CPLT_STAT0                                         , RULL(0x2E000100), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F000100,
REG64( EX_8_CPLT_STAT0                                         , RULL(0x30000100), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31000100,
REG64( EX_9_CPLT_STAT0                                         , RULL(0x32000100), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33000100,
REG64( EX_10_CPLT_STAT0                                        , RULL(0x34000100), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35000100,
REG64( EX_11_CPLT_STAT0                                        , RULL(0x36000100), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37000100,

REG64( PEC_0_CPLT_STAT0                                        , RULL(0x0D000100), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CPLT_STAT0                                        , RULL(0x0E000100), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CPLT_STAT0                                        , RULL(0x0F000100), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CPPM_CACCR                                            , RULL(0x200F0168), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPPM_CACCR_CLEAR                                      , RULL(0x200F0169), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_CPPM_CACCR_OR                                         , RULL(0x200F016A), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CPPM_CACCR                                          , RULL(0x200F0168), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CACCR_CLEAR                                    , RULL(0x200F0169), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_CPPM_CACCR_OR                                       , RULL(0x200F016A), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CPPM_CACCR                                          , RULL(0x210F0168), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CACCR_CLEAR                                    , RULL(0x210F0169), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_CPPM_CACCR_OR                                       , RULL(0x210F016A), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CPPM_CACCR                                          , RULL(0x220F0168), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CACCR_CLEAR                                    , RULL(0x220F0169), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_CPPM_CACCR_OR                                       , RULL(0x220F016A), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CPPM_CACCR                                          , RULL(0x230F0168), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CACCR_CLEAR                                    , RULL(0x230F0169), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_CPPM_CACCR_OR                                       , RULL(0x230F016A), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CPPM_CACCR                                          , RULL(0x240F0168), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CACCR_CLEAR                                    , RULL(0x240F0169), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_CPPM_CACCR_OR                                       , RULL(0x240F016A), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CPPM_CACCR                                          , RULL(0x250F0168), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CACCR_CLEAR                                    , RULL(0x250F0169), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_CPPM_CACCR_OR                                       , RULL(0x250F016A), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CPPM_CACCR                                          , RULL(0x260F0168), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CACCR_CLEAR                                    , RULL(0x260F0169), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_CPPM_CACCR_OR                                       , RULL(0x260F016A), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CPPM_CACCR                                          , RULL(0x270F0168), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CACCR_CLEAR                                    , RULL(0x270F0169), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_CPPM_CACCR_OR                                       , RULL(0x270F016A), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CPPM_CACCR                                          , RULL(0x280F0168), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CACCR_CLEAR                                    , RULL(0x280F0169), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_CPPM_CACCR_OR                                       , RULL(0x280F016A), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CPPM_CACCR                                          , RULL(0x290F0168), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CACCR_CLEAR                                    , RULL(0x290F0169), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_CPPM_CACCR_OR                                       , RULL(0x290F016A), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CPPM_CACCR                                         , RULL(0x2A0F0168), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CACCR_CLEAR                                   , RULL(0x2A0F0169), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_CPPM_CACCR_OR                                      , RULL(0x2A0F016A), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CPPM_CACCR                                         , RULL(0x2B0F0168), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CACCR_CLEAR                                   , RULL(0x2B0F0169), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_CPPM_CACCR_OR                                      , RULL(0x2B0F016A), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CPPM_CACCR                                         , RULL(0x2C0F0168), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CACCR_CLEAR                                   , RULL(0x2C0F0169), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_CPPM_CACCR_OR                                      , RULL(0x2C0F016A), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CPPM_CACCR                                         , RULL(0x2D0F0168), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CACCR_CLEAR                                   , RULL(0x2D0F0169), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_CPPM_CACCR_OR                                      , RULL(0x2D0F016A), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CPPM_CACCR                                         , RULL(0x2E0F0168), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CACCR_CLEAR                                   , RULL(0x2E0F0169), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_CPPM_CACCR_OR                                      , RULL(0x2E0F016A), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CPPM_CACCR                                         , RULL(0x2F0F0168), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CACCR_CLEAR                                   , RULL(0x2F0F0169), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_CPPM_CACCR_OR                                      , RULL(0x2F0F016A), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CPPM_CACCR                                         , RULL(0x300F0168), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CACCR_CLEAR                                   , RULL(0x300F0169), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_CPPM_CACCR_OR                                      , RULL(0x300F016A), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CPPM_CACCR                                         , RULL(0x310F0168), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CACCR_CLEAR                                   , RULL(0x310F0169), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_CPPM_CACCR_OR                                      , RULL(0x310F016A), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CPPM_CACCR                                         , RULL(0x320F0168), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CACCR_CLEAR                                   , RULL(0x320F0169), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_CPPM_CACCR_OR                                      , RULL(0x320F016A), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CPPM_CACCR                                         , RULL(0x330F0168), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CACCR_CLEAR                                   , RULL(0x330F0169), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_CPPM_CACCR_OR                                      , RULL(0x330F016A), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CPPM_CACCR                                         , RULL(0x340F0168), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CACCR_CLEAR                                   , RULL(0x340F0169), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_CPPM_CACCR_OR                                      , RULL(0x340F016A), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CPPM_CACCR                                         , RULL(0x350F0168), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CACCR_CLEAR                                   , RULL(0x350F0169), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_CPPM_CACCR_OR                                      , RULL(0x350F016A), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CPPM_CACCR                                         , RULL(0x360F0168), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CACCR_CLEAR                                   , RULL(0x360F0169), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_CPPM_CACCR_OR                                      , RULL(0x360F016A), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CPPM_CACCR                                         , RULL(0x370F0168), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CACCR_CLEAR                                   , RULL(0x370F0169), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_CPPM_CACCR_OR                                      , RULL(0x370F016A), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_CPPM_CACCR                                           , RULL(0x200F0168), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0168,
REG64( EX_CPPM_CACCR_CLEAR                                     , RULL(0x200F0169), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0169,
REG64( EX_CPPM_CACCR_OR                                        , RULL(0x200F016A), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F016A,
REG64( EX_0_CPPM_CACCR                                         , RULL(0x200F0168), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0168,
REG64( EX_0_CPPM_CACCR_CLEAR                                   , RULL(0x200F0169), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0169,
REG64( EX_0_CPPM_CACCR_OR                                      , RULL(0x200F016A), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F016A,
REG64( EX_1_CPPM_CACCR                                         , RULL(0x230F0168), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0168,
REG64( EX_1_CPPM_CACCR_CLEAR                                   , RULL(0x230F0169), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F0169,
REG64( EX_1_CPPM_CACCR_OR                                      , RULL(0x230F016A), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F016A,
REG64( EX_2_CPPM_CACCR                                         , RULL(0x240F0168), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0168,
REG64( EX_2_CPPM_CACCR_CLEAR                                   , RULL(0x240F0169), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F0169,
REG64( EX_2_CPPM_CACCR_OR                                      , RULL(0x240F016A), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F016A,
REG64( EX_3_CPPM_CACCR                                         , RULL(0x260F0168), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0168,
REG64( EX_3_CPPM_CACCR_CLEAR                                   , RULL(0x260F0169), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F0169,
REG64( EX_3_CPPM_CACCR_OR                                      , RULL(0x260F016A), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F016A,
REG64( EX_4_CPPM_CACCR                                         , RULL(0x280F0168), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0168,
REG64( EX_4_CPPM_CACCR_CLEAR                                   , RULL(0x280F0169), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F0169,
REG64( EX_4_CPPM_CACCR_OR                                      , RULL(0x280F016A), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F016A,
REG64( EX_5_CPPM_CACCR                                         , RULL(0x2A0F0168), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0168,
REG64( EX_5_CPPM_CACCR_CLEAR                                   , RULL(0x2A0F0169), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F0169,
REG64( EX_5_CPPM_CACCR_OR                                      , RULL(0x2A0F016A), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F016A,
REG64( EX_6_CPPM_CACCR                                         , RULL(0x2C0F0168), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0168,
REG64( EX_6_CPPM_CACCR_CLEAR                                   , RULL(0x2C0F0169), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F0169,
REG64( EX_6_CPPM_CACCR_OR                                      , RULL(0x2C0F016A), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F016A,
REG64( EX_7_CPPM_CACCR                                         , RULL(0x2E0F0168), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0168,
REG64( EX_7_CPPM_CACCR_CLEAR                                   , RULL(0x2E0F0169), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F0169,
REG64( EX_7_CPPM_CACCR_OR                                      , RULL(0x2E0F016A), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F016A,
REG64( EX_8_CPPM_CACCR                                         , RULL(0x300F0168), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0168,
REG64( EX_8_CPPM_CACCR_CLEAR                                   , RULL(0x300F0169), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F0169,
REG64( EX_8_CPPM_CACCR_OR                                      , RULL(0x300F016A), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F016A,
REG64( EX_9_CPPM_CACCR                                         , RULL(0x320F0168), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0168,
REG64( EX_9_CPPM_CACCR_CLEAR                                   , RULL(0x320F0169), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F0169,
REG64( EX_9_CPPM_CACCR_OR                                      , RULL(0x320F016A), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F016A,
REG64( EX_10_CPPM_CACCR                                        , RULL(0x340F0168), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0168,
REG64( EX_10_CPPM_CACCR_CLEAR                                  , RULL(0x340F0169), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F0169,
REG64( EX_10_CPPM_CACCR_OR                                     , RULL(0x340F016A), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F016A,
REG64( EX_11_CPPM_CACCR                                        , RULL(0x360F0168), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0168,
REG64( EX_11_CPPM_CACCR_CLEAR                                  , RULL(0x360F0169), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F0169,
REG64( EX_11_CPPM_CACCR_OR                                     , RULL(0x360F016A), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F016A,

REG64( C_CPPM_CACSR                                            , RULL(0x200F016B), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_CPPM_CACSR                                          , RULL(0x200F016B), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_CPPM_CACSR                                          , RULL(0x210F016B), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_CPPM_CACSR                                          , RULL(0x220F016B), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_CPPM_CACSR                                          , RULL(0x230F016B), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_CPPM_CACSR                                          , RULL(0x240F016B), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_CPPM_CACSR                                          , RULL(0x250F016B), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_CPPM_CACSR                                          , RULL(0x260F016B), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_CPPM_CACSR                                          , RULL(0x270F016B), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_CPPM_CACSR                                          , RULL(0x280F016B), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_CPPM_CACSR                                          , RULL(0x290F016B), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_CPPM_CACSR                                         , RULL(0x2A0F016B), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_CPPM_CACSR                                         , RULL(0x2B0F016B), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_CPPM_CACSR                                         , RULL(0x2C0F016B), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_CPPM_CACSR                                         , RULL(0x2D0F016B), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_CPPM_CACSR                                         , RULL(0x2E0F016B), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_CPPM_CACSR                                         , RULL(0x2F0F016B), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_CPPM_CACSR                                         , RULL(0x300F016B), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_CPPM_CACSR                                         , RULL(0x310F016B), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_CPPM_CACSR                                         , RULL(0x320F016B), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_CPPM_CACSR                                         , RULL(0x330F016B), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_CPPM_CACSR                                         , RULL(0x340F016B), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_CPPM_CACSR                                         , RULL(0x350F016B), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_CPPM_CACSR                                         , RULL(0x360F016B), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_CPPM_CACSR                                         , RULL(0x370F016B), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_CPPM_CACSR                                           , RULL(0x200F016B), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F016B,
REG64( EX_0_CPPM_CACSR                                         , RULL(0x200F016B), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F016B,
REG64( EX_1_CPPM_CACSR                                         , RULL(0x230F016B), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F016B,
REG64( EX_2_CPPM_CACSR                                         , RULL(0x240F016B), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F016B,
REG64( EX_3_CPPM_CACSR                                         , RULL(0x260F016B), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F016B,
REG64( EX_4_CPPM_CACSR                                         , RULL(0x280F016B), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F016B,
REG64( EX_5_CPPM_CACSR                                         , RULL(0x2A0F016B), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F016B,
REG64( EX_6_CPPM_CACSR                                         , RULL(0x2C0F016B), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F016B,
REG64( EX_7_CPPM_CACSR                                         , RULL(0x2E0F016B), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F016B,
REG64( EX_8_CPPM_CACSR                                         , RULL(0x300F016B), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F016B,
REG64( EX_9_CPPM_CACSR                                         , RULL(0x320F016B), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F016B,
REG64( EX_10_CPPM_CACSR                                        , RULL(0x340F016B), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F016B,
REG64( EX_11_CPPM_CACSR                                        , RULL(0x360F016B), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F016B,

REG64( C_CPPM_CIIR                                             , RULL(0x200F01AD), SH_UNT_C        , SH_ACS_SCOM_4P   );
REG64( C_0_CPPM_CIIR                                           , RULL(0x200F01AD), SH_UNT_C_0      , SH_ACS_SCOM_4P   );
REG64( C_1_CPPM_CIIR                                           , RULL(0x210F01AD), SH_UNT_C_1      , SH_ACS_SCOM_4P   );
REG64( C_2_CPPM_CIIR                                           , RULL(0x220F01AD), SH_UNT_C_2      , SH_ACS_SCOM_4P   );
REG64( C_3_CPPM_CIIR                                           , RULL(0x230F01AD), SH_UNT_C_3      , SH_ACS_SCOM_4P   );
REG64( C_4_CPPM_CIIR                                           , RULL(0x240F01AD), SH_UNT_C_4      , SH_ACS_SCOM_4P   );
REG64( C_5_CPPM_CIIR                                           , RULL(0x250F01AD), SH_UNT_C_5      , SH_ACS_SCOM_4P   );
REG64( C_6_CPPM_CIIR                                           , RULL(0x260F01AD), SH_UNT_C_6      , SH_ACS_SCOM_4P   );
REG64( C_7_CPPM_CIIR                                           , RULL(0x270F01AD), SH_UNT_C_7      , SH_ACS_SCOM_4P   );
REG64( C_8_CPPM_CIIR                                           , RULL(0x280F01AD), SH_UNT_C_8      , SH_ACS_SCOM_4P   );
REG64( C_9_CPPM_CIIR                                           , RULL(0x290F01AD), SH_UNT_C_9      , SH_ACS_SCOM_4P   );
REG64( C_10_CPPM_CIIR                                          , RULL(0x2A0F01AD), SH_UNT_C_10     , SH_ACS_SCOM_4P   );
REG64( C_11_CPPM_CIIR                                          , RULL(0x2B0F01AD), SH_UNT_C_11     , SH_ACS_SCOM_4P   );
REG64( C_12_CPPM_CIIR                                          , RULL(0x2C0F01AD), SH_UNT_C_12     , SH_ACS_SCOM_4P   );
REG64( C_13_CPPM_CIIR                                          , RULL(0x2D0F01AD), SH_UNT_C_13     , SH_ACS_SCOM_4P   );
REG64( C_14_CPPM_CIIR                                          , RULL(0x2E0F01AD), SH_UNT_C_14     , SH_ACS_SCOM_4P   );
REG64( C_15_CPPM_CIIR                                          , RULL(0x2F0F01AD), SH_UNT_C_15     , SH_ACS_SCOM_4P   );
REG64( C_16_CPPM_CIIR                                          , RULL(0x300F01AD), SH_UNT_C_16     , SH_ACS_SCOM_4P   );
REG64( C_17_CPPM_CIIR                                          , RULL(0x310F01AD), SH_UNT_C_17     , SH_ACS_SCOM_4P   );
REG64( C_18_CPPM_CIIR                                          , RULL(0x320F01AD), SH_UNT_C_18     , SH_ACS_SCOM_4P   );
REG64( C_19_CPPM_CIIR                                          , RULL(0x330F01AD), SH_UNT_C_19     , SH_ACS_SCOM_4P   );
REG64( C_20_CPPM_CIIR                                          , RULL(0x340F01AD), SH_UNT_C_20     , SH_ACS_SCOM_4P   );
REG64( C_21_CPPM_CIIR                                          , RULL(0x350F01AD), SH_UNT_C_21     , SH_ACS_SCOM_4P   );
REG64( C_22_CPPM_CIIR                                          , RULL(0x360F01AD), SH_UNT_C_22     , SH_ACS_SCOM_4P   );
REG64( C_23_CPPM_CIIR                                          , RULL(0x370F01AD), SH_UNT_C_23     , SH_ACS_SCOM_4P   );
REG64( EX_CPPM_CIIR                                            , RULL(0x200F01AD), SH_UNT_EX       ,
       SH_ACS_SCOM_4P   ); //DUPS: 210F01AD,
REG64( EX_0_CPPM_CIIR                                          , RULL(0x200F01AD), SH_UNT_EX_0     ,
       SH_ACS_SCOM_4P   ); //DUPS: 210F01AD,
REG64( EX_1_CPPM_CIIR                                          , RULL(0x230F01AD), SH_UNT_EX_1     ,
       SH_ACS_SCOM_4P   ); //DUPS: 220F01AD,
REG64( EX_2_CPPM_CIIR                                          , RULL(0x240F01AD), SH_UNT_EX_2     ,
       SH_ACS_SCOM_4P   ); //DUPS: 250F01AD,
REG64( EX_3_CPPM_CIIR                                          , RULL(0x260F01AD), SH_UNT_EX_3     ,
       SH_ACS_SCOM_4P   ); //DUPS: 270F01AD,
REG64( EX_4_CPPM_CIIR                                          , RULL(0x280F01AD), SH_UNT_EX_4     ,
       SH_ACS_SCOM_4P   ); //DUPS: 290F01AD,
REG64( EX_5_CPPM_CIIR                                          , RULL(0x2A0F01AD), SH_UNT_EX_5     ,
       SH_ACS_SCOM_4P   ); //DUPS: 2B0F01AD,
REG64( EX_6_CPPM_CIIR                                          , RULL(0x2C0F01AD), SH_UNT_EX_6     ,
       SH_ACS_SCOM_4P   ); //DUPS: 2D0F01AD,
REG64( EX_7_CPPM_CIIR                                          , RULL(0x2E0F01AD), SH_UNT_EX_7     ,
       SH_ACS_SCOM_4P   ); //DUPS: 2F0F01AD,
REG64( EX_8_CPPM_CIIR                                          , RULL(0x300F01AD), SH_UNT_EX_8     ,
       SH_ACS_SCOM_4P   ); //DUPS: 310F01AD,
REG64( EX_9_CPPM_CIIR                                          , RULL(0x320F01AD), SH_UNT_EX_9     ,
       SH_ACS_SCOM_4P   ); //DUPS: 330F01AD,
REG64( EX_10_CPPM_CIIR                                         , RULL(0x340F01AD), SH_UNT_EX_10    ,
       SH_ACS_SCOM_4P   ); //DUPS: 350F01AD,
REG64( EX_11_CPPM_CIIR                                         , RULL(0x360F01AD), SH_UNT_EX_11    ,
       SH_ACS_SCOM_4P   ); //DUPS: 370F01AD,

REG64( C_CPPM_CISR                                             , RULL(0x200F01AE), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_CPPM_CISR                                           , RULL(0x200F01AE), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_CPPM_CISR                                           , RULL(0x210F01AE), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_CPPM_CISR                                           , RULL(0x220F01AE), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_CPPM_CISR                                           , RULL(0x230F01AE), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_CPPM_CISR                                           , RULL(0x240F01AE), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_CPPM_CISR                                           , RULL(0x250F01AE), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_CPPM_CISR                                           , RULL(0x260F01AE), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_CPPM_CISR                                           , RULL(0x270F01AE), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_CPPM_CISR                                           , RULL(0x280F01AE), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_CPPM_CISR                                           , RULL(0x290F01AE), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_CPPM_CISR                                          , RULL(0x2A0F01AE), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_CPPM_CISR                                          , RULL(0x2B0F01AE), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_CPPM_CISR                                          , RULL(0x2C0F01AE), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_CPPM_CISR                                          , RULL(0x2D0F01AE), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_CPPM_CISR                                          , RULL(0x2E0F01AE), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_CPPM_CISR                                          , RULL(0x2F0F01AE), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_CPPM_CISR                                          , RULL(0x300F01AE), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_CPPM_CISR                                          , RULL(0x310F01AE), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_CPPM_CISR                                          , RULL(0x320F01AE), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_CPPM_CISR                                          , RULL(0x330F01AE), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_CPPM_CISR                                          , RULL(0x340F01AE), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_CPPM_CISR                                          , RULL(0x350F01AE), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_CPPM_CISR                                          , RULL(0x360F01AE), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_CPPM_CISR                                          , RULL(0x370F01AE), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_CPPM_CISR                                            , RULL(0x200F01AE), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F01AE,
REG64( EX_0_CPPM_CISR                                          , RULL(0x200F01AE), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F01AE,
REG64( EX_1_CPPM_CISR                                          , RULL(0x230F01AE), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F01AE,
REG64( EX_2_CPPM_CISR                                          , RULL(0x240F01AE), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F01AE,
REG64( EX_3_CPPM_CISR                                          , RULL(0x260F01AE), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F01AE,
REG64( EX_4_CPPM_CISR                                          , RULL(0x280F01AE), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F01AE,
REG64( EX_5_CPPM_CISR                                          , RULL(0x2A0F01AE), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F01AE,
REG64( EX_6_CPPM_CISR                                          , RULL(0x2C0F01AE), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F01AE,
REG64( EX_7_CPPM_CISR                                          , RULL(0x2E0F01AE), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F01AE,
REG64( EX_8_CPPM_CISR                                          , RULL(0x300F01AE), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F01AE,
REG64( EX_9_CPPM_CISR                                          , RULL(0x320F01AE), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F01AE,
REG64( EX_10_CPPM_CISR                                         , RULL(0x340F01AE), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F01AE,
REG64( EX_11_CPPM_CISR                                         , RULL(0x360F01AE), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F01AE,

REG64( C_CPPM_CIVRMLCR                                         , RULL(0x200F01B7), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CIVRMLCR                                       , RULL(0x200F01B7), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CIVRMLCR                                       , RULL(0x210F01B7), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CIVRMLCR                                       , RULL(0x220F01B7), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CIVRMLCR                                       , RULL(0x230F01B7), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CIVRMLCR                                       , RULL(0x240F01B7), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CIVRMLCR                                       , RULL(0x250F01B7), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CIVRMLCR                                       , RULL(0x260F01B7), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CIVRMLCR                                       , RULL(0x270F01B7), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CIVRMLCR                                       , RULL(0x280F01B7), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CIVRMLCR                                       , RULL(0x290F01B7), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CIVRMLCR                                      , RULL(0x2A0F01B7), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CIVRMLCR                                      , RULL(0x2B0F01B7), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CIVRMLCR                                      , RULL(0x2C0F01B7), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CIVRMLCR                                      , RULL(0x2D0F01B7), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CIVRMLCR                                      , RULL(0x2E0F01B7), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CIVRMLCR                                      , RULL(0x2F0F01B7), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CIVRMLCR                                      , RULL(0x300F01B7), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CIVRMLCR                                      , RULL(0x310F01B7), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CIVRMLCR                                      , RULL(0x320F01B7), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CIVRMLCR                                      , RULL(0x330F01B7), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CIVRMLCR                                      , RULL(0x340F01B7), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CIVRMLCR                                      , RULL(0x350F01B7), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CIVRMLCR                                      , RULL(0x360F01B7), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CIVRMLCR                                      , RULL(0x370F01B7), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_CPPM_CIVRMLCR                                        , RULL(0x200F01B7), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01B7,
REG64( EX_0_CPPM_CIVRMLCR                                      , RULL(0x200F01B7), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01B7,
REG64( EX_1_CPPM_CIVRMLCR                                      , RULL(0x230F01B7), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01B7,
REG64( EX_2_CPPM_CIVRMLCR                                      , RULL(0x240F01B7), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01B7,
REG64( EX_3_CPPM_CIVRMLCR                                      , RULL(0x260F01B7), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01B7,
REG64( EX_4_CPPM_CIVRMLCR                                      , RULL(0x280F01B7), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01B7,
REG64( EX_5_CPPM_CIVRMLCR                                      , RULL(0x2A0F01B7), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01B7,
REG64( EX_6_CPPM_CIVRMLCR                                      , RULL(0x2C0F01B7), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01B7,
REG64( EX_7_CPPM_CIVRMLCR                                      , RULL(0x2E0F01B7), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01B7,
REG64( EX_8_CPPM_CIVRMLCR                                      , RULL(0x300F01B7), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01B7,
REG64( EX_9_CPPM_CIVRMLCR                                      , RULL(0x320F01B7), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01B7,
REG64( EX_10_CPPM_CIVRMLCR                                     , RULL(0x340F01B7), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01B7,
REG64( EX_11_CPPM_CIVRMLCR                                     , RULL(0x360F01B7), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01B7,

REG64( C_CPPM_CMEDATA                                          , RULL(0x200F01A8), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPPM_CMEDATA_CLEAR                                    , RULL(0x200F01A9), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_CPPM_CMEDATA_OR                                       , RULL(0x200F01AA), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CPPM_CMEDATA                                        , RULL(0x200F01A8), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CMEDATA_CLEAR                                  , RULL(0x200F01A9), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_CPPM_CMEDATA_OR                                     , RULL(0x200F01AA), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CPPM_CMEDATA                                        , RULL(0x210F01A8), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CMEDATA_CLEAR                                  , RULL(0x210F01A9), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_CPPM_CMEDATA_OR                                     , RULL(0x210F01AA), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CPPM_CMEDATA                                        , RULL(0x220F01A8), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CMEDATA_CLEAR                                  , RULL(0x220F01A9), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_CPPM_CMEDATA_OR                                     , RULL(0x220F01AA), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CPPM_CMEDATA                                        , RULL(0x230F01A8), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CMEDATA_CLEAR                                  , RULL(0x230F01A9), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_CPPM_CMEDATA_OR                                     , RULL(0x230F01AA), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CPPM_CMEDATA                                        , RULL(0x240F01A8), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CMEDATA_CLEAR                                  , RULL(0x240F01A9), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_CPPM_CMEDATA_OR                                     , RULL(0x240F01AA), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CPPM_CMEDATA                                        , RULL(0x250F01A8), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CMEDATA_CLEAR                                  , RULL(0x250F01A9), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_CPPM_CMEDATA_OR                                     , RULL(0x250F01AA), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CPPM_CMEDATA                                        , RULL(0x260F01A8), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CMEDATA_CLEAR                                  , RULL(0x260F01A9), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_CPPM_CMEDATA_OR                                     , RULL(0x260F01AA), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CPPM_CMEDATA                                        , RULL(0x270F01A8), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CMEDATA_CLEAR                                  , RULL(0x270F01A9), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_CPPM_CMEDATA_OR                                     , RULL(0x270F01AA), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CPPM_CMEDATA                                        , RULL(0x280F01A8), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CMEDATA_CLEAR                                  , RULL(0x280F01A9), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_CPPM_CMEDATA_OR                                     , RULL(0x280F01AA), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CPPM_CMEDATA                                        , RULL(0x290F01A8), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CMEDATA_CLEAR                                  , RULL(0x290F01A9), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_CPPM_CMEDATA_OR                                     , RULL(0x290F01AA), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CPPM_CMEDATA                                       , RULL(0x2A0F01A8), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CMEDATA_CLEAR                                 , RULL(0x2A0F01A9), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_CPPM_CMEDATA_OR                                    , RULL(0x2A0F01AA), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CPPM_CMEDATA                                       , RULL(0x2B0F01A8), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CMEDATA_CLEAR                                 , RULL(0x2B0F01A9), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_CPPM_CMEDATA_OR                                    , RULL(0x2B0F01AA), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CPPM_CMEDATA                                       , RULL(0x2C0F01A8), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CMEDATA_CLEAR                                 , RULL(0x2C0F01A9), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_CPPM_CMEDATA_OR                                    , RULL(0x2C0F01AA), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CPPM_CMEDATA                                       , RULL(0x2D0F01A8), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CMEDATA_CLEAR                                 , RULL(0x2D0F01A9), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_CPPM_CMEDATA_OR                                    , RULL(0x2D0F01AA), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CPPM_CMEDATA                                       , RULL(0x2E0F01A8), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CMEDATA_CLEAR                                 , RULL(0x2E0F01A9), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_CPPM_CMEDATA_OR                                    , RULL(0x2E0F01AA), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CPPM_CMEDATA                                       , RULL(0x2F0F01A8), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CMEDATA_CLEAR                                 , RULL(0x2F0F01A9), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_CPPM_CMEDATA_OR                                    , RULL(0x2F0F01AA), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CPPM_CMEDATA                                       , RULL(0x300F01A8), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CMEDATA_CLEAR                                 , RULL(0x300F01A9), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_CPPM_CMEDATA_OR                                    , RULL(0x300F01AA), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CPPM_CMEDATA                                       , RULL(0x310F01A8), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CMEDATA_CLEAR                                 , RULL(0x310F01A9), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_CPPM_CMEDATA_OR                                    , RULL(0x310F01AA), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CPPM_CMEDATA                                       , RULL(0x320F01A8), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CMEDATA_CLEAR                                 , RULL(0x320F01A9), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_CPPM_CMEDATA_OR                                    , RULL(0x320F01AA), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CPPM_CMEDATA                                       , RULL(0x330F01A8), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CMEDATA_CLEAR                                 , RULL(0x330F01A9), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_CPPM_CMEDATA_OR                                    , RULL(0x330F01AA), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CPPM_CMEDATA                                       , RULL(0x340F01A8), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CMEDATA_CLEAR                                 , RULL(0x340F01A9), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_CPPM_CMEDATA_OR                                    , RULL(0x340F01AA), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CPPM_CMEDATA                                       , RULL(0x350F01A8), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CMEDATA_CLEAR                                 , RULL(0x350F01A9), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_CPPM_CMEDATA_OR                                    , RULL(0x350F01AA), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CPPM_CMEDATA                                       , RULL(0x360F01A8), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CMEDATA_CLEAR                                 , RULL(0x360F01A9), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_CPPM_CMEDATA_OR                                    , RULL(0x360F01AA), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CPPM_CMEDATA                                       , RULL(0x370F01A8), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CMEDATA_CLEAR                                 , RULL(0x370F01A9), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_CPPM_CMEDATA_OR                                    , RULL(0x370F01AA), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_CPPM_CMEDATA                                         , RULL(0x200F01A8), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01A8,
REG64( EX_CPPM_CMEDATA_CLEAR                                   , RULL(0x200F01A9), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F01A9,
REG64( EX_CPPM_CMEDATA_OR                                      , RULL(0x200F01AA), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F01AA,
REG64( EX_0_CPPM_CMEDATA                                       , RULL(0x200F01A8), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01A8,
REG64( EX_0_CPPM_CMEDATA_CLEAR                                 , RULL(0x200F01A9), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F01A9,
REG64( EX_0_CPPM_CMEDATA_OR                                    , RULL(0x200F01AA), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F01AA,
REG64( EX_1_CPPM_CMEDATA                                       , RULL(0x230F01A8), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01A8,
REG64( EX_1_CPPM_CMEDATA_CLEAR                                 , RULL(0x230F01A9), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F01A9,
REG64( EX_1_CPPM_CMEDATA_OR                                    , RULL(0x230F01AA), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F01AA,
REG64( EX_2_CPPM_CMEDATA                                       , RULL(0x240F01A8), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01A8,
REG64( EX_2_CPPM_CMEDATA_CLEAR                                 , RULL(0x240F01A9), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F01A9,
REG64( EX_2_CPPM_CMEDATA_OR                                    , RULL(0x240F01AA), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F01AA,
REG64( EX_3_CPPM_CMEDATA                                       , RULL(0x260F01A8), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01A8,
REG64( EX_3_CPPM_CMEDATA_CLEAR                                 , RULL(0x260F01A9), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F01A9,
REG64( EX_3_CPPM_CMEDATA_OR                                    , RULL(0x260F01AA), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F01AA,
REG64( EX_4_CPPM_CMEDATA                                       , RULL(0x280F01A8), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01A8,
REG64( EX_4_CPPM_CMEDATA_CLEAR                                 , RULL(0x280F01A9), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F01A9,
REG64( EX_4_CPPM_CMEDATA_OR                                    , RULL(0x280F01AA), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F01AA,
REG64( EX_5_CPPM_CMEDATA                                       , RULL(0x2A0F01A8), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01A8,
REG64( EX_5_CPPM_CMEDATA_CLEAR                                 , RULL(0x2A0F01A9), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F01A9,
REG64( EX_5_CPPM_CMEDATA_OR                                    , RULL(0x2A0F01AA), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F01AA,
REG64( EX_6_CPPM_CMEDATA                                       , RULL(0x2C0F01A8), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01A8,
REG64( EX_6_CPPM_CMEDATA_CLEAR                                 , RULL(0x2C0F01A9), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F01A9,
REG64( EX_6_CPPM_CMEDATA_OR                                    , RULL(0x2C0F01AA), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F01AA,
REG64( EX_7_CPPM_CMEDATA                                       , RULL(0x2E0F01A8), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01A8,
REG64( EX_7_CPPM_CMEDATA_CLEAR                                 , RULL(0x2E0F01A9), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F01A9,
REG64( EX_7_CPPM_CMEDATA_OR                                    , RULL(0x2E0F01AA), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F01AA,
REG64( EX_8_CPPM_CMEDATA                                       , RULL(0x300F01A8), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01A8,
REG64( EX_8_CPPM_CMEDATA_CLEAR                                 , RULL(0x300F01A9), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F01A9,
REG64( EX_8_CPPM_CMEDATA_OR                                    , RULL(0x300F01AA), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F01AA,
REG64( EX_9_CPPM_CMEDATA                                       , RULL(0x320F01A8), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01A8,
REG64( EX_9_CPPM_CMEDATA_CLEAR                                 , RULL(0x320F01A9), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F01A9,
REG64( EX_9_CPPM_CMEDATA_OR                                    , RULL(0x320F01AA), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F01AA,
REG64( EX_10_CPPM_CMEDATA                                      , RULL(0x340F01A8), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01A8,
REG64( EX_10_CPPM_CMEDATA_CLEAR                                , RULL(0x340F01A9), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F01A9,
REG64( EX_10_CPPM_CMEDATA_OR                                   , RULL(0x340F01AA), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F01AA,
REG64( EX_11_CPPM_CMEDATA                                      , RULL(0x360F01A8), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01A8,
REG64( EX_11_CPPM_CMEDATA_CLEAR                                , RULL(0x360F01A9), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F01A9,
REG64( EX_11_CPPM_CMEDATA_OR                                   , RULL(0x360F01AA), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F01AA,

REG64( C_CPPM_CMEDB0                                           , RULL(0x200F0190), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPPM_CMEDB0_CLEAR                                     , RULL(0x200F0191), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_CPPM_CMEDB0_OR                                        , RULL(0x200F0192), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CPPM_CMEDB0                                         , RULL(0x200F0190), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CMEDB0_CLEAR                                   , RULL(0x200F0191), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_CPPM_CMEDB0_OR                                      , RULL(0x200F0192), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CPPM_CMEDB0                                         , RULL(0x210F0190), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CMEDB0_CLEAR                                   , RULL(0x210F0191), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_CPPM_CMEDB0_OR                                      , RULL(0x210F0192), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CPPM_CMEDB0                                         , RULL(0x220F0190), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CMEDB0_CLEAR                                   , RULL(0x220F0191), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_CPPM_CMEDB0_OR                                      , RULL(0x220F0192), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CPPM_CMEDB0                                         , RULL(0x230F0190), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CMEDB0_CLEAR                                   , RULL(0x230F0191), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_CPPM_CMEDB0_OR                                      , RULL(0x230F0192), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CPPM_CMEDB0                                         , RULL(0x240F0190), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CMEDB0_CLEAR                                   , RULL(0x240F0191), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_CPPM_CMEDB0_OR                                      , RULL(0x240F0192), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CPPM_CMEDB0                                         , RULL(0x250F0190), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CMEDB0_CLEAR                                   , RULL(0x250F0191), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_CPPM_CMEDB0_OR                                      , RULL(0x250F0192), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CPPM_CMEDB0                                         , RULL(0x260F0190), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CMEDB0_CLEAR                                   , RULL(0x260F0191), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_CPPM_CMEDB0_OR                                      , RULL(0x260F0192), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CPPM_CMEDB0                                         , RULL(0x270F0190), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CMEDB0_CLEAR                                   , RULL(0x270F0191), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_CPPM_CMEDB0_OR                                      , RULL(0x270F0192), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CPPM_CMEDB0                                         , RULL(0x280F0190), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CMEDB0_CLEAR                                   , RULL(0x280F0191), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_CPPM_CMEDB0_OR                                      , RULL(0x280F0192), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CPPM_CMEDB0                                         , RULL(0x290F0190), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CMEDB0_CLEAR                                   , RULL(0x290F0191), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_CPPM_CMEDB0_OR                                      , RULL(0x290F0192), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CPPM_CMEDB0                                        , RULL(0x2A0F0190), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CMEDB0_CLEAR                                  , RULL(0x2A0F0191), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_CPPM_CMEDB0_OR                                     , RULL(0x2A0F0192), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CPPM_CMEDB0                                        , RULL(0x2B0F0190), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CMEDB0_CLEAR                                  , RULL(0x2B0F0191), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_CPPM_CMEDB0_OR                                     , RULL(0x2B0F0192), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CPPM_CMEDB0                                        , RULL(0x2C0F0190), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CMEDB0_CLEAR                                  , RULL(0x2C0F0191), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_CPPM_CMEDB0_OR                                     , RULL(0x2C0F0192), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CPPM_CMEDB0                                        , RULL(0x2D0F0190), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CMEDB0_CLEAR                                  , RULL(0x2D0F0191), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_CPPM_CMEDB0_OR                                     , RULL(0x2D0F0192), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CPPM_CMEDB0                                        , RULL(0x2E0F0190), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CMEDB0_CLEAR                                  , RULL(0x2E0F0191), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_CPPM_CMEDB0_OR                                     , RULL(0x2E0F0192), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CPPM_CMEDB0                                        , RULL(0x2F0F0190), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CMEDB0_CLEAR                                  , RULL(0x2F0F0191), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_CPPM_CMEDB0_OR                                     , RULL(0x2F0F0192), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CPPM_CMEDB0                                        , RULL(0x300F0190), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CMEDB0_CLEAR                                  , RULL(0x300F0191), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_CPPM_CMEDB0_OR                                     , RULL(0x300F0192), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CPPM_CMEDB0                                        , RULL(0x310F0190), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CMEDB0_CLEAR                                  , RULL(0x310F0191), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_CPPM_CMEDB0_OR                                     , RULL(0x310F0192), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CPPM_CMEDB0                                        , RULL(0x320F0190), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CMEDB0_CLEAR                                  , RULL(0x320F0191), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_CPPM_CMEDB0_OR                                     , RULL(0x320F0192), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CPPM_CMEDB0                                        , RULL(0x330F0190), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CMEDB0_CLEAR                                  , RULL(0x330F0191), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_CPPM_CMEDB0_OR                                     , RULL(0x330F0192), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CPPM_CMEDB0                                        , RULL(0x340F0190), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CMEDB0_CLEAR                                  , RULL(0x340F0191), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_CPPM_CMEDB0_OR                                     , RULL(0x340F0192), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CPPM_CMEDB0                                        , RULL(0x350F0190), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CMEDB0_CLEAR                                  , RULL(0x350F0191), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_CPPM_CMEDB0_OR                                     , RULL(0x350F0192), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CPPM_CMEDB0                                        , RULL(0x360F0190), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CMEDB0_CLEAR                                  , RULL(0x360F0191), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_CPPM_CMEDB0_OR                                     , RULL(0x360F0192), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CPPM_CMEDB0                                        , RULL(0x370F0190), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CMEDB0_CLEAR                                  , RULL(0x370F0191), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_CPPM_CMEDB0_OR                                     , RULL(0x370F0192), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_CPPM_CMEDB0                                          , RULL(0x200F0190), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0190,
REG64( EX_CPPM_CMEDB0_CLEAR                                    , RULL(0x200F0191), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0191,
REG64( EX_CPPM_CMEDB0_OR                                       , RULL(0x200F0192), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F0192,
REG64( EX_0_CPPM_CMEDB0                                        , RULL(0x200F0190), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0190,
REG64( EX_0_CPPM_CMEDB0_CLEAR                                  , RULL(0x200F0191), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0191,
REG64( EX_0_CPPM_CMEDB0_OR                                     , RULL(0x200F0192), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F0192,
REG64( EX_1_CPPM_CMEDB0                                        , RULL(0x230F0190), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0190,
REG64( EX_1_CPPM_CMEDB0_CLEAR                                  , RULL(0x230F0191), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F0191,
REG64( EX_1_CPPM_CMEDB0_OR                                     , RULL(0x230F0192), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F0192,
REG64( EX_2_CPPM_CMEDB0                                        , RULL(0x240F0190), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0190,
REG64( EX_2_CPPM_CMEDB0_CLEAR                                  , RULL(0x240F0191), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F0191,
REG64( EX_2_CPPM_CMEDB0_OR                                     , RULL(0x240F0192), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F0192,
REG64( EX_3_CPPM_CMEDB0                                        , RULL(0x260F0190), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0190,
REG64( EX_3_CPPM_CMEDB0_CLEAR                                  , RULL(0x260F0191), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F0191,
REG64( EX_3_CPPM_CMEDB0_OR                                     , RULL(0x260F0192), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F0192,
REG64( EX_4_CPPM_CMEDB0                                        , RULL(0x280F0190), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0190,
REG64( EX_4_CPPM_CMEDB0_CLEAR                                  , RULL(0x280F0191), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F0191,
REG64( EX_4_CPPM_CMEDB0_OR                                     , RULL(0x280F0192), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F0192,
REG64( EX_5_CPPM_CMEDB0                                        , RULL(0x2A0F0190), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0190,
REG64( EX_5_CPPM_CMEDB0_CLEAR                                  , RULL(0x2A0F0191), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F0191,
REG64( EX_5_CPPM_CMEDB0_OR                                     , RULL(0x2A0F0192), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F0192,
REG64( EX_6_CPPM_CMEDB0                                        , RULL(0x2C0F0190), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0190,
REG64( EX_6_CPPM_CMEDB0_CLEAR                                  , RULL(0x2C0F0191), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F0191,
REG64( EX_6_CPPM_CMEDB0_OR                                     , RULL(0x2C0F0192), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F0192,
REG64( EX_7_CPPM_CMEDB0                                        , RULL(0x2E0F0190), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0190,
REG64( EX_7_CPPM_CMEDB0_CLEAR                                  , RULL(0x2E0F0191), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F0191,
REG64( EX_7_CPPM_CMEDB0_OR                                     , RULL(0x2E0F0192), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F0192,
REG64( EX_8_CPPM_CMEDB0                                        , RULL(0x300F0190), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0190,
REG64( EX_8_CPPM_CMEDB0_CLEAR                                  , RULL(0x300F0191), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F0191,
REG64( EX_8_CPPM_CMEDB0_OR                                     , RULL(0x300F0192), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F0192,
REG64( EX_9_CPPM_CMEDB0                                        , RULL(0x320F0190), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0190,
REG64( EX_9_CPPM_CMEDB0_CLEAR                                  , RULL(0x320F0191), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F0191,
REG64( EX_9_CPPM_CMEDB0_OR                                     , RULL(0x320F0192), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F0192,
REG64( EX_10_CPPM_CMEDB0                                       , RULL(0x340F0190), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0190,
REG64( EX_10_CPPM_CMEDB0_CLEAR                                 , RULL(0x340F0191), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F0191,
REG64( EX_10_CPPM_CMEDB0_OR                                    , RULL(0x340F0192), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F0192,
REG64( EX_11_CPPM_CMEDB0                                       , RULL(0x360F0190), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0190,
REG64( EX_11_CPPM_CMEDB0_CLEAR                                 , RULL(0x360F0191), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F0191,
REG64( EX_11_CPPM_CMEDB0_OR                                    , RULL(0x360F0192), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F0192,

REG64( C_CPPM_CMEDB1                                           , RULL(0x200F0194), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPPM_CMEDB1_CLEAR                                     , RULL(0x200F0195), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_CPPM_CMEDB1_OR                                        , RULL(0x200F0196), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CPPM_CMEDB1                                         , RULL(0x200F0194), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CMEDB1_CLEAR                                   , RULL(0x200F0195), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_CPPM_CMEDB1_OR                                      , RULL(0x200F0196), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CPPM_CMEDB1                                         , RULL(0x210F0194), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CMEDB1_CLEAR                                   , RULL(0x210F0195), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_CPPM_CMEDB1_OR                                      , RULL(0x210F0196), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CPPM_CMEDB1                                         , RULL(0x220F0194), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CMEDB1_CLEAR                                   , RULL(0x220F0195), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_CPPM_CMEDB1_OR                                      , RULL(0x220F0196), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CPPM_CMEDB1                                         , RULL(0x230F0194), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CMEDB1_CLEAR                                   , RULL(0x230F0195), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_CPPM_CMEDB1_OR                                      , RULL(0x230F0196), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CPPM_CMEDB1                                         , RULL(0x240F0194), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CMEDB1_CLEAR                                   , RULL(0x240F0195), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_CPPM_CMEDB1_OR                                      , RULL(0x240F0196), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CPPM_CMEDB1                                         , RULL(0x250F0194), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CMEDB1_CLEAR                                   , RULL(0x250F0195), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_CPPM_CMEDB1_OR                                      , RULL(0x250F0196), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CPPM_CMEDB1                                         , RULL(0x260F0194), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CMEDB1_CLEAR                                   , RULL(0x260F0195), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_CPPM_CMEDB1_OR                                      , RULL(0x260F0196), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CPPM_CMEDB1                                         , RULL(0x270F0194), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CMEDB1_CLEAR                                   , RULL(0x270F0195), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_CPPM_CMEDB1_OR                                      , RULL(0x270F0196), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CPPM_CMEDB1                                         , RULL(0x280F0194), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CMEDB1_CLEAR                                   , RULL(0x280F0195), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_CPPM_CMEDB1_OR                                      , RULL(0x280F0196), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CPPM_CMEDB1                                         , RULL(0x290F0194), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CMEDB1_CLEAR                                   , RULL(0x290F0195), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_CPPM_CMEDB1_OR                                      , RULL(0x290F0196), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CPPM_CMEDB1                                        , RULL(0x2A0F0194), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CMEDB1_CLEAR                                  , RULL(0x2A0F0195), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_CPPM_CMEDB1_OR                                     , RULL(0x2A0F0196), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CPPM_CMEDB1                                        , RULL(0x2B0F0194), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CMEDB1_CLEAR                                  , RULL(0x2B0F0195), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_CPPM_CMEDB1_OR                                     , RULL(0x2B0F0196), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CPPM_CMEDB1                                        , RULL(0x2C0F0194), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CMEDB1_CLEAR                                  , RULL(0x2C0F0195), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_CPPM_CMEDB1_OR                                     , RULL(0x2C0F0196), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CPPM_CMEDB1                                        , RULL(0x2D0F0194), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CMEDB1_CLEAR                                  , RULL(0x2D0F0195), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_CPPM_CMEDB1_OR                                     , RULL(0x2D0F0196), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CPPM_CMEDB1                                        , RULL(0x2E0F0194), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CMEDB1_CLEAR                                  , RULL(0x2E0F0195), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_CPPM_CMEDB1_OR                                     , RULL(0x2E0F0196), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CPPM_CMEDB1                                        , RULL(0x2F0F0194), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CMEDB1_CLEAR                                  , RULL(0x2F0F0195), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_CPPM_CMEDB1_OR                                     , RULL(0x2F0F0196), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CPPM_CMEDB1                                        , RULL(0x300F0194), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CMEDB1_CLEAR                                  , RULL(0x300F0195), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_CPPM_CMEDB1_OR                                     , RULL(0x300F0196), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CPPM_CMEDB1                                        , RULL(0x310F0194), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CMEDB1_CLEAR                                  , RULL(0x310F0195), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_CPPM_CMEDB1_OR                                     , RULL(0x310F0196), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CPPM_CMEDB1                                        , RULL(0x320F0194), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CMEDB1_CLEAR                                  , RULL(0x320F0195), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_CPPM_CMEDB1_OR                                     , RULL(0x320F0196), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CPPM_CMEDB1                                        , RULL(0x330F0194), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CMEDB1_CLEAR                                  , RULL(0x330F0195), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_CPPM_CMEDB1_OR                                     , RULL(0x330F0196), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CPPM_CMEDB1                                        , RULL(0x340F0194), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CMEDB1_CLEAR                                  , RULL(0x340F0195), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_CPPM_CMEDB1_OR                                     , RULL(0x340F0196), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CPPM_CMEDB1                                        , RULL(0x350F0194), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CMEDB1_CLEAR                                  , RULL(0x350F0195), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_CPPM_CMEDB1_OR                                     , RULL(0x350F0196), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CPPM_CMEDB1                                        , RULL(0x360F0194), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CMEDB1_CLEAR                                  , RULL(0x360F0195), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_CPPM_CMEDB1_OR                                     , RULL(0x360F0196), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CPPM_CMEDB1                                        , RULL(0x370F0194), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CMEDB1_CLEAR                                  , RULL(0x370F0195), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_CPPM_CMEDB1_OR                                     , RULL(0x370F0196), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_CPPM_CMEDB1                                          , RULL(0x200F0194), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0194,
REG64( EX_CPPM_CMEDB1_CLEAR                                    , RULL(0x200F0195), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0195,
REG64( EX_CPPM_CMEDB1_OR                                       , RULL(0x200F0196), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F0196,
REG64( EX_0_CPPM_CMEDB1                                        , RULL(0x200F0194), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0194,
REG64( EX_0_CPPM_CMEDB1_CLEAR                                  , RULL(0x200F0195), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0195,
REG64( EX_0_CPPM_CMEDB1_OR                                     , RULL(0x200F0196), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F0196,
REG64( EX_1_CPPM_CMEDB1                                        , RULL(0x230F0194), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0194,
REG64( EX_1_CPPM_CMEDB1_CLEAR                                  , RULL(0x230F0195), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F0195,
REG64( EX_1_CPPM_CMEDB1_OR                                     , RULL(0x230F0196), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F0196,
REG64( EX_2_CPPM_CMEDB1                                        , RULL(0x240F0194), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0194,
REG64( EX_2_CPPM_CMEDB1_CLEAR                                  , RULL(0x240F0195), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F0195,
REG64( EX_2_CPPM_CMEDB1_OR                                     , RULL(0x240F0196), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F0196,
REG64( EX_3_CPPM_CMEDB1                                        , RULL(0x260F0194), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0194,
REG64( EX_3_CPPM_CMEDB1_CLEAR                                  , RULL(0x260F0195), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F0195,
REG64( EX_3_CPPM_CMEDB1_OR                                     , RULL(0x260F0196), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F0196,
REG64( EX_4_CPPM_CMEDB1                                        , RULL(0x280F0194), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0194,
REG64( EX_4_CPPM_CMEDB1_CLEAR                                  , RULL(0x280F0195), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F0195,
REG64( EX_4_CPPM_CMEDB1_OR                                     , RULL(0x280F0196), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F0196,
REG64( EX_5_CPPM_CMEDB1                                        , RULL(0x2A0F0194), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0194,
REG64( EX_5_CPPM_CMEDB1_CLEAR                                  , RULL(0x2A0F0195), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F0195,
REG64( EX_5_CPPM_CMEDB1_OR                                     , RULL(0x2A0F0196), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F0196,
REG64( EX_6_CPPM_CMEDB1                                        , RULL(0x2C0F0194), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0194,
REG64( EX_6_CPPM_CMEDB1_CLEAR                                  , RULL(0x2C0F0195), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F0195,
REG64( EX_6_CPPM_CMEDB1_OR                                     , RULL(0x2C0F0196), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F0196,
REG64( EX_7_CPPM_CMEDB1                                        , RULL(0x2E0F0194), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0194,
REG64( EX_7_CPPM_CMEDB1_CLEAR                                  , RULL(0x2E0F0195), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F0195,
REG64( EX_7_CPPM_CMEDB1_OR                                     , RULL(0x2E0F0196), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F0196,
REG64( EX_8_CPPM_CMEDB1                                        , RULL(0x300F0194), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0194,
REG64( EX_8_CPPM_CMEDB1_CLEAR                                  , RULL(0x300F0195), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F0195,
REG64( EX_8_CPPM_CMEDB1_OR                                     , RULL(0x300F0196), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F0196,
REG64( EX_9_CPPM_CMEDB1                                        , RULL(0x320F0194), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0194,
REG64( EX_9_CPPM_CMEDB1_CLEAR                                  , RULL(0x320F0195), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F0195,
REG64( EX_9_CPPM_CMEDB1_OR                                     , RULL(0x320F0196), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F0196,
REG64( EX_10_CPPM_CMEDB1                                       , RULL(0x340F0194), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0194,
REG64( EX_10_CPPM_CMEDB1_CLEAR                                 , RULL(0x340F0195), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F0195,
REG64( EX_10_CPPM_CMEDB1_OR                                    , RULL(0x340F0196), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F0196,
REG64( EX_11_CPPM_CMEDB1                                       , RULL(0x360F0194), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0194,
REG64( EX_11_CPPM_CMEDB1_CLEAR                                 , RULL(0x360F0195), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F0195,
REG64( EX_11_CPPM_CMEDB1_OR                                    , RULL(0x360F0196), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F0196,

REG64( C_CPPM_CMEDB2                                           , RULL(0x200F0198), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPPM_CMEDB2_CLEAR                                     , RULL(0x200F0199), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_CPPM_CMEDB2_OR                                        , RULL(0x200F019A), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CPPM_CMEDB2                                         , RULL(0x200F0198), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CMEDB2_CLEAR                                   , RULL(0x200F0199), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_CPPM_CMEDB2_OR                                      , RULL(0x200F019A), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CPPM_CMEDB2                                         , RULL(0x210F0198), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CMEDB2_CLEAR                                   , RULL(0x210F0199), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_CPPM_CMEDB2_OR                                      , RULL(0x210F019A), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CPPM_CMEDB2                                         , RULL(0x220F0198), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CMEDB2_CLEAR                                   , RULL(0x220F0199), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_CPPM_CMEDB2_OR                                      , RULL(0x220F019A), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CPPM_CMEDB2                                         , RULL(0x230F0198), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CMEDB2_CLEAR                                   , RULL(0x230F0199), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_CPPM_CMEDB2_OR                                      , RULL(0x230F019A), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CPPM_CMEDB2                                         , RULL(0x240F0198), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CMEDB2_CLEAR                                   , RULL(0x240F0199), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_CPPM_CMEDB2_OR                                      , RULL(0x240F019A), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CPPM_CMEDB2                                         , RULL(0x250F0198), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CMEDB2_CLEAR                                   , RULL(0x250F0199), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_CPPM_CMEDB2_OR                                      , RULL(0x250F019A), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CPPM_CMEDB2                                         , RULL(0x260F0198), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CMEDB2_CLEAR                                   , RULL(0x260F0199), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_CPPM_CMEDB2_OR                                      , RULL(0x260F019A), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CPPM_CMEDB2                                         , RULL(0x270F0198), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CMEDB2_CLEAR                                   , RULL(0x270F0199), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_CPPM_CMEDB2_OR                                      , RULL(0x270F019A), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CPPM_CMEDB2                                         , RULL(0x280F0198), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CMEDB2_CLEAR                                   , RULL(0x280F0199), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_CPPM_CMEDB2_OR                                      , RULL(0x280F019A), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CPPM_CMEDB2                                         , RULL(0x290F0198), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CMEDB2_CLEAR                                   , RULL(0x290F0199), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_CPPM_CMEDB2_OR                                      , RULL(0x290F019A), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CPPM_CMEDB2                                        , RULL(0x2A0F0198), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CMEDB2_CLEAR                                  , RULL(0x2A0F0199), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_CPPM_CMEDB2_OR                                     , RULL(0x2A0F019A), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CPPM_CMEDB2                                        , RULL(0x2B0F0198), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CMEDB2_CLEAR                                  , RULL(0x2B0F0199), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_CPPM_CMEDB2_OR                                     , RULL(0x2B0F019A), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CPPM_CMEDB2                                        , RULL(0x2C0F0198), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CMEDB2_CLEAR                                  , RULL(0x2C0F0199), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_CPPM_CMEDB2_OR                                     , RULL(0x2C0F019A), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CPPM_CMEDB2                                        , RULL(0x2D0F0198), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CMEDB2_CLEAR                                  , RULL(0x2D0F0199), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_CPPM_CMEDB2_OR                                     , RULL(0x2D0F019A), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CPPM_CMEDB2                                        , RULL(0x2E0F0198), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CMEDB2_CLEAR                                  , RULL(0x2E0F0199), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_CPPM_CMEDB2_OR                                     , RULL(0x2E0F019A), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CPPM_CMEDB2                                        , RULL(0x2F0F0198), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CMEDB2_CLEAR                                  , RULL(0x2F0F0199), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_CPPM_CMEDB2_OR                                     , RULL(0x2F0F019A), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CPPM_CMEDB2                                        , RULL(0x300F0198), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CMEDB2_CLEAR                                  , RULL(0x300F0199), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_CPPM_CMEDB2_OR                                     , RULL(0x300F019A), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CPPM_CMEDB2                                        , RULL(0x310F0198), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CMEDB2_CLEAR                                  , RULL(0x310F0199), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_CPPM_CMEDB2_OR                                     , RULL(0x310F019A), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CPPM_CMEDB2                                        , RULL(0x320F0198), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CMEDB2_CLEAR                                  , RULL(0x320F0199), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_CPPM_CMEDB2_OR                                     , RULL(0x320F019A), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CPPM_CMEDB2                                        , RULL(0x330F0198), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CMEDB2_CLEAR                                  , RULL(0x330F0199), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_CPPM_CMEDB2_OR                                     , RULL(0x330F019A), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CPPM_CMEDB2                                        , RULL(0x340F0198), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CMEDB2_CLEAR                                  , RULL(0x340F0199), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_CPPM_CMEDB2_OR                                     , RULL(0x340F019A), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CPPM_CMEDB2                                        , RULL(0x350F0198), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CMEDB2_CLEAR                                  , RULL(0x350F0199), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_CPPM_CMEDB2_OR                                     , RULL(0x350F019A), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CPPM_CMEDB2                                        , RULL(0x360F0198), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CMEDB2_CLEAR                                  , RULL(0x360F0199), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_CPPM_CMEDB2_OR                                     , RULL(0x360F019A), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CPPM_CMEDB2                                        , RULL(0x370F0198), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CMEDB2_CLEAR                                  , RULL(0x370F0199), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_CPPM_CMEDB2_OR                                     , RULL(0x370F019A), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_CPPM_CMEDB2                                          , RULL(0x200F0198), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0198,
REG64( EX_CPPM_CMEDB2_CLEAR                                    , RULL(0x200F0199), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0199,
REG64( EX_CPPM_CMEDB2_OR                                       , RULL(0x200F019A), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F019A,
REG64( EX_0_CPPM_CMEDB2                                        , RULL(0x200F0198), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0198,
REG64( EX_0_CPPM_CMEDB2_CLEAR                                  , RULL(0x200F0199), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0199,
REG64( EX_0_CPPM_CMEDB2_OR                                     , RULL(0x200F019A), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F019A,
REG64( EX_1_CPPM_CMEDB2                                        , RULL(0x230F0198), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0198,
REG64( EX_1_CPPM_CMEDB2_CLEAR                                  , RULL(0x230F0199), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F0199,
REG64( EX_1_CPPM_CMEDB2_OR                                     , RULL(0x230F019A), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F019A,
REG64( EX_2_CPPM_CMEDB2                                        , RULL(0x240F0198), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0198,
REG64( EX_2_CPPM_CMEDB2_CLEAR                                  , RULL(0x240F0199), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F0199,
REG64( EX_2_CPPM_CMEDB2_OR                                     , RULL(0x240F019A), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F019A,
REG64( EX_3_CPPM_CMEDB2                                        , RULL(0x260F0198), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0198,
REG64( EX_3_CPPM_CMEDB2_CLEAR                                  , RULL(0x260F0199), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F0199,
REG64( EX_3_CPPM_CMEDB2_OR                                     , RULL(0x260F019A), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F019A,
REG64( EX_4_CPPM_CMEDB2                                        , RULL(0x280F0198), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0198,
REG64( EX_4_CPPM_CMEDB2_CLEAR                                  , RULL(0x280F0199), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F0199,
REG64( EX_4_CPPM_CMEDB2_OR                                     , RULL(0x280F019A), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F019A,
REG64( EX_5_CPPM_CMEDB2                                        , RULL(0x2A0F0198), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0198,
REG64( EX_5_CPPM_CMEDB2_CLEAR                                  , RULL(0x2A0F0199), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F0199,
REG64( EX_5_CPPM_CMEDB2_OR                                     , RULL(0x2A0F019A), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F019A,
REG64( EX_6_CPPM_CMEDB2                                        , RULL(0x2C0F0198), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0198,
REG64( EX_6_CPPM_CMEDB2_CLEAR                                  , RULL(0x2C0F0199), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F0199,
REG64( EX_6_CPPM_CMEDB2_OR                                     , RULL(0x2C0F019A), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F019A,
REG64( EX_7_CPPM_CMEDB2                                        , RULL(0x2E0F0198), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0198,
REG64( EX_7_CPPM_CMEDB2_CLEAR                                  , RULL(0x2E0F0199), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F0199,
REG64( EX_7_CPPM_CMEDB2_OR                                     , RULL(0x2E0F019A), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F019A,
REG64( EX_8_CPPM_CMEDB2                                        , RULL(0x300F0198), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0198,
REG64( EX_8_CPPM_CMEDB2_CLEAR                                  , RULL(0x300F0199), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F0199,
REG64( EX_8_CPPM_CMEDB2_OR                                     , RULL(0x300F019A), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F019A,
REG64( EX_9_CPPM_CMEDB2                                        , RULL(0x320F0198), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0198,
REG64( EX_9_CPPM_CMEDB2_CLEAR                                  , RULL(0x320F0199), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F0199,
REG64( EX_9_CPPM_CMEDB2_OR                                     , RULL(0x320F019A), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F019A,
REG64( EX_10_CPPM_CMEDB2                                       , RULL(0x340F0198), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0198,
REG64( EX_10_CPPM_CMEDB2_CLEAR                                 , RULL(0x340F0199), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F0199,
REG64( EX_10_CPPM_CMEDB2_OR                                    , RULL(0x340F019A), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F019A,
REG64( EX_11_CPPM_CMEDB2                                       , RULL(0x360F0198), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0198,
REG64( EX_11_CPPM_CMEDB2_CLEAR                                 , RULL(0x360F0199), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F0199,
REG64( EX_11_CPPM_CMEDB2_OR                                    , RULL(0x360F019A), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F019A,

REG64( C_CPPM_CMEDB3                                           , RULL(0x200F019C), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPPM_CMEDB3_CLEAR                                     , RULL(0x200F019D), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_CPPM_CMEDB3_OR                                        , RULL(0x200F019E), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CPPM_CMEDB3                                         , RULL(0x200F019C), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CMEDB3_CLEAR                                   , RULL(0x200F019D), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_CPPM_CMEDB3_OR                                      , RULL(0x200F019E), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CPPM_CMEDB3                                         , RULL(0x210F019C), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CMEDB3_CLEAR                                   , RULL(0x210F019D), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_CPPM_CMEDB3_OR                                      , RULL(0x210F019E), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CPPM_CMEDB3                                         , RULL(0x220F019C), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CMEDB3_CLEAR                                   , RULL(0x220F019D), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_CPPM_CMEDB3_OR                                      , RULL(0x220F019E), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CPPM_CMEDB3                                         , RULL(0x230F019C), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CMEDB3_CLEAR                                   , RULL(0x230F019D), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_CPPM_CMEDB3_OR                                      , RULL(0x230F019E), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CPPM_CMEDB3                                         , RULL(0x240F019C), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CMEDB3_CLEAR                                   , RULL(0x240F019D), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_CPPM_CMEDB3_OR                                      , RULL(0x240F019E), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CPPM_CMEDB3                                         , RULL(0x250F019C), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CMEDB3_CLEAR                                   , RULL(0x250F019D), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_CPPM_CMEDB3_OR                                      , RULL(0x250F019E), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CPPM_CMEDB3                                         , RULL(0x260F019C), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CMEDB3_CLEAR                                   , RULL(0x260F019D), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_CPPM_CMEDB3_OR                                      , RULL(0x260F019E), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CPPM_CMEDB3                                         , RULL(0x270F019C), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CMEDB3_CLEAR                                   , RULL(0x270F019D), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_CPPM_CMEDB3_OR                                      , RULL(0x270F019E), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CPPM_CMEDB3                                         , RULL(0x280F019C), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CMEDB3_CLEAR                                   , RULL(0x280F019D), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_CPPM_CMEDB3_OR                                      , RULL(0x280F019E), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CPPM_CMEDB3                                         , RULL(0x290F019C), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CMEDB3_CLEAR                                   , RULL(0x290F019D), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_CPPM_CMEDB3_OR                                      , RULL(0x290F019E), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CPPM_CMEDB3                                        , RULL(0x2A0F019C), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CMEDB3_CLEAR                                  , RULL(0x2A0F019D), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_CPPM_CMEDB3_OR                                     , RULL(0x2A0F019E), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CPPM_CMEDB3                                        , RULL(0x2B0F019C), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CMEDB3_CLEAR                                  , RULL(0x2B0F019D), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_CPPM_CMEDB3_OR                                     , RULL(0x2B0F019E), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CPPM_CMEDB3                                        , RULL(0x2C0F019C), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CMEDB3_CLEAR                                  , RULL(0x2C0F019D), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_CPPM_CMEDB3_OR                                     , RULL(0x2C0F019E), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CPPM_CMEDB3                                        , RULL(0x2D0F019C), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CMEDB3_CLEAR                                  , RULL(0x2D0F019D), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_CPPM_CMEDB3_OR                                     , RULL(0x2D0F019E), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CPPM_CMEDB3                                        , RULL(0x2E0F019C), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CMEDB3_CLEAR                                  , RULL(0x2E0F019D), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_CPPM_CMEDB3_OR                                     , RULL(0x2E0F019E), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CPPM_CMEDB3                                        , RULL(0x2F0F019C), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CMEDB3_CLEAR                                  , RULL(0x2F0F019D), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_CPPM_CMEDB3_OR                                     , RULL(0x2F0F019E), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CPPM_CMEDB3                                        , RULL(0x300F019C), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CMEDB3_CLEAR                                  , RULL(0x300F019D), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_CPPM_CMEDB3_OR                                     , RULL(0x300F019E), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CPPM_CMEDB3                                        , RULL(0x310F019C), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CMEDB3_CLEAR                                  , RULL(0x310F019D), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_CPPM_CMEDB3_OR                                     , RULL(0x310F019E), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CPPM_CMEDB3                                        , RULL(0x320F019C), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CMEDB3_CLEAR                                  , RULL(0x320F019D), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_CPPM_CMEDB3_OR                                     , RULL(0x320F019E), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CPPM_CMEDB3                                        , RULL(0x330F019C), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CMEDB3_CLEAR                                  , RULL(0x330F019D), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_CPPM_CMEDB3_OR                                     , RULL(0x330F019E), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CPPM_CMEDB3                                        , RULL(0x340F019C), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CMEDB3_CLEAR                                  , RULL(0x340F019D), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_CPPM_CMEDB3_OR                                     , RULL(0x340F019E), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CPPM_CMEDB3                                        , RULL(0x350F019C), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CMEDB3_CLEAR                                  , RULL(0x350F019D), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_CPPM_CMEDB3_OR                                     , RULL(0x350F019E), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CPPM_CMEDB3                                        , RULL(0x360F019C), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CMEDB3_CLEAR                                  , RULL(0x360F019D), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_CPPM_CMEDB3_OR                                     , RULL(0x360F019E), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CPPM_CMEDB3                                        , RULL(0x370F019C), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CMEDB3_CLEAR                                  , RULL(0x370F019D), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_CPPM_CMEDB3_OR                                     , RULL(0x370F019E), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_CPPM_CMEDB3                                          , RULL(0x200F019C), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F019C,
REG64( EX_CPPM_CMEDB3_CLEAR                                    , RULL(0x200F019D), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F019D,
REG64( EX_CPPM_CMEDB3_OR                                       , RULL(0x200F019E), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F019E,
REG64( EX_0_CPPM_CMEDB3                                        , RULL(0x200F019C), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F019C,
REG64( EX_0_CPPM_CMEDB3_CLEAR                                  , RULL(0x200F019D), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F019D,
REG64( EX_0_CPPM_CMEDB3_OR                                     , RULL(0x200F019E), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F019E,
REG64( EX_1_CPPM_CMEDB3                                        , RULL(0x230F019C), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F019C,
REG64( EX_1_CPPM_CMEDB3_CLEAR                                  , RULL(0x230F019D), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F019D,
REG64( EX_1_CPPM_CMEDB3_OR                                     , RULL(0x230F019E), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F019E,
REG64( EX_2_CPPM_CMEDB3                                        , RULL(0x240F019C), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F019C,
REG64( EX_2_CPPM_CMEDB3_CLEAR                                  , RULL(0x240F019D), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F019D,
REG64( EX_2_CPPM_CMEDB3_OR                                     , RULL(0x240F019E), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F019E,
REG64( EX_3_CPPM_CMEDB3                                        , RULL(0x260F019C), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F019C,
REG64( EX_3_CPPM_CMEDB3_CLEAR                                  , RULL(0x260F019D), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F019D,
REG64( EX_3_CPPM_CMEDB3_OR                                     , RULL(0x260F019E), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F019E,
REG64( EX_4_CPPM_CMEDB3                                        , RULL(0x280F019C), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F019C,
REG64( EX_4_CPPM_CMEDB3_CLEAR                                  , RULL(0x280F019D), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F019D,
REG64( EX_4_CPPM_CMEDB3_OR                                     , RULL(0x280F019E), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F019E,
REG64( EX_5_CPPM_CMEDB3                                        , RULL(0x2A0F019C), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F019C,
REG64( EX_5_CPPM_CMEDB3_CLEAR                                  , RULL(0x2A0F019D), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F019D,
REG64( EX_5_CPPM_CMEDB3_OR                                     , RULL(0x2A0F019E), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F019E,
REG64( EX_6_CPPM_CMEDB3                                        , RULL(0x2C0F019C), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F019C,
REG64( EX_6_CPPM_CMEDB3_CLEAR                                  , RULL(0x2C0F019D), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F019D,
REG64( EX_6_CPPM_CMEDB3_OR                                     , RULL(0x2C0F019E), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F019E,
REG64( EX_7_CPPM_CMEDB3                                        , RULL(0x2E0F019C), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F019C,
REG64( EX_7_CPPM_CMEDB3_CLEAR                                  , RULL(0x2E0F019D), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F019D,
REG64( EX_7_CPPM_CMEDB3_OR                                     , RULL(0x2E0F019E), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F019E,
REG64( EX_8_CPPM_CMEDB3                                        , RULL(0x300F019C), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F019C,
REG64( EX_8_CPPM_CMEDB3_CLEAR                                  , RULL(0x300F019D), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F019D,
REG64( EX_8_CPPM_CMEDB3_OR                                     , RULL(0x300F019E), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F019E,
REG64( EX_9_CPPM_CMEDB3                                        , RULL(0x320F019C), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F019C,
REG64( EX_9_CPPM_CMEDB3_CLEAR                                  , RULL(0x320F019D), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F019D,
REG64( EX_9_CPPM_CMEDB3_OR                                     , RULL(0x320F019E), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F019E,
REG64( EX_10_CPPM_CMEDB3                                       , RULL(0x340F019C), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F019C,
REG64( EX_10_CPPM_CMEDB3_CLEAR                                 , RULL(0x340F019D), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F019D,
REG64( EX_10_CPPM_CMEDB3_OR                                    , RULL(0x340F019E), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F019E,
REG64( EX_11_CPPM_CMEDB3                                       , RULL(0x360F019C), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F019C,
REG64( EX_11_CPPM_CMEDB3_CLEAR                                 , RULL(0x360F019D), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F019D,
REG64( EX_11_CPPM_CMEDB3_OR                                    , RULL(0x360F019E), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F019E,

REG64( C_CPPM_CMEMSG                                           , RULL(0x200F01AB), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CMEMSG                                         , RULL(0x200F01AB), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CMEMSG                                         , RULL(0x210F01AB), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CMEMSG                                         , RULL(0x220F01AB), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CMEMSG                                         , RULL(0x230F01AB), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CMEMSG                                         , RULL(0x240F01AB), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CMEMSG                                         , RULL(0x250F01AB), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CMEMSG                                         , RULL(0x260F01AB), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CMEMSG                                         , RULL(0x270F01AB), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CMEMSG                                         , RULL(0x280F01AB), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CMEMSG                                         , RULL(0x290F01AB), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CMEMSG                                        , RULL(0x2A0F01AB), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CMEMSG                                        , RULL(0x2B0F01AB), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CMEMSG                                        , RULL(0x2C0F01AB), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CMEMSG                                        , RULL(0x2D0F01AB), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CMEMSG                                        , RULL(0x2E0F01AB), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CMEMSG                                        , RULL(0x2F0F01AB), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CMEMSG                                        , RULL(0x300F01AB), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CMEMSG                                        , RULL(0x310F01AB), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CMEMSG                                        , RULL(0x320F01AB), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CMEMSG                                        , RULL(0x330F01AB), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CMEMSG                                        , RULL(0x340F01AB), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CMEMSG                                        , RULL(0x350F01AB), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CMEMSG                                        , RULL(0x360F01AB), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CMEMSG                                        , RULL(0x370F01AB), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_CPPM_CMEMSG                                          , RULL(0x200F01AB), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01AB,
REG64( EX_0_CPPM_CMEMSG                                        , RULL(0x200F01AB), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01AB,
REG64( EX_1_CPPM_CMEMSG                                        , RULL(0x230F01AB), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01AB,
REG64( EX_2_CPPM_CMEMSG                                        , RULL(0x240F01AB), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01AB,
REG64( EX_3_CPPM_CMEMSG                                        , RULL(0x260F01AB), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01AB,
REG64( EX_4_CPPM_CMEMSG                                        , RULL(0x280F01AB), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01AB,
REG64( EX_5_CPPM_CMEMSG                                        , RULL(0x2A0F01AB), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01AB,
REG64( EX_6_CPPM_CMEMSG                                        , RULL(0x2C0F01AB), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01AB,
REG64( EX_7_CPPM_CMEMSG                                        , RULL(0x2E0F01AB), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01AB,
REG64( EX_8_CPPM_CMEMSG                                        , RULL(0x300F01AB), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01AB,
REG64( EX_9_CPPM_CMEMSG                                        , RULL(0x320F01AB), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01AB,
REG64( EX_10_CPPM_CMEMSG                                       , RULL(0x340F01AB), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01AB,
REG64( EX_11_CPPM_CMEMSG                                       , RULL(0x360F01AB), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01AB,

REG64( C_CPPM_CPMMR                                            , RULL(0x200F0106), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPPM_CPMMR_CLEAR                                      , RULL(0x200F0107), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_CPPM_CPMMR_OR                                         , RULL(0x200F0108), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CPPM_CPMMR                                          , RULL(0x200F0106), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CPMMR_CLEAR                                    , RULL(0x200F0107), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_CPPM_CPMMR_OR                                       , RULL(0x200F0108), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CPPM_CPMMR                                          , RULL(0x210F0106), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CPMMR_CLEAR                                    , RULL(0x210F0107), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_CPPM_CPMMR_OR                                       , RULL(0x210F0108), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CPPM_CPMMR                                          , RULL(0x220F0106), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CPMMR_CLEAR                                    , RULL(0x220F0107), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_CPPM_CPMMR_OR                                       , RULL(0x220F0108), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CPPM_CPMMR                                          , RULL(0x230F0106), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CPMMR_CLEAR                                    , RULL(0x230F0107), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_CPPM_CPMMR_OR                                       , RULL(0x230F0108), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CPPM_CPMMR                                          , RULL(0x240F0106), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CPMMR_CLEAR                                    , RULL(0x240F0107), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_CPPM_CPMMR_OR                                       , RULL(0x240F0108), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CPPM_CPMMR                                          , RULL(0x250F0106), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CPMMR_CLEAR                                    , RULL(0x250F0107), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_CPPM_CPMMR_OR                                       , RULL(0x250F0108), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CPPM_CPMMR                                          , RULL(0x260F0106), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CPMMR_CLEAR                                    , RULL(0x260F0107), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_CPPM_CPMMR_OR                                       , RULL(0x260F0108), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CPPM_CPMMR                                          , RULL(0x270F0106), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CPMMR_CLEAR                                    , RULL(0x270F0107), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_CPPM_CPMMR_OR                                       , RULL(0x270F0108), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CPPM_CPMMR                                          , RULL(0x280F0106), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CPMMR_CLEAR                                    , RULL(0x280F0107), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_CPPM_CPMMR_OR                                       , RULL(0x280F0108), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CPPM_CPMMR                                          , RULL(0x290F0106), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CPMMR_CLEAR                                    , RULL(0x290F0107), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_CPPM_CPMMR_OR                                       , RULL(0x290F0108), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CPPM_CPMMR                                         , RULL(0x2A0F0106), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CPMMR_CLEAR                                   , RULL(0x2A0F0107), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_CPPM_CPMMR_OR                                      , RULL(0x2A0F0108), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CPPM_CPMMR                                         , RULL(0x2B0F0106), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CPMMR_CLEAR                                   , RULL(0x2B0F0107), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_CPPM_CPMMR_OR                                      , RULL(0x2B0F0108), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CPPM_CPMMR                                         , RULL(0x2C0F0106), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CPMMR_CLEAR                                   , RULL(0x2C0F0107), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_CPPM_CPMMR_OR                                      , RULL(0x2C0F0108), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CPPM_CPMMR                                         , RULL(0x2D0F0106), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CPMMR_CLEAR                                   , RULL(0x2D0F0107), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_CPPM_CPMMR_OR                                      , RULL(0x2D0F0108), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CPPM_CPMMR                                         , RULL(0x2E0F0106), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CPMMR_CLEAR                                   , RULL(0x2E0F0107), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_CPPM_CPMMR_OR                                      , RULL(0x2E0F0108), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CPPM_CPMMR                                         , RULL(0x2F0F0106), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CPMMR_CLEAR                                   , RULL(0x2F0F0107), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_CPPM_CPMMR_OR                                      , RULL(0x2F0F0108), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CPPM_CPMMR                                         , RULL(0x300F0106), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CPMMR_CLEAR                                   , RULL(0x300F0107), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_CPPM_CPMMR_OR                                      , RULL(0x300F0108), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CPPM_CPMMR                                         , RULL(0x310F0106), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CPMMR_CLEAR                                   , RULL(0x310F0107), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_CPPM_CPMMR_OR                                      , RULL(0x310F0108), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CPPM_CPMMR                                         , RULL(0x320F0106), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CPMMR_CLEAR                                   , RULL(0x320F0107), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_CPPM_CPMMR_OR                                      , RULL(0x320F0108), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CPPM_CPMMR                                         , RULL(0x330F0106), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CPMMR_CLEAR                                   , RULL(0x330F0107), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_CPPM_CPMMR_OR                                      , RULL(0x330F0108), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CPPM_CPMMR                                         , RULL(0x340F0106), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CPMMR_CLEAR                                   , RULL(0x340F0107), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_CPPM_CPMMR_OR                                      , RULL(0x340F0108), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CPPM_CPMMR                                         , RULL(0x350F0106), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CPMMR_CLEAR                                   , RULL(0x350F0107), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_CPPM_CPMMR_OR                                      , RULL(0x350F0108), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CPPM_CPMMR                                         , RULL(0x360F0106), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CPMMR_CLEAR                                   , RULL(0x360F0107), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_CPPM_CPMMR_OR                                      , RULL(0x360F0108), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CPPM_CPMMR                                         , RULL(0x370F0106), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CPMMR_CLEAR                                   , RULL(0x370F0107), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_CPPM_CPMMR_OR                                      , RULL(0x370F0108), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_CPPM_CPMMR                                           , RULL(0x200F0106), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0106,
REG64( EX_CPPM_CPMMR_CLEAR                                     , RULL(0x200F0107), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0107,
REG64( EX_CPPM_CPMMR_OR                                        , RULL(0x200F0108), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F0108,
REG64( EX_0_CPPM_CPMMR                                         , RULL(0x200F0106), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0106,
REG64( EX_0_CPPM_CPMMR_CLEAR                                   , RULL(0x200F0107), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0107,
REG64( EX_0_CPPM_CPMMR_OR                                      , RULL(0x200F0108), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F0108,
REG64( EX_1_CPPM_CPMMR                                         , RULL(0x230F0106), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0106,
REG64( EX_1_CPPM_CPMMR_CLEAR                                   , RULL(0x230F0107), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F0107,
REG64( EX_1_CPPM_CPMMR_OR                                      , RULL(0x230F0108), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F0108,
REG64( EX_2_CPPM_CPMMR                                         , RULL(0x240F0106), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0106,
REG64( EX_2_CPPM_CPMMR_CLEAR                                   , RULL(0x240F0107), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F0107,
REG64( EX_2_CPPM_CPMMR_OR                                      , RULL(0x240F0108), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F0108,
REG64( EX_3_CPPM_CPMMR                                         , RULL(0x260F0106), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0106,
REG64( EX_3_CPPM_CPMMR_CLEAR                                   , RULL(0x260F0107), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F0107,
REG64( EX_3_CPPM_CPMMR_OR                                      , RULL(0x260F0108), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F0108,
REG64( EX_4_CPPM_CPMMR                                         , RULL(0x280F0106), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0106,
REG64( EX_4_CPPM_CPMMR_CLEAR                                   , RULL(0x280F0107), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F0107,
REG64( EX_4_CPPM_CPMMR_OR                                      , RULL(0x280F0108), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F0108,
REG64( EX_5_CPPM_CPMMR                                         , RULL(0x2A0F0106), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0106,
REG64( EX_5_CPPM_CPMMR_CLEAR                                   , RULL(0x2A0F0107), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F0107,
REG64( EX_5_CPPM_CPMMR_OR                                      , RULL(0x2A0F0108), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F0108,
REG64( EX_6_CPPM_CPMMR                                         , RULL(0x2C0F0106), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0106,
REG64( EX_6_CPPM_CPMMR_CLEAR                                   , RULL(0x2C0F0107), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F0107,
REG64( EX_6_CPPM_CPMMR_OR                                      , RULL(0x2C0F0108), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F0108,
REG64( EX_7_CPPM_CPMMR                                         , RULL(0x2E0F0106), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0106,
REG64( EX_7_CPPM_CPMMR_CLEAR                                   , RULL(0x2E0F0107), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F0107,
REG64( EX_7_CPPM_CPMMR_OR                                      , RULL(0x2E0F0108), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F0108,
REG64( EX_8_CPPM_CPMMR                                         , RULL(0x300F0106), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0106,
REG64( EX_8_CPPM_CPMMR_CLEAR                                   , RULL(0x300F0107), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F0107,
REG64( EX_8_CPPM_CPMMR_OR                                      , RULL(0x300F0108), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F0108,
REG64( EX_9_CPPM_CPMMR                                         , RULL(0x320F0106), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0106,
REG64( EX_9_CPPM_CPMMR_CLEAR                                   , RULL(0x320F0107), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F0107,
REG64( EX_9_CPPM_CPMMR_OR                                      , RULL(0x320F0108), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F0108,
REG64( EX_10_CPPM_CPMMR                                        , RULL(0x340F0106), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0106,
REG64( EX_10_CPPM_CPMMR_CLEAR                                  , RULL(0x340F0107), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F0107,
REG64( EX_10_CPPM_CPMMR_OR                                     , RULL(0x340F0108), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F0108,
REG64( EX_11_CPPM_CPMMR                                        , RULL(0x360F0106), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0106,
REG64( EX_11_CPPM_CPMMR_CLEAR                                  , RULL(0x360F0107), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F0107,
REG64( EX_11_CPPM_CPMMR_OR                                     , RULL(0x360F0108), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F0108,

REG64( C_CPPM_CSAR                                             , RULL(0x200F0138), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_CPPM_CSAR_CLEAR                                       , RULL(0x200F0139), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_CPPM_CSAR_OR                                          , RULL(0x200F013A), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_CPPM_CSAR                                           , RULL(0x200F0138), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_CSAR_CLEAR                                     , RULL(0x200F0139), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_CPPM_CSAR_OR                                        , RULL(0x200F013A), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_CPPM_CSAR                                           , RULL(0x210F0138), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_CSAR_CLEAR                                     , RULL(0x210F0139), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_CPPM_CSAR_OR                                        , RULL(0x210F013A), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_CPPM_CSAR                                           , RULL(0x220F0138), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_CSAR_CLEAR                                     , RULL(0x220F0139), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_CPPM_CSAR_OR                                        , RULL(0x220F013A), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_CPPM_CSAR                                           , RULL(0x230F0138), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_CSAR_CLEAR                                     , RULL(0x230F0139), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_CPPM_CSAR_OR                                        , RULL(0x230F013A), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_CPPM_CSAR                                           , RULL(0x240F0138), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_CSAR_CLEAR                                     , RULL(0x240F0139), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_CPPM_CSAR_OR                                        , RULL(0x240F013A), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_CPPM_CSAR                                           , RULL(0x250F0138), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_CSAR_CLEAR                                     , RULL(0x250F0139), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_CPPM_CSAR_OR                                        , RULL(0x250F013A), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_CPPM_CSAR                                           , RULL(0x260F0138), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_CSAR_CLEAR                                     , RULL(0x260F0139), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_CPPM_CSAR_OR                                        , RULL(0x260F013A), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_CPPM_CSAR                                           , RULL(0x270F0138), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_CSAR_CLEAR                                     , RULL(0x270F0139), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_CPPM_CSAR_OR                                        , RULL(0x270F013A), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_CPPM_CSAR                                           , RULL(0x280F0138), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_CSAR_CLEAR                                     , RULL(0x280F0139), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_CPPM_CSAR_OR                                        , RULL(0x280F013A), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_CPPM_CSAR                                           , RULL(0x290F0138), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_CSAR_CLEAR                                     , RULL(0x290F0139), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_CPPM_CSAR_OR                                        , RULL(0x290F013A), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_CPPM_CSAR                                          , RULL(0x2A0F0138), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_CSAR_CLEAR                                    , RULL(0x2A0F0139), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_CPPM_CSAR_OR                                       , RULL(0x2A0F013A), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_CPPM_CSAR                                          , RULL(0x2B0F0138), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_CSAR_CLEAR                                    , RULL(0x2B0F0139), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_CPPM_CSAR_OR                                       , RULL(0x2B0F013A), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_CPPM_CSAR                                          , RULL(0x2C0F0138), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_CSAR_CLEAR                                    , RULL(0x2C0F0139), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_CPPM_CSAR_OR                                       , RULL(0x2C0F013A), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_CPPM_CSAR                                          , RULL(0x2D0F0138), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_CSAR_CLEAR                                    , RULL(0x2D0F0139), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_CPPM_CSAR_OR                                       , RULL(0x2D0F013A), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_CPPM_CSAR                                          , RULL(0x2E0F0138), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_CSAR_CLEAR                                    , RULL(0x2E0F0139), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_CPPM_CSAR_OR                                       , RULL(0x2E0F013A), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_CPPM_CSAR                                          , RULL(0x2F0F0138), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_CSAR_CLEAR                                    , RULL(0x2F0F0139), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_CPPM_CSAR_OR                                       , RULL(0x2F0F013A), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_CPPM_CSAR                                          , RULL(0x300F0138), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_CSAR_CLEAR                                    , RULL(0x300F0139), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_CPPM_CSAR_OR                                       , RULL(0x300F013A), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_CPPM_CSAR                                          , RULL(0x310F0138), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_CSAR_CLEAR                                    , RULL(0x310F0139), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_CPPM_CSAR_OR                                       , RULL(0x310F013A), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_CPPM_CSAR                                          , RULL(0x320F0138), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_CSAR_CLEAR                                    , RULL(0x320F0139), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_CPPM_CSAR_OR                                       , RULL(0x320F013A), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_CPPM_CSAR                                          , RULL(0x330F0138), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_CSAR_CLEAR                                    , RULL(0x330F0139), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_CPPM_CSAR_OR                                       , RULL(0x330F013A), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_CPPM_CSAR                                          , RULL(0x340F0138), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_CSAR_CLEAR                                    , RULL(0x340F0139), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_CPPM_CSAR_OR                                       , RULL(0x340F013A), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_CPPM_CSAR                                          , RULL(0x350F0138), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_CSAR_CLEAR                                    , RULL(0x350F0139), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_CPPM_CSAR_OR                                       , RULL(0x350F013A), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_CPPM_CSAR                                          , RULL(0x360F0138), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_CSAR_CLEAR                                    , RULL(0x360F0139), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_CPPM_CSAR_OR                                       , RULL(0x360F013A), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_CPPM_CSAR                                          , RULL(0x370F0138), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_CSAR_CLEAR                                    , RULL(0x370F0139), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_CPPM_CSAR_OR                                       , RULL(0x370F013A), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_CPPM_CSAR                                            , RULL(0x200F0138), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0138,
REG64( EX_CPPM_CSAR_CLEAR                                      , RULL(0x200F0139), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0139,
REG64( EX_CPPM_CSAR_OR                                         , RULL(0x200F013A), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F013A,
REG64( EX_0_CPPM_CSAR                                          , RULL(0x200F0138), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0138,
REG64( EX_0_CPPM_CSAR_CLEAR                                    , RULL(0x200F0139), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F0139,
REG64( EX_0_CPPM_CSAR_OR                                       , RULL(0x200F013A), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F013A,
REG64( EX_1_CPPM_CSAR                                          , RULL(0x230F0138), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0138,
REG64( EX_1_CPPM_CSAR_CLEAR                                    , RULL(0x230F0139), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F0139,
REG64( EX_1_CPPM_CSAR_OR                                       , RULL(0x230F013A), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F013A,
REG64( EX_2_CPPM_CSAR                                          , RULL(0x240F0138), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0138,
REG64( EX_2_CPPM_CSAR_CLEAR                                    , RULL(0x240F0139), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F0139,
REG64( EX_2_CPPM_CSAR_OR                                       , RULL(0x240F013A), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F013A,
REG64( EX_3_CPPM_CSAR                                          , RULL(0x260F0138), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0138,
REG64( EX_3_CPPM_CSAR_CLEAR                                    , RULL(0x260F0139), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F0139,
REG64( EX_3_CPPM_CSAR_OR                                       , RULL(0x260F013A), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F013A,
REG64( EX_4_CPPM_CSAR                                          , RULL(0x280F0138), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0138,
REG64( EX_4_CPPM_CSAR_CLEAR                                    , RULL(0x280F0139), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F0139,
REG64( EX_4_CPPM_CSAR_OR                                       , RULL(0x280F013A), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F013A,
REG64( EX_5_CPPM_CSAR                                          , RULL(0x2A0F0138), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0138,
REG64( EX_5_CPPM_CSAR_CLEAR                                    , RULL(0x2A0F0139), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F0139,
REG64( EX_5_CPPM_CSAR_OR                                       , RULL(0x2A0F013A), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F013A,
REG64( EX_6_CPPM_CSAR                                          , RULL(0x2C0F0138), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0138,
REG64( EX_6_CPPM_CSAR_CLEAR                                    , RULL(0x2C0F0139), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F0139,
REG64( EX_6_CPPM_CSAR_OR                                       , RULL(0x2C0F013A), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F013A,
REG64( EX_7_CPPM_CSAR                                          , RULL(0x2E0F0138), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0138,
REG64( EX_7_CPPM_CSAR_CLEAR                                    , RULL(0x2E0F0139), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F0139,
REG64( EX_7_CPPM_CSAR_OR                                       , RULL(0x2E0F013A), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F013A,
REG64( EX_8_CPPM_CSAR                                          , RULL(0x300F0138), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0138,
REG64( EX_8_CPPM_CSAR_CLEAR                                    , RULL(0x300F0139), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F0139,
REG64( EX_8_CPPM_CSAR_OR                                       , RULL(0x300F013A), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F013A,
REG64( EX_9_CPPM_CSAR                                          , RULL(0x320F0138), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0138,
REG64( EX_9_CPPM_CSAR_CLEAR                                    , RULL(0x320F0139), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F0139,
REG64( EX_9_CPPM_CSAR_OR                                       , RULL(0x320F013A), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F013A,
REG64( EX_10_CPPM_CSAR                                         , RULL(0x340F0138), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0138,
REG64( EX_10_CPPM_CSAR_CLEAR                                   , RULL(0x340F0139), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F0139,
REG64( EX_10_CPPM_CSAR_OR                                      , RULL(0x340F013A), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F013A,
REG64( EX_11_CPPM_CSAR                                         , RULL(0x360F0138), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0138,
REG64( EX_11_CPPM_CSAR_CLEAR                                   , RULL(0x360F0139), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F0139,
REG64( EX_11_CPPM_CSAR_OR                                      , RULL(0x360F013A), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F013A,

REG64( C_CPPM_ERR                                              , RULL(0x200F0121), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CPPM_ERR                                            , RULL(0x200F0121), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CPPM_ERR                                            , RULL(0x210F0121), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CPPM_ERR                                            , RULL(0x220F0121), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CPPM_ERR                                            , RULL(0x230F0121), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CPPM_ERR                                            , RULL(0x240F0121), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CPPM_ERR                                            , RULL(0x250F0121), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CPPM_ERR                                            , RULL(0x260F0121), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CPPM_ERR                                            , RULL(0x270F0121), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CPPM_ERR                                            , RULL(0x280F0121), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CPPM_ERR                                            , RULL(0x290F0121), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CPPM_ERR                                           , RULL(0x2A0F0121), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CPPM_ERR                                           , RULL(0x2B0F0121), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CPPM_ERR                                           , RULL(0x2C0F0121), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CPPM_ERR                                           , RULL(0x2D0F0121), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CPPM_ERR                                           , RULL(0x2E0F0121), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CPPM_ERR                                           , RULL(0x2F0F0121), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CPPM_ERR                                           , RULL(0x300F0121), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CPPM_ERR                                           , RULL(0x310F0121), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CPPM_ERR                                           , RULL(0x320F0121), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CPPM_ERR                                           , RULL(0x330F0121), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CPPM_ERR                                           , RULL(0x340F0121), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CPPM_ERR                                           , RULL(0x350F0121), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CPPM_ERR                                           , RULL(0x360F0121), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CPPM_ERR                                           , RULL(0x370F0121), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_CPPM_ERR                                             , RULL(0x200F0121), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0121,
REG64( EX_0_CPPM_ERR                                           , RULL(0x200F0121), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0121,
REG64( EX_1_CPPM_ERR                                           , RULL(0x230F0121), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0121,
REG64( EX_2_CPPM_ERR                                           , RULL(0x240F0121), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0121,
REG64( EX_3_CPPM_ERR                                           , RULL(0x260F0121), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0121,
REG64( EX_4_CPPM_ERR                                           , RULL(0x280F0121), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0121,
REG64( EX_5_CPPM_ERR                                           , RULL(0x2A0F0121), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0121,
REG64( EX_6_CPPM_ERR                                           , RULL(0x2C0F0121), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0121,
REG64( EX_7_CPPM_ERR                                           , RULL(0x2E0F0121), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0121,
REG64( EX_8_CPPM_ERR                                           , RULL(0x300F0121), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0121,
REG64( EX_9_CPPM_ERR                                           , RULL(0x320F0121), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0121,
REG64( EX_10_CPPM_ERR                                          , RULL(0x340F0121), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0121,
REG64( EX_11_CPPM_ERR                                          , RULL(0x360F0121), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0121,

REG64( C_CPPM_ERRMSK                                           , RULL(0x200F0122), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_ERRMSK                                         , RULL(0x200F0122), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_ERRMSK                                         , RULL(0x210F0122), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_ERRMSK                                         , RULL(0x220F0122), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_ERRMSK                                         , RULL(0x230F0122), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_ERRMSK                                         , RULL(0x240F0122), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_ERRMSK                                         , RULL(0x250F0122), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_ERRMSK                                         , RULL(0x260F0122), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_ERRMSK                                         , RULL(0x270F0122), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_ERRMSK                                         , RULL(0x280F0122), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_ERRMSK                                         , RULL(0x290F0122), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_ERRMSK                                        , RULL(0x2A0F0122), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_ERRMSK                                        , RULL(0x2B0F0122), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_ERRMSK                                        , RULL(0x2C0F0122), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_ERRMSK                                        , RULL(0x2D0F0122), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_ERRMSK                                        , RULL(0x2E0F0122), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_ERRMSK                                        , RULL(0x2F0F0122), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_ERRMSK                                        , RULL(0x300F0122), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_ERRMSK                                        , RULL(0x310F0122), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_ERRMSK                                        , RULL(0x320F0122), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_ERRMSK                                        , RULL(0x330F0122), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_ERRMSK                                        , RULL(0x340F0122), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_ERRMSK                                        , RULL(0x350F0122), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_ERRMSK                                        , RULL(0x360F0122), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_ERRMSK                                        , RULL(0x370F0122), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_CPPM_ERRMSK                                          , RULL(0x200F0122), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0122,
REG64( EX_0_CPPM_ERRMSK                                        , RULL(0x200F0122), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0122,
REG64( EX_1_CPPM_ERRMSK                                        , RULL(0x230F0122), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0122,
REG64( EX_2_CPPM_ERRMSK                                        , RULL(0x240F0122), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0122,
REG64( EX_3_CPPM_ERRMSK                                        , RULL(0x260F0122), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0122,
REG64( EX_4_CPPM_ERRMSK                                        , RULL(0x280F0122), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0122,
REG64( EX_5_CPPM_ERRMSK                                        , RULL(0x2A0F0122), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0122,
REG64( EX_6_CPPM_ERRMSK                                        , RULL(0x2C0F0122), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0122,
REG64( EX_7_CPPM_ERRMSK                                        , RULL(0x2E0F0122), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0122,
REG64( EX_8_CPPM_ERRMSK                                        , RULL(0x300F0122), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0122,
REG64( EX_9_CPPM_ERRMSK                                        , RULL(0x320F0122), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0122,
REG64( EX_10_CPPM_ERRMSK                                       , RULL(0x340F0122), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0122,
REG64( EX_11_CPPM_ERRMSK                                       , RULL(0x360F0122), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0122,

REG64( C_CPPM_IPPMCMD                                          , RULL(0x200F01C0), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_IPPMCMD                                        , RULL(0x200F01C0), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_IPPMCMD                                        , RULL(0x210F01C0), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_IPPMCMD                                        , RULL(0x220F01C0), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_IPPMCMD                                        , RULL(0x230F01C0), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_IPPMCMD                                        , RULL(0x240F01C0), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_IPPMCMD                                        , RULL(0x250F01C0), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_IPPMCMD                                        , RULL(0x260F01C0), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_IPPMCMD                                        , RULL(0x270F01C0), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_IPPMCMD                                        , RULL(0x280F01C0), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_IPPMCMD                                        , RULL(0x290F01C0), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_IPPMCMD                                       , RULL(0x2A0F01C0), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_IPPMCMD                                       , RULL(0x2B0F01C0), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_IPPMCMD                                       , RULL(0x2C0F01C0), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_IPPMCMD                                       , RULL(0x2D0F01C0), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_IPPMCMD                                       , RULL(0x2E0F01C0), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_IPPMCMD                                       , RULL(0x2F0F01C0), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_IPPMCMD                                       , RULL(0x300F01C0), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_IPPMCMD                                       , RULL(0x310F01C0), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_IPPMCMD                                       , RULL(0x320F01C0), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_IPPMCMD                                       , RULL(0x330F01C0), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_IPPMCMD                                       , RULL(0x340F01C0), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_IPPMCMD                                       , RULL(0x350F01C0), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_IPPMCMD                                       , RULL(0x360F01C0), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_IPPMCMD                                       , RULL(0x370F01C0), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_CPPM_IPPMCMD                                         , RULL(0x200F01C0), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01C0,
REG64( EX_0_CPPM_IPPMCMD                                       , RULL(0x200F01C0), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01C0,
REG64( EX_1_CPPM_IPPMCMD                                       , RULL(0x230F01C0), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01C0,
REG64( EX_2_CPPM_IPPMCMD                                       , RULL(0x240F01C0), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01C0,
REG64( EX_3_CPPM_IPPMCMD                                       , RULL(0x260F01C0), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01C0,
REG64( EX_4_CPPM_IPPMCMD                                       , RULL(0x280F01C0), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01C0,
REG64( EX_5_CPPM_IPPMCMD                                       , RULL(0x2A0F01C0), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01C0,
REG64( EX_6_CPPM_IPPMCMD                                       , RULL(0x2C0F01C0), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01C0,
REG64( EX_7_CPPM_IPPMCMD                                       , RULL(0x2E0F01C0), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01C0,
REG64( EX_8_CPPM_IPPMCMD                                       , RULL(0x300F01C0), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01C0,
REG64( EX_9_CPPM_IPPMCMD                                       , RULL(0x320F01C0), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01C0,
REG64( EX_10_CPPM_IPPMCMD                                      , RULL(0x340F01C0), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01C0,
REG64( EX_11_CPPM_IPPMCMD                                      , RULL(0x360F01C0), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01C0,

REG64( C_CPPM_IPPMRDATA                                        , RULL(0x200F01C3), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_IPPMRDATA                                      , RULL(0x200F01C3), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_IPPMRDATA                                      , RULL(0x210F01C3), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_IPPMRDATA                                      , RULL(0x220F01C3), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_IPPMRDATA                                      , RULL(0x230F01C3), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_IPPMRDATA                                      , RULL(0x240F01C3), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_IPPMRDATA                                      , RULL(0x250F01C3), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_IPPMRDATA                                      , RULL(0x260F01C3), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_IPPMRDATA                                      , RULL(0x270F01C3), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_IPPMRDATA                                      , RULL(0x280F01C3), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_IPPMRDATA                                      , RULL(0x290F01C3), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_IPPMRDATA                                     , RULL(0x2A0F01C3), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_IPPMRDATA                                     , RULL(0x2B0F01C3), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_IPPMRDATA                                     , RULL(0x2C0F01C3), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_IPPMRDATA                                     , RULL(0x2D0F01C3), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_IPPMRDATA                                     , RULL(0x2E0F01C3), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_IPPMRDATA                                     , RULL(0x2F0F01C3), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_IPPMRDATA                                     , RULL(0x300F01C3), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_IPPMRDATA                                     , RULL(0x310F01C3), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_IPPMRDATA                                     , RULL(0x320F01C3), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_IPPMRDATA                                     , RULL(0x330F01C3), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_IPPMRDATA                                     , RULL(0x340F01C3), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_IPPMRDATA                                     , RULL(0x350F01C3), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_IPPMRDATA                                     , RULL(0x360F01C3), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_IPPMRDATA                                     , RULL(0x370F01C3), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_CPPM_IPPMRDATA                                       , RULL(0x200F01C3), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01C3,
REG64( EX_0_CPPM_IPPMRDATA                                     , RULL(0x200F01C3), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01C3,
REG64( EX_1_CPPM_IPPMRDATA                                     , RULL(0x230F01C3), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01C3,
REG64( EX_2_CPPM_IPPMRDATA                                     , RULL(0x240F01C3), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01C3,
REG64( EX_3_CPPM_IPPMRDATA                                     , RULL(0x260F01C3), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01C3,
REG64( EX_4_CPPM_IPPMRDATA                                     , RULL(0x280F01C3), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01C3,
REG64( EX_5_CPPM_IPPMRDATA                                     , RULL(0x2A0F01C3), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01C3,
REG64( EX_6_CPPM_IPPMRDATA                                     , RULL(0x2C0F01C3), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01C3,
REG64( EX_7_CPPM_IPPMRDATA                                     , RULL(0x2E0F01C3), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01C3,
REG64( EX_8_CPPM_IPPMRDATA                                     , RULL(0x300F01C3), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01C3,
REG64( EX_9_CPPM_IPPMRDATA                                     , RULL(0x320F01C3), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01C3,
REG64( EX_10_CPPM_IPPMRDATA                                    , RULL(0x340F01C3), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01C3,
REG64( EX_11_CPPM_IPPMRDATA                                    , RULL(0x360F01C3), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01C3,

REG64( C_CPPM_IPPMSTAT                                         , RULL(0x200F01C1), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_CPPM_IPPMSTAT                                       , RULL(0x200F01C1), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_CPPM_IPPMSTAT                                       , RULL(0x210F01C1), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_CPPM_IPPMSTAT                                       , RULL(0x220F01C1), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_CPPM_IPPMSTAT                                       , RULL(0x230F01C1), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_CPPM_IPPMSTAT                                       , RULL(0x240F01C1), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_CPPM_IPPMSTAT                                       , RULL(0x250F01C1), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_CPPM_IPPMSTAT                                       , RULL(0x260F01C1), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_CPPM_IPPMSTAT                                       , RULL(0x270F01C1), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_CPPM_IPPMSTAT                                       , RULL(0x280F01C1), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_CPPM_IPPMSTAT                                       , RULL(0x290F01C1), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_CPPM_IPPMSTAT                                      , RULL(0x2A0F01C1), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_CPPM_IPPMSTAT                                      , RULL(0x2B0F01C1), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_CPPM_IPPMSTAT                                      , RULL(0x2C0F01C1), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_CPPM_IPPMSTAT                                      , RULL(0x2D0F01C1), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_CPPM_IPPMSTAT                                      , RULL(0x2E0F01C1), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_CPPM_IPPMSTAT                                      , RULL(0x2F0F01C1), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_CPPM_IPPMSTAT                                      , RULL(0x300F01C1), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_CPPM_IPPMSTAT                                      , RULL(0x310F01C1), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_CPPM_IPPMSTAT                                      , RULL(0x320F01C1), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_CPPM_IPPMSTAT                                      , RULL(0x330F01C1), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_CPPM_IPPMSTAT                                      , RULL(0x340F01C1), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_CPPM_IPPMSTAT                                      , RULL(0x350F01C1), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_CPPM_IPPMSTAT                                      , RULL(0x360F01C1), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_CPPM_IPPMSTAT                                      , RULL(0x370F01C1), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_CPPM_IPPMSTAT                                        , RULL(0x200F01C1), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F01C1,
REG64( EX_0_CPPM_IPPMSTAT                                      , RULL(0x200F01C1), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F01C1,
REG64( EX_1_CPPM_IPPMSTAT                                      , RULL(0x230F01C1), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F01C1,
REG64( EX_2_CPPM_IPPMSTAT                                      , RULL(0x240F01C1), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F01C1,
REG64( EX_3_CPPM_IPPMSTAT                                      , RULL(0x260F01C1), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F01C1,
REG64( EX_4_CPPM_IPPMSTAT                                      , RULL(0x280F01C1), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F01C1,
REG64( EX_5_CPPM_IPPMSTAT                                      , RULL(0x2A0F01C1), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F01C1,
REG64( EX_6_CPPM_IPPMSTAT                                      , RULL(0x2C0F01C1), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F01C1,
REG64( EX_7_CPPM_IPPMSTAT                                      , RULL(0x2E0F01C1), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F01C1,
REG64( EX_8_CPPM_IPPMSTAT                                      , RULL(0x300F01C1), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F01C1,
REG64( EX_9_CPPM_IPPMSTAT                                      , RULL(0x320F01C1), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F01C1,
REG64( EX_10_CPPM_IPPMSTAT                                     , RULL(0x340F01C1), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F01C1,
REG64( EX_11_CPPM_IPPMSTAT                                     , RULL(0x360F01C1), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F01C1,

REG64( C_CPPM_IPPMWDATA                                        , RULL(0x200F01C2), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_CPPM_IPPMWDATA                                      , RULL(0x200F01C2), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_CPPM_IPPMWDATA                                      , RULL(0x210F01C2), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_CPPM_IPPMWDATA                                      , RULL(0x220F01C2), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_CPPM_IPPMWDATA                                      , RULL(0x230F01C2), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_CPPM_IPPMWDATA                                      , RULL(0x240F01C2), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_CPPM_IPPMWDATA                                      , RULL(0x250F01C2), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_CPPM_IPPMWDATA                                      , RULL(0x260F01C2), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_CPPM_IPPMWDATA                                      , RULL(0x270F01C2), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_CPPM_IPPMWDATA                                      , RULL(0x280F01C2), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_CPPM_IPPMWDATA                                      , RULL(0x290F01C2), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_CPPM_IPPMWDATA                                     , RULL(0x2A0F01C2), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_CPPM_IPPMWDATA                                     , RULL(0x2B0F01C2), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_CPPM_IPPMWDATA                                     , RULL(0x2C0F01C2), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_CPPM_IPPMWDATA                                     , RULL(0x2D0F01C2), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_CPPM_IPPMWDATA                                     , RULL(0x2E0F01C2), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_CPPM_IPPMWDATA                                     , RULL(0x2F0F01C2), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_CPPM_IPPMWDATA                                     , RULL(0x300F01C2), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_CPPM_IPPMWDATA                                     , RULL(0x310F01C2), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_CPPM_IPPMWDATA                                     , RULL(0x320F01C2), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_CPPM_IPPMWDATA                                     , RULL(0x330F01C2), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_CPPM_IPPMWDATA                                     , RULL(0x340F01C2), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_CPPM_IPPMWDATA                                     , RULL(0x350F01C2), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_CPPM_IPPMWDATA                                     , RULL(0x360F01C2), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_CPPM_IPPMWDATA                                     , RULL(0x370F01C2), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_CPPM_IPPMWDATA                                       , RULL(0x200F01C2), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01C2,
REG64( EX_0_CPPM_IPPMWDATA                                     , RULL(0x200F01C2), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01C2,
REG64( EX_1_CPPM_IPPMWDATA                                     , RULL(0x230F01C2), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01C2,
REG64( EX_2_CPPM_IPPMWDATA                                     , RULL(0x240F01C2), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01C2,
REG64( EX_3_CPPM_IPPMWDATA                                     , RULL(0x260F01C2), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01C2,
REG64( EX_4_CPPM_IPPMWDATA                                     , RULL(0x280F01C2), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01C2,
REG64( EX_5_CPPM_IPPMWDATA                                     , RULL(0x2A0F01C2), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01C2,
REG64( EX_6_CPPM_IPPMWDATA                                     , RULL(0x2C0F01C2), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01C2,
REG64( EX_7_CPPM_IPPMWDATA                                     , RULL(0x2E0F01C2), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01C2,
REG64( EX_8_CPPM_IPPMWDATA                                     , RULL(0x300F01C2), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01C2,
REG64( EX_9_CPPM_IPPMWDATA                                     , RULL(0x320F01C2), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01C2,
REG64( EX_10_CPPM_IPPMWDATA                                    , RULL(0x340F01C2), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01C2,
REG64( EX_11_CPPM_IPPMWDATA                                    , RULL(0x360F01C2), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01C2,

REG64( C_CPPM_NC0INDIR_SCOM                                    , RULL(0x200F0130), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_CPPM_NC0INDIR_SCOM1                                   , RULL(0x200F0131), SH_UNT_C        , SH_ACS_SCOM1_NC  );
REG64( C_CPPM_NC0INDIR_SCOM2                                   , RULL(0x200F0132), SH_UNT_C        , SH_ACS_SCOM2_NC  );
REG64( C_0_CPPM_NC0INDIR_SCOM                                  , RULL(0x200F0130), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_0_CPPM_NC0INDIR_SCOM1                                 , RULL(0x200F0131), SH_UNT_C_0      , SH_ACS_SCOM1_NC  );
REG64( C_0_CPPM_NC0INDIR_SCOM2                                 , RULL(0x200F0132), SH_UNT_C_0      , SH_ACS_SCOM2_NC  );
REG64( C_1_CPPM_NC0INDIR_SCOM                                  , RULL(0x210F0130), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_1_CPPM_NC0INDIR_SCOM1                                 , RULL(0x210F0131), SH_UNT_C_1      , SH_ACS_SCOM1_NC  );
REG64( C_1_CPPM_NC0INDIR_SCOM2                                 , RULL(0x210F0132), SH_UNT_C_1      , SH_ACS_SCOM2_NC  );
REG64( C_2_CPPM_NC0INDIR_SCOM                                  , RULL(0x220F0130), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_2_CPPM_NC0INDIR_SCOM1                                 , RULL(0x220F0131), SH_UNT_C_2      , SH_ACS_SCOM1_NC  );
REG64( C_2_CPPM_NC0INDIR_SCOM2                                 , RULL(0x220F0132), SH_UNT_C_2      , SH_ACS_SCOM2_NC  );
REG64( C_3_CPPM_NC0INDIR_SCOM                                  , RULL(0x230F0130), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_3_CPPM_NC0INDIR_SCOM1                                 , RULL(0x230F0131), SH_UNT_C_3      , SH_ACS_SCOM1_NC  );
REG64( C_3_CPPM_NC0INDIR_SCOM2                                 , RULL(0x230F0132), SH_UNT_C_3      , SH_ACS_SCOM2_NC  );
REG64( C_4_CPPM_NC0INDIR_SCOM                                  , RULL(0x240F0130), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_4_CPPM_NC0INDIR_SCOM1                                 , RULL(0x240F0131), SH_UNT_C_4      , SH_ACS_SCOM1_NC  );
REG64( C_4_CPPM_NC0INDIR_SCOM2                                 , RULL(0x240F0132), SH_UNT_C_4      , SH_ACS_SCOM2_NC  );
REG64( C_5_CPPM_NC0INDIR_SCOM                                  , RULL(0x250F0130), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_5_CPPM_NC0INDIR_SCOM1                                 , RULL(0x250F0131), SH_UNT_C_5      , SH_ACS_SCOM1_NC  );
REG64( C_5_CPPM_NC0INDIR_SCOM2                                 , RULL(0x250F0132), SH_UNT_C_5      , SH_ACS_SCOM2_NC  );
REG64( C_6_CPPM_NC0INDIR_SCOM                                  , RULL(0x260F0130), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_6_CPPM_NC0INDIR_SCOM1                                 , RULL(0x260F0131), SH_UNT_C_6      , SH_ACS_SCOM1_NC  );
REG64( C_6_CPPM_NC0INDIR_SCOM2                                 , RULL(0x260F0132), SH_UNT_C_6      , SH_ACS_SCOM2_NC  );
REG64( C_7_CPPM_NC0INDIR_SCOM                                  , RULL(0x270F0130), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_7_CPPM_NC0INDIR_SCOM1                                 , RULL(0x270F0131), SH_UNT_C_7      , SH_ACS_SCOM1_NC  );
REG64( C_7_CPPM_NC0INDIR_SCOM2                                 , RULL(0x270F0132), SH_UNT_C_7      , SH_ACS_SCOM2_NC  );
REG64( C_8_CPPM_NC0INDIR_SCOM                                  , RULL(0x280F0130), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_8_CPPM_NC0INDIR_SCOM1                                 , RULL(0x280F0131), SH_UNT_C_8      , SH_ACS_SCOM1_NC  );
REG64( C_8_CPPM_NC0INDIR_SCOM2                                 , RULL(0x280F0132), SH_UNT_C_8      , SH_ACS_SCOM2_NC  );
REG64( C_9_CPPM_NC0INDIR_SCOM                                  , RULL(0x290F0130), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_9_CPPM_NC0INDIR_SCOM1                                 , RULL(0x290F0131), SH_UNT_C_9      , SH_ACS_SCOM1_NC  );
REG64( C_9_CPPM_NC0INDIR_SCOM2                                 , RULL(0x290F0132), SH_UNT_C_9      , SH_ACS_SCOM2_NC  );
REG64( C_10_CPPM_NC0INDIR_SCOM                                 , RULL(0x2A0F0130), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_10_CPPM_NC0INDIR_SCOM1                                , RULL(0x2A0F0131), SH_UNT_C_10     , SH_ACS_SCOM1_NC  );
REG64( C_10_CPPM_NC0INDIR_SCOM2                                , RULL(0x2A0F0132), SH_UNT_C_10     , SH_ACS_SCOM2_NC  );
REG64( C_11_CPPM_NC0INDIR_SCOM                                 , RULL(0x2B0F0130), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_11_CPPM_NC0INDIR_SCOM1                                , RULL(0x2B0F0131), SH_UNT_C_11     , SH_ACS_SCOM1_NC  );
REG64( C_11_CPPM_NC0INDIR_SCOM2                                , RULL(0x2B0F0132), SH_UNT_C_11     , SH_ACS_SCOM2_NC  );
REG64( C_12_CPPM_NC0INDIR_SCOM                                 , RULL(0x2C0F0130), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_12_CPPM_NC0INDIR_SCOM1                                , RULL(0x2C0F0131), SH_UNT_C_12     , SH_ACS_SCOM1_NC  );
REG64( C_12_CPPM_NC0INDIR_SCOM2                                , RULL(0x2C0F0132), SH_UNT_C_12     , SH_ACS_SCOM2_NC  );
REG64( C_13_CPPM_NC0INDIR_SCOM                                 , RULL(0x2D0F0130), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_13_CPPM_NC0INDIR_SCOM1                                , RULL(0x2D0F0131), SH_UNT_C_13     , SH_ACS_SCOM1_NC  );
REG64( C_13_CPPM_NC0INDIR_SCOM2                                , RULL(0x2D0F0132), SH_UNT_C_13     , SH_ACS_SCOM2_NC  );
REG64( C_14_CPPM_NC0INDIR_SCOM                                 , RULL(0x2E0F0130), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_14_CPPM_NC0INDIR_SCOM1                                , RULL(0x2E0F0131), SH_UNT_C_14     , SH_ACS_SCOM1_NC  );
REG64( C_14_CPPM_NC0INDIR_SCOM2                                , RULL(0x2E0F0132), SH_UNT_C_14     , SH_ACS_SCOM2_NC  );
REG64( C_15_CPPM_NC0INDIR_SCOM                                 , RULL(0x2F0F0130), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_15_CPPM_NC0INDIR_SCOM1                                , RULL(0x2F0F0131), SH_UNT_C_15     , SH_ACS_SCOM1_NC  );
REG64( C_15_CPPM_NC0INDIR_SCOM2                                , RULL(0x2F0F0132), SH_UNT_C_15     , SH_ACS_SCOM2_NC  );
REG64( C_16_CPPM_NC0INDIR_SCOM                                 , RULL(0x300F0130), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_16_CPPM_NC0INDIR_SCOM1                                , RULL(0x300F0131), SH_UNT_C_16     , SH_ACS_SCOM1_NC  );
REG64( C_16_CPPM_NC0INDIR_SCOM2                                , RULL(0x300F0132), SH_UNT_C_16     , SH_ACS_SCOM2_NC  );
REG64( C_17_CPPM_NC0INDIR_SCOM                                 , RULL(0x310F0130), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_17_CPPM_NC0INDIR_SCOM1                                , RULL(0x310F0131), SH_UNT_C_17     , SH_ACS_SCOM1_NC  );
REG64( C_17_CPPM_NC0INDIR_SCOM2                                , RULL(0x310F0132), SH_UNT_C_17     , SH_ACS_SCOM2_NC  );
REG64( C_18_CPPM_NC0INDIR_SCOM                                 , RULL(0x320F0130), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_18_CPPM_NC0INDIR_SCOM1                                , RULL(0x320F0131), SH_UNT_C_18     , SH_ACS_SCOM1_NC  );
REG64( C_18_CPPM_NC0INDIR_SCOM2                                , RULL(0x320F0132), SH_UNT_C_18     , SH_ACS_SCOM2_NC  );
REG64( C_19_CPPM_NC0INDIR_SCOM                                 , RULL(0x330F0130), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_19_CPPM_NC0INDIR_SCOM1                                , RULL(0x330F0131), SH_UNT_C_19     , SH_ACS_SCOM1_NC  );
REG64( C_19_CPPM_NC0INDIR_SCOM2                                , RULL(0x330F0132), SH_UNT_C_19     , SH_ACS_SCOM2_NC  );
REG64( C_20_CPPM_NC0INDIR_SCOM                                 , RULL(0x340F0130), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_20_CPPM_NC0INDIR_SCOM1                                , RULL(0x340F0131), SH_UNT_C_20     , SH_ACS_SCOM1_NC  );
REG64( C_20_CPPM_NC0INDIR_SCOM2                                , RULL(0x340F0132), SH_UNT_C_20     , SH_ACS_SCOM2_NC  );
REG64( C_21_CPPM_NC0INDIR_SCOM                                 , RULL(0x350F0130), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_21_CPPM_NC0INDIR_SCOM1                                , RULL(0x350F0131), SH_UNT_C_21     , SH_ACS_SCOM1_NC  );
REG64( C_21_CPPM_NC0INDIR_SCOM2                                , RULL(0x350F0132), SH_UNT_C_21     , SH_ACS_SCOM2_NC  );
REG64( C_22_CPPM_NC0INDIR_SCOM                                 , RULL(0x360F0130), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_22_CPPM_NC0INDIR_SCOM1                                , RULL(0x360F0131), SH_UNT_C_22     , SH_ACS_SCOM1_NC  );
REG64( C_22_CPPM_NC0INDIR_SCOM2                                , RULL(0x360F0132), SH_UNT_C_22     , SH_ACS_SCOM2_NC  );
REG64( C_23_CPPM_NC0INDIR_SCOM                                 , RULL(0x370F0130), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( C_23_CPPM_NC0INDIR_SCOM1                                , RULL(0x370F0131), SH_UNT_C_23     , SH_ACS_SCOM1_NC  );
REG64( C_23_CPPM_NC0INDIR_SCOM2                                , RULL(0x370F0132), SH_UNT_C_23     , SH_ACS_SCOM2_NC  );
REG64( EX_CPPM_NC0INDIR_SCOM                                   , RULL(0x200F0130), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F0130,
REG64( EX_CPPM_NC0INDIR_SCOM1                                  , RULL(0x200F0131), SH_UNT_EX       ,
       SH_ACS_SCOM1_NC  ); //DUPS: 210F0131,
REG64( EX_CPPM_NC0INDIR_SCOM2                                  , RULL(0x200F0132), SH_UNT_EX       ,
       SH_ACS_SCOM2_NC  ); //DUPS: 210F0132,
REG64( EX_0_CPPM_NC0INDIR_SCOM                                 , RULL(0x200F0130), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F0130,
REG64( EX_0_CPPM_NC0INDIR_SCOM1                                , RULL(0x200F0131), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 210F0131,
REG64( EX_0_CPPM_NC0INDIR_SCOM2                                , RULL(0x200F0132), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 210F0132,
REG64( EX_1_CPPM_NC0INDIR_SCOM                                 , RULL(0x230F0130), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F0130,
REG64( EX_1_CPPM_NC0INDIR_SCOM1                                , RULL(0x230F0131), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 220F0131,
REG64( EX_1_CPPM_NC0INDIR_SCOM2                                , RULL(0x230F0132), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 220F0132,
REG64( EX_2_CPPM_NC0INDIR_SCOM                                 , RULL(0x240F0130), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F0130,
REG64( EX_2_CPPM_NC0INDIR_SCOM1                                , RULL(0x240F0131), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 250F0131,
REG64( EX_2_CPPM_NC0INDIR_SCOM2                                , RULL(0x240F0132), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 250F0132,
REG64( EX_3_CPPM_NC0INDIR_SCOM                                 , RULL(0x260F0130), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F0130,
REG64( EX_3_CPPM_NC0INDIR_SCOM1                                , RULL(0x260F0131), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 270F0131,
REG64( EX_3_CPPM_NC0INDIR_SCOM2                                , RULL(0x260F0132), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 270F0132,
REG64( EX_4_CPPM_NC0INDIR_SCOM                                 , RULL(0x280F0130), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F0130,
REG64( EX_4_CPPM_NC0INDIR_SCOM1                                , RULL(0x280F0131), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 290F0131,
REG64( EX_4_CPPM_NC0INDIR_SCOM2                                , RULL(0x280F0132), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 290F0132,
REG64( EX_5_CPPM_NC0INDIR_SCOM                                 , RULL(0x2A0F0130), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F0130,
REG64( EX_5_CPPM_NC0INDIR_SCOM1                                , RULL(0x2A0F0131), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2B0F0131,
REG64( EX_5_CPPM_NC0INDIR_SCOM2                                , RULL(0x2A0F0132), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2B0F0132,
REG64( EX_6_CPPM_NC0INDIR_SCOM                                 , RULL(0x2C0F0130), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F0130,
REG64( EX_6_CPPM_NC0INDIR_SCOM1                                , RULL(0x2C0F0131), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2D0F0131,
REG64( EX_6_CPPM_NC0INDIR_SCOM2                                , RULL(0x2C0F0132), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2D0F0132,
REG64( EX_7_CPPM_NC0INDIR_SCOM                                 , RULL(0x2E0F0130), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F0130,
REG64( EX_7_CPPM_NC0INDIR_SCOM1                                , RULL(0x2E0F0131), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2F0F0131,
REG64( EX_7_CPPM_NC0INDIR_SCOM2                                , RULL(0x2E0F0132), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2F0F0132,
REG64( EX_8_CPPM_NC0INDIR_SCOM                                 , RULL(0x300F0130), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F0130,
REG64( EX_8_CPPM_NC0INDIR_SCOM1                                , RULL(0x300F0131), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 310F0131,
REG64( EX_8_CPPM_NC0INDIR_SCOM2                                , RULL(0x300F0132), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 310F0132,
REG64( EX_9_CPPM_NC0INDIR_SCOM                                 , RULL(0x320F0130), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F0130,
REG64( EX_9_CPPM_NC0INDIR_SCOM1                                , RULL(0x320F0131), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 330F0131,
REG64( EX_9_CPPM_NC0INDIR_SCOM2                                , RULL(0x320F0132), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 330F0132,
REG64( EX_10_CPPM_NC0INDIR_SCOM                                , RULL(0x340F0130), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F0130,
REG64( EX_10_CPPM_NC0INDIR_SCOM1                               , RULL(0x340F0131), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_NC  ); //DUPS: 350F0131,
REG64( EX_10_CPPM_NC0INDIR_SCOM2                               , RULL(0x340F0132), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_NC  ); //DUPS: 350F0132,
REG64( EX_11_CPPM_NC0INDIR_SCOM                                , RULL(0x360F0130), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F0130,
REG64( EX_11_CPPM_NC0INDIR_SCOM1                               , RULL(0x360F0131), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_NC  ); //DUPS: 370F0131,
REG64( EX_11_CPPM_NC0INDIR_SCOM2                               , RULL(0x360F0132), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_NC  ); //DUPS: 370F0132,

REG64( C_CPPM_NC1INDIR_SCOM                                    , RULL(0x200F0133), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_CPPM_NC1INDIR_SCOM1                                   , RULL(0x200F0134), SH_UNT_C        , SH_ACS_SCOM1_NC  );
REG64( C_CPPM_NC1INDIR_SCOM2                                   , RULL(0x200F0135), SH_UNT_C        , SH_ACS_SCOM2_NC  );
REG64( C_0_CPPM_NC1INDIR_SCOM                                  , RULL(0x200F0133), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_0_CPPM_NC1INDIR_SCOM1                                 , RULL(0x200F0134), SH_UNT_C_0      , SH_ACS_SCOM1_NC  );
REG64( C_0_CPPM_NC1INDIR_SCOM2                                 , RULL(0x200F0135), SH_UNT_C_0      , SH_ACS_SCOM2_NC  );
REG64( C_1_CPPM_NC1INDIR_SCOM                                  , RULL(0x210F0133), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_1_CPPM_NC1INDIR_SCOM1                                 , RULL(0x210F0134), SH_UNT_C_1      , SH_ACS_SCOM1_NC  );
REG64( C_1_CPPM_NC1INDIR_SCOM2                                 , RULL(0x210F0135), SH_UNT_C_1      , SH_ACS_SCOM2_NC  );
REG64( C_2_CPPM_NC1INDIR_SCOM                                  , RULL(0x220F0133), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_2_CPPM_NC1INDIR_SCOM1                                 , RULL(0x220F0134), SH_UNT_C_2      , SH_ACS_SCOM1_NC  );
REG64( C_2_CPPM_NC1INDIR_SCOM2                                 , RULL(0x220F0135), SH_UNT_C_2      , SH_ACS_SCOM2_NC  );
REG64( C_3_CPPM_NC1INDIR_SCOM                                  , RULL(0x230F0133), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_3_CPPM_NC1INDIR_SCOM1                                 , RULL(0x230F0134), SH_UNT_C_3      , SH_ACS_SCOM1_NC  );
REG64( C_3_CPPM_NC1INDIR_SCOM2                                 , RULL(0x230F0135), SH_UNT_C_3      , SH_ACS_SCOM2_NC  );
REG64( C_4_CPPM_NC1INDIR_SCOM                                  , RULL(0x240F0133), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_4_CPPM_NC1INDIR_SCOM1                                 , RULL(0x240F0134), SH_UNT_C_4      , SH_ACS_SCOM1_NC  );
REG64( C_4_CPPM_NC1INDIR_SCOM2                                 , RULL(0x240F0135), SH_UNT_C_4      , SH_ACS_SCOM2_NC  );
REG64( C_5_CPPM_NC1INDIR_SCOM                                  , RULL(0x250F0133), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_5_CPPM_NC1INDIR_SCOM1                                 , RULL(0x250F0134), SH_UNT_C_5      , SH_ACS_SCOM1_NC  );
REG64( C_5_CPPM_NC1INDIR_SCOM2                                 , RULL(0x250F0135), SH_UNT_C_5      , SH_ACS_SCOM2_NC  );
REG64( C_6_CPPM_NC1INDIR_SCOM                                  , RULL(0x260F0133), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_6_CPPM_NC1INDIR_SCOM1                                 , RULL(0x260F0134), SH_UNT_C_6      , SH_ACS_SCOM1_NC  );
REG64( C_6_CPPM_NC1INDIR_SCOM2                                 , RULL(0x260F0135), SH_UNT_C_6      , SH_ACS_SCOM2_NC  );
REG64( C_7_CPPM_NC1INDIR_SCOM                                  , RULL(0x270F0133), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_7_CPPM_NC1INDIR_SCOM1                                 , RULL(0x270F0134), SH_UNT_C_7      , SH_ACS_SCOM1_NC  );
REG64( C_7_CPPM_NC1INDIR_SCOM2                                 , RULL(0x270F0135), SH_UNT_C_7      , SH_ACS_SCOM2_NC  );
REG64( C_8_CPPM_NC1INDIR_SCOM                                  , RULL(0x280F0133), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_8_CPPM_NC1INDIR_SCOM1                                 , RULL(0x280F0134), SH_UNT_C_8      , SH_ACS_SCOM1_NC  );
REG64( C_8_CPPM_NC1INDIR_SCOM2                                 , RULL(0x280F0135), SH_UNT_C_8      , SH_ACS_SCOM2_NC  );
REG64( C_9_CPPM_NC1INDIR_SCOM                                  , RULL(0x290F0133), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_9_CPPM_NC1INDIR_SCOM1                                 , RULL(0x290F0134), SH_UNT_C_9      , SH_ACS_SCOM1_NC  );
REG64( C_9_CPPM_NC1INDIR_SCOM2                                 , RULL(0x290F0135), SH_UNT_C_9      , SH_ACS_SCOM2_NC  );
REG64( C_10_CPPM_NC1INDIR_SCOM                                 , RULL(0x2A0F0133), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_10_CPPM_NC1INDIR_SCOM1                                , RULL(0x2A0F0134), SH_UNT_C_10     , SH_ACS_SCOM1_NC  );
REG64( C_10_CPPM_NC1INDIR_SCOM2                                , RULL(0x2A0F0135), SH_UNT_C_10     , SH_ACS_SCOM2_NC  );
REG64( C_11_CPPM_NC1INDIR_SCOM                                 , RULL(0x2B0F0133), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_11_CPPM_NC1INDIR_SCOM1                                , RULL(0x2B0F0134), SH_UNT_C_11     , SH_ACS_SCOM1_NC  );
REG64( C_11_CPPM_NC1INDIR_SCOM2                                , RULL(0x2B0F0135), SH_UNT_C_11     , SH_ACS_SCOM2_NC  );
REG64( C_12_CPPM_NC1INDIR_SCOM                                 , RULL(0x2C0F0133), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_12_CPPM_NC1INDIR_SCOM1                                , RULL(0x2C0F0134), SH_UNT_C_12     , SH_ACS_SCOM1_NC  );
REG64( C_12_CPPM_NC1INDIR_SCOM2                                , RULL(0x2C0F0135), SH_UNT_C_12     , SH_ACS_SCOM2_NC  );
REG64( C_13_CPPM_NC1INDIR_SCOM                                 , RULL(0x2D0F0133), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_13_CPPM_NC1INDIR_SCOM1                                , RULL(0x2D0F0134), SH_UNT_C_13     , SH_ACS_SCOM1_NC  );
REG64( C_13_CPPM_NC1INDIR_SCOM2                                , RULL(0x2D0F0135), SH_UNT_C_13     , SH_ACS_SCOM2_NC  );
REG64( C_14_CPPM_NC1INDIR_SCOM                                 , RULL(0x2E0F0133), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_14_CPPM_NC1INDIR_SCOM1                                , RULL(0x2E0F0134), SH_UNT_C_14     , SH_ACS_SCOM1_NC  );
REG64( C_14_CPPM_NC1INDIR_SCOM2                                , RULL(0x2E0F0135), SH_UNT_C_14     , SH_ACS_SCOM2_NC  );
REG64( C_15_CPPM_NC1INDIR_SCOM                                 , RULL(0x2F0F0133), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_15_CPPM_NC1INDIR_SCOM1                                , RULL(0x2F0F0134), SH_UNT_C_15     , SH_ACS_SCOM1_NC  );
REG64( C_15_CPPM_NC1INDIR_SCOM2                                , RULL(0x2F0F0135), SH_UNT_C_15     , SH_ACS_SCOM2_NC  );
REG64( C_16_CPPM_NC1INDIR_SCOM                                 , RULL(0x300F0133), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_16_CPPM_NC1INDIR_SCOM1                                , RULL(0x300F0134), SH_UNT_C_16     , SH_ACS_SCOM1_NC  );
REG64( C_16_CPPM_NC1INDIR_SCOM2                                , RULL(0x300F0135), SH_UNT_C_16     , SH_ACS_SCOM2_NC  );
REG64( C_17_CPPM_NC1INDIR_SCOM                                 , RULL(0x310F0133), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_17_CPPM_NC1INDIR_SCOM1                                , RULL(0x310F0134), SH_UNT_C_17     , SH_ACS_SCOM1_NC  );
REG64( C_17_CPPM_NC1INDIR_SCOM2                                , RULL(0x310F0135), SH_UNT_C_17     , SH_ACS_SCOM2_NC  );
REG64( C_18_CPPM_NC1INDIR_SCOM                                 , RULL(0x320F0133), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_18_CPPM_NC1INDIR_SCOM1                                , RULL(0x320F0134), SH_UNT_C_18     , SH_ACS_SCOM1_NC  );
REG64( C_18_CPPM_NC1INDIR_SCOM2                                , RULL(0x320F0135), SH_UNT_C_18     , SH_ACS_SCOM2_NC  );
REG64( C_19_CPPM_NC1INDIR_SCOM                                 , RULL(0x330F0133), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_19_CPPM_NC1INDIR_SCOM1                                , RULL(0x330F0134), SH_UNT_C_19     , SH_ACS_SCOM1_NC  );
REG64( C_19_CPPM_NC1INDIR_SCOM2                                , RULL(0x330F0135), SH_UNT_C_19     , SH_ACS_SCOM2_NC  );
REG64( C_20_CPPM_NC1INDIR_SCOM                                 , RULL(0x340F0133), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_20_CPPM_NC1INDIR_SCOM1                                , RULL(0x340F0134), SH_UNT_C_20     , SH_ACS_SCOM1_NC  );
REG64( C_20_CPPM_NC1INDIR_SCOM2                                , RULL(0x340F0135), SH_UNT_C_20     , SH_ACS_SCOM2_NC  );
REG64( C_21_CPPM_NC1INDIR_SCOM                                 , RULL(0x350F0133), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_21_CPPM_NC1INDIR_SCOM1                                , RULL(0x350F0134), SH_UNT_C_21     , SH_ACS_SCOM1_NC  );
REG64( C_21_CPPM_NC1INDIR_SCOM2                                , RULL(0x350F0135), SH_UNT_C_21     , SH_ACS_SCOM2_NC  );
REG64( C_22_CPPM_NC1INDIR_SCOM                                 , RULL(0x360F0133), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_22_CPPM_NC1INDIR_SCOM1                                , RULL(0x360F0134), SH_UNT_C_22     , SH_ACS_SCOM1_NC  );
REG64( C_22_CPPM_NC1INDIR_SCOM2                                , RULL(0x360F0135), SH_UNT_C_22     , SH_ACS_SCOM2_NC  );
REG64( C_23_CPPM_NC1INDIR_SCOM                                 , RULL(0x370F0133), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( C_23_CPPM_NC1INDIR_SCOM1                                , RULL(0x370F0134), SH_UNT_C_23     , SH_ACS_SCOM1_NC  );
REG64( C_23_CPPM_NC1INDIR_SCOM2                                , RULL(0x370F0135), SH_UNT_C_23     , SH_ACS_SCOM2_NC  );
REG64( EX_CPPM_NC1INDIR_SCOM                                   , RULL(0x200F0133), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F0133,
REG64( EX_CPPM_NC1INDIR_SCOM1                                  , RULL(0x200F0134), SH_UNT_EX       ,
       SH_ACS_SCOM1_NC  ); //DUPS: 210F0134,
REG64( EX_CPPM_NC1INDIR_SCOM2                                  , RULL(0x200F0135), SH_UNT_EX       ,
       SH_ACS_SCOM2_NC  ); //DUPS: 210F0135,
REG64( EX_0_CPPM_NC1INDIR_SCOM                                 , RULL(0x200F0133), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F0133,
REG64( EX_0_CPPM_NC1INDIR_SCOM1                                , RULL(0x200F0134), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 210F0134,
REG64( EX_0_CPPM_NC1INDIR_SCOM2                                , RULL(0x200F0135), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 210F0135,
REG64( EX_1_CPPM_NC1INDIR_SCOM                                 , RULL(0x230F0133), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F0133,
REG64( EX_1_CPPM_NC1INDIR_SCOM1                                , RULL(0x230F0134), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 220F0134,
REG64( EX_1_CPPM_NC1INDIR_SCOM2                                , RULL(0x230F0135), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 220F0135,
REG64( EX_2_CPPM_NC1INDIR_SCOM                                 , RULL(0x240F0133), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F0133,
REG64( EX_2_CPPM_NC1INDIR_SCOM1                                , RULL(0x240F0134), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 250F0134,
REG64( EX_2_CPPM_NC1INDIR_SCOM2                                , RULL(0x240F0135), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 250F0135,
REG64( EX_3_CPPM_NC1INDIR_SCOM                                 , RULL(0x260F0133), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F0133,
REG64( EX_3_CPPM_NC1INDIR_SCOM1                                , RULL(0x260F0134), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 270F0134,
REG64( EX_3_CPPM_NC1INDIR_SCOM2                                , RULL(0x260F0135), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 270F0135,
REG64( EX_4_CPPM_NC1INDIR_SCOM                                 , RULL(0x280F0133), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F0133,
REG64( EX_4_CPPM_NC1INDIR_SCOM1                                , RULL(0x280F0134), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 290F0134,
REG64( EX_4_CPPM_NC1INDIR_SCOM2                                , RULL(0x280F0135), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 290F0135,
REG64( EX_5_CPPM_NC1INDIR_SCOM                                 , RULL(0x2A0F0133), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F0133,
REG64( EX_5_CPPM_NC1INDIR_SCOM1                                , RULL(0x2A0F0134), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2B0F0134,
REG64( EX_5_CPPM_NC1INDIR_SCOM2                                , RULL(0x2A0F0135), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2B0F0135,
REG64( EX_6_CPPM_NC1INDIR_SCOM                                 , RULL(0x2C0F0133), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F0133,
REG64( EX_6_CPPM_NC1INDIR_SCOM1                                , RULL(0x2C0F0134), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2D0F0134,
REG64( EX_6_CPPM_NC1INDIR_SCOM2                                , RULL(0x2C0F0135), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2D0F0135,
REG64( EX_7_CPPM_NC1INDIR_SCOM                                 , RULL(0x2E0F0133), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F0133,
REG64( EX_7_CPPM_NC1INDIR_SCOM1                                , RULL(0x2E0F0134), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2F0F0134,
REG64( EX_7_CPPM_NC1INDIR_SCOM2                                , RULL(0x2E0F0135), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2F0F0135,
REG64( EX_8_CPPM_NC1INDIR_SCOM                                 , RULL(0x300F0133), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F0133,
REG64( EX_8_CPPM_NC1INDIR_SCOM1                                , RULL(0x300F0134), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 310F0134,
REG64( EX_8_CPPM_NC1INDIR_SCOM2                                , RULL(0x300F0135), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 310F0135,
REG64( EX_9_CPPM_NC1INDIR_SCOM                                 , RULL(0x320F0133), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F0133,
REG64( EX_9_CPPM_NC1INDIR_SCOM1                                , RULL(0x320F0134), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 330F0134,
REG64( EX_9_CPPM_NC1INDIR_SCOM2                                , RULL(0x320F0135), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 330F0135,
REG64( EX_10_CPPM_NC1INDIR_SCOM                                , RULL(0x340F0133), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F0133,
REG64( EX_10_CPPM_NC1INDIR_SCOM1                               , RULL(0x340F0134), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_NC  ); //DUPS: 350F0134,
REG64( EX_10_CPPM_NC1INDIR_SCOM2                               , RULL(0x340F0135), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_NC  ); //DUPS: 350F0135,
REG64( EX_11_CPPM_NC1INDIR_SCOM                                , RULL(0x360F0133), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F0133,
REG64( EX_11_CPPM_NC1INDIR_SCOM1                               , RULL(0x360F0134), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_NC  ); //DUPS: 370F0134,
REG64( EX_11_CPPM_NC1INDIR_SCOM2                               , RULL(0x360F0135), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_NC  ); //DUPS: 370F0135,

REG64( C_CPPM_PECES                                            , RULL(0x200F01AF), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CPPM_PECES                                          , RULL(0x200F01AF), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CPPM_PECES                                          , RULL(0x210F01AF), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CPPM_PECES                                          , RULL(0x220F01AF), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CPPM_PECES                                          , RULL(0x230F01AF), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CPPM_PECES                                          , RULL(0x240F01AF), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CPPM_PECES                                          , RULL(0x250F01AF), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CPPM_PECES                                          , RULL(0x260F01AF), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CPPM_PECES                                          , RULL(0x270F01AF), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CPPM_PECES                                          , RULL(0x280F01AF), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CPPM_PECES                                          , RULL(0x290F01AF), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CPPM_PECES                                         , RULL(0x2A0F01AF), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CPPM_PECES                                         , RULL(0x2B0F01AF), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CPPM_PECES                                         , RULL(0x2C0F01AF), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CPPM_PECES                                         , RULL(0x2D0F01AF), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CPPM_PECES                                         , RULL(0x2E0F01AF), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CPPM_PECES                                         , RULL(0x2F0F01AF), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CPPM_PECES                                         , RULL(0x300F01AF), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CPPM_PECES                                         , RULL(0x310F01AF), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CPPM_PECES                                         , RULL(0x320F01AF), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CPPM_PECES                                         , RULL(0x330F01AF), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CPPM_PECES                                         , RULL(0x340F01AF), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CPPM_PECES                                         , RULL(0x350F01AF), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CPPM_PECES                                         , RULL(0x360F01AF), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CPPM_PECES                                         , RULL(0x370F01AF), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_CPPM_PECES                                           , RULL(0x200F01AF), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F01AF,
REG64( EX_0_CPPM_PECES                                         , RULL(0x200F01AF), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F01AF,
REG64( EX_1_CPPM_PECES                                         , RULL(0x230F01AF), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F01AF,
REG64( EX_2_CPPM_PECES                                         , RULL(0x240F01AF), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F01AF,
REG64( EX_3_CPPM_PECES                                         , RULL(0x260F01AF), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F01AF,
REG64( EX_4_CPPM_PECES                                         , RULL(0x280F01AF), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F01AF,
REG64( EX_5_CPPM_PECES                                         , RULL(0x2A0F01AF), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F01AF,
REG64( EX_6_CPPM_PECES                                         , RULL(0x2C0F01AF), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F01AF,
REG64( EX_7_CPPM_PECES                                         , RULL(0x2E0F01AF), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F01AF,
REG64( EX_8_CPPM_PECES                                         , RULL(0x300F01AF), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F01AF,
REG64( EX_9_CPPM_PECES                                         , RULL(0x320F01AF), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F01AF,
REG64( EX_10_CPPM_PECES                                        , RULL(0x340F01AF), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F01AF,
REG64( EX_11_CPPM_PECES                                        , RULL(0x360F01AF), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F01AF,

REG64( C_CPPM_PERRSUM                                          , RULL(0x200F0120), SH_UNT_C        ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_0_CPPM_PERRSUM                                        , RULL(0x200F0120), SH_UNT_C_0      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_1_CPPM_PERRSUM                                        , RULL(0x210F0120), SH_UNT_C_1      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_2_CPPM_PERRSUM                                        , RULL(0x220F0120), SH_UNT_C_2      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_3_CPPM_PERRSUM                                        , RULL(0x230F0120), SH_UNT_C_3      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_4_CPPM_PERRSUM                                        , RULL(0x240F0120), SH_UNT_C_4      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_5_CPPM_PERRSUM                                        , RULL(0x250F0120), SH_UNT_C_5      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_6_CPPM_PERRSUM                                        , RULL(0x260F0120), SH_UNT_C_6      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_7_CPPM_PERRSUM                                        , RULL(0x270F0120), SH_UNT_C_7      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_8_CPPM_PERRSUM                                        , RULL(0x280F0120), SH_UNT_C_8      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_9_CPPM_PERRSUM                                        , RULL(0x290F0120), SH_UNT_C_9      ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_10_CPPM_PERRSUM                                       , RULL(0x2A0F0120), SH_UNT_C_10     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_11_CPPM_PERRSUM                                       , RULL(0x2B0F0120), SH_UNT_C_11     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_12_CPPM_PERRSUM                                       , RULL(0x2C0F0120), SH_UNT_C_12     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_13_CPPM_PERRSUM                                       , RULL(0x2D0F0120), SH_UNT_C_13     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_14_CPPM_PERRSUM                                       , RULL(0x2E0F0120), SH_UNT_C_14     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_15_CPPM_PERRSUM                                       , RULL(0x2F0F0120), SH_UNT_C_15     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_16_CPPM_PERRSUM                                       , RULL(0x300F0120), SH_UNT_C_16     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_17_CPPM_PERRSUM                                       , RULL(0x310F0120), SH_UNT_C_17     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_18_CPPM_PERRSUM                                       , RULL(0x320F0120), SH_UNT_C_18     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_19_CPPM_PERRSUM                                       , RULL(0x330F0120), SH_UNT_C_19     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_20_CPPM_PERRSUM                                       , RULL(0x340F0120), SH_UNT_C_20     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_21_CPPM_PERRSUM                                       , RULL(0x350F0120), SH_UNT_C_21     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_22_CPPM_PERRSUM                                       , RULL(0x360F0120), SH_UNT_C_22     ,
       SH_ACS_SCOM_WCLEAR );
REG64( C_23_CPPM_PERRSUM                                       , RULL(0x370F0120), SH_UNT_C_23     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EX_CPPM_PERRSUM                                         , RULL(0x200F0120), SH_UNT_EX       ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 210F0120,
REG64( EX_0_CPPM_PERRSUM                                       , RULL(0x200F0120), SH_UNT_EX_0     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 210F0120,
REG64( EX_1_CPPM_PERRSUM                                       , RULL(0x230F0120), SH_UNT_EX_1     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 220F0120,
REG64( EX_2_CPPM_PERRSUM                                       , RULL(0x240F0120), SH_UNT_EX_2     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 250F0120,
REG64( EX_3_CPPM_PERRSUM                                       , RULL(0x260F0120), SH_UNT_EX_3     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 270F0120,
REG64( EX_4_CPPM_PERRSUM                                       , RULL(0x280F0120), SH_UNT_EX_4     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 290F0120,
REG64( EX_5_CPPM_PERRSUM                                       , RULL(0x2A0F0120), SH_UNT_EX_5     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 2B0F0120,
REG64( EX_6_CPPM_PERRSUM                                       , RULL(0x2C0F0120), SH_UNT_EX_6     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 2D0F0120,
REG64( EX_7_CPPM_PERRSUM                                       , RULL(0x2E0F0120), SH_UNT_EX_7     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 2F0F0120,
REG64( EX_8_CPPM_PERRSUM                                       , RULL(0x300F0120), SH_UNT_EX_8     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 310F0120,
REG64( EX_9_CPPM_PERRSUM                                       , RULL(0x320F0120), SH_UNT_EX_9     ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 330F0120,
REG64( EX_10_CPPM_PERRSUM                                      , RULL(0x340F0120), SH_UNT_EX_10    ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 350F0120,
REG64( EX_11_CPPM_PERRSUM                                      , RULL(0x360F0120), SH_UNT_EX_11    ,
       SH_ACS_SCOM_WCLEAR ); //DUPS: 370F0120,

REG64( PEC_0_STACK0_CQSTAT_REG                                 , RULL(0x04010C4C), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_0_STACK1_CQSTAT_REG                                 , RULL(0x04010C8C), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_0_STACK2_CQSTAT_REG                                 , RULL(0x04010CCC), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK0_CQSTAT_REG                                 , RULL(0x0401104C), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK1_CQSTAT_REG                                 , RULL(0x0401108C), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_1_STACK2_CQSTAT_REG                                 , RULL(0x040110CC), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK0_CQSTAT_REG                                 , RULL(0x0401144C), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK1_CQSTAT_REG                                 , RULL(0x0401148C), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_2_STACK2_CQSTAT_REG                                 , RULL(0x040114CC), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK0_CQSTAT_REG                                   , RULL(0x04010C4C), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK1_CQSTAT_REG                                   , RULL(0x04010C8C), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RO   );
REG64( PEC_STACK2_CQSTAT_REG                                   , RULL(0x04010CCC), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RO   );

REG64( EQ_CSAR                                                 , RULL(0x1001280D), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001240D,
REG64( EQ_0_CSAR                                               , RULL(0x1001280D), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001240D,
REG64( EQ_1_CSAR                                               , RULL(0x1101280D), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1101240D,
REG64( EQ_2_CSAR                                               , RULL(0x1201280D), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1201240D,
REG64( EQ_3_CSAR                                               , RULL(0x1301280D), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1301240D,
REG64( EQ_4_CSAR                                               , RULL(0x1401280D), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1401240D,
REG64( EQ_5_CSAR                                               , RULL(0x1501280D), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1501240D,
REG64( EX_CSAR                                                 , RULL(0x1001240D), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CSAR                                               , RULL(0x1001240D), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CSAR                                               , RULL(0x1001280D), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CSAR                                               , RULL(0x1101240D), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CSAR                                               , RULL(0x1101280D), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CSAR                                               , RULL(0x1201240D), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CSAR                                               , RULL(0x1201280D), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CSAR                                               , RULL(0x1301240D), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CSAR                                               , RULL(0x1301280D), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CSAR                                               , RULL(0x1401240D), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CSAR                                               , RULL(0x1401280D), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CSAR                                              , RULL(0x1501240D), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CSAR                                              , RULL(0x1501280D), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( EQ_CSCR                                                 , RULL(0x1001280A), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001240A,
REG64( EQ_CSCR_CLEAR                                           , RULL(0x1001280B), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1001240B,
REG64( EQ_CSCR_OR                                              , RULL(0x1001280C), SH_UNT_EQ       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1001240C,
REG64( EQ_0_CSCR                                               , RULL(0x1001280A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001240A,
REG64( EQ_0_CSCR_CLEAR                                         , RULL(0x1001280B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1001240B,
REG64( EQ_0_CSCR_OR                                            , RULL(0x1001280C), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1001240C,
REG64( EQ_1_CSCR                                               , RULL(0x1101280A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1101240A,
REG64( EQ_1_CSCR_CLEAR                                         , RULL(0x1101280B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1101240B,
REG64( EQ_1_CSCR_OR                                            , RULL(0x1101280C), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1101240C,
REG64( EQ_2_CSCR                                               , RULL(0x1201280A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1201240A,
REG64( EQ_2_CSCR_CLEAR                                         , RULL(0x1201280B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1201240B,
REG64( EQ_2_CSCR_OR                                            , RULL(0x1201280C), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1201240C,
REG64( EQ_3_CSCR                                               , RULL(0x1301280A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1301240A,
REG64( EQ_3_CSCR_CLEAR                                         , RULL(0x1301280B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1301240B,
REG64( EQ_3_CSCR_OR                                            , RULL(0x1301280C), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1301240C,
REG64( EQ_4_CSCR                                               , RULL(0x1401280A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1401240A,
REG64( EQ_4_CSCR_CLEAR                                         , RULL(0x1401280B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1401240B,
REG64( EQ_4_CSCR_OR                                            , RULL(0x1401280C), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1401240C,
REG64( EQ_5_CSCR                                               , RULL(0x1501280A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1501240A,
REG64( EQ_5_CSCR_CLEAR                                         , RULL(0x1501280B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 1501240B,
REG64( EQ_5_CSCR_OR                                            , RULL(0x1501280C), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 1501240C,
REG64( EX_CSCR                                                 , RULL(0x1001240A), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_CSCR_CLEAR                                           , RULL(0x1001240B), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_CSCR_OR                                              , RULL(0x1001240C), SH_UNT_EX       , SH_ACS_SCOM2_OR  );
REG64( EX_0_CSCR                                               , RULL(0x1001240A), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_0_CSCR_CLEAR                                         , RULL(0x1001240B), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_0_CSCR_OR                                            , RULL(0x1001240C), SH_UNT_EX_0     , SH_ACS_SCOM2_OR  );
REG64( EX_1_CSCR                                               , RULL(0x1001280A), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_1_CSCR_CLEAR                                         , RULL(0x1001280B), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_1_CSCR_OR                                            , RULL(0x1001280C), SH_UNT_EX_1     , SH_ACS_SCOM2_OR  );
REG64( EX_2_CSCR                                               , RULL(0x1101240A), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_2_CSCR_CLEAR                                         , RULL(0x1101240B), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_2_CSCR_OR                                            , RULL(0x1101240C), SH_UNT_EX_2     , SH_ACS_SCOM2_OR  );
REG64( EX_3_CSCR                                               , RULL(0x1101280A), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_3_CSCR_CLEAR                                         , RULL(0x1101280B), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_3_CSCR_OR                                            , RULL(0x1101280C), SH_UNT_EX_3     , SH_ACS_SCOM2_OR  );
REG64( EX_4_CSCR                                               , RULL(0x1201240A), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_4_CSCR_CLEAR                                         , RULL(0x1201240B), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_4_CSCR_OR                                            , RULL(0x1201240C), SH_UNT_EX_4     , SH_ACS_SCOM2_OR  );
REG64( EX_5_CSCR                                               , RULL(0x1201280A), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_5_CSCR_CLEAR                                         , RULL(0x1201280B), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_5_CSCR_OR                                            , RULL(0x1201280C), SH_UNT_EX_5     , SH_ACS_SCOM2_OR  );
REG64( EX_6_CSCR                                               , RULL(0x1301240A), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_6_CSCR_CLEAR                                         , RULL(0x1301240B), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_6_CSCR_OR                                            , RULL(0x1301240C), SH_UNT_EX_6     , SH_ACS_SCOM2_OR  );
REG64( EX_7_CSCR                                               , RULL(0x1301280A), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_7_CSCR_CLEAR                                         , RULL(0x1301280B), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_7_CSCR_OR                                            , RULL(0x1301280C), SH_UNT_EX_7     , SH_ACS_SCOM2_OR  );
REG64( EX_8_CSCR                                               , RULL(0x1401240A), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_8_CSCR_CLEAR                                         , RULL(0x1401240B), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_8_CSCR_OR                                            , RULL(0x1401240C), SH_UNT_EX_8     , SH_ACS_SCOM2_OR  );
REG64( EX_9_CSCR                                               , RULL(0x1401280A), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_9_CSCR_CLEAR                                         , RULL(0x1401280B), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_9_CSCR_OR                                            , RULL(0x1401280C), SH_UNT_EX_9     , SH_ACS_SCOM2_OR  );
REG64( EX_10_CSCR                                              , RULL(0x1501240A), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_10_CSCR_CLEAR                                        , RULL(0x1501240B), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_10_CSCR_OR                                           , RULL(0x1501240C), SH_UNT_EX_10    , SH_ACS_SCOM2_OR  );
REG64( EX_11_CSCR                                              , RULL(0x1501280A), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_11_CSCR_CLEAR                                        , RULL(0x1501280B), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR );
REG64( EX_11_CSCR_OR                                           , RULL(0x1501280C), SH_UNT_EX_11    , SH_ACS_SCOM2_OR  );

REG64( EQ_CSDR                                                 , RULL(0x1001280E), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001240E,
REG64( EQ_0_CSDR                                               , RULL(0x1001280E), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1001240E,
REG64( EQ_1_CSDR                                               , RULL(0x1101280E), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1101240E,
REG64( EQ_2_CSDR                                               , RULL(0x1201280E), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1201240E,
REG64( EQ_3_CSDR                                               , RULL(0x1301280E), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1301240E,
REG64( EQ_4_CSDR                                               , RULL(0x1401280E), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1401240E,
REG64( EQ_5_CSDR                                               , RULL(0x1501280E), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 1501240E,
REG64( EX_CSDR                                                 , RULL(0x1001240E), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_CSDR                                               , RULL(0x1001240E), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_CSDR                                               , RULL(0x1001280E), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_CSDR                                               , RULL(0x1101240E), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_CSDR                                               , RULL(0x1101280E), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_CSDR                                               , RULL(0x1201240E), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_CSDR                                               , RULL(0x1201280E), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_CSDR                                               , RULL(0x1301240E), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_CSDR                                               , RULL(0x1301280E), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_CSDR                                               , RULL(0x1401240E), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_CSDR                                               , RULL(0x1401280E), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_10_CSDR                                              , RULL(0x1501240E), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_CSDR                                              , RULL(0x1501280E), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );

REG64( C_CTRL                                                  , RULL(0x20010A85), SH_UNT_C        , SH_ACS_SCOM_NC   );
REG64( C_0_CTRL                                                , RULL(0x20010A85), SH_UNT_C_0      , SH_ACS_SCOM_NC   );
REG64( C_1_CTRL                                                , RULL(0x21010A85), SH_UNT_C_1      , SH_ACS_SCOM_NC   );
REG64( C_2_CTRL                                                , RULL(0x22010A85), SH_UNT_C_2      , SH_ACS_SCOM_NC   );
REG64( C_3_CTRL                                                , RULL(0x23010A85), SH_UNT_C_3      , SH_ACS_SCOM_NC   );
REG64( C_4_CTRL                                                , RULL(0x24010A85), SH_UNT_C_4      , SH_ACS_SCOM_NC   );
REG64( C_5_CTRL                                                , RULL(0x25010A85), SH_UNT_C_5      , SH_ACS_SCOM_NC   );
REG64( C_6_CTRL                                                , RULL(0x26010A85), SH_UNT_C_6      , SH_ACS_SCOM_NC   );
REG64( C_7_CTRL                                                , RULL(0x27010A85), SH_UNT_C_7      , SH_ACS_SCOM_NC   );
REG64( C_8_CTRL                                                , RULL(0x28010A85), SH_UNT_C_8      , SH_ACS_SCOM_NC   );
REG64( C_9_CTRL                                                , RULL(0x29010A85), SH_UNT_C_9      , SH_ACS_SCOM_NC   );
REG64( C_10_CTRL                                               , RULL(0x2A010A85), SH_UNT_C_10     , SH_ACS_SCOM_NC   );
REG64( C_11_CTRL                                               , RULL(0x2B010A85), SH_UNT_C_11     , SH_ACS_SCOM_NC   );
REG64( C_12_CTRL                                               , RULL(0x2C010A85), SH_UNT_C_12     , SH_ACS_SCOM_NC   );
REG64( C_13_CTRL                                               , RULL(0x2D010A85), SH_UNT_C_13     , SH_ACS_SCOM_NC   );
REG64( C_14_CTRL                                               , RULL(0x2E010A85), SH_UNT_C_14     , SH_ACS_SCOM_NC   );
REG64( C_15_CTRL                                               , RULL(0x2F010A85), SH_UNT_C_15     , SH_ACS_SCOM_NC   );
REG64( C_16_CTRL                                               , RULL(0x30010A85), SH_UNT_C_16     , SH_ACS_SCOM_NC   );
REG64( C_17_CTRL                                               , RULL(0x31010A85), SH_UNT_C_17     , SH_ACS_SCOM_NC   );
REG64( C_18_CTRL                                               , RULL(0x32010A85), SH_UNT_C_18     , SH_ACS_SCOM_NC   );
REG64( C_19_CTRL                                               , RULL(0x33010A85), SH_UNT_C_19     , SH_ACS_SCOM_NC   );
REG64( C_20_CTRL                                               , RULL(0x34010A85), SH_UNT_C_20     , SH_ACS_SCOM_NC   );
REG64( C_21_CTRL                                               , RULL(0x35010A85), SH_UNT_C_21     , SH_ACS_SCOM_NC   );
REG64( C_22_CTRL                                               , RULL(0x36010A85), SH_UNT_C_22     , SH_ACS_SCOM_NC   );
REG64( C_23_CTRL                                               , RULL(0x37010A85), SH_UNT_C_23     , SH_ACS_SCOM_NC   );
REG64( EX_0_L2_CTRL                                            , RULL(0x21010A85), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 20010A85,
REG64( EX_10_L2_CTRL                                           , RULL(0x35010A85), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_NC   ); //DUPS: 34010A85,
REG64( EX_11_L2_CTRL                                           , RULL(0x37010A85), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_NC   ); //DUPS: 36010A85,
REG64( EX_1_L2_CTRL                                            , RULL(0x23010A85), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 22010A85,
REG64( EX_2_L2_CTRL                                            , RULL(0x25010A85), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 24010A85,
REG64( EX_3_L2_CTRL                                            , RULL(0x27010A85), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 26010A85,
REG64( EX_4_L2_CTRL                                            , RULL(0x29010A85), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 28010A85,
REG64( EX_5_L2_CTRL                                            , RULL(0x2B010A85), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 2A010A85,
REG64( EX_6_L2_CTRL                                            , RULL(0x2D010A85), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 2C010A85,
REG64( EX_7_L2_CTRL                                            , RULL(0x2F010A85), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 2E010A85,
REG64( EX_8_L2_CTRL                                            , RULL(0x31010A85), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 30010A85,
REG64( EX_9_L2_CTRL                                            , RULL(0x33010A85), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_NC   ); //DUPS: 32010A85,
REG64( EX_L2_CTRL                                              , RULL(0x21010A85), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_NC   ); //DUPS: 20010A85,

REG64( C_CTRL_ATOMIC_LOCK_REG                                  , RULL(0x200003FF), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CTRL_ATOMIC_LOCK_REG                                , RULL(0x200003FF), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CTRL_ATOMIC_LOCK_REG                                , RULL(0x210003FF), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CTRL_ATOMIC_LOCK_REG                                , RULL(0x220003FF), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CTRL_ATOMIC_LOCK_REG                                , RULL(0x230003FF), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CTRL_ATOMIC_LOCK_REG                                , RULL(0x240003FF), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CTRL_ATOMIC_LOCK_REG                                , RULL(0x250003FF), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CTRL_ATOMIC_LOCK_REG                                , RULL(0x260003FF), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CTRL_ATOMIC_LOCK_REG                                , RULL(0x270003FF), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CTRL_ATOMIC_LOCK_REG                                , RULL(0x280003FF), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CTRL_ATOMIC_LOCK_REG                                , RULL(0x290003FF), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2A0003FF), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2B0003FF), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2C0003FF), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2D0003FF), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2E0003FF), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2F0003FF), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CTRL_ATOMIC_LOCK_REG                               , RULL(0x300003FF), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CTRL_ATOMIC_LOCK_REG                               , RULL(0x310003FF), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CTRL_ATOMIC_LOCK_REG                               , RULL(0x320003FF), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CTRL_ATOMIC_LOCK_REG                               , RULL(0x330003FF), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CTRL_ATOMIC_LOCK_REG                               , RULL(0x340003FF), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CTRL_ATOMIC_LOCK_REG                               , RULL(0x350003FF), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CTRL_ATOMIC_LOCK_REG                               , RULL(0x360003FF), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CTRL_ATOMIC_LOCK_REG                               , RULL(0x370003FF), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CTRL_ATOMIC_LOCK_REG                                 , RULL(0x100003FF), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CTRL_ATOMIC_LOCK_REG                               , RULL(0x100003FF), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CTRL_ATOMIC_LOCK_REG                               , RULL(0x110003FF), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CTRL_ATOMIC_LOCK_REG                               , RULL(0x120003FF), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CTRL_ATOMIC_LOCK_REG                               , RULL(0x130003FF), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CTRL_ATOMIC_LOCK_REG                               , RULL(0x140003FF), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CTRL_ATOMIC_LOCK_REG                               , RULL(0x150003FF), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CTRL_ATOMIC_LOCK_REG                                 , RULL(0x200003FF), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210003FF,
REG64( EX_0_CTRL_ATOMIC_LOCK_REG                               , RULL(0x200003FF), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210003FF,
REG64( EX_1_CTRL_ATOMIC_LOCK_REG                               , RULL(0x220003FF), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230003FF,
REG64( EX_2_CTRL_ATOMIC_LOCK_REG                               , RULL(0x240003FF), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250003FF,
REG64( EX_3_CTRL_ATOMIC_LOCK_REG                               , RULL(0x260003FF), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270003FF,
REG64( EX_4_CTRL_ATOMIC_LOCK_REG                               , RULL(0x280003FF), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290003FF,
REG64( EX_5_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2A0003FF), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0003FF,
REG64( EX_6_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2C0003FF), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0003FF,
REG64( EX_7_CTRL_ATOMIC_LOCK_REG                               , RULL(0x2E0003FF), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0003FF,
REG64( EX_8_CTRL_ATOMIC_LOCK_REG                               , RULL(0x300003FF), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310003FF,
REG64( EX_9_CTRL_ATOMIC_LOCK_REG                               , RULL(0x320003FF), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330003FF,
REG64( EX_10_CTRL_ATOMIC_LOCK_REG                              , RULL(0x340003FF), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350003FF,
REG64( EX_11_CTRL_ATOMIC_LOCK_REG                              , RULL(0x360003FF), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370003FF,

REG64( PEC_0_CTRL_ATOMIC_LOCK_REG                              , RULL(0x0D0003FF), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CTRL_ATOMIC_LOCK_REG                              , RULL(0x0E0003FF), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CTRL_ATOMIC_LOCK_REG                              , RULL(0x0F0003FF), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_CTRL_PROTECT_MODE_REG                                 , RULL(0x200003FE), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_CTRL_PROTECT_MODE_REG                               , RULL(0x200003FE), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_CTRL_PROTECT_MODE_REG                               , RULL(0x210003FE), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_CTRL_PROTECT_MODE_REG                               , RULL(0x220003FE), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_CTRL_PROTECT_MODE_REG                               , RULL(0x230003FE), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_CTRL_PROTECT_MODE_REG                               , RULL(0x240003FE), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_CTRL_PROTECT_MODE_REG                               , RULL(0x250003FE), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_CTRL_PROTECT_MODE_REG                               , RULL(0x260003FE), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_CTRL_PROTECT_MODE_REG                               , RULL(0x270003FE), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_CTRL_PROTECT_MODE_REG                               , RULL(0x280003FE), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_CTRL_PROTECT_MODE_REG                               , RULL(0x290003FE), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_CTRL_PROTECT_MODE_REG                              , RULL(0x2A0003FE), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_CTRL_PROTECT_MODE_REG                              , RULL(0x2B0003FE), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_CTRL_PROTECT_MODE_REG                              , RULL(0x2C0003FE), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_CTRL_PROTECT_MODE_REG                              , RULL(0x2D0003FE), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_CTRL_PROTECT_MODE_REG                              , RULL(0x2E0003FE), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_CTRL_PROTECT_MODE_REG                              , RULL(0x2F0003FE), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_CTRL_PROTECT_MODE_REG                              , RULL(0x300003FE), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_CTRL_PROTECT_MODE_REG                              , RULL(0x310003FE), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_CTRL_PROTECT_MODE_REG                              , RULL(0x320003FE), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_CTRL_PROTECT_MODE_REG                              , RULL(0x330003FE), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_CTRL_PROTECT_MODE_REG                              , RULL(0x340003FE), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_CTRL_PROTECT_MODE_REG                              , RULL(0x350003FE), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_CTRL_PROTECT_MODE_REG                              , RULL(0x360003FE), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_CTRL_PROTECT_MODE_REG                              , RULL(0x370003FE), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_CTRL_PROTECT_MODE_REG                                , RULL(0x100003FE), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_CTRL_PROTECT_MODE_REG                              , RULL(0x100003FE), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_CTRL_PROTECT_MODE_REG                              , RULL(0x110003FE), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_CTRL_PROTECT_MODE_REG                              , RULL(0x120003FE), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_CTRL_PROTECT_MODE_REG                              , RULL(0x130003FE), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_CTRL_PROTECT_MODE_REG                              , RULL(0x140003FE), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_CTRL_PROTECT_MODE_REG                              , RULL(0x150003FE), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_CTRL_PROTECT_MODE_REG                                , RULL(0x200003FE), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210003FE,
REG64( EX_0_CTRL_PROTECT_MODE_REG                              , RULL(0x200003FE), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210003FE,
REG64( EX_1_CTRL_PROTECT_MODE_REG                              , RULL(0x220003FE), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230003FE,
REG64( EX_2_CTRL_PROTECT_MODE_REG                              , RULL(0x240003FE), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250003FE,
REG64( EX_3_CTRL_PROTECT_MODE_REG                              , RULL(0x260003FE), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270003FE,
REG64( EX_4_CTRL_PROTECT_MODE_REG                              , RULL(0x280003FE), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290003FE,
REG64( EX_5_CTRL_PROTECT_MODE_REG                              , RULL(0x2A0003FE), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0003FE,
REG64( EX_6_CTRL_PROTECT_MODE_REG                              , RULL(0x2C0003FE), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0003FE,
REG64( EX_7_CTRL_PROTECT_MODE_REG                              , RULL(0x2E0003FE), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0003FE,
REG64( EX_8_CTRL_PROTECT_MODE_REG                              , RULL(0x300003FE), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310003FE,
REG64( EX_9_CTRL_PROTECT_MODE_REG                              , RULL(0x320003FE), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330003FE,
REG64( EX_10_CTRL_PROTECT_MODE_REG                             , RULL(0x340003FE), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350003FE,
REG64( EX_11_CTRL_PROTECT_MODE_REG                             , RULL(0x360003FE), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370003FE,

REG64( PEC_0_CTRL_PROTECT_MODE_REG                             , RULL(0x0D0003FE), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_CTRL_PROTECT_MODE_REG                             , RULL(0x0E0003FE), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_CTRL_PROTECT_MODE_REG                             , RULL(0x0F0003FE), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_CBS_CC                                            , RULL(0x20030013), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_CBS_CC                                          , RULL(0x20030013), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_CBS_CC                                          , RULL(0x21030013), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_CBS_CC                                          , RULL(0x22030013), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_CBS_CC                                          , RULL(0x23030013), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_CBS_CC                                          , RULL(0x24030013), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_CBS_CC                                          , RULL(0x25030013), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_CBS_CC                                          , RULL(0x26030013), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_CBS_CC                                          , RULL(0x27030013), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_CBS_CC                                          , RULL(0x28030013), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_CBS_CC                                          , RULL(0x29030013), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_CBS_CC                                         , RULL(0x2A030013), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_CBS_CC                                         , RULL(0x2B030013), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_CBS_CC                                         , RULL(0x2C030013), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_CBS_CC                                         , RULL(0x2D030013), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_CBS_CC                                         , RULL(0x2E030013), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_CBS_CC                                         , RULL(0x2F030013), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_CBS_CC                                         , RULL(0x30030013), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_CBS_CC                                         , RULL(0x31030013), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_CBS_CC                                         , RULL(0x32030013), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_CBS_CC                                         , RULL(0x33030013), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_CBS_CC                                         , RULL(0x34030013), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_CBS_CC                                         , RULL(0x35030013), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_CBS_CC                                         , RULL(0x36030013), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_CBS_CC                                         , RULL(0x37030013), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_CBS_CC                                           , RULL(0x10030013), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_CBS_CC                                         , RULL(0x10030013), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_CBS_CC                                         , RULL(0x11030013), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_CBS_CC                                         , RULL(0x12030013), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_CBS_CC                                         , RULL(0x13030013), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_CBS_CC                                         , RULL(0x14030013), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_CBS_CC                                         , RULL(0x15030013), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_CBS_CC                                           , RULL(0x20030013), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030013,
REG64( EX_0_DBG_CBS_CC                                         , RULL(0x20030013), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030013,
REG64( EX_1_DBG_CBS_CC                                         , RULL(0x22030013), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030013,
REG64( EX_2_DBG_CBS_CC                                         , RULL(0x24030013), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030013,
REG64( EX_3_DBG_CBS_CC                                         , RULL(0x26030013), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030013,
REG64( EX_4_DBG_CBS_CC                                         , RULL(0x28030013), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030013,
REG64( EX_5_DBG_CBS_CC                                         , RULL(0x2A030013), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030013,
REG64( EX_6_DBG_CBS_CC                                         , RULL(0x2C030013), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030013,
REG64( EX_7_DBG_CBS_CC                                         , RULL(0x2E030013), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030013,
REG64( EX_8_DBG_CBS_CC                                         , RULL(0x30030013), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030013,
REG64( EX_9_DBG_CBS_CC                                         , RULL(0x32030013), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030013,
REG64( EX_10_DBG_CBS_CC                                        , RULL(0x34030013), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030013,
REG64( EX_11_DBG_CBS_CC                                        , RULL(0x36030013), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030013,

REG64( PEC_0_DBG_CBS_CC                                        , RULL(0x0D030013), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_CBS_CC                                        , RULL(0x0E030013), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_CBS_CC                                        , RULL(0x0F030013), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_INST1_COND_REG_1                                  , RULL(0x200107C1), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_INST1_COND_REG_1                                , RULL(0x200107C1), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_INST1_COND_REG_1                                , RULL(0x210107C1), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_INST1_COND_REG_1                                , RULL(0x220107C1), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_INST1_COND_REG_1                                , RULL(0x230107C1), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_INST1_COND_REG_1                                , RULL(0x240107C1), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_INST1_COND_REG_1                                , RULL(0x250107C1), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_INST1_COND_REG_1                                , RULL(0x260107C1), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_INST1_COND_REG_1                                , RULL(0x270107C1), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_INST1_COND_REG_1                                , RULL(0x280107C1), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_INST1_COND_REG_1                                , RULL(0x290107C1), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_INST1_COND_REG_1                               , RULL(0x2A0107C1), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_INST1_COND_REG_1                               , RULL(0x2B0107C1), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_INST1_COND_REG_1                               , RULL(0x2C0107C1), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_INST1_COND_REG_1                               , RULL(0x2D0107C1), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_INST1_COND_REG_1                               , RULL(0x2E0107C1), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_INST1_COND_REG_1                               , RULL(0x2F0107C1), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_INST1_COND_REG_1                               , RULL(0x300107C1), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_INST1_COND_REG_1                               , RULL(0x310107C1), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_INST1_COND_REG_1                               , RULL(0x320107C1), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_INST1_COND_REG_1                               , RULL(0x330107C1), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_INST1_COND_REG_1                               , RULL(0x340107C1), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_INST1_COND_REG_1                               , RULL(0x350107C1), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_INST1_COND_REG_1                               , RULL(0x360107C1), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_INST1_COND_REG_1                               , RULL(0x370107C1), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_INST1_COND_REG_1                                 , RULL(0x100107C1), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_INST1_COND_REG_1                               , RULL(0x100107C1), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_INST1_COND_REG_1                               , RULL(0x110107C1), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_INST1_COND_REG_1                               , RULL(0x120107C1), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_INST1_COND_REG_1                               , RULL(0x130107C1), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_INST1_COND_REG_1                               , RULL(0x140107C1), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_INST1_COND_REG_1                               , RULL(0x150107C1), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_INST1_COND_REG_1                                 , RULL(0x200107C1), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210107C1,
REG64( EX_0_DBG_INST1_COND_REG_1                               , RULL(0x200107C1), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210107C1,
REG64( EX_1_DBG_INST1_COND_REG_1                               , RULL(0x220107C1), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230107C1,
REG64( EX_2_DBG_INST1_COND_REG_1                               , RULL(0x240107C1), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250107C1,
REG64( EX_3_DBG_INST1_COND_REG_1                               , RULL(0x260107C1), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270107C1,
REG64( EX_4_DBG_INST1_COND_REG_1                               , RULL(0x280107C1), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290107C1,
REG64( EX_5_DBG_INST1_COND_REG_1                               , RULL(0x2A0107C1), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0107C1,
REG64( EX_6_DBG_INST1_COND_REG_1                               , RULL(0x2C0107C1), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0107C1,
REG64( EX_7_DBG_INST1_COND_REG_1                               , RULL(0x2E0107C1), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0107C1,
REG64( EX_8_DBG_INST1_COND_REG_1                               , RULL(0x300107C1), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310107C1,
REG64( EX_9_DBG_INST1_COND_REG_1                               , RULL(0x320107C1), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330107C1,
REG64( EX_10_DBG_INST1_COND_REG_1                              , RULL(0x340107C1), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350107C1,
REG64( EX_11_DBG_INST1_COND_REG_1                              , RULL(0x360107C1), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370107C1,

REG64( PEC_0_DBG_INST1_COND_REG_1                              , RULL(0x0D0107C1), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_INST1_COND_REG_1                              , RULL(0x0E0107C1), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_INST1_COND_REG_1                              , RULL(0x0F0107C1), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_INST1_COND_REG_2                                  , RULL(0x200107C2), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_INST1_COND_REG_2                                , RULL(0x200107C2), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_INST1_COND_REG_2                                , RULL(0x210107C2), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_INST1_COND_REG_2                                , RULL(0x220107C2), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_INST1_COND_REG_2                                , RULL(0x230107C2), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_INST1_COND_REG_2                                , RULL(0x240107C2), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_INST1_COND_REG_2                                , RULL(0x250107C2), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_INST1_COND_REG_2                                , RULL(0x260107C2), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_INST1_COND_REG_2                                , RULL(0x270107C2), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_INST1_COND_REG_2                                , RULL(0x280107C2), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_INST1_COND_REG_2                                , RULL(0x290107C2), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_INST1_COND_REG_2                               , RULL(0x2A0107C2), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_INST1_COND_REG_2                               , RULL(0x2B0107C2), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_INST1_COND_REG_2                               , RULL(0x2C0107C2), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_INST1_COND_REG_2                               , RULL(0x2D0107C2), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_INST1_COND_REG_2                               , RULL(0x2E0107C2), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_INST1_COND_REG_2                               , RULL(0x2F0107C2), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_INST1_COND_REG_2                               , RULL(0x300107C2), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_INST1_COND_REG_2                               , RULL(0x310107C2), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_INST1_COND_REG_2                               , RULL(0x320107C2), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_INST1_COND_REG_2                               , RULL(0x330107C2), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_INST1_COND_REG_2                               , RULL(0x340107C2), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_INST1_COND_REG_2                               , RULL(0x350107C2), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_INST1_COND_REG_2                               , RULL(0x360107C2), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_INST1_COND_REG_2                               , RULL(0x370107C2), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_INST1_COND_REG_2                                 , RULL(0x100107C2), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_INST1_COND_REG_2                               , RULL(0x100107C2), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_INST1_COND_REG_2                               , RULL(0x110107C2), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_INST1_COND_REG_2                               , RULL(0x120107C2), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_INST1_COND_REG_2                               , RULL(0x130107C2), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_INST1_COND_REG_2                               , RULL(0x140107C2), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_INST1_COND_REG_2                               , RULL(0x150107C2), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_INST1_COND_REG_2                                 , RULL(0x200107C2), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210107C2,
REG64( EX_0_DBG_INST1_COND_REG_2                               , RULL(0x200107C2), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210107C2,
REG64( EX_1_DBG_INST1_COND_REG_2                               , RULL(0x220107C2), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230107C2,
REG64( EX_2_DBG_INST1_COND_REG_2                               , RULL(0x240107C2), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250107C2,
REG64( EX_3_DBG_INST1_COND_REG_2                               , RULL(0x260107C2), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270107C2,
REG64( EX_4_DBG_INST1_COND_REG_2                               , RULL(0x280107C2), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290107C2,
REG64( EX_5_DBG_INST1_COND_REG_2                               , RULL(0x2A0107C2), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0107C2,
REG64( EX_6_DBG_INST1_COND_REG_2                               , RULL(0x2C0107C2), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0107C2,
REG64( EX_7_DBG_INST1_COND_REG_2                               , RULL(0x2E0107C2), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0107C2,
REG64( EX_8_DBG_INST1_COND_REG_2                               , RULL(0x300107C2), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310107C2,
REG64( EX_9_DBG_INST1_COND_REG_2                               , RULL(0x320107C2), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330107C2,
REG64( EX_10_DBG_INST1_COND_REG_2                              , RULL(0x340107C2), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350107C2,
REG64( EX_11_DBG_INST1_COND_REG_2                              , RULL(0x360107C2), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370107C2,

REG64( PEC_0_DBG_INST1_COND_REG_2                              , RULL(0x0D0107C2), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_INST1_COND_REG_2                              , RULL(0x0E0107C2), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_INST1_COND_REG_2                              , RULL(0x0F0107C2), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_INST2_COND_REG_1                                  , RULL(0x200107C3), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_INST2_COND_REG_1                                , RULL(0x200107C3), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_INST2_COND_REG_1                                , RULL(0x210107C3), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_INST2_COND_REG_1                                , RULL(0x220107C3), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_INST2_COND_REG_1                                , RULL(0x230107C3), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_INST2_COND_REG_1                                , RULL(0x240107C3), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_INST2_COND_REG_1                                , RULL(0x250107C3), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_INST2_COND_REG_1                                , RULL(0x260107C3), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_INST2_COND_REG_1                                , RULL(0x270107C3), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_INST2_COND_REG_1                                , RULL(0x280107C3), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_INST2_COND_REG_1                                , RULL(0x290107C3), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_INST2_COND_REG_1                               , RULL(0x2A0107C3), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_INST2_COND_REG_1                               , RULL(0x2B0107C3), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_INST2_COND_REG_1                               , RULL(0x2C0107C3), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_INST2_COND_REG_1                               , RULL(0x2D0107C3), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_INST2_COND_REG_1                               , RULL(0x2E0107C3), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_INST2_COND_REG_1                               , RULL(0x2F0107C3), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_INST2_COND_REG_1                               , RULL(0x300107C3), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_INST2_COND_REG_1                               , RULL(0x310107C3), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_INST2_COND_REG_1                               , RULL(0x320107C3), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_INST2_COND_REG_1                               , RULL(0x330107C3), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_INST2_COND_REG_1                               , RULL(0x340107C3), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_INST2_COND_REG_1                               , RULL(0x350107C3), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_INST2_COND_REG_1                               , RULL(0x360107C3), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_INST2_COND_REG_1                               , RULL(0x370107C3), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_INST2_COND_REG_1                                 , RULL(0x100107C3), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_INST2_COND_REG_1                               , RULL(0x100107C3), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_INST2_COND_REG_1                               , RULL(0x110107C3), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_INST2_COND_REG_1                               , RULL(0x120107C3), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_INST2_COND_REG_1                               , RULL(0x130107C3), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_INST2_COND_REG_1                               , RULL(0x140107C3), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_INST2_COND_REG_1                               , RULL(0x150107C3), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_INST2_COND_REG_1                                 , RULL(0x200107C3), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210107C3,
REG64( EX_0_DBG_INST2_COND_REG_1                               , RULL(0x200107C3), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210107C3,
REG64( EX_1_DBG_INST2_COND_REG_1                               , RULL(0x220107C3), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230107C3,
REG64( EX_2_DBG_INST2_COND_REG_1                               , RULL(0x240107C3), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250107C3,
REG64( EX_3_DBG_INST2_COND_REG_1                               , RULL(0x260107C3), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270107C3,
REG64( EX_4_DBG_INST2_COND_REG_1                               , RULL(0x280107C3), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290107C3,
REG64( EX_5_DBG_INST2_COND_REG_1                               , RULL(0x2A0107C3), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0107C3,
REG64( EX_6_DBG_INST2_COND_REG_1                               , RULL(0x2C0107C3), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0107C3,
REG64( EX_7_DBG_INST2_COND_REG_1                               , RULL(0x2E0107C3), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0107C3,
REG64( EX_8_DBG_INST2_COND_REG_1                               , RULL(0x300107C3), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310107C3,
REG64( EX_9_DBG_INST2_COND_REG_1                               , RULL(0x320107C3), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330107C3,
REG64( EX_10_DBG_INST2_COND_REG_1                              , RULL(0x340107C3), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350107C3,
REG64( EX_11_DBG_INST2_COND_REG_1                              , RULL(0x360107C3), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370107C3,

REG64( PEC_0_DBG_INST2_COND_REG_1                              , RULL(0x0D0107C3), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_INST2_COND_REG_1                              , RULL(0x0E0107C3), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_INST2_COND_REG_1                              , RULL(0x0F0107C3), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_INST2_COND_REG_2                                  , RULL(0x200107C4), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_INST2_COND_REG_2                                , RULL(0x200107C4), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_INST2_COND_REG_2                                , RULL(0x210107C4), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_INST2_COND_REG_2                                , RULL(0x220107C4), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_INST2_COND_REG_2                                , RULL(0x230107C4), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_INST2_COND_REG_2                                , RULL(0x240107C4), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_INST2_COND_REG_2                                , RULL(0x250107C4), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_INST2_COND_REG_2                                , RULL(0x260107C4), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_INST2_COND_REG_2                                , RULL(0x270107C4), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_INST2_COND_REG_2                                , RULL(0x280107C4), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_INST2_COND_REG_2                                , RULL(0x290107C4), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_INST2_COND_REG_2                               , RULL(0x2A0107C4), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_INST2_COND_REG_2                               , RULL(0x2B0107C4), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_INST2_COND_REG_2                               , RULL(0x2C0107C4), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_INST2_COND_REG_2                               , RULL(0x2D0107C4), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_INST2_COND_REG_2                               , RULL(0x2E0107C4), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_INST2_COND_REG_2                               , RULL(0x2F0107C4), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_INST2_COND_REG_2                               , RULL(0x300107C4), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_INST2_COND_REG_2                               , RULL(0x310107C4), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_INST2_COND_REG_2                               , RULL(0x320107C4), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_INST2_COND_REG_2                               , RULL(0x330107C4), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_INST2_COND_REG_2                               , RULL(0x340107C4), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_INST2_COND_REG_2                               , RULL(0x350107C4), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_INST2_COND_REG_2                               , RULL(0x360107C4), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_INST2_COND_REG_2                               , RULL(0x370107C4), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_INST2_COND_REG_2                                 , RULL(0x100107C4), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_INST2_COND_REG_2                               , RULL(0x100107C4), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_INST2_COND_REG_2                               , RULL(0x110107C4), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_INST2_COND_REG_2                               , RULL(0x120107C4), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_INST2_COND_REG_2                               , RULL(0x130107C4), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_INST2_COND_REG_2                               , RULL(0x140107C4), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_INST2_COND_REG_2                               , RULL(0x150107C4), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_INST2_COND_REG_2                                 , RULL(0x200107C4), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210107C4,
REG64( EX_0_DBG_INST2_COND_REG_2                               , RULL(0x200107C4), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210107C4,
REG64( EX_1_DBG_INST2_COND_REG_2                               , RULL(0x220107C4), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230107C4,
REG64( EX_2_DBG_INST2_COND_REG_2                               , RULL(0x240107C4), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250107C4,
REG64( EX_3_DBG_INST2_COND_REG_2                               , RULL(0x260107C4), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270107C4,
REG64( EX_4_DBG_INST2_COND_REG_2                               , RULL(0x280107C4), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290107C4,
REG64( EX_5_DBG_INST2_COND_REG_2                               , RULL(0x2A0107C4), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0107C4,
REG64( EX_6_DBG_INST2_COND_REG_2                               , RULL(0x2C0107C4), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0107C4,
REG64( EX_7_DBG_INST2_COND_REG_2                               , RULL(0x2E0107C4), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0107C4,
REG64( EX_8_DBG_INST2_COND_REG_2                               , RULL(0x300107C4), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310107C4,
REG64( EX_9_DBG_INST2_COND_REG_2                               , RULL(0x320107C4), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330107C4,
REG64( EX_10_DBG_INST2_COND_REG_2                              , RULL(0x340107C4), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350107C4,
REG64( EX_11_DBG_INST2_COND_REG_2                              , RULL(0x360107C4), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370107C4,

REG64( PEC_0_DBG_INST2_COND_REG_2                              , RULL(0x0D0107C4), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_INST2_COND_REG_2                              , RULL(0x0E0107C4), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_INST2_COND_REG_2                              , RULL(0x0F0107C4), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_MODE_REG                                          , RULL(0x200107C0), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_MODE_REG                                        , RULL(0x200107C0), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_MODE_REG                                        , RULL(0x210107C0), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_MODE_REG                                        , RULL(0x220107C0), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_MODE_REG                                        , RULL(0x230107C0), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_MODE_REG                                        , RULL(0x240107C0), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_MODE_REG                                        , RULL(0x250107C0), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_MODE_REG                                        , RULL(0x260107C0), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_MODE_REG                                        , RULL(0x270107C0), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_MODE_REG                                        , RULL(0x280107C0), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_MODE_REG                                        , RULL(0x290107C0), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_MODE_REG                                       , RULL(0x2A0107C0), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_MODE_REG                                       , RULL(0x2B0107C0), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_MODE_REG                                       , RULL(0x2C0107C0), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_MODE_REG                                       , RULL(0x2D0107C0), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_MODE_REG                                       , RULL(0x2E0107C0), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_MODE_REG                                       , RULL(0x2F0107C0), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_MODE_REG                                       , RULL(0x300107C0), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_MODE_REG                                       , RULL(0x310107C0), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_MODE_REG                                       , RULL(0x320107C0), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_MODE_REG                                       , RULL(0x330107C0), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_MODE_REG                                       , RULL(0x340107C0), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_MODE_REG                                       , RULL(0x350107C0), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_MODE_REG                                       , RULL(0x360107C0), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_MODE_REG                                       , RULL(0x370107C0), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_MODE_REG                                         , RULL(0x100107C0), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_MODE_REG                                       , RULL(0x100107C0), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_MODE_REG                                       , RULL(0x110107C0), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_MODE_REG                                       , RULL(0x120107C0), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_MODE_REG                                       , RULL(0x130107C0), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_MODE_REG                                       , RULL(0x140107C0), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_MODE_REG                                       , RULL(0x150107C0), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_MODE_REG                                         , RULL(0x200107C0), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210107C0,
REG64( EX_0_DBG_MODE_REG                                       , RULL(0x200107C0), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210107C0,
REG64( EX_1_DBG_MODE_REG                                       , RULL(0x220107C0), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230107C0,
REG64( EX_2_DBG_MODE_REG                                       , RULL(0x240107C0), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250107C0,
REG64( EX_3_DBG_MODE_REG                                       , RULL(0x260107C0), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270107C0,
REG64( EX_4_DBG_MODE_REG                                       , RULL(0x280107C0), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290107C0,
REG64( EX_5_DBG_MODE_REG                                       , RULL(0x2A0107C0), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0107C0,
REG64( EX_6_DBG_MODE_REG                                       , RULL(0x2C0107C0), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0107C0,
REG64( EX_7_DBG_MODE_REG                                       , RULL(0x2E0107C0), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0107C0,
REG64( EX_8_DBG_MODE_REG                                       , RULL(0x300107C0), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310107C0,
REG64( EX_9_DBG_MODE_REG                                       , RULL(0x320107C0), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330107C0,
REG64( EX_10_DBG_MODE_REG                                      , RULL(0x340107C0), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350107C0,
REG64( EX_11_DBG_MODE_REG                                      , RULL(0x360107C0), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370107C0,

REG64( PEC_0_DBG_MODE_REG                                      , RULL(0x0D0107C0), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_MODE_REG                                      , RULL(0x0E0107C0), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_MODE_REG                                      , RULL(0x0F0107C0), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_TRACE_MODE_REG_2                                  , RULL(0x200107CB), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_TRACE_MODE_REG_2                                , RULL(0x200107CB), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_TRACE_MODE_REG_2                                , RULL(0x210107CB), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_TRACE_MODE_REG_2                                , RULL(0x220107CB), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_TRACE_MODE_REG_2                                , RULL(0x230107CB), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_TRACE_MODE_REG_2                                , RULL(0x240107CB), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_TRACE_MODE_REG_2                                , RULL(0x250107CB), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_TRACE_MODE_REG_2                                , RULL(0x260107CB), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_TRACE_MODE_REG_2                                , RULL(0x270107CB), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_TRACE_MODE_REG_2                                , RULL(0x280107CB), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_TRACE_MODE_REG_2                                , RULL(0x290107CB), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_TRACE_MODE_REG_2                               , RULL(0x2A0107CB), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_TRACE_MODE_REG_2                               , RULL(0x2B0107CB), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_TRACE_MODE_REG_2                               , RULL(0x2C0107CB), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_TRACE_MODE_REG_2                               , RULL(0x2D0107CB), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_TRACE_MODE_REG_2                               , RULL(0x2E0107CB), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_TRACE_MODE_REG_2                               , RULL(0x2F0107CB), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_TRACE_MODE_REG_2                               , RULL(0x300107CB), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_TRACE_MODE_REG_2                               , RULL(0x310107CB), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_TRACE_MODE_REG_2                               , RULL(0x320107CB), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_TRACE_MODE_REG_2                               , RULL(0x330107CB), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_TRACE_MODE_REG_2                               , RULL(0x340107CB), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_TRACE_MODE_REG_2                               , RULL(0x350107CB), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_TRACE_MODE_REG_2                               , RULL(0x360107CB), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_TRACE_MODE_REG_2                               , RULL(0x370107CB), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_TRACE_MODE_REG_2                                 , RULL(0x100107CB), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_TRACE_MODE_REG_2                               , RULL(0x100107CB), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_TRACE_MODE_REG_2                               , RULL(0x110107CB), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_TRACE_MODE_REG_2                               , RULL(0x120107CB), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_TRACE_MODE_REG_2                               , RULL(0x130107CB), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_TRACE_MODE_REG_2                               , RULL(0x140107CB), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_TRACE_MODE_REG_2                               , RULL(0x150107CB), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_TRACE_MODE_REG_2                                 , RULL(0x200107CB), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210107CB,
REG64( EX_0_DBG_TRACE_MODE_REG_2                               , RULL(0x200107CB), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210107CB,
REG64( EX_1_DBG_TRACE_MODE_REG_2                               , RULL(0x220107CB), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230107CB,
REG64( EX_2_DBG_TRACE_MODE_REG_2                               , RULL(0x240107CB), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250107CB,
REG64( EX_3_DBG_TRACE_MODE_REG_2                               , RULL(0x260107CB), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270107CB,
REG64( EX_4_DBG_TRACE_MODE_REG_2                               , RULL(0x280107CB), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290107CB,
REG64( EX_5_DBG_TRACE_MODE_REG_2                               , RULL(0x2A0107CB), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0107CB,
REG64( EX_6_DBG_TRACE_MODE_REG_2                               , RULL(0x2C0107CB), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0107CB,
REG64( EX_7_DBG_TRACE_MODE_REG_2                               , RULL(0x2E0107CB), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0107CB,
REG64( EX_8_DBG_TRACE_MODE_REG_2                               , RULL(0x300107CB), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310107CB,
REG64( EX_9_DBG_TRACE_MODE_REG_2                               , RULL(0x320107CB), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330107CB,
REG64( EX_10_DBG_TRACE_MODE_REG_2                              , RULL(0x340107CB), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350107CB,
REG64( EX_11_DBG_TRACE_MODE_REG_2                              , RULL(0x360107CB), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370107CB,

REG64( PEC_0_DBG_TRACE_MODE_REG_2                              , RULL(0x0D0107CB), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_TRACE_MODE_REG_2                              , RULL(0x0E0107CB), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_TRACE_MODE_REG_2                              , RULL(0x0F0107CB), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_TRACE_REG_0                                       , RULL(0x200107C9), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_TRACE_REG_0                                     , RULL(0x200107C9), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_TRACE_REG_0                                     , RULL(0x210107C9), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_TRACE_REG_0                                     , RULL(0x220107C9), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_TRACE_REG_0                                     , RULL(0x230107C9), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_TRACE_REG_0                                     , RULL(0x240107C9), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_TRACE_REG_0                                     , RULL(0x250107C9), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_TRACE_REG_0                                     , RULL(0x260107C9), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_TRACE_REG_0                                     , RULL(0x270107C9), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_TRACE_REG_0                                     , RULL(0x280107C9), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_TRACE_REG_0                                     , RULL(0x290107C9), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_TRACE_REG_0                                    , RULL(0x2A0107C9), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_TRACE_REG_0                                    , RULL(0x2B0107C9), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_TRACE_REG_0                                    , RULL(0x2C0107C9), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_TRACE_REG_0                                    , RULL(0x2D0107C9), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_TRACE_REG_0                                    , RULL(0x2E0107C9), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_TRACE_REG_0                                    , RULL(0x2F0107C9), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_TRACE_REG_0                                    , RULL(0x300107C9), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_TRACE_REG_0                                    , RULL(0x310107C9), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_TRACE_REG_0                                    , RULL(0x320107C9), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_TRACE_REG_0                                    , RULL(0x330107C9), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_TRACE_REG_0                                    , RULL(0x340107C9), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_TRACE_REG_0                                    , RULL(0x350107C9), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_TRACE_REG_0                                    , RULL(0x360107C9), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_TRACE_REG_0                                    , RULL(0x370107C9), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_TRACE_REG_0                                      , RULL(0x100107C9), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_TRACE_REG_0                                    , RULL(0x100107C9), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_TRACE_REG_0                                    , RULL(0x110107C9), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_TRACE_REG_0                                    , RULL(0x120107C9), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_TRACE_REG_0                                    , RULL(0x130107C9), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_TRACE_REG_0                                    , RULL(0x140107C9), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_TRACE_REG_0                                    , RULL(0x150107C9), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_TRACE_REG_0                                      , RULL(0x200107C9), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210107C9,
REG64( EX_0_DBG_TRACE_REG_0                                    , RULL(0x200107C9), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210107C9,
REG64( EX_1_DBG_TRACE_REG_0                                    , RULL(0x220107C9), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230107C9,
REG64( EX_2_DBG_TRACE_REG_0                                    , RULL(0x240107C9), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250107C9,
REG64( EX_3_DBG_TRACE_REG_0                                    , RULL(0x260107C9), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270107C9,
REG64( EX_4_DBG_TRACE_REG_0                                    , RULL(0x280107C9), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290107C9,
REG64( EX_5_DBG_TRACE_REG_0                                    , RULL(0x2A0107C9), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0107C9,
REG64( EX_6_DBG_TRACE_REG_0                                    , RULL(0x2C0107C9), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0107C9,
REG64( EX_7_DBG_TRACE_REG_0                                    , RULL(0x2E0107C9), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0107C9,
REG64( EX_8_DBG_TRACE_REG_0                                    , RULL(0x300107C9), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310107C9,
REG64( EX_9_DBG_TRACE_REG_0                                    , RULL(0x320107C9), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330107C9,
REG64( EX_10_DBG_TRACE_REG_0                                   , RULL(0x340107C9), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350107C9,
REG64( EX_11_DBG_TRACE_REG_0                                   , RULL(0x360107C9), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370107C9,

REG64( PEC_0_DBG_TRACE_REG_0                                   , RULL(0x0D0107C9), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_TRACE_REG_0                                   , RULL(0x0E0107C9), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_TRACE_REG_0                                   , RULL(0x0F0107C9), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DBG_TRACE_REG_1                                       , RULL(0x200107CA), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DBG_TRACE_REG_1                                     , RULL(0x200107CA), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DBG_TRACE_REG_1                                     , RULL(0x210107CA), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DBG_TRACE_REG_1                                     , RULL(0x220107CA), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DBG_TRACE_REG_1                                     , RULL(0x230107CA), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DBG_TRACE_REG_1                                     , RULL(0x240107CA), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DBG_TRACE_REG_1                                     , RULL(0x250107CA), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DBG_TRACE_REG_1                                     , RULL(0x260107CA), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DBG_TRACE_REG_1                                     , RULL(0x270107CA), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DBG_TRACE_REG_1                                     , RULL(0x280107CA), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DBG_TRACE_REG_1                                     , RULL(0x290107CA), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DBG_TRACE_REG_1                                    , RULL(0x2A0107CA), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DBG_TRACE_REG_1                                    , RULL(0x2B0107CA), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DBG_TRACE_REG_1                                    , RULL(0x2C0107CA), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DBG_TRACE_REG_1                                    , RULL(0x2D0107CA), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DBG_TRACE_REG_1                                    , RULL(0x2E0107CA), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DBG_TRACE_REG_1                                    , RULL(0x2F0107CA), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DBG_TRACE_REG_1                                    , RULL(0x300107CA), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DBG_TRACE_REG_1                                    , RULL(0x310107CA), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DBG_TRACE_REG_1                                    , RULL(0x320107CA), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DBG_TRACE_REG_1                                    , RULL(0x330107CA), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DBG_TRACE_REG_1                                    , RULL(0x340107CA), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DBG_TRACE_REG_1                                    , RULL(0x350107CA), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DBG_TRACE_REG_1                                    , RULL(0x360107CA), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DBG_TRACE_REG_1                                    , RULL(0x370107CA), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DBG_TRACE_REG_1                                      , RULL(0x100107CA), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DBG_TRACE_REG_1                                    , RULL(0x100107CA), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DBG_TRACE_REG_1                                    , RULL(0x110107CA), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DBG_TRACE_REG_1                                    , RULL(0x120107CA), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DBG_TRACE_REG_1                                    , RULL(0x130107CA), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DBG_TRACE_REG_1                                    , RULL(0x140107CA), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DBG_TRACE_REG_1                                    , RULL(0x150107CA), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DBG_TRACE_REG_1                                      , RULL(0x200107CA), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210107CA,
REG64( EX_0_DBG_TRACE_REG_1                                    , RULL(0x200107CA), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210107CA,
REG64( EX_1_DBG_TRACE_REG_1                                    , RULL(0x220107CA), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 230107CA,
REG64( EX_2_DBG_TRACE_REG_1                                    , RULL(0x240107CA), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250107CA,
REG64( EX_3_DBG_TRACE_REG_1                                    , RULL(0x260107CA), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270107CA,
REG64( EX_4_DBG_TRACE_REG_1                                    , RULL(0x280107CA), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290107CA,
REG64( EX_5_DBG_TRACE_REG_1                                    , RULL(0x2A0107CA), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0107CA,
REG64( EX_6_DBG_TRACE_REG_1                                    , RULL(0x2C0107CA), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0107CA,
REG64( EX_7_DBG_TRACE_REG_1                                    , RULL(0x2E0107CA), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0107CA,
REG64( EX_8_DBG_TRACE_REG_1                                    , RULL(0x300107CA), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310107CA,
REG64( EX_9_DBG_TRACE_REG_1                                    , RULL(0x320107CA), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330107CA,
REG64( EX_10_DBG_TRACE_REG_1                                   , RULL(0x340107CA), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350107CA,
REG64( EX_11_DBG_TRACE_REG_1                                   , RULL(0x360107CA), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370107CA,

REG64( PEC_0_DBG_TRACE_REG_1                                   , RULL(0x0D0107CA), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DBG_TRACE_REG_1                                   , RULL(0x0E0107CA), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DBG_TRACE_REG_1                                   , RULL(0x0F0107CA), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DEBUG_STATUS_REG                                      , RULL(0x20010004), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DEBUG_STATUS_REG                                    , RULL(0x20010004), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DEBUG_STATUS_REG                                    , RULL(0x21010004), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DEBUG_STATUS_REG                                    , RULL(0x22010004), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DEBUG_STATUS_REG                                    , RULL(0x23010004), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DEBUG_STATUS_REG                                    , RULL(0x24010004), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DEBUG_STATUS_REG                                    , RULL(0x25010004), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DEBUG_STATUS_REG                                    , RULL(0x26010004), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DEBUG_STATUS_REG                                    , RULL(0x27010004), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DEBUG_STATUS_REG                                    , RULL(0x28010004), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DEBUG_STATUS_REG                                    , RULL(0x29010004), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DEBUG_STATUS_REG                                   , RULL(0x2A010004), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DEBUG_STATUS_REG                                   , RULL(0x2B010004), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DEBUG_STATUS_REG                                   , RULL(0x2C010004), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DEBUG_STATUS_REG                                   , RULL(0x2D010004), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DEBUG_STATUS_REG                                   , RULL(0x2E010004), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DEBUG_STATUS_REG                                   , RULL(0x2F010004), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DEBUG_STATUS_REG                                   , RULL(0x30010004), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DEBUG_STATUS_REG                                   , RULL(0x31010004), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DEBUG_STATUS_REG                                   , RULL(0x32010004), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DEBUG_STATUS_REG                                   , RULL(0x33010004), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DEBUG_STATUS_REG                                   , RULL(0x34010004), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DEBUG_STATUS_REG                                   , RULL(0x35010004), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DEBUG_STATUS_REG                                   , RULL(0x36010004), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DEBUG_STATUS_REG                                   , RULL(0x37010004), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_DEBUG_STATUS_REG                                     , RULL(0x10010004), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_DEBUG_STATUS_REG                                   , RULL(0x10010004), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_DEBUG_STATUS_REG                                   , RULL(0x11010004), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_DEBUG_STATUS_REG                                   , RULL(0x12010004), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_DEBUG_STATUS_REG                                   , RULL(0x13010004), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_DEBUG_STATUS_REG                                   , RULL(0x14010004), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_DEBUG_STATUS_REG                                   , RULL(0x15010004), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_DEBUG_STATUS_REG                                     , RULL(0x20010004), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010004,
REG64( EX_0_DEBUG_STATUS_REG                                   , RULL(0x20010004), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010004,
REG64( EX_1_DEBUG_STATUS_REG                                   , RULL(0x22010004), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010004,
REG64( EX_2_DEBUG_STATUS_REG                                   , RULL(0x24010004), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010004,
REG64( EX_3_DEBUG_STATUS_REG                                   , RULL(0x26010004), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010004,
REG64( EX_4_DEBUG_STATUS_REG                                   , RULL(0x28010004), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010004,
REG64( EX_5_DEBUG_STATUS_REG                                   , RULL(0x2A010004), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010004,
REG64( EX_6_DEBUG_STATUS_REG                                   , RULL(0x2C010004), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010004,
REG64( EX_7_DEBUG_STATUS_REG                                   , RULL(0x2E010004), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010004,
REG64( EX_8_DEBUG_STATUS_REG                                   , RULL(0x30010004), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010004,
REG64( EX_9_DEBUG_STATUS_REG                                   , RULL(0x32010004), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010004,
REG64( EX_10_DEBUG_STATUS_REG                                  , RULL(0x34010004), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010004,
REG64( EX_11_DEBUG_STATUS_REG                                  , RULL(0x36010004), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010004,

REG64( PEC_0_DEBUG_STATUS_REG                                  , RULL(0x0D010004), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_DEBUG_STATUS_REG                                  , RULL(0x0E010004), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_DEBUG_STATUS_REG                                  , RULL(0x0F010004), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_DIRECT_CONTROLS                                       , RULL(0x20010A9C), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_DIRECT_CONTROLS                                     , RULL(0x20010A9C), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_DIRECT_CONTROLS                                     , RULL(0x21010A9C), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_DIRECT_CONTROLS                                     , RULL(0x22010A9C), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_DIRECT_CONTROLS                                     , RULL(0x23010A9C), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_DIRECT_CONTROLS                                     , RULL(0x24010A9C), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_DIRECT_CONTROLS                                     , RULL(0x25010A9C), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_DIRECT_CONTROLS                                     , RULL(0x26010A9C), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_DIRECT_CONTROLS                                     , RULL(0x27010A9C), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_DIRECT_CONTROLS                                     , RULL(0x28010A9C), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_DIRECT_CONTROLS                                     , RULL(0x29010A9C), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_DIRECT_CONTROLS                                    , RULL(0x2A010A9C), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_DIRECT_CONTROLS                                    , RULL(0x2B010A9C), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_DIRECT_CONTROLS                                    , RULL(0x2C010A9C), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_DIRECT_CONTROLS                                    , RULL(0x2D010A9C), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_DIRECT_CONTROLS                                    , RULL(0x2E010A9C), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_DIRECT_CONTROLS                                    , RULL(0x2F010A9C), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_DIRECT_CONTROLS                                    , RULL(0x30010A9C), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_DIRECT_CONTROLS                                    , RULL(0x31010A9C), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_DIRECT_CONTROLS                                    , RULL(0x32010A9C), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_DIRECT_CONTROLS                                    , RULL(0x33010A9C), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_DIRECT_CONTROLS                                    , RULL(0x34010A9C), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_DIRECT_CONTROLS                                    , RULL(0x35010A9C), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_DIRECT_CONTROLS                                    , RULL(0x36010A9C), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_DIRECT_CONTROLS                                    , RULL(0x37010A9C), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_DIRECT_CONTROLS                                 , RULL(0x21010A9C), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 20010A9C,
REG64( EX_10_L2_DIRECT_CONTROLS                                , RULL(0x35010A9C), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 34010A9C,
REG64( EX_11_L2_DIRECT_CONTROLS                                , RULL(0x37010A9C), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 36010A9C,
REG64( EX_1_L2_DIRECT_CONTROLS                                 , RULL(0x23010A9C), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 22010A9C,
REG64( EX_2_L2_DIRECT_CONTROLS                                 , RULL(0x25010A9C), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 24010A9C,
REG64( EX_3_L2_DIRECT_CONTROLS                                 , RULL(0x27010A9C), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 26010A9C,
REG64( EX_4_L2_DIRECT_CONTROLS                                 , RULL(0x29010A9C), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 28010A9C,
REG64( EX_5_L2_DIRECT_CONTROLS                                 , RULL(0x2B010A9C), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2A010A9C,
REG64( EX_6_L2_DIRECT_CONTROLS                                 , RULL(0x2D010A9C), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2C010A9C,
REG64( EX_7_L2_DIRECT_CONTROLS                                 , RULL(0x2F010A9C), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2E010A9C,
REG64( EX_8_L2_DIRECT_CONTROLS                                 , RULL(0x31010A9C), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 30010A9C,
REG64( EX_9_L2_DIRECT_CONTROLS                                 , RULL(0x33010A9C), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 32010A9C,
REG64( EX_L2_DIRECT_CONTROLS                                   , RULL(0x21010A9C), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 20010A9C,

REG64( EQ_DRAM_REF_REG                                         , RULL(0x1001180F), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C0F,
REG64( EQ_0_DRAM_REF_REG                                       , RULL(0x1001180F), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C0F,
REG64( EQ_1_DRAM_REF_REG                                       , RULL(0x1101180F), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C0F,
REG64( EQ_2_DRAM_REF_REG                                       , RULL(0x1201180F), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C0F,
REG64( EQ_3_DRAM_REF_REG                                       , RULL(0x1301180F), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C0F,
REG64( EQ_4_DRAM_REF_REG                                       , RULL(0x1401180F), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C0F,
REG64( EQ_5_DRAM_REF_REG                                       , RULL(0x1501180F), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C0F,
REG64( EX_DRAM_REF_REG                                         , RULL(0x1001180F), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_DRAM_REF_REG                                       , RULL(0x1001180F), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_DRAM_REF_REG                                       , RULL(0x10011C0F), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_DRAM_REF_REG                                       , RULL(0x1101180F), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_DRAM_REF_REG                                       , RULL(0x11011C0F), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_DRAM_REF_REG                                       , RULL(0x1201180F), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_DRAM_REF_REG                                       , RULL(0x12011C0F), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_DRAM_REF_REG                                       , RULL(0x1301180F), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_DRAM_REF_REG                                       , RULL(0x13011C0F), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_DRAM_REF_REG                                       , RULL(0x1401180F), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_DRAM_REF_REG                                       , RULL(0x14011C0F), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_DRAM_REF_REG                                      , RULL(0x1501180F), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_DRAM_REF_REG                                      , RULL(0x15011C0F), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( PEC_0_DRPPRICTL_REG                                     , RULL(0x04010C01), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_DRPPRICTL_REG                                     , RULL(0x04011001), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_DRPPRICTL_REG                                     , RULL(0x04011401), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_DTS_RESULT0                                           , RULL(0x20050000), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_DTS_RESULT0                                         , RULL(0x20050000), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_DTS_RESULT0                                         , RULL(0x21050000), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_DTS_RESULT0                                         , RULL(0x22050000), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_DTS_RESULT0                                         , RULL(0x23050000), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_DTS_RESULT0                                         , RULL(0x24050000), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_DTS_RESULT0                                         , RULL(0x25050000), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_DTS_RESULT0                                         , RULL(0x26050000), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_DTS_RESULT0                                         , RULL(0x27050000), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_DTS_RESULT0                                         , RULL(0x28050000), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_DTS_RESULT0                                         , RULL(0x29050000), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_DTS_RESULT0                                        , RULL(0x2A050000), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_DTS_RESULT0                                        , RULL(0x2B050000), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_DTS_RESULT0                                        , RULL(0x2C050000), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_DTS_RESULT0                                        , RULL(0x2D050000), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_DTS_RESULT0                                        , RULL(0x2E050000), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_DTS_RESULT0                                        , RULL(0x2F050000), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_DTS_RESULT0                                        , RULL(0x30050000), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_DTS_RESULT0                                        , RULL(0x31050000), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_DTS_RESULT0                                        , RULL(0x32050000), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_DTS_RESULT0                                        , RULL(0x33050000), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_DTS_RESULT0                                        , RULL(0x34050000), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_DTS_RESULT0                                        , RULL(0x35050000), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_DTS_RESULT0                                        , RULL(0x36050000), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_DTS_RESULT0                                        , RULL(0x37050000), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_DTS_RESULT0                                          , RULL(0x10050000), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_DTS_RESULT0                                        , RULL(0x10050000), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_DTS_RESULT0                                        , RULL(0x11050000), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_DTS_RESULT0                                        , RULL(0x12050000), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_DTS_RESULT0                                        , RULL(0x13050000), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_DTS_RESULT0                                        , RULL(0x14050000), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_DTS_RESULT0                                        , RULL(0x15050000), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_DTS_RESULT0                                          , RULL(0x20050000), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 21050000,
REG64( EX_0_DTS_RESULT0                                        , RULL(0x20050000), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 21050000,
REG64( EX_1_DTS_RESULT0                                        , RULL(0x22050000), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 23050000,
REG64( EX_2_DTS_RESULT0                                        , RULL(0x24050000), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 25050000,
REG64( EX_3_DTS_RESULT0                                        , RULL(0x26050000), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 27050000,
REG64( EX_4_DTS_RESULT0                                        , RULL(0x28050000), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 29050000,
REG64( EX_5_DTS_RESULT0                                        , RULL(0x2A050000), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B050000,
REG64( EX_6_DTS_RESULT0                                        , RULL(0x2C050000), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D050000,
REG64( EX_7_DTS_RESULT0                                        , RULL(0x2E050000), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F050000,
REG64( EX_8_DTS_RESULT0                                        , RULL(0x30050000), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 31050000,
REG64( EX_9_DTS_RESULT0                                        , RULL(0x32050000), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 33050000,
REG64( EX_10_DTS_RESULT0                                       , RULL(0x34050000), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 35050000,
REG64( EX_11_DTS_RESULT0                                       , RULL(0x36050000), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 37050000,

REG64( PEC_0_DTS_RESULT0                                       , RULL(0x0D050000), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_DTS_RESULT0                                       , RULL(0x0E050000), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_DTS_RESULT0                                       , RULL(0x0F050000), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_DTS_TRC_RESULT                                        , RULL(0x20050003), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_DTS_TRC_RESULT                                      , RULL(0x20050003), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_DTS_TRC_RESULT                                      , RULL(0x21050003), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_DTS_TRC_RESULT                                      , RULL(0x22050003), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_DTS_TRC_RESULT                                      , RULL(0x23050003), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_DTS_TRC_RESULT                                      , RULL(0x24050003), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_DTS_TRC_RESULT                                      , RULL(0x25050003), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_DTS_TRC_RESULT                                      , RULL(0x26050003), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_DTS_TRC_RESULT                                      , RULL(0x27050003), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_DTS_TRC_RESULT                                      , RULL(0x28050003), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_DTS_TRC_RESULT                                      , RULL(0x29050003), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_DTS_TRC_RESULT                                     , RULL(0x2A050003), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_DTS_TRC_RESULT                                     , RULL(0x2B050003), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_DTS_TRC_RESULT                                     , RULL(0x2C050003), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_DTS_TRC_RESULT                                     , RULL(0x2D050003), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_DTS_TRC_RESULT                                     , RULL(0x2E050003), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_DTS_TRC_RESULT                                     , RULL(0x2F050003), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_DTS_TRC_RESULT                                     , RULL(0x30050003), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_DTS_TRC_RESULT                                     , RULL(0x31050003), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_DTS_TRC_RESULT                                     , RULL(0x32050003), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_DTS_TRC_RESULT                                     , RULL(0x33050003), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_DTS_TRC_RESULT                                     , RULL(0x34050003), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_DTS_TRC_RESULT                                     , RULL(0x35050003), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_DTS_TRC_RESULT                                     , RULL(0x36050003), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_DTS_TRC_RESULT                                     , RULL(0x37050003), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_DTS_TRC_RESULT                                       , RULL(0x10050003), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_DTS_TRC_RESULT                                     , RULL(0x10050003), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_DTS_TRC_RESULT                                     , RULL(0x11050003), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_DTS_TRC_RESULT                                     , RULL(0x12050003), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_DTS_TRC_RESULT                                     , RULL(0x13050003), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_DTS_TRC_RESULT                                     , RULL(0x14050003), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_DTS_TRC_RESULT                                     , RULL(0x15050003), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_DTS_TRC_RESULT                                       , RULL(0x20050003), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 21050003,
REG64( EX_0_DTS_TRC_RESULT                                     , RULL(0x20050003), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 21050003,
REG64( EX_1_DTS_TRC_RESULT                                     , RULL(0x22050003), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 23050003,
REG64( EX_2_DTS_TRC_RESULT                                     , RULL(0x24050003), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 25050003,
REG64( EX_3_DTS_TRC_RESULT                                     , RULL(0x26050003), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 27050003,
REG64( EX_4_DTS_TRC_RESULT                                     , RULL(0x28050003), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 29050003,
REG64( EX_5_DTS_TRC_RESULT                                     , RULL(0x2A050003), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B050003,
REG64( EX_6_DTS_TRC_RESULT                                     , RULL(0x2C050003), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D050003,
REG64( EX_7_DTS_TRC_RESULT                                     , RULL(0x2E050003), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F050003,
REG64( EX_8_DTS_TRC_RESULT                                     , RULL(0x30050003), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 31050003,
REG64( EX_9_DTS_TRC_RESULT                                     , RULL(0x32050003), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 33050003,
REG64( EX_10_DTS_TRC_RESULT                                    , RULL(0x34050003), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 35050003,
REG64( EX_11_DTS_TRC_RESULT                                    , RULL(0x36050003), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 37050003,

REG64( PEC_0_DTS_TRC_RESULT                                    , RULL(0x0D050003), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_DTS_TRC_RESULT                                    , RULL(0x0E050003), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_DTS_TRC_RESULT                                    , RULL(0x0F050003), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( EQ_EDRAM_BANK_FAIL                                      , RULL(0x1001181B), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C1B,
REG64( EQ_0_EDRAM_BANK_FAIL                                    , RULL(0x1001181B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C1B,
REG64( EQ_1_EDRAM_BANK_FAIL                                    , RULL(0x1101181B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C1B,
REG64( EQ_2_EDRAM_BANK_FAIL                                    , RULL(0x1201181B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C1B,
REG64( EQ_3_EDRAM_BANK_FAIL                                    , RULL(0x1301181B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C1B,
REG64( EQ_4_EDRAM_BANK_FAIL                                    , RULL(0x1401181B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C1B,
REG64( EQ_5_EDRAM_BANK_FAIL                                    , RULL(0x1501181B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C1B,
REG64( EX_0_L3_EDRAM_BANK_FAIL                                 , RULL(0x1001181B), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_EDRAM_BANK_FAIL                                , RULL(0x1501181B), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_EDRAM_BANK_FAIL                                , RULL(0x15011C1B), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_EDRAM_BANK_FAIL                                 , RULL(0x10011C1B), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_EDRAM_BANK_FAIL                                 , RULL(0x1101181B), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_EDRAM_BANK_FAIL                                 , RULL(0x11011C1B), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_EDRAM_BANK_FAIL                                 , RULL(0x1201181B), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_EDRAM_BANK_FAIL                                 , RULL(0x12011C1B), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_EDRAM_BANK_FAIL                                 , RULL(0x1301181B), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_EDRAM_BANK_FAIL                                 , RULL(0x13011C1B), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_EDRAM_BANK_FAIL                                 , RULL(0x1401181B), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_EDRAM_BANK_FAIL                                 , RULL(0x14011C1B), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_EDRAM_BANK_FAIL                                   , RULL(0x1001181B), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_EDRAM_BANK_SOFT_DIS                                  , RULL(0x1001180B), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C0B,
REG64( EQ_0_EDRAM_BANK_SOFT_DIS                                , RULL(0x1001180B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C0B,
REG64( EQ_1_EDRAM_BANK_SOFT_DIS                                , RULL(0x1101180B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C0B,
REG64( EQ_2_EDRAM_BANK_SOFT_DIS                                , RULL(0x1201180B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C0B,
REG64( EQ_3_EDRAM_BANK_SOFT_DIS                                , RULL(0x1301180B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C0B,
REG64( EQ_4_EDRAM_BANK_SOFT_DIS                                , RULL(0x1401180B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C0B,
REG64( EQ_5_EDRAM_BANK_SOFT_DIS                                , RULL(0x1501180B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C0B,
REG64( EX_0_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x1001180B), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_EDRAM_BANK_SOFT_DIS                            , RULL(0x1501180B), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_EDRAM_BANK_SOFT_DIS                            , RULL(0x15011C0B), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x10011C0B), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x1101180B), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x11011C0B), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x1201180B), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x12011C0B), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x1301180B), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x13011C0B), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x1401180B), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_EDRAM_BANK_SOFT_DIS                             , RULL(0x14011C0B), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_EDRAM_BANK_SOFT_DIS                               , RULL(0x1001180B), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_EDRAM_REG                                            , RULL(0x1001180C), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C0C,
REG64( EQ_0_EDRAM_REG                                          , RULL(0x1001180C), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C0C,
REG64( EQ_1_EDRAM_REG                                          , RULL(0x1101180C), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C0C,
REG64( EQ_2_EDRAM_REG                                          , RULL(0x1201180C), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C0C,
REG64( EQ_3_EDRAM_REG                                          , RULL(0x1301180C), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C0C,
REG64( EQ_4_EDRAM_REG                                          , RULL(0x1401180C), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C0C,
REG64( EQ_5_EDRAM_REG                                          , RULL(0x1501180C), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C0C,
REG64( EX_0_L3_EDRAM_REG                                       , RULL(0x1001180C), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_EDRAM_REG                                      , RULL(0x1501180C), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_EDRAM_REG                                      , RULL(0x15011C0C), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_EDRAM_REG                                       , RULL(0x10011C0C), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_EDRAM_REG                                       , RULL(0x1101180C), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_EDRAM_REG                                       , RULL(0x11011C0C), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_EDRAM_REG                                       , RULL(0x1201180C), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_EDRAM_REG                                       , RULL(0x12011C0C), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_EDRAM_REG                                       , RULL(0x1301180C), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_EDRAM_REG                                       , RULL(0x13011C0C), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_EDRAM_REG                                       , RULL(0x1401180C), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_EDRAM_REG                                       , RULL(0x14011C0C), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_EDRAM_REG                                         , RULL(0x1001180C), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_ED_RD_ERR_STAT_REG0                                  , RULL(0x10011819), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C19,
REG64( EQ_0_ED_RD_ERR_STAT_REG0                                , RULL(0x10011819), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C19,
REG64( EQ_1_ED_RD_ERR_STAT_REG0                                , RULL(0x11011819), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C19,
REG64( EQ_2_ED_RD_ERR_STAT_REG0                                , RULL(0x12011819), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C19,
REG64( EQ_3_ED_RD_ERR_STAT_REG0                                , RULL(0x13011819), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C19,
REG64( EQ_4_ED_RD_ERR_STAT_REG0                                , RULL(0x14011819), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C19,
REG64( EQ_5_ED_RD_ERR_STAT_REG0                                , RULL(0x15011819), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C19,
REG64( EX_ED_RD_ERR_STAT_REG0                                  , RULL(0x10011819), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_ED_RD_ERR_STAT_REG0                                , RULL(0x10011819), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_ED_RD_ERR_STAT_REG0                                , RULL(0x10011C19), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_ED_RD_ERR_STAT_REG0                                , RULL(0x11011819), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_ED_RD_ERR_STAT_REG0                                , RULL(0x11011C19), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_ED_RD_ERR_STAT_REG0                                , RULL(0x12011819), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_ED_RD_ERR_STAT_REG0                                , RULL(0x12011C19), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_ED_RD_ERR_STAT_REG0                                , RULL(0x13011819), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_ED_RD_ERR_STAT_REG0                                , RULL(0x13011C19), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_ED_RD_ERR_STAT_REG0                                , RULL(0x14011819), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_ED_RD_ERR_STAT_REG0                                , RULL(0x14011C19), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_ED_RD_ERR_STAT_REG0                               , RULL(0x15011819), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_ED_RD_ERR_STAT_REG0                               , RULL(0x15011C19), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_ED_RD_ERR_STAT_REG1                                  , RULL(0x1001181A), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C1A,
REG64( EQ_0_ED_RD_ERR_STAT_REG1                                , RULL(0x1001181A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C1A,
REG64( EQ_1_ED_RD_ERR_STAT_REG1                                , RULL(0x1101181A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C1A,
REG64( EQ_2_ED_RD_ERR_STAT_REG1                                , RULL(0x1201181A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C1A,
REG64( EQ_3_ED_RD_ERR_STAT_REG1                                , RULL(0x1301181A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C1A,
REG64( EQ_4_ED_RD_ERR_STAT_REG1                                , RULL(0x1401181A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C1A,
REG64( EQ_5_ED_RD_ERR_STAT_REG1                                , RULL(0x1501181A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C1A,
REG64( EX_0_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x1001181A), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_ED_RD_ERR_STAT_REG1                            , RULL(0x1501181A), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_ED_RD_ERR_STAT_REG1                            , RULL(0x15011C1A), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x10011C1A), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x1101181A), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x11011C1A), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x1201181A), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x12011C1A), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x1301181A), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x13011C1A), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x1401181A), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_ED_RD_ERR_STAT_REG1                             , RULL(0x14011C1A), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_ED_RD_ERR_STAT_REG1                               , RULL(0x1001181A), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( C_ERROR_REG                                             , RULL(0x200F001F), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_ERROR_REG                                           , RULL(0x200F001F), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_ERROR_REG                                           , RULL(0x210F001F), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_ERROR_REG                                           , RULL(0x220F001F), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_ERROR_REG                                           , RULL(0x230F001F), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_ERROR_REG                                           , RULL(0x240F001F), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_ERROR_REG                                           , RULL(0x250F001F), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_ERROR_REG                                           , RULL(0x260F001F), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_ERROR_REG                                           , RULL(0x270F001F), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_ERROR_REG                                           , RULL(0x280F001F), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_ERROR_REG                                           , RULL(0x290F001F), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_ERROR_REG                                          , RULL(0x2A0F001F), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_ERROR_REG                                          , RULL(0x2B0F001F), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_ERROR_REG                                          , RULL(0x2C0F001F), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_ERROR_REG                                          , RULL(0x2D0F001F), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_ERROR_REG                                          , RULL(0x2E0F001F), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_ERROR_REG                                          , RULL(0x2F0F001F), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_ERROR_REG                                          , RULL(0x300F001F), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_ERROR_REG                                          , RULL(0x310F001F), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_ERROR_REG                                          , RULL(0x320F001F), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_ERROR_REG                                          , RULL(0x330F001F), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_ERROR_REG                                          , RULL(0x340F001F), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_ERROR_REG                                          , RULL(0x350F001F), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_ERROR_REG                                          , RULL(0x360F001F), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_ERROR_REG                                          , RULL(0x370F001F), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_ERROR_REG                                            , RULL(0x100F001F), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_ERROR_REG                                          , RULL(0x100F001F), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_ERROR_REG                                          , RULL(0x110F001F), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_ERROR_REG                                          , RULL(0x120F001F), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_ERROR_REG                                          , RULL(0x130F001F), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_ERROR_REG                                          , RULL(0x140F001F), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_ERROR_REG                                          , RULL(0x150F001F), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_ERROR_REG                                            , RULL(0x200F001F), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F001F,
REG64( EX_0_ERROR_REG                                          , RULL(0x200F001F), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F001F,
REG64( EX_1_ERROR_REG                                          , RULL(0x230F001F), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F001F,
REG64( EX_2_ERROR_REG                                          , RULL(0x240F001F), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F001F,
REG64( EX_3_ERROR_REG                                          , RULL(0x260F001F), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F001F,
REG64( EX_4_ERROR_REG                                          , RULL(0x280F001F), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F001F,
REG64( EX_5_ERROR_REG                                          , RULL(0x2A0F001F), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F001F,
REG64( EX_6_ERROR_REG                                          , RULL(0x2C0F001F), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F001F,
REG64( EX_7_ERROR_REG                                          , RULL(0x2E0F001F), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F001F,
REG64( EX_8_ERROR_REG                                          , RULL(0x300F001F), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F001F,
REG64( EX_9_ERROR_REG                                          , RULL(0x320F001F), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F001F,
REG64( EX_10_ERROR_REG                                         , RULL(0x340F001F), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F001F,
REG64( EX_11_ERROR_REG                                         , RULL(0x360F001F), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F001F,

REG64( PEC_0_ERROR_REG                                         , RULL(0x0D0F001F), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_ERROR_REG                                         , RULL(0x0E0F001F), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_ERROR_REG                                         , RULL(0x0F0F001F), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_ERROR_STATUS                                          , RULL(0x2003000F), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_ERROR_STATUS                                        , RULL(0x2003000F), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_ERROR_STATUS                                        , RULL(0x2103000F), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_ERROR_STATUS                                        , RULL(0x2203000F), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_ERROR_STATUS                                        , RULL(0x2303000F), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_ERROR_STATUS                                        , RULL(0x2403000F), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_ERROR_STATUS                                        , RULL(0x2503000F), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_ERROR_STATUS                                        , RULL(0x2603000F), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_ERROR_STATUS                                        , RULL(0x2703000F), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_ERROR_STATUS                                        , RULL(0x2803000F), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_ERROR_STATUS                                        , RULL(0x2903000F), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_ERROR_STATUS                                       , RULL(0x2A03000F), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_ERROR_STATUS                                       , RULL(0x2B03000F), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_ERROR_STATUS                                       , RULL(0x2C03000F), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_ERROR_STATUS                                       , RULL(0x2D03000F), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_ERROR_STATUS                                       , RULL(0x2E03000F), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_ERROR_STATUS                                       , RULL(0x2F03000F), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_ERROR_STATUS                                       , RULL(0x3003000F), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_ERROR_STATUS                                       , RULL(0x3103000F), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_ERROR_STATUS                                       , RULL(0x3203000F), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_ERROR_STATUS                                       , RULL(0x3303000F), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_ERROR_STATUS                                       , RULL(0x3403000F), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_ERROR_STATUS                                       , RULL(0x3503000F), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_ERROR_STATUS                                       , RULL(0x3603000F), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_ERROR_STATUS                                       , RULL(0x3703000F), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_ERROR_STATUS                                         , RULL(0x1003000F), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_ERROR_STATUS                                       , RULL(0x1003000F), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_ERROR_STATUS                                       , RULL(0x1103000F), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_ERROR_STATUS                                       , RULL(0x1203000F), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_ERROR_STATUS                                       , RULL(0x1303000F), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_ERROR_STATUS                                       , RULL(0x1403000F), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_ERROR_STATUS                                       , RULL(0x1503000F), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_ERROR_STATUS                                         , RULL(0x2003000F), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 2103000F,
REG64( EX_0_ERROR_STATUS                                       , RULL(0x2003000F), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 2103000F,
REG64( EX_1_ERROR_STATUS                                       , RULL(0x2203000F), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 2303000F,
REG64( EX_2_ERROR_STATUS                                       , RULL(0x2403000F), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 2503000F,
REG64( EX_3_ERROR_STATUS                                       , RULL(0x2603000F), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 2703000F,
REG64( EX_4_ERROR_STATUS                                       , RULL(0x2803000F), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 2903000F,
REG64( EX_5_ERROR_STATUS                                       , RULL(0x2A03000F), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B03000F,
REG64( EX_6_ERROR_STATUS                                       , RULL(0x2C03000F), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D03000F,
REG64( EX_7_ERROR_STATUS                                       , RULL(0x2E03000F), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F03000F,
REG64( EX_8_ERROR_STATUS                                       , RULL(0x3003000F), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 3103000F,
REG64( EX_9_ERROR_STATUS                                       , RULL(0x3203000F), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 3303000F,
REG64( EX_10_ERROR_STATUS                                      , RULL(0x3403000F), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 3503000F,
REG64( EX_11_ERROR_STATUS                                      , RULL(0x3603000F), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 3703000F,

REG64( PEC_0_ERROR_STATUS                                      , RULL(0x0D03000F), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_ERROR_STATUS                                      , RULL(0x0E03000F), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_ERROR_STATUS                                      , RULL(0x0F03000F), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_ERR_INJ_REG                                           , RULL(0x20010CBF), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_ERR_INJ_REG                                         , RULL(0x20010CBF), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_ERR_INJ_REG                                         , RULL(0x21010CBF), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_ERR_INJ_REG                                         , RULL(0x22010CBF), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_ERR_INJ_REG                                         , RULL(0x23010CBF), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_ERR_INJ_REG                                         , RULL(0x24010CBF), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_ERR_INJ_REG                                         , RULL(0x25010CBF), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_ERR_INJ_REG                                         , RULL(0x26010CBF), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_ERR_INJ_REG                                         , RULL(0x27010CBF), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_ERR_INJ_REG                                         , RULL(0x28010CBF), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_ERR_INJ_REG                                         , RULL(0x29010CBF), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_ERR_INJ_REG                                        , RULL(0x2A010CBF), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_ERR_INJ_REG                                        , RULL(0x2B010CBF), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_ERR_INJ_REG                                        , RULL(0x2C010CBF), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_ERR_INJ_REG                                        , RULL(0x2D010CBF), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_ERR_INJ_REG                                        , RULL(0x2E010CBF), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_ERR_INJ_REG                                        , RULL(0x2F010CBF), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_ERR_INJ_REG                                        , RULL(0x30010CBF), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_ERR_INJ_REG                                        , RULL(0x31010CBF), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_ERR_INJ_REG                                        , RULL(0x32010CBF), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_ERR_INJ_REG                                        , RULL(0x33010CBF), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_ERR_INJ_REG                                        , RULL(0x34010CBF), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_ERR_INJ_REG                                        , RULL(0x35010CBF), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_ERR_INJ_REG                                        , RULL(0x36010CBF), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_ERR_INJ_REG                                        , RULL(0x37010CBF), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_ERR_INJ_REG                                          , RULL(0x1001080C), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001180D, 10010C0C, 10011C0D,
REG64( EQ_0_ERR_INJ_REG                                        , RULL(0x1001080C), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001180D, 10010C0C, 10011C0D,
REG64( EQ_1_ERR_INJ_REG                                        , RULL(0x1101080C), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101180D, 11010C0C, 11011C0D,
REG64( EQ_2_ERR_INJ_REG                                        , RULL(0x1201080C), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201180D, 12010C0C, 12011C0D,
REG64( EQ_3_ERR_INJ_REG                                        , RULL(0x1301080C), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301180D, 13010C0C, 13011C0D,
REG64( EQ_4_ERR_INJ_REG                                        , RULL(0x1401080C), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401180D, 14010C0C, 14011C0D,
REG64( EQ_5_ERR_INJ_REG                                        , RULL(0x1501080C), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501180D, 15010C0C, 15011C0D,
REG64( EX_ERR_INJ_REG                                          , RULL(0x20010CBF), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010CBF,
REG64( EX_0_ERR_INJ_REG                                        , RULL(0x20010CBF), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010CBF,
REG64( EX_1_ERR_INJ_REG                                        , RULL(0x22010CBF), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010CBF,
REG64( EX_2_ERR_INJ_REG                                        , RULL(0x24010CBF), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010CBF,
REG64( EX_3_ERR_INJ_REG                                        , RULL(0x26010CBF), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010CBF,
REG64( EX_4_ERR_INJ_REG                                        , RULL(0x28010CBF), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010CBF,
REG64( EX_5_ERR_INJ_REG                                        , RULL(0x2A010CBF), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010CBF,
REG64( EX_6_ERR_INJ_REG                                        , RULL(0x2C010CBF), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010CBF,
REG64( EX_7_ERR_INJ_REG                                        , RULL(0x2E010CBF), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010CBF,
REG64( EX_8_ERR_INJ_REG                                        , RULL(0x30010CBF), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010CBF,
REG64( EX_9_ERR_INJ_REG                                        , RULL(0x32010CBF), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010CBF,
REG64( EX_0_L2_ERR_INJ_REG                                     , RULL(0x1001080C), SH_UNT_EX_0_L2  , SH_ACS_SCOM      );
REG64( EX_0_L3_ERR_INJ_REG                                     , RULL(0x1001180D), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_ERR_INJ_REG                                       , RULL(0x34010CBF), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010CBF,
REG64( EX_11_ERR_INJ_REG                                       , RULL(0x36010CBF), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010CBF,
REG64( EX_10_L2_ERR_INJ_REG                                    , RULL(0x1501080C), SH_UNT_EX_10_L2 , SH_ACS_SCOM      );
REG64( EX_10_L3_ERR_INJ_REG                                    , RULL(0x1501180D), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L2_ERR_INJ_REG                                    , RULL(0x15010C0C), SH_UNT_EX_11_L2 , SH_ACS_SCOM      );
REG64( EX_11_L3_ERR_INJ_REG                                    , RULL(0x15011C0D), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L2_ERR_INJ_REG                                     , RULL(0x10010C0C), SH_UNT_EX_1_L2  , SH_ACS_SCOM      );
REG64( EX_1_L3_ERR_INJ_REG                                     , RULL(0x10011C0D), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L2_ERR_INJ_REG                                     , RULL(0x1101080C), SH_UNT_EX_2_L2  , SH_ACS_SCOM      );
REG64( EX_2_L3_ERR_INJ_REG                                     , RULL(0x1101180D), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L2_ERR_INJ_REG                                     , RULL(0x11010C0C), SH_UNT_EX_3_L2  , SH_ACS_SCOM      );
REG64( EX_3_L3_ERR_INJ_REG                                     , RULL(0x11011C0D), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L2_ERR_INJ_REG                                     , RULL(0x1201080C), SH_UNT_EX_4_L2  , SH_ACS_SCOM      );
REG64( EX_4_L3_ERR_INJ_REG                                     , RULL(0x1201180D), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L2_ERR_INJ_REG                                     , RULL(0x12010C0C), SH_UNT_EX_5_L2  , SH_ACS_SCOM      );
REG64( EX_5_L3_ERR_INJ_REG                                     , RULL(0x12011C0D), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L2_ERR_INJ_REG                                     , RULL(0x1301080C), SH_UNT_EX_6_L2  , SH_ACS_SCOM      );
REG64( EX_6_L3_ERR_INJ_REG                                     , RULL(0x1301180D), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L2_ERR_INJ_REG                                     , RULL(0x13010C0C), SH_UNT_EX_7_L2  , SH_ACS_SCOM      );
REG64( EX_7_L3_ERR_INJ_REG                                     , RULL(0x13011C0D), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L2_ERR_INJ_REG                                     , RULL(0x1401080C), SH_UNT_EX_8_L2  , SH_ACS_SCOM      );
REG64( EX_8_L3_ERR_INJ_REG                                     , RULL(0x1401180D), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L2_ERR_INJ_REG                                     , RULL(0x14010C0C), SH_UNT_EX_9_L2  , SH_ACS_SCOM      );
REG64( EX_9_L3_ERR_INJ_REG                                     , RULL(0x14011C0D), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L2_ERR_INJ_REG                                       , RULL(0x1001080C), SH_UNT_EX_L2    , SH_ACS_SCOM      );
REG64( EX_L3_ERR_INJ_REG                                       , RULL(0x1001180D), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_ERR_RPT0                                             , RULL(0x10010812), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10010C12,
REG64( EQ_0_ERR_RPT0                                           , RULL(0x10010812), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10010C12,
REG64( EQ_1_ERR_RPT0                                           , RULL(0x11010812), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11010C12,
REG64( EQ_2_ERR_RPT0                                           , RULL(0x12010812), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12010C12,
REG64( EQ_3_ERR_RPT0                                           , RULL(0x13010812), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13010C12,
REG64( EQ_4_ERR_RPT0                                           , RULL(0x14010812), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14010C12,
REG64( EQ_5_ERR_RPT0                                           , RULL(0x15010812), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15010C12,
REG64( EX_0_L2_ERR_RPT0                                        , RULL(0x10010812), SH_UNT_EX_0_L2  , SH_ACS_SCOM      );
REG64( EX_10_L2_ERR_RPT0                                       , RULL(0x15010812), SH_UNT_EX_10_L2 , SH_ACS_SCOM      );
REG64( EX_11_L2_ERR_RPT0                                       , RULL(0x15010C12), SH_UNT_EX_11_L2 , SH_ACS_SCOM      );
REG64( EX_1_L2_ERR_RPT0                                        , RULL(0x10010C12), SH_UNT_EX_1_L2  , SH_ACS_SCOM      );
REG64( EX_2_L2_ERR_RPT0                                        , RULL(0x11010812), SH_UNT_EX_2_L2  , SH_ACS_SCOM      );
REG64( EX_3_L2_ERR_RPT0                                        , RULL(0x11010C12), SH_UNT_EX_3_L2  , SH_ACS_SCOM      );
REG64( EX_4_L2_ERR_RPT0                                        , RULL(0x12010812), SH_UNT_EX_4_L2  , SH_ACS_SCOM      );
REG64( EX_5_L2_ERR_RPT0                                        , RULL(0x12010C12), SH_UNT_EX_5_L2  , SH_ACS_SCOM      );
REG64( EX_6_L2_ERR_RPT0                                        , RULL(0x13010812), SH_UNT_EX_6_L2  , SH_ACS_SCOM      );
REG64( EX_7_L2_ERR_RPT0                                        , RULL(0x13010C12), SH_UNT_EX_7_L2  , SH_ACS_SCOM      );
REG64( EX_8_L2_ERR_RPT0                                        , RULL(0x14010812), SH_UNT_EX_8_L2  , SH_ACS_SCOM      );
REG64( EX_9_L2_ERR_RPT0                                        , RULL(0x14010C12), SH_UNT_EX_9_L2  , SH_ACS_SCOM      );
REG64( EX_L2_ERR_RPT0                                          , RULL(0x10010812), SH_UNT_EX_L2    , SH_ACS_SCOM      );

REG64( EQ_ERR_RPT1                                             , RULL(0x10010813), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10010C13,
REG64( EQ_0_ERR_RPT1                                           , RULL(0x10010813), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10010C13,
REG64( EQ_1_ERR_RPT1                                           , RULL(0x11010813), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11010C13,
REG64( EQ_2_ERR_RPT1                                           , RULL(0x12010813), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12010C13,
REG64( EQ_3_ERR_RPT1                                           , RULL(0x13010813), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13010C13,
REG64( EQ_4_ERR_RPT1                                           , RULL(0x14010813), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14010C13,
REG64( EQ_5_ERR_RPT1                                           , RULL(0x15010813), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15010C13,
REG64( EX_0_L2_ERR_RPT1                                        , RULL(0x10010813), SH_UNT_EX_0_L2  , SH_ACS_SCOM      );
REG64( EX_10_L2_ERR_RPT1                                       , RULL(0x15010813), SH_UNT_EX_10_L2 , SH_ACS_SCOM      );
REG64( EX_11_L2_ERR_RPT1                                       , RULL(0x15010C13), SH_UNT_EX_11_L2 , SH_ACS_SCOM      );
REG64( EX_1_L2_ERR_RPT1                                        , RULL(0x10010C13), SH_UNT_EX_1_L2  , SH_ACS_SCOM      );
REG64( EX_2_L2_ERR_RPT1                                        , RULL(0x11010813), SH_UNT_EX_2_L2  , SH_ACS_SCOM      );
REG64( EX_3_L2_ERR_RPT1                                        , RULL(0x11010C13), SH_UNT_EX_3_L2  , SH_ACS_SCOM      );
REG64( EX_4_L2_ERR_RPT1                                        , RULL(0x12010813), SH_UNT_EX_4_L2  , SH_ACS_SCOM      );
REG64( EX_5_L2_ERR_RPT1                                        , RULL(0x12010C13), SH_UNT_EX_5_L2  , SH_ACS_SCOM      );
REG64( EX_6_L2_ERR_RPT1                                        , RULL(0x13010813), SH_UNT_EX_6_L2  , SH_ACS_SCOM      );
REG64( EX_7_L2_ERR_RPT1                                        , RULL(0x13010C13), SH_UNT_EX_7_L2  , SH_ACS_SCOM      );
REG64( EX_8_L2_ERR_RPT1                                        , RULL(0x14010813), SH_UNT_EX_8_L2  , SH_ACS_SCOM      );
REG64( EX_9_L2_ERR_RPT1                                        , RULL(0x14010C13), SH_UNT_EX_9_L2  , SH_ACS_SCOM      );
REG64( EX_L2_ERR_RPT1                                          , RULL(0x10010813), SH_UNT_EX_L2    , SH_ACS_SCOM      );

REG64( EQ_ERR_RPT_REG                                          , RULL(0x1001100E), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001140E,
REG64( EQ_0_ERR_RPT_REG                                        , RULL(0x1001100E), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001140E,
REG64( EQ_1_ERR_RPT_REG                                        , RULL(0x1101100E), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101140E,
REG64( EQ_2_ERR_RPT_REG                                        , RULL(0x1201100E), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201140E,
REG64( EQ_3_ERR_RPT_REG                                        , RULL(0x1301100E), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301140E,
REG64( EQ_4_ERR_RPT_REG                                        , RULL(0x1401100E), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401140E,
REG64( EQ_5_ERR_RPT_REG                                        , RULL(0x1501100E), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501140E,
REG64( EX_ERR_RPT_REG                                          , RULL(0x1001100E), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_ERR_RPT_REG                                        , RULL(0x1001100E), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_ERR_RPT_REG                                        , RULL(0x1001140E), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_ERR_RPT_REG                                        , RULL(0x1101100E), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_ERR_RPT_REG                                        , RULL(0x1101140E), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_ERR_RPT_REG                                        , RULL(0x1201100E), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_ERR_RPT_REG                                        , RULL(0x1201140E), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_ERR_RPT_REG                                        , RULL(0x1301100E), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_ERR_RPT_REG                                        , RULL(0x1301140E), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_ERR_RPT_REG                                        , RULL(0x1401100E), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_ERR_RPT_REG                                        , RULL(0x1401140E), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_ERR_RPT_REG                                       , RULL(0x1501100E), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_ERR_RPT_REG                                       , RULL(0x1501140E), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( C_ERR_STATUS_REG                                        , RULL(0x20050013), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_ERR_STATUS_REG                                      , RULL(0x20050013), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_ERR_STATUS_REG                                      , RULL(0x21050013), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_ERR_STATUS_REG                                      , RULL(0x22050013), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_ERR_STATUS_REG                                      , RULL(0x23050013), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_ERR_STATUS_REG                                      , RULL(0x24050013), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_ERR_STATUS_REG                                      , RULL(0x25050013), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_ERR_STATUS_REG                                      , RULL(0x26050013), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_ERR_STATUS_REG                                      , RULL(0x27050013), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_ERR_STATUS_REG                                      , RULL(0x28050013), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_ERR_STATUS_REG                                      , RULL(0x29050013), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_ERR_STATUS_REG                                     , RULL(0x2A050013), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_ERR_STATUS_REG                                     , RULL(0x2B050013), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_ERR_STATUS_REG                                     , RULL(0x2C050013), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_ERR_STATUS_REG                                     , RULL(0x2D050013), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_ERR_STATUS_REG                                     , RULL(0x2E050013), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_ERR_STATUS_REG                                     , RULL(0x2F050013), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_ERR_STATUS_REG                                     , RULL(0x30050013), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_ERR_STATUS_REG                                     , RULL(0x31050013), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_ERR_STATUS_REG                                     , RULL(0x32050013), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_ERR_STATUS_REG                                     , RULL(0x33050013), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_ERR_STATUS_REG                                     , RULL(0x34050013), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_ERR_STATUS_REG                                     , RULL(0x35050013), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_ERR_STATUS_REG                                     , RULL(0x36050013), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_ERR_STATUS_REG                                     , RULL(0x37050013), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_ERR_STATUS_REG                                       , RULL(0x10050013), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_ERR_STATUS_REG                                     , RULL(0x10050013), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_ERR_STATUS_REG                                     , RULL(0x11050013), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_ERR_STATUS_REG                                     , RULL(0x12050013), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_ERR_STATUS_REG                                     , RULL(0x13050013), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_ERR_STATUS_REG                                     , RULL(0x14050013), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_ERR_STATUS_REG                                     , RULL(0x15050013), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_ERR_STATUS_REG                                       , RULL(0x20050013), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 21050013,
REG64( EX_0_ERR_STATUS_REG                                     , RULL(0x20050013), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 21050013,
REG64( EX_1_ERR_STATUS_REG                                     , RULL(0x22050013), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 23050013,
REG64( EX_2_ERR_STATUS_REG                                     , RULL(0x24050013), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 25050013,
REG64( EX_3_ERR_STATUS_REG                                     , RULL(0x26050013), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 27050013,
REG64( EX_4_ERR_STATUS_REG                                     , RULL(0x28050013), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 29050013,
REG64( EX_5_ERR_STATUS_REG                                     , RULL(0x2A050013), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B050013,
REG64( EX_6_ERR_STATUS_REG                                     , RULL(0x2C050013), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D050013,
REG64( EX_7_ERR_STATUS_REG                                     , RULL(0x2E050013), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F050013,
REG64( EX_8_ERR_STATUS_REG                                     , RULL(0x30050013), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 31050013,
REG64( EX_9_ERR_STATUS_REG                                     , RULL(0x32050013), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 33050013,
REG64( EX_10_ERR_STATUS_REG                                    , RULL(0x34050013), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 35050013,
REG64( EX_11_ERR_STATUS_REG                                    , RULL(0x36050013), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 37050013,

REG64( PEC_0_ERR_STATUS_REG                                    , RULL(0x0D050013), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_ERR_STATUS_REG                                    , RULL(0x0E050013), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_ERR_STATUS_REG                                    , RULL(0x0F050013), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( EQ_FIR_ACTION0_REG                                      , RULL(0x10010806), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10011806, 10011006, 10010C06, 10011C06, 10011406,
REG64( EQ_0_FIR_ACTION0_REG                                    , RULL(0x10010806), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10011806, 10011006, 10010C06, 10011C06, 10011406,
REG64( EQ_1_FIR_ACTION0_REG                                    , RULL(0x11010806), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11011806, 11011006, 11010C06, 11011C06, 11011406,
REG64( EQ_2_FIR_ACTION0_REG                                    , RULL(0x12010806), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12011806, 12011006, 12010C06, 12011C06, 12011406,
REG64( EQ_3_FIR_ACTION0_REG                                    , RULL(0x13010806), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13011806, 13011006, 13010C06, 13011C06, 13011406,
REG64( EQ_4_FIR_ACTION0_REG                                    , RULL(0x14010806), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14011806, 14011006, 14010C06, 14011C06, 14011406,
REG64( EQ_5_FIR_ACTION0_REG                                    , RULL(0x15010806), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15011806, 15011006, 15010C06, 15011C06, 15011406,
REG64( EX_FIR_ACTION0_REG                                      , RULL(0x10011006), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_FIR_ACTION0_REG                                    , RULL(0x10011006), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_FIR_ACTION0_REG                                    , RULL(0x10011406), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_FIR_ACTION0_REG                                    , RULL(0x11011006), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_FIR_ACTION0_REG                                    , RULL(0x11011406), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_FIR_ACTION0_REG                                    , RULL(0x12011006), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_FIR_ACTION0_REG                                    , RULL(0x12011406), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_FIR_ACTION0_REG                                    , RULL(0x13011006), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_FIR_ACTION0_REG                                    , RULL(0x13011406), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_FIR_ACTION0_REG                                    , RULL(0x14011006), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_FIR_ACTION0_REG                                    , RULL(0x14011406), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_FIR_ACTION0_REG                                 , RULL(0x10010806), SH_UNT_EX_0_L2  , SH_ACS_SCOM_RW   );
REG64( EX_0_L3_FIR_ACTION0_REG                                 , RULL(0x10011806), SH_UNT_EX_0_L3  , SH_ACS_SCOM_RW   );
REG64( EX_10_FIR_ACTION0_REG                                   , RULL(0x15011006), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_FIR_ACTION0_REG                                   , RULL(0x15011406), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_10_L2_FIR_ACTION0_REG                                , RULL(0x15010806), SH_UNT_EX_10_L2 , SH_ACS_SCOM_RW   );
REG64( EX_10_L3_FIR_ACTION0_REG                                , RULL(0x15011806), SH_UNT_EX_10_L3 , SH_ACS_SCOM_RW   );
REG64( EX_11_L2_FIR_ACTION0_REG                                , RULL(0x15010C06), SH_UNT_EX_11_L2 , SH_ACS_SCOM_RW   );
REG64( EX_11_L3_FIR_ACTION0_REG                                , RULL(0x15011C06), SH_UNT_EX_11_L3 , SH_ACS_SCOM_RW   );
REG64( EX_1_L2_FIR_ACTION0_REG                                 , RULL(0x10010C06), SH_UNT_EX_1_L2  , SH_ACS_SCOM_RW   );
REG64( EX_1_L3_FIR_ACTION0_REG                                 , RULL(0x10011C06), SH_UNT_EX_1_L3  , SH_ACS_SCOM_RW   );
REG64( EX_2_L2_FIR_ACTION0_REG                                 , RULL(0x11010806), SH_UNT_EX_2_L2  , SH_ACS_SCOM_RW   );
REG64( EX_2_L3_FIR_ACTION0_REG                                 , RULL(0x11011806), SH_UNT_EX_2_L3  , SH_ACS_SCOM_RW   );
REG64( EX_3_L2_FIR_ACTION0_REG                                 , RULL(0x11010C06), SH_UNT_EX_3_L2  , SH_ACS_SCOM_RW   );
REG64( EX_3_L3_FIR_ACTION0_REG                                 , RULL(0x11011C06), SH_UNT_EX_3_L3  , SH_ACS_SCOM_RW   );
REG64( EX_4_L2_FIR_ACTION0_REG                                 , RULL(0x12010806), SH_UNT_EX_4_L2  , SH_ACS_SCOM_RW   );
REG64( EX_4_L3_FIR_ACTION0_REG                                 , RULL(0x12011806), SH_UNT_EX_4_L3  , SH_ACS_SCOM_RW   );
REG64( EX_5_L2_FIR_ACTION0_REG                                 , RULL(0x12010C06), SH_UNT_EX_5_L2  , SH_ACS_SCOM_RW   );
REG64( EX_5_L3_FIR_ACTION0_REG                                 , RULL(0x12011C06), SH_UNT_EX_5_L3  , SH_ACS_SCOM_RW   );
REG64( EX_6_L2_FIR_ACTION0_REG                                 , RULL(0x13010806), SH_UNT_EX_6_L2  , SH_ACS_SCOM_RW   );
REG64( EX_6_L3_FIR_ACTION0_REG                                 , RULL(0x13011806), SH_UNT_EX_6_L3  , SH_ACS_SCOM_RW   );
REG64( EX_7_L2_FIR_ACTION0_REG                                 , RULL(0x13010C06), SH_UNT_EX_7_L2  , SH_ACS_SCOM_RW   );
REG64( EX_7_L3_FIR_ACTION0_REG                                 , RULL(0x13011C06), SH_UNT_EX_7_L3  , SH_ACS_SCOM_RW   );
REG64( EX_8_L2_FIR_ACTION0_REG                                 , RULL(0x14010806), SH_UNT_EX_8_L2  , SH_ACS_SCOM_RW   );
REG64( EX_8_L3_FIR_ACTION0_REG                                 , RULL(0x14011806), SH_UNT_EX_8_L3  , SH_ACS_SCOM_RW   );
REG64( EX_9_L2_FIR_ACTION0_REG                                 , RULL(0x14010C06), SH_UNT_EX_9_L2  , SH_ACS_SCOM_RW   );
REG64( EX_9_L3_FIR_ACTION0_REG                                 , RULL(0x14011C06), SH_UNT_EX_9_L3  , SH_ACS_SCOM_RW   );
REG64( EX_L2_FIR_ACTION0_REG                                   , RULL(0x10010806), SH_UNT_EX_L2    , SH_ACS_SCOM_RW   );
REG64( EX_L3_FIR_ACTION0_REG                                   , RULL(0x10011806), SH_UNT_EX_L3    , SH_ACS_SCOM_RW   );

REG64( PEC_0_FIR_ACTION0_REG                                   , RULL(0x0D010C06), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_FIR_ACTION0_REG                                   , RULL(0x0E010C06), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_FIR_ACTION0_REG                                   , RULL(0x0F010C06), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( EQ_FIR_ACTION1_REG                                      , RULL(0x10010807), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10011807, 10011007, 10010C07, 10011C07, 10011407,
REG64( EQ_0_FIR_ACTION1_REG                                    , RULL(0x10010807), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10011807, 10011007, 10010C07, 10011C07, 10011407,
REG64( EQ_1_FIR_ACTION1_REG                                    , RULL(0x11010807), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11011807, 11011007, 11010C07, 11011C07, 11011407,
REG64( EQ_2_FIR_ACTION1_REG                                    , RULL(0x12010807), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12011807, 12011007, 12010C07, 12011C07, 12011407,
REG64( EQ_3_FIR_ACTION1_REG                                    , RULL(0x13010807), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13011807, 13011007, 13010C07, 13011C07, 13011407,
REG64( EQ_4_FIR_ACTION1_REG                                    , RULL(0x14010807), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14011807, 14011007, 14010C07, 14011C07, 14011407,
REG64( EQ_5_FIR_ACTION1_REG                                    , RULL(0x15010807), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15011807, 15011007, 15010C07, 15011C07, 15011407,
REG64( EX_FIR_ACTION1_REG                                      , RULL(0x10011007), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_0_FIR_ACTION1_REG                                    , RULL(0x10011007), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_1_FIR_ACTION1_REG                                    , RULL(0x10011407), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_2_FIR_ACTION1_REG                                    , RULL(0x11011007), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_3_FIR_ACTION1_REG                                    , RULL(0x11011407), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_4_FIR_ACTION1_REG                                    , RULL(0x12011007), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_5_FIR_ACTION1_REG                                    , RULL(0x12011407), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_6_FIR_ACTION1_REG                                    , RULL(0x13011007), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_7_FIR_ACTION1_REG                                    , RULL(0x13011407), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_8_FIR_ACTION1_REG                                    , RULL(0x14011007), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_9_FIR_ACTION1_REG                                    , RULL(0x14011407), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_FIR_ACTION1_REG                                 , RULL(0x10010807), SH_UNT_EX_0_L2  , SH_ACS_SCOM_RW   );
REG64( EX_0_L3_FIR_ACTION1_REG                                 , RULL(0x10011807), SH_UNT_EX_0_L3  , SH_ACS_SCOM_RW   );
REG64( EX_10_FIR_ACTION1_REG                                   , RULL(0x15011007), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_11_FIR_ACTION1_REG                                   , RULL(0x15011407), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_10_L2_FIR_ACTION1_REG                                , RULL(0x15010807), SH_UNT_EX_10_L2 , SH_ACS_SCOM_RW   );
REG64( EX_10_L3_FIR_ACTION1_REG                                , RULL(0x15011807), SH_UNT_EX_10_L3 , SH_ACS_SCOM_RW   );
REG64( EX_11_L2_FIR_ACTION1_REG                                , RULL(0x15010C07), SH_UNT_EX_11_L2 , SH_ACS_SCOM_RW   );
REG64( EX_11_L3_FIR_ACTION1_REG                                , RULL(0x15011C07), SH_UNT_EX_11_L3 , SH_ACS_SCOM_RW   );
REG64( EX_1_L2_FIR_ACTION1_REG                                 , RULL(0x10010C07), SH_UNT_EX_1_L2  , SH_ACS_SCOM_RW   );
REG64( EX_1_L3_FIR_ACTION1_REG                                 , RULL(0x10011C07), SH_UNT_EX_1_L3  , SH_ACS_SCOM_RW   );
REG64( EX_2_L2_FIR_ACTION1_REG                                 , RULL(0x11010807), SH_UNT_EX_2_L2  , SH_ACS_SCOM_RW   );
REG64( EX_2_L3_FIR_ACTION1_REG                                 , RULL(0x11011807), SH_UNT_EX_2_L3  , SH_ACS_SCOM_RW   );
REG64( EX_3_L2_FIR_ACTION1_REG                                 , RULL(0x11010C07), SH_UNT_EX_3_L2  , SH_ACS_SCOM_RW   );
REG64( EX_3_L3_FIR_ACTION1_REG                                 , RULL(0x11011C07), SH_UNT_EX_3_L3  , SH_ACS_SCOM_RW   );
REG64( EX_4_L2_FIR_ACTION1_REG                                 , RULL(0x12010807), SH_UNT_EX_4_L2  , SH_ACS_SCOM_RW   );
REG64( EX_4_L3_FIR_ACTION1_REG                                 , RULL(0x12011807), SH_UNT_EX_4_L3  , SH_ACS_SCOM_RW   );
REG64( EX_5_L2_FIR_ACTION1_REG                                 , RULL(0x12010C07), SH_UNT_EX_5_L2  , SH_ACS_SCOM_RW   );
REG64( EX_5_L3_FIR_ACTION1_REG                                 , RULL(0x12011C07), SH_UNT_EX_5_L3  , SH_ACS_SCOM_RW   );
REG64( EX_6_L2_FIR_ACTION1_REG                                 , RULL(0x13010807), SH_UNT_EX_6_L2  , SH_ACS_SCOM_RW   );
REG64( EX_6_L3_FIR_ACTION1_REG                                 , RULL(0x13011807), SH_UNT_EX_6_L3  , SH_ACS_SCOM_RW   );
REG64( EX_7_L2_FIR_ACTION1_REG                                 , RULL(0x13010C07), SH_UNT_EX_7_L2  , SH_ACS_SCOM_RW   );
REG64( EX_7_L3_FIR_ACTION1_REG                                 , RULL(0x13011C07), SH_UNT_EX_7_L3  , SH_ACS_SCOM_RW   );
REG64( EX_8_L2_FIR_ACTION1_REG                                 , RULL(0x14010807), SH_UNT_EX_8_L2  , SH_ACS_SCOM_RW   );
REG64( EX_8_L3_FIR_ACTION1_REG                                 , RULL(0x14011807), SH_UNT_EX_8_L3  , SH_ACS_SCOM_RW   );
REG64( EX_9_L2_FIR_ACTION1_REG                                 , RULL(0x14010C07), SH_UNT_EX_9_L2  , SH_ACS_SCOM_RW   );
REG64( EX_9_L3_FIR_ACTION1_REG                                 , RULL(0x14011C07), SH_UNT_EX_9_L3  , SH_ACS_SCOM_RW   );
REG64( EX_L2_FIR_ACTION1_REG                                   , RULL(0x10010807), SH_UNT_EX_L2    , SH_ACS_SCOM_RW   );
REG64( EX_L3_FIR_ACTION1_REG                                   , RULL(0x10011807), SH_UNT_EX_L3    , SH_ACS_SCOM_RW   );

REG64( PEC_0_FIR_ACTION1_REG                                   , RULL(0x0D010C07), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_FIR_ACTION1_REG                                   , RULL(0x0E010C07), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_FIR_ACTION1_REG                                   , RULL(0x0F010C07), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_FIR_ERR_INJ                                           , RULL(0x20010A4D), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_FIR_ERR_INJ                                         , RULL(0x20010A4D), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_FIR_ERR_INJ                                         , RULL(0x21010A4D), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_FIR_ERR_INJ                                         , RULL(0x22010A4D), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_FIR_ERR_INJ                                         , RULL(0x23010A4D), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_FIR_ERR_INJ                                         , RULL(0x24010A4D), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_FIR_ERR_INJ                                         , RULL(0x25010A4D), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_FIR_ERR_INJ                                         , RULL(0x26010A4D), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_FIR_ERR_INJ                                         , RULL(0x27010A4D), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_FIR_ERR_INJ                                         , RULL(0x28010A4D), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_FIR_ERR_INJ                                         , RULL(0x29010A4D), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_FIR_ERR_INJ                                        , RULL(0x2A010A4D), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_FIR_ERR_INJ                                        , RULL(0x2B010A4D), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_FIR_ERR_INJ                                        , RULL(0x2C010A4D), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_FIR_ERR_INJ                                        , RULL(0x2D010A4D), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_FIR_ERR_INJ                                        , RULL(0x2E010A4D), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_FIR_ERR_INJ                                        , RULL(0x2F010A4D), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_FIR_ERR_INJ                                        , RULL(0x30010A4D), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_FIR_ERR_INJ                                        , RULL(0x31010A4D), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_FIR_ERR_INJ                                        , RULL(0x32010A4D), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_FIR_ERR_INJ                                        , RULL(0x33010A4D), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_FIR_ERR_INJ                                        , RULL(0x34010A4D), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_FIR_ERR_INJ                                        , RULL(0x35010A4D), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_FIR_ERR_INJ                                        , RULL(0x36010A4D), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_FIR_ERR_INJ                                        , RULL(0x37010A4D), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_FIR_ERR_INJ                                     , RULL(0x20010A4D), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A4D,
REG64( EX_10_L2_FIR_ERR_INJ                                    , RULL(0x34010A4D), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A4D,
REG64( EX_11_L2_FIR_ERR_INJ                                    , RULL(0x36010A4D), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A4D,
REG64( EX_1_L2_FIR_ERR_INJ                                     , RULL(0x22010A4D), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A4D,
REG64( EX_2_L2_FIR_ERR_INJ                                     , RULL(0x24010A4D), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A4D,
REG64( EX_3_L2_FIR_ERR_INJ                                     , RULL(0x26010A4D), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A4D,
REG64( EX_4_L2_FIR_ERR_INJ                                     , RULL(0x28010A4D), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A4D,
REG64( EX_5_L2_FIR_ERR_INJ                                     , RULL(0x2A010A4D), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A4D,
REG64( EX_6_L2_FIR_ERR_INJ                                     , RULL(0x2C010A4D), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A4D,
REG64( EX_7_L2_FIR_ERR_INJ                                     , RULL(0x2E010A4D), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A4D,
REG64( EX_8_L2_FIR_ERR_INJ                                     , RULL(0x30010A4D), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A4D,
REG64( EX_9_L2_FIR_ERR_INJ                                     , RULL(0x32010A4D), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A4D,
REG64( EX_L2_FIR_ERR_INJ                                       , RULL(0x20010A4D), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A4D,

REG64( C_FIR_HOLD_OUT                                          , RULL(0x20010A53), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_FIR_HOLD_OUT                                        , RULL(0x20010A53), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_FIR_HOLD_OUT                                        , RULL(0x21010A53), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_FIR_HOLD_OUT                                        , RULL(0x22010A53), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_FIR_HOLD_OUT                                        , RULL(0x23010A53), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_FIR_HOLD_OUT                                        , RULL(0x24010A53), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_FIR_HOLD_OUT                                        , RULL(0x25010A53), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_FIR_HOLD_OUT                                        , RULL(0x26010A53), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_FIR_HOLD_OUT                                        , RULL(0x27010A53), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_FIR_HOLD_OUT                                        , RULL(0x28010A53), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_FIR_HOLD_OUT                                        , RULL(0x29010A53), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_FIR_HOLD_OUT                                       , RULL(0x2A010A53), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_FIR_HOLD_OUT                                       , RULL(0x2B010A53), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_FIR_HOLD_OUT                                       , RULL(0x2C010A53), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_FIR_HOLD_OUT                                       , RULL(0x2D010A53), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_FIR_HOLD_OUT                                       , RULL(0x2E010A53), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_FIR_HOLD_OUT                                       , RULL(0x2F010A53), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_FIR_HOLD_OUT                                       , RULL(0x30010A53), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_FIR_HOLD_OUT                                       , RULL(0x31010A53), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_FIR_HOLD_OUT                                       , RULL(0x32010A53), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_FIR_HOLD_OUT                                       , RULL(0x33010A53), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_FIR_HOLD_OUT                                       , RULL(0x34010A53), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_FIR_HOLD_OUT                                       , RULL(0x35010A53), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_FIR_HOLD_OUT                                       , RULL(0x36010A53), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_FIR_HOLD_OUT                                       , RULL(0x37010A53), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_0_L2_FIR_HOLD_OUT                                    , RULL(0x20010A53), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 21010A53,
REG64( EX_10_L2_FIR_HOLD_OUT                                   , RULL(0x34010A53), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 35010A53,
REG64( EX_11_L2_FIR_HOLD_OUT                                   , RULL(0x36010A53), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 37010A53,
REG64( EX_1_L2_FIR_HOLD_OUT                                    , RULL(0x22010A53), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 23010A53,
REG64( EX_2_L2_FIR_HOLD_OUT                                    , RULL(0x24010A53), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 25010A53,
REG64( EX_3_L2_FIR_HOLD_OUT                                    , RULL(0x26010A53), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 27010A53,
REG64( EX_4_L2_FIR_HOLD_OUT                                    , RULL(0x28010A53), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 29010A53,
REG64( EX_5_L2_FIR_HOLD_OUT                                    , RULL(0x2A010A53), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B010A53,
REG64( EX_6_L2_FIR_HOLD_OUT                                    , RULL(0x2C010A53), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D010A53,
REG64( EX_7_L2_FIR_HOLD_OUT                                    , RULL(0x2E010A53), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F010A53,
REG64( EX_8_L2_FIR_HOLD_OUT                                    , RULL(0x30010A53), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 31010A53,
REG64( EX_9_L2_FIR_HOLD_OUT                                    , RULL(0x32010A53), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 33010A53,
REG64( EX_L2_FIR_HOLD_OUT                                      , RULL(0x20010A53), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RO   ); //DUPS: 21010A53,

REG64( C_FIR_MASK                                              , RULL(0x20040002), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_FIR_MASK                                            , RULL(0x20040002), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_FIR_MASK                                            , RULL(0x21040002), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_FIR_MASK                                            , RULL(0x22040002), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_FIR_MASK                                            , RULL(0x23040002), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_FIR_MASK                                            , RULL(0x24040002), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_FIR_MASK                                            , RULL(0x25040002), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_FIR_MASK                                            , RULL(0x26040002), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_FIR_MASK                                            , RULL(0x27040002), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_FIR_MASK                                            , RULL(0x28040002), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_FIR_MASK                                            , RULL(0x29040002), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_FIR_MASK                                           , RULL(0x2A040002), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_FIR_MASK                                           , RULL(0x2B040002), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_FIR_MASK                                           , RULL(0x2C040002), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_FIR_MASK                                           , RULL(0x2D040002), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_FIR_MASK                                           , RULL(0x2E040002), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_FIR_MASK                                           , RULL(0x2F040002), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_FIR_MASK                                           , RULL(0x30040002), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_FIR_MASK                                           , RULL(0x31040002), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_FIR_MASK                                           , RULL(0x32040002), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_FIR_MASK                                           , RULL(0x33040002), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_FIR_MASK                                           , RULL(0x34040002), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_FIR_MASK                                           , RULL(0x35040002), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_FIR_MASK                                           , RULL(0x36040002), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_FIR_MASK                                           , RULL(0x37040002), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_FIR_MASK                                             , RULL(0x10040002), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_FIR_MASK                                           , RULL(0x10040002), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_FIR_MASK                                           , RULL(0x11040002), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_FIR_MASK                                           , RULL(0x12040002), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_FIR_MASK                                           , RULL(0x13040002), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_FIR_MASK                                           , RULL(0x14040002), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_FIR_MASK                                           , RULL(0x15040002), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_FIR_MASK                                             , RULL(0x20040002), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040002,
REG64( EX_0_FIR_MASK                                           , RULL(0x20040002), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040002,
REG64( EX_1_FIR_MASK                                           , RULL(0x22040002), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040002,
REG64( EX_2_FIR_MASK                                           , RULL(0x24040002), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040002,
REG64( EX_3_FIR_MASK                                           , RULL(0x26040002), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040002,
REG64( EX_4_FIR_MASK                                           , RULL(0x28040002), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040002,
REG64( EX_5_FIR_MASK                                           , RULL(0x2A040002), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040002,
REG64( EX_6_FIR_MASK                                           , RULL(0x2C040002), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040002,
REG64( EX_7_FIR_MASK                                           , RULL(0x2E040002), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040002,
REG64( EX_8_FIR_MASK                                           , RULL(0x30040002), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040002,
REG64( EX_9_FIR_MASK                                           , RULL(0x32040002), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040002,
REG64( EX_10_FIR_MASK                                          , RULL(0x34040002), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040002,
REG64( EX_11_FIR_MASK                                          , RULL(0x36040002), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040002,

REG64( PEC_0_FIR_MASK                                          , RULL(0x0D040002), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_FIR_MASK                                          , RULL(0x0E040002), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_FIR_MASK                                          , RULL(0x0F040002), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( EQ_FIR_MASK_REG                                         , RULL(0x10010803), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10011803, 10011003, 10010C03, 10011C03, 10011403,
REG64( EQ_FIR_MASK_REG_AND                                     , RULL(0x10010804), SH_UNT_EQ       ,
       SH_ACS_SCOM1_AND ); //DUPS: 10011804, 10011004, 10010C04, 10011C04, 10011404,
REG64( EQ_FIR_MASK_REG_OR                                      , RULL(0x10010805), SH_UNT_EQ       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10011805, 10011005, 10010C05, 10011C05, 10011405,
REG64( EQ_0_FIR_MASK_REG                                       , RULL(0x10010803), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10011803, 10011003, 10010C03, 10011C03, 10011403,
REG64( EQ_0_FIR_MASK_REG_AND                                   , RULL(0x10010804), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_AND ); //DUPS: 10011804, 10011004, 10010C04, 10011C04, 10011404,
REG64( EQ_0_FIR_MASK_REG_OR                                    , RULL(0x10010805), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10011805, 10011005, 10010C05, 10011C05, 10011405,
REG64( EQ_1_FIR_MASK_REG                                       , RULL(0x11010803), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11011803, 11011003, 11010C03, 11011C03, 11011403,
REG64( EQ_1_FIR_MASK_REG_AND                                   , RULL(0x11010804), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_AND ); //DUPS: 11011804, 11011004, 11010C04, 11011C04, 11011404,
REG64( EQ_1_FIR_MASK_REG_OR                                    , RULL(0x11010805), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 11011805, 11011005, 11010C05, 11011C05, 11011405,
REG64( EQ_2_FIR_MASK_REG                                       , RULL(0x12010803), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12011803, 12011003, 12010C03, 12011C03, 12011403,
REG64( EQ_2_FIR_MASK_REG_AND                                   , RULL(0x12010804), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_AND ); //DUPS: 12011804, 12011004, 12010C04, 12011C04, 12011404,
REG64( EQ_2_FIR_MASK_REG_OR                                    , RULL(0x12010805), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 12011805, 12011005, 12010C05, 12011C05, 12011405,
REG64( EQ_3_FIR_MASK_REG                                       , RULL(0x13010803), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13011803, 13011003, 13010C03, 13011C03, 13011403,
REG64( EQ_3_FIR_MASK_REG_AND                                   , RULL(0x13010804), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_AND ); //DUPS: 13011804, 13011004, 13010C04, 13011C04, 13011404,
REG64( EQ_3_FIR_MASK_REG_OR                                    , RULL(0x13010805), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 13011805, 13011005, 13010C05, 13011C05, 13011405,
REG64( EQ_4_FIR_MASK_REG                                       , RULL(0x14010803), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14011803, 14011003, 14010C03, 14011C03, 14011403,
REG64( EQ_4_FIR_MASK_REG_AND                                   , RULL(0x14010804), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_AND ); //DUPS: 14011804, 14011004, 14010C04, 14011C04, 14011404,
REG64( EQ_4_FIR_MASK_REG_OR                                    , RULL(0x14010805), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 14011805, 14011005, 14010C05, 14011C05, 14011405,
REG64( EQ_5_FIR_MASK_REG                                       , RULL(0x15010803), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15011803, 15011003, 15010C03, 15011C03, 15011403,
REG64( EQ_5_FIR_MASK_REG_AND                                   , RULL(0x15010804), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_AND ); //DUPS: 15011804, 15011004, 15010C04, 15011C04, 15011404,
REG64( EQ_5_FIR_MASK_REG_OR                                    , RULL(0x15010805), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 15011805, 15011005, 15010C05, 15011C05, 15011405,
REG64( EX_FIR_MASK_REG                                         , RULL(0x10011003), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_FIR_MASK_REG_AND                                     , RULL(0x10011004), SH_UNT_EX       , SH_ACS_SCOM1_AND );
REG64( EX_FIR_MASK_REG_OR                                      , RULL(0x10011005), SH_UNT_EX       , SH_ACS_SCOM2_OR  );
REG64( EX_0_FIR_MASK_REG                                       , RULL(0x10011003), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_0_FIR_MASK_REG_AND                                   , RULL(0x10011004), SH_UNT_EX_0     , SH_ACS_SCOM1_AND );
REG64( EX_0_FIR_MASK_REG_OR                                    , RULL(0x10011005), SH_UNT_EX_0     , SH_ACS_SCOM2_OR  );
REG64( EX_1_FIR_MASK_REG                                       , RULL(0x10011403), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_1_FIR_MASK_REG_AND                                   , RULL(0x10011404), SH_UNT_EX_1     , SH_ACS_SCOM1_AND );
REG64( EX_1_FIR_MASK_REG_OR                                    , RULL(0x10011405), SH_UNT_EX_1     , SH_ACS_SCOM2_OR  );
REG64( EX_2_FIR_MASK_REG                                       , RULL(0x11011003), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_2_FIR_MASK_REG_AND                                   , RULL(0x11011004), SH_UNT_EX_2     , SH_ACS_SCOM1_AND );
REG64( EX_2_FIR_MASK_REG_OR                                    , RULL(0x11011005), SH_UNT_EX_2     , SH_ACS_SCOM2_OR  );
REG64( EX_3_FIR_MASK_REG                                       , RULL(0x11011403), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_3_FIR_MASK_REG_AND                                   , RULL(0x11011404), SH_UNT_EX_3     , SH_ACS_SCOM1_AND );
REG64( EX_3_FIR_MASK_REG_OR                                    , RULL(0x11011405), SH_UNT_EX_3     , SH_ACS_SCOM2_OR  );
REG64( EX_4_FIR_MASK_REG                                       , RULL(0x12011003), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_4_FIR_MASK_REG_AND                                   , RULL(0x12011004), SH_UNT_EX_4     , SH_ACS_SCOM1_AND );
REG64( EX_4_FIR_MASK_REG_OR                                    , RULL(0x12011005), SH_UNT_EX_4     , SH_ACS_SCOM2_OR  );
REG64( EX_5_FIR_MASK_REG                                       , RULL(0x12011403), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_5_FIR_MASK_REG_AND                                   , RULL(0x12011404), SH_UNT_EX_5     , SH_ACS_SCOM1_AND );
REG64( EX_5_FIR_MASK_REG_OR                                    , RULL(0x12011405), SH_UNT_EX_5     , SH_ACS_SCOM2_OR  );
REG64( EX_6_FIR_MASK_REG                                       , RULL(0x13011003), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_6_FIR_MASK_REG_AND                                   , RULL(0x13011004), SH_UNT_EX_6     , SH_ACS_SCOM1_AND );
REG64( EX_6_FIR_MASK_REG_OR                                    , RULL(0x13011005), SH_UNT_EX_6     , SH_ACS_SCOM2_OR  );
REG64( EX_7_FIR_MASK_REG                                       , RULL(0x13011403), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_7_FIR_MASK_REG_AND                                   , RULL(0x13011404), SH_UNT_EX_7     , SH_ACS_SCOM1_AND );
REG64( EX_7_FIR_MASK_REG_OR                                    , RULL(0x13011405), SH_UNT_EX_7     , SH_ACS_SCOM2_OR  );
REG64( EX_8_FIR_MASK_REG                                       , RULL(0x14011003), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_8_FIR_MASK_REG_AND                                   , RULL(0x14011004), SH_UNT_EX_8     , SH_ACS_SCOM1_AND );
REG64( EX_8_FIR_MASK_REG_OR                                    , RULL(0x14011005), SH_UNT_EX_8     , SH_ACS_SCOM2_OR  );
REG64( EX_9_FIR_MASK_REG                                       , RULL(0x14011403), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_9_FIR_MASK_REG_AND                                   , RULL(0x14011404), SH_UNT_EX_9     , SH_ACS_SCOM1_AND );
REG64( EX_9_FIR_MASK_REG_OR                                    , RULL(0x14011405), SH_UNT_EX_9     , SH_ACS_SCOM2_OR  );
REG64( EX_0_L2_FIR_MASK_REG                                    , RULL(0x10010803), SH_UNT_EX_0_L2  , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_FIR_MASK_REG_AND                                , RULL(0x10010804), SH_UNT_EX_0_L2  , SH_ACS_SCOM1_AND );
REG64( EX_0_L2_FIR_MASK_REG_OR                                 , RULL(0x10010805), SH_UNT_EX_0_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_0_L3_FIR_MASK_REG                                    , RULL(0x10011803), SH_UNT_EX_0_L3  , SH_ACS_SCOM_RW   );
REG64( EX_0_L3_FIR_MASK_REG_AND                                , RULL(0x10011804), SH_UNT_EX_0_L3  , SH_ACS_SCOM1_AND );
REG64( EX_0_L3_FIR_MASK_REG_OR                                 , RULL(0x10011805), SH_UNT_EX_0_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_10_FIR_MASK_REG                                      , RULL(0x15011003), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_10_FIR_MASK_REG_AND                                  , RULL(0x15011004), SH_UNT_EX_10    , SH_ACS_SCOM1_AND );
REG64( EX_10_FIR_MASK_REG_OR                                   , RULL(0x15011005), SH_UNT_EX_10    , SH_ACS_SCOM2_OR  );
REG64( EX_11_FIR_MASK_REG                                      , RULL(0x15011403), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_11_FIR_MASK_REG_AND                                  , RULL(0x15011404), SH_UNT_EX_11    , SH_ACS_SCOM1_AND );
REG64( EX_11_FIR_MASK_REG_OR                                   , RULL(0x15011405), SH_UNT_EX_11    , SH_ACS_SCOM2_OR  );
REG64( EX_10_L2_FIR_MASK_REG                                   , RULL(0x15010803), SH_UNT_EX_10_L2 , SH_ACS_SCOM_RW   );
REG64( EX_10_L2_FIR_MASK_REG_AND                               , RULL(0x15010804), SH_UNT_EX_10_L2 , SH_ACS_SCOM1_AND );
REG64( EX_10_L2_FIR_MASK_REG_OR                                , RULL(0x15010805), SH_UNT_EX_10_L2 , SH_ACS_SCOM2_OR  );
REG64( EX_10_L3_FIR_MASK_REG                                   , RULL(0x15011803), SH_UNT_EX_10_L3 , SH_ACS_SCOM_RW   );
REG64( EX_10_L3_FIR_MASK_REG_AND                               , RULL(0x15011804), SH_UNT_EX_10_L3 , SH_ACS_SCOM1_AND );
REG64( EX_10_L3_FIR_MASK_REG_OR                                , RULL(0x15011805), SH_UNT_EX_10_L3 , SH_ACS_SCOM2_OR  );
REG64( EX_11_L2_FIR_MASK_REG                                   , RULL(0x15010C03), SH_UNT_EX_11_L2 , SH_ACS_SCOM_RW   );
REG64( EX_11_L2_FIR_MASK_REG_AND                               , RULL(0x15010C04), SH_UNT_EX_11_L2 , SH_ACS_SCOM1_AND );
REG64( EX_11_L2_FIR_MASK_REG_OR                                , RULL(0x15010C05), SH_UNT_EX_11_L2 , SH_ACS_SCOM2_OR  );
REG64( EX_11_L3_FIR_MASK_REG                                   , RULL(0x15011C03), SH_UNT_EX_11_L3 , SH_ACS_SCOM_RW   );
REG64( EX_11_L3_FIR_MASK_REG_AND                               , RULL(0x15011C04), SH_UNT_EX_11_L3 , SH_ACS_SCOM1_AND );
REG64( EX_11_L3_FIR_MASK_REG_OR                                , RULL(0x15011C05), SH_UNT_EX_11_L3 , SH_ACS_SCOM2_OR  );
REG64( EX_1_L2_FIR_MASK_REG                                    , RULL(0x10010C03), SH_UNT_EX_1_L2  , SH_ACS_SCOM_RW   );
REG64( EX_1_L2_FIR_MASK_REG_AND                                , RULL(0x10010C04), SH_UNT_EX_1_L2  , SH_ACS_SCOM1_AND );
REG64( EX_1_L2_FIR_MASK_REG_OR                                 , RULL(0x10010C05), SH_UNT_EX_1_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_1_L3_FIR_MASK_REG                                    , RULL(0x10011C03), SH_UNT_EX_1_L3  , SH_ACS_SCOM_RW   );
REG64( EX_1_L3_FIR_MASK_REG_AND                                , RULL(0x10011C04), SH_UNT_EX_1_L3  , SH_ACS_SCOM1_AND );
REG64( EX_1_L3_FIR_MASK_REG_OR                                 , RULL(0x10011C05), SH_UNT_EX_1_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_2_L2_FIR_MASK_REG                                    , RULL(0x11010803), SH_UNT_EX_2_L2  , SH_ACS_SCOM_RW   );
REG64( EX_2_L2_FIR_MASK_REG_AND                                , RULL(0x11010804), SH_UNT_EX_2_L2  , SH_ACS_SCOM1_AND );
REG64( EX_2_L2_FIR_MASK_REG_OR                                 , RULL(0x11010805), SH_UNT_EX_2_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_2_L3_FIR_MASK_REG                                    , RULL(0x11011803), SH_UNT_EX_2_L3  , SH_ACS_SCOM_RW   );
REG64( EX_2_L3_FIR_MASK_REG_AND                                , RULL(0x11011804), SH_UNT_EX_2_L3  , SH_ACS_SCOM1_AND );
REG64( EX_2_L3_FIR_MASK_REG_OR                                 , RULL(0x11011805), SH_UNT_EX_2_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_3_L2_FIR_MASK_REG                                    , RULL(0x11010C03), SH_UNT_EX_3_L2  , SH_ACS_SCOM_RW   );
REG64( EX_3_L2_FIR_MASK_REG_AND                                , RULL(0x11010C04), SH_UNT_EX_3_L2  , SH_ACS_SCOM1_AND );
REG64( EX_3_L2_FIR_MASK_REG_OR                                 , RULL(0x11010C05), SH_UNT_EX_3_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_3_L3_FIR_MASK_REG                                    , RULL(0x11011C03), SH_UNT_EX_3_L3  , SH_ACS_SCOM_RW   );
REG64( EX_3_L3_FIR_MASK_REG_AND                                , RULL(0x11011C04), SH_UNT_EX_3_L3  , SH_ACS_SCOM1_AND );
REG64( EX_3_L3_FIR_MASK_REG_OR                                 , RULL(0x11011C05), SH_UNT_EX_3_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_4_L2_FIR_MASK_REG                                    , RULL(0x12010803), SH_UNT_EX_4_L2  , SH_ACS_SCOM_RW   );
REG64( EX_4_L2_FIR_MASK_REG_AND                                , RULL(0x12010804), SH_UNT_EX_4_L2  , SH_ACS_SCOM1_AND );
REG64( EX_4_L2_FIR_MASK_REG_OR                                 , RULL(0x12010805), SH_UNT_EX_4_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_4_L3_FIR_MASK_REG                                    , RULL(0x12011803), SH_UNT_EX_4_L3  , SH_ACS_SCOM_RW   );
REG64( EX_4_L3_FIR_MASK_REG_AND                                , RULL(0x12011804), SH_UNT_EX_4_L3  , SH_ACS_SCOM1_AND );
REG64( EX_4_L3_FIR_MASK_REG_OR                                 , RULL(0x12011805), SH_UNT_EX_4_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_5_L2_FIR_MASK_REG                                    , RULL(0x12010C03), SH_UNT_EX_5_L2  , SH_ACS_SCOM_RW   );
REG64( EX_5_L2_FIR_MASK_REG_AND                                , RULL(0x12010C04), SH_UNT_EX_5_L2  , SH_ACS_SCOM1_AND );
REG64( EX_5_L2_FIR_MASK_REG_OR                                 , RULL(0x12010C05), SH_UNT_EX_5_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_5_L3_FIR_MASK_REG                                    , RULL(0x12011C03), SH_UNT_EX_5_L3  , SH_ACS_SCOM_RW   );
REG64( EX_5_L3_FIR_MASK_REG_AND                                , RULL(0x12011C04), SH_UNT_EX_5_L3  , SH_ACS_SCOM1_AND );
REG64( EX_5_L3_FIR_MASK_REG_OR                                 , RULL(0x12011C05), SH_UNT_EX_5_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_6_L2_FIR_MASK_REG                                    , RULL(0x13010803), SH_UNT_EX_6_L2  , SH_ACS_SCOM_RW   );
REG64( EX_6_L2_FIR_MASK_REG_AND                                , RULL(0x13010804), SH_UNT_EX_6_L2  , SH_ACS_SCOM1_AND );
REG64( EX_6_L2_FIR_MASK_REG_OR                                 , RULL(0x13010805), SH_UNT_EX_6_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_6_L3_FIR_MASK_REG                                    , RULL(0x13011803), SH_UNT_EX_6_L3  , SH_ACS_SCOM_RW   );
REG64( EX_6_L3_FIR_MASK_REG_AND                                , RULL(0x13011804), SH_UNT_EX_6_L3  , SH_ACS_SCOM1_AND );
REG64( EX_6_L3_FIR_MASK_REG_OR                                 , RULL(0x13011805), SH_UNT_EX_6_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_7_L2_FIR_MASK_REG                                    , RULL(0x13010C03), SH_UNT_EX_7_L2  , SH_ACS_SCOM_RW   );
REG64( EX_7_L2_FIR_MASK_REG_AND                                , RULL(0x13010C04), SH_UNT_EX_7_L2  , SH_ACS_SCOM1_AND );
REG64( EX_7_L2_FIR_MASK_REG_OR                                 , RULL(0x13010C05), SH_UNT_EX_7_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_7_L3_FIR_MASK_REG                                    , RULL(0x13011C03), SH_UNT_EX_7_L3  , SH_ACS_SCOM_RW   );
REG64( EX_7_L3_FIR_MASK_REG_AND                                , RULL(0x13011C04), SH_UNT_EX_7_L3  , SH_ACS_SCOM1_AND );
REG64( EX_7_L3_FIR_MASK_REG_OR                                 , RULL(0x13011C05), SH_UNT_EX_7_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_8_L2_FIR_MASK_REG                                    , RULL(0x14010803), SH_UNT_EX_8_L2  , SH_ACS_SCOM_RW   );
REG64( EX_8_L2_FIR_MASK_REG_AND                                , RULL(0x14010804), SH_UNT_EX_8_L2  , SH_ACS_SCOM1_AND );
REG64( EX_8_L2_FIR_MASK_REG_OR                                 , RULL(0x14010805), SH_UNT_EX_8_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_8_L3_FIR_MASK_REG                                    , RULL(0x14011803), SH_UNT_EX_8_L3  , SH_ACS_SCOM_RW   );
REG64( EX_8_L3_FIR_MASK_REG_AND                                , RULL(0x14011804), SH_UNT_EX_8_L3  , SH_ACS_SCOM1_AND );
REG64( EX_8_L3_FIR_MASK_REG_OR                                 , RULL(0x14011805), SH_UNT_EX_8_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_9_L2_FIR_MASK_REG                                    , RULL(0x14010C03), SH_UNT_EX_9_L2  , SH_ACS_SCOM_RW   );
REG64( EX_9_L2_FIR_MASK_REG_AND                                , RULL(0x14010C04), SH_UNT_EX_9_L2  , SH_ACS_SCOM1_AND );
REG64( EX_9_L2_FIR_MASK_REG_OR                                 , RULL(0x14010C05), SH_UNT_EX_9_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_9_L3_FIR_MASK_REG                                    , RULL(0x14011C03), SH_UNT_EX_9_L3  , SH_ACS_SCOM_RW   );
REG64( EX_9_L3_FIR_MASK_REG_AND                                , RULL(0x14011C04), SH_UNT_EX_9_L3  , SH_ACS_SCOM1_AND );
REG64( EX_9_L3_FIR_MASK_REG_OR                                 , RULL(0x14011C05), SH_UNT_EX_9_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_L2_FIR_MASK_REG                                      , RULL(0x10010803), SH_UNT_EX_L2    , SH_ACS_SCOM_RW   );
REG64( EX_L2_FIR_MASK_REG_AND                                  , RULL(0x10010804), SH_UNT_EX_L2    , SH_ACS_SCOM1_AND );
REG64( EX_L2_FIR_MASK_REG_OR                                   , RULL(0x10010805), SH_UNT_EX_L2    , SH_ACS_SCOM2_OR  );
REG64( EX_L3_FIR_MASK_REG                                      , RULL(0x10011803), SH_UNT_EX_L3    , SH_ACS_SCOM_RW   );
REG64( EX_L3_FIR_MASK_REG_AND                                  , RULL(0x10011804), SH_UNT_EX_L3    , SH_ACS_SCOM1_AND );
REG64( EX_L3_FIR_MASK_REG_OR                                   , RULL(0x10011805), SH_UNT_EX_L3    , SH_ACS_SCOM2_OR  );

REG64( PEC_0_FIR_MASK_REG                                      , RULL(0x0D010C03), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_0_FIR_MASK_REG_AND                                  , RULL(0x0D010C04), SH_UNT_PEC_0    , SH_ACS_SCOM1_AND );
REG64( PEC_0_FIR_MASK_REG_OR                                   , RULL(0x0D010C05), SH_UNT_PEC_0    , SH_ACS_SCOM2_OR  );
REG64( PEC_1_FIR_MASK_REG                                      , RULL(0x0E010C03), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_1_FIR_MASK_REG_AND                                  , RULL(0x0E010C04), SH_UNT_PEC_1    , SH_ACS_SCOM1_AND );
REG64( PEC_1_FIR_MASK_REG_OR                                   , RULL(0x0E010C05), SH_UNT_PEC_1    , SH_ACS_SCOM2_OR  );
REG64( PEC_2_FIR_MASK_REG                                      , RULL(0x0F010C03), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );
REG64( PEC_2_FIR_MASK_REG_AND                                  , RULL(0x0F010C04), SH_UNT_PEC_2    , SH_ACS_SCOM1_AND );
REG64( PEC_2_FIR_MASK_REG_OR                                   , RULL(0x0F010C05), SH_UNT_PEC_2    , SH_ACS_SCOM2_OR  );

REG64( C_FIR_RANDOM_LFSR                                       , RULL(0x20010A4F), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_FIR_RANDOM_LFSR                                     , RULL(0x20010A4F), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_FIR_RANDOM_LFSR                                     , RULL(0x21010A4F), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_FIR_RANDOM_LFSR                                     , RULL(0x22010A4F), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_FIR_RANDOM_LFSR                                     , RULL(0x23010A4F), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_FIR_RANDOM_LFSR                                     , RULL(0x24010A4F), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_FIR_RANDOM_LFSR                                     , RULL(0x25010A4F), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_FIR_RANDOM_LFSR                                     , RULL(0x26010A4F), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_FIR_RANDOM_LFSR                                     , RULL(0x27010A4F), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_FIR_RANDOM_LFSR                                     , RULL(0x28010A4F), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_FIR_RANDOM_LFSR                                     , RULL(0x29010A4F), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_FIR_RANDOM_LFSR                                    , RULL(0x2A010A4F), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_FIR_RANDOM_LFSR                                    , RULL(0x2B010A4F), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_FIR_RANDOM_LFSR                                    , RULL(0x2C010A4F), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_FIR_RANDOM_LFSR                                    , RULL(0x2D010A4F), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_FIR_RANDOM_LFSR                                    , RULL(0x2E010A4F), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_FIR_RANDOM_LFSR                                    , RULL(0x2F010A4F), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_FIR_RANDOM_LFSR                                    , RULL(0x30010A4F), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_FIR_RANDOM_LFSR                                    , RULL(0x31010A4F), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_FIR_RANDOM_LFSR                                    , RULL(0x32010A4F), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_FIR_RANDOM_LFSR                                    , RULL(0x33010A4F), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_FIR_RANDOM_LFSR                                    , RULL(0x34010A4F), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_FIR_RANDOM_LFSR                                    , RULL(0x35010A4F), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_FIR_RANDOM_LFSR                                    , RULL(0x36010A4F), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_FIR_RANDOM_LFSR                                    , RULL(0x37010A4F), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_FIR_RANDOM_LFSR                                      , RULL(0x20010A4F), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010A4F,
REG64( EX_0_FIR_RANDOM_LFSR                                    , RULL(0x20010A4F), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010A4F,
REG64( EX_1_FIR_RANDOM_LFSR                                    , RULL(0x22010A4F), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010A4F,
REG64( EX_2_FIR_RANDOM_LFSR                                    , RULL(0x24010A4F), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010A4F,
REG64( EX_3_FIR_RANDOM_LFSR                                    , RULL(0x26010A4F), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010A4F,
REG64( EX_4_FIR_RANDOM_LFSR                                    , RULL(0x28010A4F), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010A4F,
REG64( EX_5_FIR_RANDOM_LFSR                                    , RULL(0x2A010A4F), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010A4F,
REG64( EX_6_FIR_RANDOM_LFSR                                    , RULL(0x2C010A4F), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010A4F,
REG64( EX_7_FIR_RANDOM_LFSR                                    , RULL(0x2E010A4F), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010A4F,
REG64( EX_8_FIR_RANDOM_LFSR                                    , RULL(0x30010A4F), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010A4F,
REG64( EX_9_FIR_RANDOM_LFSR                                    , RULL(0x32010A4F), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010A4F,
REG64( EX_10_FIR_RANDOM_LFSR                                   , RULL(0x34010A4F), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010A4F,
REG64( EX_11_FIR_RANDOM_LFSR                                   , RULL(0x36010A4F), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010A4F,

REG64( EQ_FIR_REG                                              , RULL(0x10010800), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10011800, 10011000, 10010C00, 10011C00, 10011400,
REG64( EQ_FIR_REG_AND                                          , RULL(0x10010801), SH_UNT_EQ       ,
       SH_ACS_SCOM1_AND ); //DUPS: 10011801, 10011001, 10010C01, 10011C01, 10011401,
REG64( EQ_FIR_REG_OR                                           , RULL(0x10010802), SH_UNT_EQ       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10011802, 10011002, 10010C02, 10011C02, 10011402,
REG64( EQ_0_FIR_REG                                            , RULL(0x10010800), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10011800, 10011000, 10010C00, 10011C00, 10011400,
REG64( EQ_0_FIR_REG_AND                                        , RULL(0x10010801), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_AND ); //DUPS: 10011801, 10011001, 10010C01, 10011C01, 10011401,
REG64( EQ_0_FIR_REG_OR                                         , RULL(0x10010802), SH_UNT_EQ_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 10011802, 10011002, 10010C02, 10011C02, 10011402,
REG64( EQ_1_FIR_REG                                            , RULL(0x11010800), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11011800, 11011000, 11010C00, 11011C00, 11011400,
REG64( EQ_1_FIR_REG_AND                                        , RULL(0x11010801), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_AND ); //DUPS: 11011801, 11011001, 11010C01, 11011C01, 11011401,
REG64( EQ_1_FIR_REG_OR                                         , RULL(0x11010802), SH_UNT_EQ_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 11011802, 11011002, 11010C02, 11011C02, 11011402,
REG64( EQ_2_FIR_REG                                            , RULL(0x12010800), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12011800, 12011000, 12010C00, 12011C00, 12011400,
REG64( EQ_2_FIR_REG_AND                                        , RULL(0x12010801), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_AND ); //DUPS: 12011801, 12011001, 12010C01, 12011C01, 12011401,
REG64( EQ_2_FIR_REG_OR                                         , RULL(0x12010802), SH_UNT_EQ_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 12011802, 12011002, 12010C02, 12011C02, 12011402,
REG64( EQ_3_FIR_REG                                            , RULL(0x13010800), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13011800, 13011000, 13010C00, 13011C00, 13011400,
REG64( EQ_3_FIR_REG_AND                                        , RULL(0x13010801), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_AND ); //DUPS: 13011801, 13011001, 13010C01, 13011C01, 13011401,
REG64( EQ_3_FIR_REG_OR                                         , RULL(0x13010802), SH_UNT_EQ_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 13011802, 13011002, 13010C02, 13011C02, 13011402,
REG64( EQ_4_FIR_REG                                            , RULL(0x14010800), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14011800, 14011000, 14010C00, 14011C00, 14011400,
REG64( EQ_4_FIR_REG_AND                                        , RULL(0x14010801), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_AND ); //DUPS: 14011801, 14011001, 14010C01, 14011C01, 14011401,
REG64( EQ_4_FIR_REG_OR                                         , RULL(0x14010802), SH_UNT_EQ_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 14011802, 14011002, 14010C02, 14011C02, 14011402,
REG64( EQ_5_FIR_REG                                            , RULL(0x15010800), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15011800, 15011000, 15010C00, 15011C00, 15011400,
REG64( EQ_5_FIR_REG_AND                                        , RULL(0x15010801), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_AND ); //DUPS: 15011801, 15011001, 15010C01, 15011C01, 15011401,
REG64( EQ_5_FIR_REG_OR                                         , RULL(0x15010802), SH_UNT_EQ_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 15011802, 15011002, 15010C02, 15011C02, 15011402,
REG64( EX_FIR_REG                                              , RULL(0x10011000), SH_UNT_EX       , SH_ACS_SCOM_RW   );
REG64( EX_FIR_REG_AND                                          , RULL(0x10011001), SH_UNT_EX       , SH_ACS_SCOM1_AND );
REG64( EX_FIR_REG_OR                                           , RULL(0x10011002), SH_UNT_EX       , SH_ACS_SCOM2_OR  );
REG64( EX_0_FIR_REG                                            , RULL(0x10011000), SH_UNT_EX_0     , SH_ACS_SCOM_RW   );
REG64( EX_0_FIR_REG_AND                                        , RULL(0x10011001), SH_UNT_EX_0     , SH_ACS_SCOM1_AND );
REG64( EX_0_FIR_REG_OR                                         , RULL(0x10011002), SH_UNT_EX_0     , SH_ACS_SCOM2_OR  );
REG64( EX_1_FIR_REG                                            , RULL(0x10011400), SH_UNT_EX_1     , SH_ACS_SCOM_RW   );
REG64( EX_1_FIR_REG_AND                                        , RULL(0x10011401), SH_UNT_EX_1     , SH_ACS_SCOM1_AND );
REG64( EX_1_FIR_REG_OR                                         , RULL(0x10011402), SH_UNT_EX_1     , SH_ACS_SCOM2_OR  );
REG64( EX_2_FIR_REG                                            , RULL(0x11011000), SH_UNT_EX_2     , SH_ACS_SCOM_RW   );
REG64( EX_2_FIR_REG_AND                                        , RULL(0x11011001), SH_UNT_EX_2     , SH_ACS_SCOM1_AND );
REG64( EX_2_FIR_REG_OR                                         , RULL(0x11011002), SH_UNT_EX_2     , SH_ACS_SCOM2_OR  );
REG64( EX_3_FIR_REG                                            , RULL(0x11011400), SH_UNT_EX_3     , SH_ACS_SCOM_RW   );
REG64( EX_3_FIR_REG_AND                                        , RULL(0x11011401), SH_UNT_EX_3     , SH_ACS_SCOM1_AND );
REG64( EX_3_FIR_REG_OR                                         , RULL(0x11011402), SH_UNT_EX_3     , SH_ACS_SCOM2_OR  );
REG64( EX_4_FIR_REG                                            , RULL(0x12011000), SH_UNT_EX_4     , SH_ACS_SCOM_RW   );
REG64( EX_4_FIR_REG_AND                                        , RULL(0x12011001), SH_UNT_EX_4     , SH_ACS_SCOM1_AND );
REG64( EX_4_FIR_REG_OR                                         , RULL(0x12011002), SH_UNT_EX_4     , SH_ACS_SCOM2_OR  );
REG64( EX_5_FIR_REG                                            , RULL(0x12011400), SH_UNT_EX_5     , SH_ACS_SCOM_RW   );
REG64( EX_5_FIR_REG_AND                                        , RULL(0x12011401), SH_UNT_EX_5     , SH_ACS_SCOM1_AND );
REG64( EX_5_FIR_REG_OR                                         , RULL(0x12011402), SH_UNT_EX_5     , SH_ACS_SCOM2_OR  );
REG64( EX_6_FIR_REG                                            , RULL(0x13011000), SH_UNT_EX_6     , SH_ACS_SCOM_RW   );
REG64( EX_6_FIR_REG_AND                                        , RULL(0x13011001), SH_UNT_EX_6     , SH_ACS_SCOM1_AND );
REG64( EX_6_FIR_REG_OR                                         , RULL(0x13011002), SH_UNT_EX_6     , SH_ACS_SCOM2_OR  );
REG64( EX_7_FIR_REG                                            , RULL(0x13011400), SH_UNT_EX_7     , SH_ACS_SCOM_RW   );
REG64( EX_7_FIR_REG_AND                                        , RULL(0x13011401), SH_UNT_EX_7     , SH_ACS_SCOM1_AND );
REG64( EX_7_FIR_REG_OR                                         , RULL(0x13011402), SH_UNT_EX_7     , SH_ACS_SCOM2_OR  );
REG64( EX_8_FIR_REG                                            , RULL(0x14011000), SH_UNT_EX_8     , SH_ACS_SCOM_RW   );
REG64( EX_8_FIR_REG_AND                                        , RULL(0x14011001), SH_UNT_EX_8     , SH_ACS_SCOM1_AND );
REG64( EX_8_FIR_REG_OR                                         , RULL(0x14011002), SH_UNT_EX_8     , SH_ACS_SCOM2_OR  );
REG64( EX_9_FIR_REG                                            , RULL(0x14011400), SH_UNT_EX_9     , SH_ACS_SCOM_RW   );
REG64( EX_9_FIR_REG_AND                                        , RULL(0x14011401), SH_UNT_EX_9     , SH_ACS_SCOM1_AND );
REG64( EX_9_FIR_REG_OR                                         , RULL(0x14011402), SH_UNT_EX_9     , SH_ACS_SCOM2_OR  );
REG64( EX_0_L2_FIR_REG                                         , RULL(0x10010800), SH_UNT_EX_0_L2  , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_FIR_REG_AND                                     , RULL(0x10010801), SH_UNT_EX_0_L2  , SH_ACS_SCOM1_AND );
REG64( EX_0_L2_FIR_REG_OR                                      , RULL(0x10010802), SH_UNT_EX_0_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_0_L3_FIR_REG                                         , RULL(0x10011800), SH_UNT_EX_0_L3  , SH_ACS_SCOM_RW   );
REG64( EX_0_L3_FIR_REG_AND                                     , RULL(0x10011801), SH_UNT_EX_0_L3  , SH_ACS_SCOM1_AND );
REG64( EX_0_L3_FIR_REG_OR                                      , RULL(0x10011802), SH_UNT_EX_0_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_10_FIR_REG                                           , RULL(0x15011000), SH_UNT_EX_10    , SH_ACS_SCOM_RW   );
REG64( EX_10_FIR_REG_AND                                       , RULL(0x15011001), SH_UNT_EX_10    , SH_ACS_SCOM1_AND );
REG64( EX_10_FIR_REG_OR                                        , RULL(0x15011002), SH_UNT_EX_10    , SH_ACS_SCOM2_OR  );
REG64( EX_11_FIR_REG                                           , RULL(0x15011400), SH_UNT_EX_11    , SH_ACS_SCOM_RW   );
REG64( EX_11_FIR_REG_AND                                       , RULL(0x15011401), SH_UNT_EX_11    , SH_ACS_SCOM1_AND );
REG64( EX_11_FIR_REG_OR                                        , RULL(0x15011402), SH_UNT_EX_11    , SH_ACS_SCOM2_OR  );
REG64( EX_10_L2_FIR_REG                                        , RULL(0x15010800), SH_UNT_EX_10_L2 , SH_ACS_SCOM_RW   );
REG64( EX_10_L2_FIR_REG_AND                                    , RULL(0x15010801), SH_UNT_EX_10_L2 , SH_ACS_SCOM1_AND );
REG64( EX_10_L2_FIR_REG_OR                                     , RULL(0x15010802), SH_UNT_EX_10_L2 , SH_ACS_SCOM2_OR  );
REG64( EX_10_L3_FIR_REG                                        , RULL(0x15011800), SH_UNT_EX_10_L3 , SH_ACS_SCOM_RW   );
REG64( EX_10_L3_FIR_REG_AND                                    , RULL(0x15011801), SH_UNT_EX_10_L3 , SH_ACS_SCOM1_AND );
REG64( EX_10_L3_FIR_REG_OR                                     , RULL(0x15011802), SH_UNT_EX_10_L3 , SH_ACS_SCOM2_OR  );
REG64( EX_11_L2_FIR_REG                                        , RULL(0x15010C00), SH_UNT_EX_11_L2 , SH_ACS_SCOM_RW   );
REG64( EX_11_L2_FIR_REG_AND                                    , RULL(0x15010C01), SH_UNT_EX_11_L2 , SH_ACS_SCOM1_AND );
REG64( EX_11_L2_FIR_REG_OR                                     , RULL(0x15010C02), SH_UNT_EX_11_L2 , SH_ACS_SCOM2_OR  );
REG64( EX_11_L3_FIR_REG                                        , RULL(0x15011C00), SH_UNT_EX_11_L3 , SH_ACS_SCOM_RW   );
REG64( EX_11_L3_FIR_REG_AND                                    , RULL(0x15011C01), SH_UNT_EX_11_L3 , SH_ACS_SCOM1_AND );
REG64( EX_11_L3_FIR_REG_OR                                     , RULL(0x15011C02), SH_UNT_EX_11_L3 , SH_ACS_SCOM2_OR  );
REG64( EX_1_L2_FIR_REG                                         , RULL(0x10010C00), SH_UNT_EX_1_L2  , SH_ACS_SCOM_RW   );
REG64( EX_1_L2_FIR_REG_AND                                     , RULL(0x10010C01), SH_UNT_EX_1_L2  , SH_ACS_SCOM1_AND );
REG64( EX_1_L2_FIR_REG_OR                                      , RULL(0x10010C02), SH_UNT_EX_1_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_1_L3_FIR_REG                                         , RULL(0x10011C00), SH_UNT_EX_1_L3  , SH_ACS_SCOM_RW   );
REG64( EX_1_L3_FIR_REG_AND                                     , RULL(0x10011C01), SH_UNT_EX_1_L3  , SH_ACS_SCOM1_AND );
REG64( EX_1_L3_FIR_REG_OR                                      , RULL(0x10011C02), SH_UNT_EX_1_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_2_L2_FIR_REG                                         , RULL(0x11010800), SH_UNT_EX_2_L2  , SH_ACS_SCOM_RW   );
REG64( EX_2_L2_FIR_REG_AND                                     , RULL(0x11010801), SH_UNT_EX_2_L2  , SH_ACS_SCOM1_AND );
REG64( EX_2_L2_FIR_REG_OR                                      , RULL(0x11010802), SH_UNT_EX_2_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_2_L3_FIR_REG                                         , RULL(0x11011800), SH_UNT_EX_2_L3  , SH_ACS_SCOM_RW   );
REG64( EX_2_L3_FIR_REG_AND                                     , RULL(0x11011801), SH_UNT_EX_2_L3  , SH_ACS_SCOM1_AND );
REG64( EX_2_L3_FIR_REG_OR                                      , RULL(0x11011802), SH_UNT_EX_2_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_3_L2_FIR_REG                                         , RULL(0x11010C00), SH_UNT_EX_3_L2  , SH_ACS_SCOM_RW   );
REG64( EX_3_L2_FIR_REG_AND                                     , RULL(0x11010C01), SH_UNT_EX_3_L2  , SH_ACS_SCOM1_AND );
REG64( EX_3_L2_FIR_REG_OR                                      , RULL(0x11010C02), SH_UNT_EX_3_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_3_L3_FIR_REG                                         , RULL(0x11011C00), SH_UNT_EX_3_L3  , SH_ACS_SCOM_RW   );
REG64( EX_3_L3_FIR_REG_AND                                     , RULL(0x11011C01), SH_UNT_EX_3_L3  , SH_ACS_SCOM1_AND );
REG64( EX_3_L3_FIR_REG_OR                                      , RULL(0x11011C02), SH_UNT_EX_3_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_4_L2_FIR_REG                                         , RULL(0x12010800), SH_UNT_EX_4_L2  , SH_ACS_SCOM_RW   );
REG64( EX_4_L2_FIR_REG_AND                                     , RULL(0x12010801), SH_UNT_EX_4_L2  , SH_ACS_SCOM1_AND );
REG64( EX_4_L2_FIR_REG_OR                                      , RULL(0x12010802), SH_UNT_EX_4_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_4_L3_FIR_REG                                         , RULL(0x12011800), SH_UNT_EX_4_L3  , SH_ACS_SCOM_RW   );
REG64( EX_4_L3_FIR_REG_AND                                     , RULL(0x12011801), SH_UNT_EX_4_L3  , SH_ACS_SCOM1_AND );
REG64( EX_4_L3_FIR_REG_OR                                      , RULL(0x12011802), SH_UNT_EX_4_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_5_L2_FIR_REG                                         , RULL(0x12010C00), SH_UNT_EX_5_L2  , SH_ACS_SCOM_RW   );
REG64( EX_5_L2_FIR_REG_AND                                     , RULL(0x12010C01), SH_UNT_EX_5_L2  , SH_ACS_SCOM1_AND );
REG64( EX_5_L2_FIR_REG_OR                                      , RULL(0x12010C02), SH_UNT_EX_5_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_5_L3_FIR_REG                                         , RULL(0x12011C00), SH_UNT_EX_5_L3  , SH_ACS_SCOM_RW   );
REG64( EX_5_L3_FIR_REG_AND                                     , RULL(0x12011C01), SH_UNT_EX_5_L3  , SH_ACS_SCOM1_AND );
REG64( EX_5_L3_FIR_REG_OR                                      , RULL(0x12011C02), SH_UNT_EX_5_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_6_L2_FIR_REG                                         , RULL(0x13010800), SH_UNT_EX_6_L2  , SH_ACS_SCOM_RW   );
REG64( EX_6_L2_FIR_REG_AND                                     , RULL(0x13010801), SH_UNT_EX_6_L2  , SH_ACS_SCOM1_AND );
REG64( EX_6_L2_FIR_REG_OR                                      , RULL(0x13010802), SH_UNT_EX_6_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_6_L3_FIR_REG                                         , RULL(0x13011800), SH_UNT_EX_6_L3  , SH_ACS_SCOM_RW   );
REG64( EX_6_L3_FIR_REG_AND                                     , RULL(0x13011801), SH_UNT_EX_6_L3  , SH_ACS_SCOM1_AND );
REG64( EX_6_L3_FIR_REG_OR                                      , RULL(0x13011802), SH_UNT_EX_6_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_7_L2_FIR_REG                                         , RULL(0x13010C00), SH_UNT_EX_7_L2  , SH_ACS_SCOM_RW   );
REG64( EX_7_L2_FIR_REG_AND                                     , RULL(0x13010C01), SH_UNT_EX_7_L2  , SH_ACS_SCOM1_AND );
REG64( EX_7_L2_FIR_REG_OR                                      , RULL(0x13010C02), SH_UNT_EX_7_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_7_L3_FIR_REG                                         , RULL(0x13011C00), SH_UNT_EX_7_L3  , SH_ACS_SCOM_RW   );
REG64( EX_7_L3_FIR_REG_AND                                     , RULL(0x13011C01), SH_UNT_EX_7_L3  , SH_ACS_SCOM1_AND );
REG64( EX_7_L3_FIR_REG_OR                                      , RULL(0x13011C02), SH_UNT_EX_7_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_8_L2_FIR_REG                                         , RULL(0x14010800), SH_UNT_EX_8_L2  , SH_ACS_SCOM_RW   );
REG64( EX_8_L2_FIR_REG_AND                                     , RULL(0x14010801), SH_UNT_EX_8_L2  , SH_ACS_SCOM1_AND );
REG64( EX_8_L2_FIR_REG_OR                                      , RULL(0x14010802), SH_UNT_EX_8_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_8_L3_FIR_REG                                         , RULL(0x14011800), SH_UNT_EX_8_L3  , SH_ACS_SCOM_RW   );
REG64( EX_8_L3_FIR_REG_AND                                     , RULL(0x14011801), SH_UNT_EX_8_L3  , SH_ACS_SCOM1_AND );
REG64( EX_8_L3_FIR_REG_OR                                      , RULL(0x14011802), SH_UNT_EX_8_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_9_L2_FIR_REG                                         , RULL(0x14010C00), SH_UNT_EX_9_L2  , SH_ACS_SCOM_RW   );
REG64( EX_9_L2_FIR_REG_AND                                     , RULL(0x14010C01), SH_UNT_EX_9_L2  , SH_ACS_SCOM1_AND );
REG64( EX_9_L2_FIR_REG_OR                                      , RULL(0x14010C02), SH_UNT_EX_9_L2  , SH_ACS_SCOM2_OR  );
REG64( EX_9_L3_FIR_REG                                         , RULL(0x14011C00), SH_UNT_EX_9_L3  , SH_ACS_SCOM_RW   );
REG64( EX_9_L3_FIR_REG_AND                                     , RULL(0x14011C01), SH_UNT_EX_9_L3  , SH_ACS_SCOM1_AND );
REG64( EX_9_L3_FIR_REG_OR                                      , RULL(0x14011C02), SH_UNT_EX_9_L3  , SH_ACS_SCOM2_OR  );
REG64( EX_L2_FIR_REG                                           , RULL(0x10010800), SH_UNT_EX_L2    , SH_ACS_SCOM_RW   );
REG64( EX_L2_FIR_REG_AND                                       , RULL(0x10010801), SH_UNT_EX_L2    , SH_ACS_SCOM1_AND );
REG64( EX_L2_FIR_REG_OR                                        , RULL(0x10010802), SH_UNT_EX_L2    , SH_ACS_SCOM2_OR  );
REG64( EX_L3_FIR_REG                                           , RULL(0x10011800), SH_UNT_EX_L3    , SH_ACS_SCOM_RW   );
REG64( EX_L3_FIR_REG_AND                                       , RULL(0x10011801), SH_UNT_EX_L3    , SH_ACS_SCOM1_AND );
REG64( EX_L3_FIR_REG_OR                                        , RULL(0x10011802), SH_UNT_EX_L3    , SH_ACS_SCOM2_OR  );

REG64( PEC_0_FIR_STATUS_REG                                    , RULL(0x0D010C00), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_0_FIR_STATUS_REG_AND                                , RULL(0x0D010C01), SH_UNT_PEC_0    , SH_ACS_SCOM1_AND );
REG64( PEC_0_FIR_STATUS_REG_OR                                 , RULL(0x0D010C02), SH_UNT_PEC_0    , SH_ACS_SCOM2_OR  );
REG64( PEC_1_FIR_STATUS_REG                                    , RULL(0x0E010C00), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_1_FIR_STATUS_REG_AND                                , RULL(0x0E010C01), SH_UNT_PEC_1    , SH_ACS_SCOM1_AND );
REG64( PEC_1_FIR_STATUS_REG_OR                                 , RULL(0x0E010C02), SH_UNT_PEC_1    , SH_ACS_SCOM2_OR  );
REG64( PEC_2_FIR_STATUS_REG                                    , RULL(0x0F010C00), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );
REG64( PEC_2_FIR_STATUS_REG_AND                                , RULL(0x0F010C01), SH_UNT_PEC_2    , SH_ACS_SCOM1_AND );
REG64( PEC_2_FIR_STATUS_REG_OR                                 , RULL(0x0F010C02), SH_UNT_PEC_2    , SH_ACS_SCOM2_OR  );

REG64( PEC_0_FIR_WOF_REG                                       , RULL(0x0D010C08), SH_UNT_PEC_0    ,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_1_FIR_WOF_REG                                       , RULL(0x0E010C08), SH_UNT_PEC_1    ,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_2_FIR_WOF_REG                                       , RULL(0x0F010C08), SH_UNT_PEC_2    ,
       SH_ACS_SCOM_WCLRREG );

REG64( C_GXSTOP0_MASK_REG                                      , RULL(0x20040014), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_GXSTOP0_MASK_REG                                    , RULL(0x20040014), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_GXSTOP0_MASK_REG                                    , RULL(0x21040014), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_GXSTOP0_MASK_REG                                    , RULL(0x22040014), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_GXSTOP0_MASK_REG                                    , RULL(0x23040014), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_GXSTOP0_MASK_REG                                    , RULL(0x24040014), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_GXSTOP0_MASK_REG                                    , RULL(0x25040014), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_GXSTOP0_MASK_REG                                    , RULL(0x26040014), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_GXSTOP0_MASK_REG                                    , RULL(0x27040014), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_GXSTOP0_MASK_REG                                    , RULL(0x28040014), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_GXSTOP0_MASK_REG                                    , RULL(0x29040014), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_GXSTOP0_MASK_REG                                   , RULL(0x2A040014), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_GXSTOP0_MASK_REG                                   , RULL(0x2B040014), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_GXSTOP0_MASK_REG                                   , RULL(0x2C040014), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_GXSTOP0_MASK_REG                                   , RULL(0x2D040014), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_GXSTOP0_MASK_REG                                   , RULL(0x2E040014), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_GXSTOP0_MASK_REG                                   , RULL(0x2F040014), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_GXSTOP0_MASK_REG                                   , RULL(0x30040014), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_GXSTOP0_MASK_REG                                   , RULL(0x31040014), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_GXSTOP0_MASK_REG                                   , RULL(0x32040014), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_GXSTOP0_MASK_REG                                   , RULL(0x33040014), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_GXSTOP0_MASK_REG                                   , RULL(0x34040014), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_GXSTOP0_MASK_REG                                   , RULL(0x35040014), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_GXSTOP0_MASK_REG                                   , RULL(0x36040014), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_GXSTOP0_MASK_REG                                   , RULL(0x37040014), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_GXSTOP0_MASK_REG                                     , RULL(0x10040014), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_GXSTOP0_MASK_REG                                   , RULL(0x10040014), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_GXSTOP0_MASK_REG                                   , RULL(0x11040014), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_GXSTOP0_MASK_REG                                   , RULL(0x12040014), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_GXSTOP0_MASK_REG                                   , RULL(0x13040014), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_GXSTOP0_MASK_REG                                   , RULL(0x14040014), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_GXSTOP0_MASK_REG                                   , RULL(0x15040014), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_GXSTOP0_MASK_REG                                     , RULL(0x20040014), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040014,
REG64( EX_0_GXSTOP0_MASK_REG                                   , RULL(0x20040014), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040014,
REG64( EX_1_GXSTOP0_MASK_REG                                   , RULL(0x22040014), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040014,
REG64( EX_2_GXSTOP0_MASK_REG                                   , RULL(0x24040014), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040014,
REG64( EX_3_GXSTOP0_MASK_REG                                   , RULL(0x26040014), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040014,
REG64( EX_4_GXSTOP0_MASK_REG                                   , RULL(0x28040014), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040014,
REG64( EX_5_GXSTOP0_MASK_REG                                   , RULL(0x2A040014), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040014,
REG64( EX_6_GXSTOP0_MASK_REG                                   , RULL(0x2C040014), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040014,
REG64( EX_7_GXSTOP0_MASK_REG                                   , RULL(0x2E040014), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040014,
REG64( EX_8_GXSTOP0_MASK_REG                                   , RULL(0x30040014), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040014,
REG64( EX_9_GXSTOP0_MASK_REG                                   , RULL(0x32040014), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040014,
REG64( EX_10_GXSTOP0_MASK_REG                                  , RULL(0x34040014), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040014,
REG64( EX_11_GXSTOP0_MASK_REG                                  , RULL(0x36040014), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040014,

REG64( PEC_0_GXSTOP0_MASK_REG                                  , RULL(0x0D040014), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_GXSTOP0_MASK_REG                                  , RULL(0x0E040014), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_GXSTOP0_MASK_REG                                  , RULL(0x0F040014), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_GXSTOP1_MASK_REG                                      , RULL(0x20040015), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_GXSTOP1_MASK_REG                                    , RULL(0x20040015), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_GXSTOP1_MASK_REG                                    , RULL(0x21040015), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_GXSTOP1_MASK_REG                                    , RULL(0x22040015), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_GXSTOP1_MASK_REG                                    , RULL(0x23040015), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_GXSTOP1_MASK_REG                                    , RULL(0x24040015), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_GXSTOP1_MASK_REG                                    , RULL(0x25040015), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_GXSTOP1_MASK_REG                                    , RULL(0x26040015), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_GXSTOP1_MASK_REG                                    , RULL(0x27040015), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_GXSTOP1_MASK_REG                                    , RULL(0x28040015), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_GXSTOP1_MASK_REG                                    , RULL(0x29040015), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_GXSTOP1_MASK_REG                                   , RULL(0x2A040015), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_GXSTOP1_MASK_REG                                   , RULL(0x2B040015), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_GXSTOP1_MASK_REG                                   , RULL(0x2C040015), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_GXSTOP1_MASK_REG                                   , RULL(0x2D040015), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_GXSTOP1_MASK_REG                                   , RULL(0x2E040015), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_GXSTOP1_MASK_REG                                   , RULL(0x2F040015), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_GXSTOP1_MASK_REG                                   , RULL(0x30040015), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_GXSTOP1_MASK_REG                                   , RULL(0x31040015), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_GXSTOP1_MASK_REG                                   , RULL(0x32040015), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_GXSTOP1_MASK_REG                                   , RULL(0x33040015), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_GXSTOP1_MASK_REG                                   , RULL(0x34040015), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_GXSTOP1_MASK_REG                                   , RULL(0x35040015), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_GXSTOP1_MASK_REG                                   , RULL(0x36040015), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_GXSTOP1_MASK_REG                                   , RULL(0x37040015), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_GXSTOP1_MASK_REG                                     , RULL(0x10040015), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_GXSTOP1_MASK_REG                                   , RULL(0x10040015), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_GXSTOP1_MASK_REG                                   , RULL(0x11040015), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_GXSTOP1_MASK_REG                                   , RULL(0x12040015), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_GXSTOP1_MASK_REG                                   , RULL(0x13040015), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_GXSTOP1_MASK_REG                                   , RULL(0x14040015), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_GXSTOP1_MASK_REG                                   , RULL(0x15040015), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_GXSTOP1_MASK_REG                                     , RULL(0x20040015), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040015,
REG64( EX_0_GXSTOP1_MASK_REG                                   , RULL(0x20040015), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040015,
REG64( EX_1_GXSTOP1_MASK_REG                                   , RULL(0x22040015), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040015,
REG64( EX_2_GXSTOP1_MASK_REG                                   , RULL(0x24040015), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040015,
REG64( EX_3_GXSTOP1_MASK_REG                                   , RULL(0x26040015), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040015,
REG64( EX_4_GXSTOP1_MASK_REG                                   , RULL(0x28040015), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040015,
REG64( EX_5_GXSTOP1_MASK_REG                                   , RULL(0x2A040015), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040015,
REG64( EX_6_GXSTOP1_MASK_REG                                   , RULL(0x2C040015), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040015,
REG64( EX_7_GXSTOP1_MASK_REG                                   , RULL(0x2E040015), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040015,
REG64( EX_8_GXSTOP1_MASK_REG                                   , RULL(0x30040015), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040015,
REG64( EX_9_GXSTOP1_MASK_REG                                   , RULL(0x32040015), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040015,
REG64( EX_10_GXSTOP1_MASK_REG                                  , RULL(0x34040015), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040015,
REG64( EX_11_GXSTOP1_MASK_REG                                  , RULL(0x36040015), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040015,

REG64( PEC_0_GXSTOP1_MASK_REG                                  , RULL(0x0D040015), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_GXSTOP1_MASK_REG                                  , RULL(0x0E040015), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_GXSTOP1_MASK_REG                                  , RULL(0x0F040015), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_GXSTOP2_MASK_REG                                      , RULL(0x20040016), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_GXSTOP2_MASK_REG                                    , RULL(0x20040016), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_GXSTOP2_MASK_REG                                    , RULL(0x21040016), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_GXSTOP2_MASK_REG                                    , RULL(0x22040016), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_GXSTOP2_MASK_REG                                    , RULL(0x23040016), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_GXSTOP2_MASK_REG                                    , RULL(0x24040016), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_GXSTOP2_MASK_REG                                    , RULL(0x25040016), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_GXSTOP2_MASK_REG                                    , RULL(0x26040016), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_GXSTOP2_MASK_REG                                    , RULL(0x27040016), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_GXSTOP2_MASK_REG                                    , RULL(0x28040016), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_GXSTOP2_MASK_REG                                    , RULL(0x29040016), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_GXSTOP2_MASK_REG                                   , RULL(0x2A040016), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_GXSTOP2_MASK_REG                                   , RULL(0x2B040016), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_GXSTOP2_MASK_REG                                   , RULL(0x2C040016), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_GXSTOP2_MASK_REG                                   , RULL(0x2D040016), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_GXSTOP2_MASK_REG                                   , RULL(0x2E040016), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_GXSTOP2_MASK_REG                                   , RULL(0x2F040016), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_GXSTOP2_MASK_REG                                   , RULL(0x30040016), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_GXSTOP2_MASK_REG                                   , RULL(0x31040016), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_GXSTOP2_MASK_REG                                   , RULL(0x32040016), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_GXSTOP2_MASK_REG                                   , RULL(0x33040016), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_GXSTOP2_MASK_REG                                   , RULL(0x34040016), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_GXSTOP2_MASK_REG                                   , RULL(0x35040016), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_GXSTOP2_MASK_REG                                   , RULL(0x36040016), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_GXSTOP2_MASK_REG                                   , RULL(0x37040016), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_GXSTOP2_MASK_REG                                     , RULL(0x10040016), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_GXSTOP2_MASK_REG                                   , RULL(0x10040016), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_GXSTOP2_MASK_REG                                   , RULL(0x11040016), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_GXSTOP2_MASK_REG                                   , RULL(0x12040016), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_GXSTOP2_MASK_REG                                   , RULL(0x13040016), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_GXSTOP2_MASK_REG                                   , RULL(0x14040016), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_GXSTOP2_MASK_REG                                   , RULL(0x15040016), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_GXSTOP2_MASK_REG                                     , RULL(0x20040016), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040016,
REG64( EX_0_GXSTOP2_MASK_REG                                   , RULL(0x20040016), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040016,
REG64( EX_1_GXSTOP2_MASK_REG                                   , RULL(0x22040016), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040016,
REG64( EX_2_GXSTOP2_MASK_REG                                   , RULL(0x24040016), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040016,
REG64( EX_3_GXSTOP2_MASK_REG                                   , RULL(0x26040016), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040016,
REG64( EX_4_GXSTOP2_MASK_REG                                   , RULL(0x28040016), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040016,
REG64( EX_5_GXSTOP2_MASK_REG                                   , RULL(0x2A040016), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040016,
REG64( EX_6_GXSTOP2_MASK_REG                                   , RULL(0x2C040016), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040016,
REG64( EX_7_GXSTOP2_MASK_REG                                   , RULL(0x2E040016), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040016,
REG64( EX_8_GXSTOP2_MASK_REG                                   , RULL(0x30040016), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040016,
REG64( EX_9_GXSTOP2_MASK_REG                                   , RULL(0x32040016), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040016,
REG64( EX_10_GXSTOP2_MASK_REG                                  , RULL(0x34040016), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040016,
REG64( EX_11_GXSTOP2_MASK_REG                                  , RULL(0x36040016), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040016,

REG64( PEC_0_GXSTOP2_MASK_REG                                  , RULL(0x0D040016), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_GXSTOP2_MASK_REG                                  , RULL(0x0E040016), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_GXSTOP2_MASK_REG                                  , RULL(0x0F040016), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_GXSTOP_TRIG_REG                                       , RULL(0x20040013), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_GXSTOP_TRIG_REG                                     , RULL(0x20040013), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_GXSTOP_TRIG_REG                                     , RULL(0x21040013), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_GXSTOP_TRIG_REG                                     , RULL(0x22040013), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_GXSTOP_TRIG_REG                                     , RULL(0x23040013), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_GXSTOP_TRIG_REG                                     , RULL(0x24040013), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_GXSTOP_TRIG_REG                                     , RULL(0x25040013), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_GXSTOP_TRIG_REG                                     , RULL(0x26040013), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_GXSTOP_TRIG_REG                                     , RULL(0x27040013), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_GXSTOP_TRIG_REG                                     , RULL(0x28040013), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_GXSTOP_TRIG_REG                                     , RULL(0x29040013), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_GXSTOP_TRIG_REG                                    , RULL(0x2A040013), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_GXSTOP_TRIG_REG                                    , RULL(0x2B040013), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_GXSTOP_TRIG_REG                                    , RULL(0x2C040013), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_GXSTOP_TRIG_REG                                    , RULL(0x2D040013), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_GXSTOP_TRIG_REG                                    , RULL(0x2E040013), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_GXSTOP_TRIG_REG                                    , RULL(0x2F040013), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_GXSTOP_TRIG_REG                                    , RULL(0x30040013), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_GXSTOP_TRIG_REG                                    , RULL(0x31040013), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_GXSTOP_TRIG_REG                                    , RULL(0x32040013), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_GXSTOP_TRIG_REG                                    , RULL(0x33040013), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_GXSTOP_TRIG_REG                                    , RULL(0x34040013), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_GXSTOP_TRIG_REG                                    , RULL(0x35040013), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_GXSTOP_TRIG_REG                                    , RULL(0x36040013), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_GXSTOP_TRIG_REG                                    , RULL(0x37040013), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_GXSTOP_TRIG_REG                                      , RULL(0x10040013), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_GXSTOP_TRIG_REG                                    , RULL(0x10040013), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_GXSTOP_TRIG_REG                                    , RULL(0x11040013), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_GXSTOP_TRIG_REG                                    , RULL(0x12040013), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_GXSTOP_TRIG_REG                                    , RULL(0x13040013), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_GXSTOP_TRIG_REG                                    , RULL(0x14040013), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_GXSTOP_TRIG_REG                                    , RULL(0x15040013), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_GXSTOP_TRIG_REG                                      , RULL(0x20040013), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040013,
REG64( EX_0_GXSTOP_TRIG_REG                                    , RULL(0x20040013), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040013,
REG64( EX_1_GXSTOP_TRIG_REG                                    , RULL(0x22040013), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040013,
REG64( EX_2_GXSTOP_TRIG_REG                                    , RULL(0x24040013), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040013,
REG64( EX_3_GXSTOP_TRIG_REG                                    , RULL(0x26040013), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040013,
REG64( EX_4_GXSTOP_TRIG_REG                                    , RULL(0x28040013), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040013,
REG64( EX_5_GXSTOP_TRIG_REG                                    , RULL(0x2A040013), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040013,
REG64( EX_6_GXSTOP_TRIG_REG                                    , RULL(0x2C040013), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040013,
REG64( EX_7_GXSTOP_TRIG_REG                                    , RULL(0x2E040013), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040013,
REG64( EX_8_GXSTOP_TRIG_REG                                    , RULL(0x30040013), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040013,
REG64( EX_9_GXSTOP_TRIG_REG                                    , RULL(0x32040013), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040013,
REG64( EX_10_GXSTOP_TRIG_REG                                   , RULL(0x34040013), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040013,
REG64( EX_11_GXSTOP_TRIG_REG                                   , RULL(0x36040013), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040013,

REG64( PEC_0_GXSTOP_TRIG_REG                                   , RULL(0x0D040013), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_GXSTOP_TRIG_REG                                   , RULL(0x0E040013), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_GXSTOP_TRIG_REG                                   , RULL(0x0F040013), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_HANG_CONTROL                                          , RULL(0x20010A00), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_HANG_CONTROL                                        , RULL(0x20010A00), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_HANG_CONTROL                                        , RULL(0x21010A00), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_HANG_CONTROL                                        , RULL(0x22010A00), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_HANG_CONTROL                                        , RULL(0x23010A00), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_HANG_CONTROL                                        , RULL(0x24010A00), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_HANG_CONTROL                                        , RULL(0x25010A00), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_HANG_CONTROL                                        , RULL(0x26010A00), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_HANG_CONTROL                                        , RULL(0x27010A00), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_HANG_CONTROL                                        , RULL(0x28010A00), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_HANG_CONTROL                                        , RULL(0x29010A00), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_HANG_CONTROL                                       , RULL(0x2A010A00), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_HANG_CONTROL                                       , RULL(0x2B010A00), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_HANG_CONTROL                                       , RULL(0x2C010A00), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_HANG_CONTROL                                       , RULL(0x2D010A00), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_HANG_CONTROL                                       , RULL(0x2E010A00), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_HANG_CONTROL                                       , RULL(0x2F010A00), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_HANG_CONTROL                                       , RULL(0x30010A00), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_HANG_CONTROL                                       , RULL(0x31010A00), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_HANG_CONTROL                                       , RULL(0x32010A00), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_HANG_CONTROL                                       , RULL(0x33010A00), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_HANG_CONTROL                                       , RULL(0x34010A00), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_HANG_CONTROL                                       , RULL(0x35010A00), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_HANG_CONTROL                                       , RULL(0x36010A00), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_HANG_CONTROL                                       , RULL(0x37010A00), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_HANG_CONTROL                                    , RULL(0x20010A00), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010A00,
REG64( EX_10_L2_HANG_CONTROL                                   , RULL(0x34010A00), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010A00,
REG64( EX_11_L2_HANG_CONTROL                                   , RULL(0x36010A00), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010A00,
REG64( EX_1_L2_HANG_CONTROL                                    , RULL(0x22010A00), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010A00,
REG64( EX_2_L2_HANG_CONTROL                                    , RULL(0x24010A00), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010A00,
REG64( EX_3_L2_HANG_CONTROL                                    , RULL(0x26010A00), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010A00,
REG64( EX_4_L2_HANG_CONTROL                                    , RULL(0x28010A00), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010A00,
REG64( EX_5_L2_HANG_CONTROL                                    , RULL(0x2A010A00), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010A00,
REG64( EX_6_L2_HANG_CONTROL                                    , RULL(0x2C010A00), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010A00,
REG64( EX_7_L2_HANG_CONTROL                                    , RULL(0x2E010A00), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010A00,
REG64( EX_8_L2_HANG_CONTROL                                    , RULL(0x30010A00), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010A00,
REG64( EX_9_L2_HANG_CONTROL                                    , RULL(0x32010A00), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010A00,
REG64( EX_L2_HANG_CONTROL                                      , RULL(0x20010A00), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010A00,

REG64( C_HANG_PULSE_0_REG                                      , RULL(0x200F0020), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_HANG_PULSE_0_REG                                    , RULL(0x200F0020), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_HANG_PULSE_0_REG                                    , RULL(0x210F0020), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_HANG_PULSE_0_REG                                    , RULL(0x220F0020), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_HANG_PULSE_0_REG                                    , RULL(0x230F0020), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_HANG_PULSE_0_REG                                    , RULL(0x240F0020), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_HANG_PULSE_0_REG                                    , RULL(0x250F0020), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_HANG_PULSE_0_REG                                    , RULL(0x260F0020), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_HANG_PULSE_0_REG                                    , RULL(0x270F0020), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_HANG_PULSE_0_REG                                    , RULL(0x280F0020), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_HANG_PULSE_0_REG                                    , RULL(0x290F0020), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_HANG_PULSE_0_REG                                   , RULL(0x2A0F0020), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_HANG_PULSE_0_REG                                   , RULL(0x2B0F0020), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_HANG_PULSE_0_REG                                   , RULL(0x2C0F0020), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_HANG_PULSE_0_REG                                   , RULL(0x2D0F0020), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_HANG_PULSE_0_REG                                   , RULL(0x2E0F0020), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_HANG_PULSE_0_REG                                   , RULL(0x2F0F0020), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_HANG_PULSE_0_REG                                   , RULL(0x300F0020), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_HANG_PULSE_0_REG                                   , RULL(0x310F0020), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_HANG_PULSE_0_REG                                   , RULL(0x320F0020), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_HANG_PULSE_0_REG                                   , RULL(0x330F0020), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_HANG_PULSE_0_REG                                   , RULL(0x340F0020), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_HANG_PULSE_0_REG                                   , RULL(0x350F0020), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_HANG_PULSE_0_REG                                   , RULL(0x360F0020), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_HANG_PULSE_0_REG                                   , RULL(0x370F0020), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_HANG_PULSE_0_REG                                     , RULL(0x100F0020), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_HANG_PULSE_0_REG                                   , RULL(0x100F0020), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_HANG_PULSE_0_REG                                   , RULL(0x110F0020), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_HANG_PULSE_0_REG                                   , RULL(0x120F0020), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_HANG_PULSE_0_REG                                   , RULL(0x130F0020), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_HANG_PULSE_0_REG                                   , RULL(0x140F0020), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_HANG_PULSE_0_REG                                   , RULL(0x150F0020), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_HANG_PULSE_0_REG                                     , RULL(0x200F0020), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0020,
REG64( EX_0_HANG_PULSE_0_REG                                   , RULL(0x200F0020), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0020,
REG64( EX_1_HANG_PULSE_0_REG                                   , RULL(0x230F0020), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0020,
REG64( EX_2_HANG_PULSE_0_REG                                   , RULL(0x240F0020), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0020,
REG64( EX_3_HANG_PULSE_0_REG                                   , RULL(0x260F0020), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0020,
REG64( EX_4_HANG_PULSE_0_REG                                   , RULL(0x280F0020), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0020,
REG64( EX_5_HANG_PULSE_0_REG                                   , RULL(0x2A0F0020), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0020,
REG64( EX_6_HANG_PULSE_0_REG                                   , RULL(0x2C0F0020), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0020,
REG64( EX_7_HANG_PULSE_0_REG                                   , RULL(0x2E0F0020), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0020,
REG64( EX_8_HANG_PULSE_0_REG                                   , RULL(0x300F0020), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0020,
REG64( EX_9_HANG_PULSE_0_REG                                   , RULL(0x320F0020), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0020,
REG64( EX_10_HANG_PULSE_0_REG                                  , RULL(0x340F0020), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0020,
REG64( EX_11_HANG_PULSE_0_REG                                  , RULL(0x360F0020), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0020,

REG64( PEC_0_HANG_PULSE_0_REG                                  , RULL(0x0D0F0020), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_HANG_PULSE_0_REG                                  , RULL(0x0E0F0020), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_HANG_PULSE_0_REG                                  , RULL(0x0F0F0020), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_HANG_PULSE_1_REG                                      , RULL(0x200F0021), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_HANG_PULSE_1_REG                                    , RULL(0x200F0021), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_HANG_PULSE_1_REG                                    , RULL(0x210F0021), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_HANG_PULSE_1_REG                                    , RULL(0x220F0021), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_HANG_PULSE_1_REG                                    , RULL(0x230F0021), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_HANG_PULSE_1_REG                                    , RULL(0x240F0021), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_HANG_PULSE_1_REG                                    , RULL(0x250F0021), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_HANG_PULSE_1_REG                                    , RULL(0x260F0021), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_HANG_PULSE_1_REG                                    , RULL(0x270F0021), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_HANG_PULSE_1_REG                                    , RULL(0x280F0021), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_HANG_PULSE_1_REG                                    , RULL(0x290F0021), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_HANG_PULSE_1_REG                                   , RULL(0x2A0F0021), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_HANG_PULSE_1_REG                                   , RULL(0x2B0F0021), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_HANG_PULSE_1_REG                                   , RULL(0x2C0F0021), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_HANG_PULSE_1_REG                                   , RULL(0x2D0F0021), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_HANG_PULSE_1_REG                                   , RULL(0x2E0F0021), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_HANG_PULSE_1_REG                                   , RULL(0x2F0F0021), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_HANG_PULSE_1_REG                                   , RULL(0x300F0021), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_HANG_PULSE_1_REG                                   , RULL(0x310F0021), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_HANG_PULSE_1_REG                                   , RULL(0x320F0021), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_HANG_PULSE_1_REG                                   , RULL(0x330F0021), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_HANG_PULSE_1_REG                                   , RULL(0x340F0021), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_HANG_PULSE_1_REG                                   , RULL(0x350F0021), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_HANG_PULSE_1_REG                                   , RULL(0x360F0021), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_HANG_PULSE_1_REG                                   , RULL(0x370F0021), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_HANG_PULSE_1_REG                                     , RULL(0x100F0021), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_HANG_PULSE_1_REG                                   , RULL(0x100F0021), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_HANG_PULSE_1_REG                                   , RULL(0x110F0021), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_HANG_PULSE_1_REG                                   , RULL(0x120F0021), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_HANG_PULSE_1_REG                                   , RULL(0x130F0021), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_HANG_PULSE_1_REG                                   , RULL(0x140F0021), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_HANG_PULSE_1_REG                                   , RULL(0x150F0021), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_HANG_PULSE_1_REG                                     , RULL(0x200F0021), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0021,
REG64( EX_0_HANG_PULSE_1_REG                                   , RULL(0x200F0021), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0021,
REG64( EX_1_HANG_PULSE_1_REG                                   , RULL(0x230F0021), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0021,
REG64( EX_2_HANG_PULSE_1_REG                                   , RULL(0x240F0021), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0021,
REG64( EX_3_HANG_PULSE_1_REG                                   , RULL(0x260F0021), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0021,
REG64( EX_4_HANG_PULSE_1_REG                                   , RULL(0x280F0021), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0021,
REG64( EX_5_HANG_PULSE_1_REG                                   , RULL(0x2A0F0021), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0021,
REG64( EX_6_HANG_PULSE_1_REG                                   , RULL(0x2C0F0021), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0021,
REG64( EX_7_HANG_PULSE_1_REG                                   , RULL(0x2E0F0021), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0021,
REG64( EX_8_HANG_PULSE_1_REG                                   , RULL(0x300F0021), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0021,
REG64( EX_9_HANG_PULSE_1_REG                                   , RULL(0x320F0021), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0021,
REG64( EX_10_HANG_PULSE_1_REG                                  , RULL(0x340F0021), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0021,
REG64( EX_11_HANG_PULSE_1_REG                                  , RULL(0x360F0021), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0021,

REG64( PEC_0_HANG_PULSE_1_REG                                  , RULL(0x0D0F0021), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_HANG_PULSE_1_REG                                  , RULL(0x0E0F0021), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_HANG_PULSE_1_REG                                  , RULL(0x0F0F0021), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_HANG_PULSE_2_REG                                      , RULL(0x200F0022), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_HANG_PULSE_2_REG                                    , RULL(0x200F0022), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_HANG_PULSE_2_REG                                    , RULL(0x210F0022), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_HANG_PULSE_2_REG                                    , RULL(0x220F0022), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_HANG_PULSE_2_REG                                    , RULL(0x230F0022), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_HANG_PULSE_2_REG                                    , RULL(0x240F0022), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_HANG_PULSE_2_REG                                    , RULL(0x250F0022), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_HANG_PULSE_2_REG                                    , RULL(0x260F0022), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_HANG_PULSE_2_REG                                    , RULL(0x270F0022), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_HANG_PULSE_2_REG                                    , RULL(0x280F0022), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_HANG_PULSE_2_REG                                    , RULL(0x290F0022), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_HANG_PULSE_2_REG                                   , RULL(0x2A0F0022), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_HANG_PULSE_2_REG                                   , RULL(0x2B0F0022), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_HANG_PULSE_2_REG                                   , RULL(0x2C0F0022), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_HANG_PULSE_2_REG                                   , RULL(0x2D0F0022), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_HANG_PULSE_2_REG                                   , RULL(0x2E0F0022), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_HANG_PULSE_2_REG                                   , RULL(0x2F0F0022), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_HANG_PULSE_2_REG                                   , RULL(0x300F0022), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_HANG_PULSE_2_REG                                   , RULL(0x310F0022), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_HANG_PULSE_2_REG                                   , RULL(0x320F0022), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_HANG_PULSE_2_REG                                   , RULL(0x330F0022), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_HANG_PULSE_2_REG                                   , RULL(0x340F0022), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_HANG_PULSE_2_REG                                   , RULL(0x350F0022), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_HANG_PULSE_2_REG                                   , RULL(0x360F0022), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_HANG_PULSE_2_REG                                   , RULL(0x370F0022), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_HANG_PULSE_2_REG                                     , RULL(0x100F0022), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_HANG_PULSE_2_REG                                   , RULL(0x100F0022), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_HANG_PULSE_2_REG                                   , RULL(0x110F0022), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_HANG_PULSE_2_REG                                   , RULL(0x120F0022), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_HANG_PULSE_2_REG                                   , RULL(0x130F0022), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_HANG_PULSE_2_REG                                   , RULL(0x140F0022), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_HANG_PULSE_2_REG                                   , RULL(0x150F0022), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_HANG_PULSE_2_REG                                     , RULL(0x200F0022), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0022,
REG64( EX_0_HANG_PULSE_2_REG                                   , RULL(0x200F0022), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0022,
REG64( EX_1_HANG_PULSE_2_REG                                   , RULL(0x230F0022), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0022,
REG64( EX_2_HANG_PULSE_2_REG                                   , RULL(0x240F0022), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0022,
REG64( EX_3_HANG_PULSE_2_REG                                   , RULL(0x260F0022), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0022,
REG64( EX_4_HANG_PULSE_2_REG                                   , RULL(0x280F0022), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0022,
REG64( EX_5_HANG_PULSE_2_REG                                   , RULL(0x2A0F0022), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0022,
REG64( EX_6_HANG_PULSE_2_REG                                   , RULL(0x2C0F0022), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0022,
REG64( EX_7_HANG_PULSE_2_REG                                   , RULL(0x2E0F0022), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0022,
REG64( EX_8_HANG_PULSE_2_REG                                   , RULL(0x300F0022), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0022,
REG64( EX_9_HANG_PULSE_2_REG                                   , RULL(0x320F0022), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0022,
REG64( EX_10_HANG_PULSE_2_REG                                  , RULL(0x340F0022), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0022,
REG64( EX_11_HANG_PULSE_2_REG                                  , RULL(0x360F0022), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0022,

REG64( PEC_0_HANG_PULSE_2_REG                                  , RULL(0x0D0F0022), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_HANG_PULSE_2_REG                                  , RULL(0x0E0F0022), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_HANG_PULSE_2_REG                                  , RULL(0x0F0F0022), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_HANG_PULSE_3_REG                                      , RULL(0x200F0023), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_HANG_PULSE_3_REG                                    , RULL(0x200F0023), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_HANG_PULSE_3_REG                                    , RULL(0x210F0023), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_HANG_PULSE_3_REG                                    , RULL(0x220F0023), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_HANG_PULSE_3_REG                                    , RULL(0x230F0023), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_HANG_PULSE_3_REG                                    , RULL(0x240F0023), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_HANG_PULSE_3_REG                                    , RULL(0x250F0023), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_HANG_PULSE_3_REG                                    , RULL(0x260F0023), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_HANG_PULSE_3_REG                                    , RULL(0x270F0023), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_HANG_PULSE_3_REG                                    , RULL(0x280F0023), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_HANG_PULSE_3_REG                                    , RULL(0x290F0023), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_HANG_PULSE_3_REG                                   , RULL(0x2A0F0023), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_HANG_PULSE_3_REG                                   , RULL(0x2B0F0023), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_HANG_PULSE_3_REG                                   , RULL(0x2C0F0023), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_HANG_PULSE_3_REG                                   , RULL(0x2D0F0023), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_HANG_PULSE_3_REG                                   , RULL(0x2E0F0023), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_HANG_PULSE_3_REG                                   , RULL(0x2F0F0023), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_HANG_PULSE_3_REG                                   , RULL(0x300F0023), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_HANG_PULSE_3_REG                                   , RULL(0x310F0023), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_HANG_PULSE_3_REG                                   , RULL(0x320F0023), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_HANG_PULSE_3_REG                                   , RULL(0x330F0023), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_HANG_PULSE_3_REG                                   , RULL(0x340F0023), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_HANG_PULSE_3_REG                                   , RULL(0x350F0023), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_HANG_PULSE_3_REG                                   , RULL(0x360F0023), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_HANG_PULSE_3_REG                                   , RULL(0x370F0023), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_HANG_PULSE_3_REG                                     , RULL(0x100F0023), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_HANG_PULSE_3_REG                                   , RULL(0x100F0023), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_HANG_PULSE_3_REG                                   , RULL(0x110F0023), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_HANG_PULSE_3_REG                                   , RULL(0x120F0023), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_HANG_PULSE_3_REG                                   , RULL(0x130F0023), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_HANG_PULSE_3_REG                                   , RULL(0x140F0023), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_HANG_PULSE_3_REG                                   , RULL(0x150F0023), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_HANG_PULSE_3_REG                                     , RULL(0x200F0023), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0023,
REG64( EX_0_HANG_PULSE_3_REG                                   , RULL(0x200F0023), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0023,
REG64( EX_1_HANG_PULSE_3_REG                                   , RULL(0x230F0023), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0023,
REG64( EX_2_HANG_PULSE_3_REG                                   , RULL(0x240F0023), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0023,
REG64( EX_3_HANG_PULSE_3_REG                                   , RULL(0x260F0023), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0023,
REG64( EX_4_HANG_PULSE_3_REG                                   , RULL(0x280F0023), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0023,
REG64( EX_5_HANG_PULSE_3_REG                                   , RULL(0x2A0F0023), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0023,
REG64( EX_6_HANG_PULSE_3_REG                                   , RULL(0x2C0F0023), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0023,
REG64( EX_7_HANG_PULSE_3_REG                                   , RULL(0x2E0F0023), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0023,
REG64( EX_8_HANG_PULSE_3_REG                                   , RULL(0x300F0023), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0023,
REG64( EX_9_HANG_PULSE_3_REG                                   , RULL(0x320F0023), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0023,
REG64( EX_10_HANG_PULSE_3_REG                                  , RULL(0x340F0023), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0023,
REG64( EX_11_HANG_PULSE_3_REG                                  , RULL(0x360F0023), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0023,

REG64( PEC_0_HANG_PULSE_3_REG                                  , RULL(0x0D0F0023), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_HANG_PULSE_3_REG                                  , RULL(0x0E0F0023), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_HANG_PULSE_3_REG                                  , RULL(0x0F0F0023), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_HANG_PULSE_4_REG                                      , RULL(0x200F0024), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_HANG_PULSE_4_REG                                    , RULL(0x200F0024), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_HANG_PULSE_4_REG                                    , RULL(0x210F0024), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_HANG_PULSE_4_REG                                    , RULL(0x220F0024), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_HANG_PULSE_4_REG                                    , RULL(0x230F0024), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_HANG_PULSE_4_REG                                    , RULL(0x240F0024), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_HANG_PULSE_4_REG                                    , RULL(0x250F0024), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_HANG_PULSE_4_REG                                    , RULL(0x260F0024), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_HANG_PULSE_4_REG                                    , RULL(0x270F0024), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_HANG_PULSE_4_REG                                    , RULL(0x280F0024), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_HANG_PULSE_4_REG                                    , RULL(0x290F0024), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_HANG_PULSE_4_REG                                   , RULL(0x2A0F0024), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_HANG_PULSE_4_REG                                   , RULL(0x2B0F0024), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_HANG_PULSE_4_REG                                   , RULL(0x2C0F0024), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_HANG_PULSE_4_REG                                   , RULL(0x2D0F0024), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_HANG_PULSE_4_REG                                   , RULL(0x2E0F0024), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_HANG_PULSE_4_REG                                   , RULL(0x2F0F0024), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_HANG_PULSE_4_REG                                   , RULL(0x300F0024), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_HANG_PULSE_4_REG                                   , RULL(0x310F0024), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_HANG_PULSE_4_REG                                   , RULL(0x320F0024), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_HANG_PULSE_4_REG                                   , RULL(0x330F0024), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_HANG_PULSE_4_REG                                   , RULL(0x340F0024), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_HANG_PULSE_4_REG                                   , RULL(0x350F0024), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_HANG_PULSE_4_REG                                   , RULL(0x360F0024), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_HANG_PULSE_4_REG                                   , RULL(0x370F0024), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_HANG_PULSE_4_REG                                     , RULL(0x100F0024), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_HANG_PULSE_4_REG                                   , RULL(0x100F0024), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_HANG_PULSE_4_REG                                   , RULL(0x110F0024), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_HANG_PULSE_4_REG                                   , RULL(0x120F0024), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_HANG_PULSE_4_REG                                   , RULL(0x130F0024), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_HANG_PULSE_4_REG                                   , RULL(0x140F0024), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_HANG_PULSE_4_REG                                   , RULL(0x150F0024), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_HANG_PULSE_4_REG                                     , RULL(0x200F0024), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0024,
REG64( EX_0_HANG_PULSE_4_REG                                   , RULL(0x200F0024), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0024,
REG64( EX_1_HANG_PULSE_4_REG                                   , RULL(0x230F0024), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0024,
REG64( EX_2_HANG_PULSE_4_REG                                   , RULL(0x240F0024), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0024,
REG64( EX_3_HANG_PULSE_4_REG                                   , RULL(0x260F0024), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0024,
REG64( EX_4_HANG_PULSE_4_REG                                   , RULL(0x280F0024), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0024,
REG64( EX_5_HANG_PULSE_4_REG                                   , RULL(0x2A0F0024), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0024,
REG64( EX_6_HANG_PULSE_4_REG                                   , RULL(0x2C0F0024), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0024,
REG64( EX_7_HANG_PULSE_4_REG                                   , RULL(0x2E0F0024), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0024,
REG64( EX_8_HANG_PULSE_4_REG                                   , RULL(0x300F0024), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0024,
REG64( EX_9_HANG_PULSE_4_REG                                   , RULL(0x320F0024), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0024,
REG64( EX_10_HANG_PULSE_4_REG                                  , RULL(0x340F0024), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0024,
REG64( EX_11_HANG_PULSE_4_REG                                  , RULL(0x360F0024), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0024,

REG64( PEC_0_HANG_PULSE_4_REG                                  , RULL(0x0D0F0024), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_HANG_PULSE_4_REG                                  , RULL(0x0E0F0024), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_HANG_PULSE_4_REG                                  , RULL(0x0F0F0024), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_HANG_PULSE_5_REG                                      , RULL(0x200F0025), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_HANG_PULSE_5_REG                                    , RULL(0x200F0025), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_HANG_PULSE_5_REG                                    , RULL(0x210F0025), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_HANG_PULSE_5_REG                                    , RULL(0x220F0025), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_HANG_PULSE_5_REG                                    , RULL(0x230F0025), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_HANG_PULSE_5_REG                                    , RULL(0x240F0025), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_HANG_PULSE_5_REG                                    , RULL(0x250F0025), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_HANG_PULSE_5_REG                                    , RULL(0x260F0025), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_HANG_PULSE_5_REG                                    , RULL(0x270F0025), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_HANG_PULSE_5_REG                                    , RULL(0x280F0025), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_HANG_PULSE_5_REG                                    , RULL(0x290F0025), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_HANG_PULSE_5_REG                                   , RULL(0x2A0F0025), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_HANG_PULSE_5_REG                                   , RULL(0x2B0F0025), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_HANG_PULSE_5_REG                                   , RULL(0x2C0F0025), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_HANG_PULSE_5_REG                                   , RULL(0x2D0F0025), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_HANG_PULSE_5_REG                                   , RULL(0x2E0F0025), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_HANG_PULSE_5_REG                                   , RULL(0x2F0F0025), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_HANG_PULSE_5_REG                                   , RULL(0x300F0025), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_HANG_PULSE_5_REG                                   , RULL(0x310F0025), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_HANG_PULSE_5_REG                                   , RULL(0x320F0025), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_HANG_PULSE_5_REG                                   , RULL(0x330F0025), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_HANG_PULSE_5_REG                                   , RULL(0x340F0025), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_HANG_PULSE_5_REG                                   , RULL(0x350F0025), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_HANG_PULSE_5_REG                                   , RULL(0x360F0025), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_HANG_PULSE_5_REG                                   , RULL(0x370F0025), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_HANG_PULSE_5_REG                                     , RULL(0x100F0025), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_HANG_PULSE_5_REG                                   , RULL(0x100F0025), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_HANG_PULSE_5_REG                                   , RULL(0x110F0025), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_HANG_PULSE_5_REG                                   , RULL(0x120F0025), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_HANG_PULSE_5_REG                                   , RULL(0x130F0025), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_HANG_PULSE_5_REG                                   , RULL(0x140F0025), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_HANG_PULSE_5_REG                                   , RULL(0x150F0025), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_HANG_PULSE_5_REG                                     , RULL(0x200F0025), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0025,
REG64( EX_0_HANG_PULSE_5_REG                                   , RULL(0x200F0025), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0025,
REG64( EX_1_HANG_PULSE_5_REG                                   , RULL(0x230F0025), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0025,
REG64( EX_2_HANG_PULSE_5_REG                                   , RULL(0x240F0025), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0025,
REG64( EX_3_HANG_PULSE_5_REG                                   , RULL(0x260F0025), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0025,
REG64( EX_4_HANG_PULSE_5_REG                                   , RULL(0x280F0025), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0025,
REG64( EX_5_HANG_PULSE_5_REG                                   , RULL(0x2A0F0025), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0025,
REG64( EX_6_HANG_PULSE_5_REG                                   , RULL(0x2C0F0025), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0025,
REG64( EX_7_HANG_PULSE_5_REG                                   , RULL(0x2E0F0025), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0025,
REG64( EX_8_HANG_PULSE_5_REG                                   , RULL(0x300F0025), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0025,
REG64( EX_9_HANG_PULSE_5_REG                                   , RULL(0x320F0025), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0025,
REG64( EX_10_HANG_PULSE_5_REG                                  , RULL(0x340F0025), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0025,
REG64( EX_11_HANG_PULSE_5_REG                                  , RULL(0x360F0025), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0025,

REG64( PEC_0_HANG_PULSE_5_REG                                  , RULL(0x0D0F0025), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_HANG_PULSE_5_REG                                  , RULL(0x0E0F0025), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_HANG_PULSE_5_REG                                  , RULL(0x0F0F0025), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_HANG_PULSE_6_REG                                      , RULL(0x200F0026), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_HANG_PULSE_6_REG                                    , RULL(0x200F0026), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_HANG_PULSE_6_REG                                    , RULL(0x210F0026), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_HANG_PULSE_6_REG                                    , RULL(0x220F0026), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_HANG_PULSE_6_REG                                    , RULL(0x230F0026), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_HANG_PULSE_6_REG                                    , RULL(0x240F0026), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_HANG_PULSE_6_REG                                    , RULL(0x250F0026), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_HANG_PULSE_6_REG                                    , RULL(0x260F0026), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_HANG_PULSE_6_REG                                    , RULL(0x270F0026), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_HANG_PULSE_6_REG                                    , RULL(0x280F0026), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_HANG_PULSE_6_REG                                    , RULL(0x290F0026), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_HANG_PULSE_6_REG                                   , RULL(0x2A0F0026), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_HANG_PULSE_6_REG                                   , RULL(0x2B0F0026), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_HANG_PULSE_6_REG                                   , RULL(0x2C0F0026), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_HANG_PULSE_6_REG                                   , RULL(0x2D0F0026), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_HANG_PULSE_6_REG                                   , RULL(0x2E0F0026), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_HANG_PULSE_6_REG                                   , RULL(0x2F0F0026), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_HANG_PULSE_6_REG                                   , RULL(0x300F0026), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_HANG_PULSE_6_REG                                   , RULL(0x310F0026), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_HANG_PULSE_6_REG                                   , RULL(0x320F0026), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_HANG_PULSE_6_REG                                   , RULL(0x330F0026), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_HANG_PULSE_6_REG                                   , RULL(0x340F0026), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_HANG_PULSE_6_REG                                   , RULL(0x350F0026), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_HANG_PULSE_6_REG                                   , RULL(0x360F0026), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_HANG_PULSE_6_REG                                   , RULL(0x370F0026), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_HANG_PULSE_6_REG                                     , RULL(0x100F0026), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_HANG_PULSE_6_REG                                   , RULL(0x100F0026), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_HANG_PULSE_6_REG                                   , RULL(0x110F0026), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_HANG_PULSE_6_REG                                   , RULL(0x120F0026), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_HANG_PULSE_6_REG                                   , RULL(0x130F0026), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_HANG_PULSE_6_REG                                   , RULL(0x140F0026), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_HANG_PULSE_6_REG                                   , RULL(0x150F0026), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_HANG_PULSE_6_REG                                     , RULL(0x200F0026), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0026,
REG64( EX_0_HANG_PULSE_6_REG                                   , RULL(0x200F0026), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0026,
REG64( EX_1_HANG_PULSE_6_REG                                   , RULL(0x230F0026), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0026,
REG64( EX_2_HANG_PULSE_6_REG                                   , RULL(0x240F0026), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0026,
REG64( EX_3_HANG_PULSE_6_REG                                   , RULL(0x260F0026), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0026,
REG64( EX_4_HANG_PULSE_6_REG                                   , RULL(0x280F0026), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0026,
REG64( EX_5_HANG_PULSE_6_REG                                   , RULL(0x2A0F0026), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0026,
REG64( EX_6_HANG_PULSE_6_REG                                   , RULL(0x2C0F0026), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0026,
REG64( EX_7_HANG_PULSE_6_REG                                   , RULL(0x2E0F0026), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0026,
REG64( EX_8_HANG_PULSE_6_REG                                   , RULL(0x300F0026), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0026,
REG64( EX_9_HANG_PULSE_6_REG                                   , RULL(0x320F0026), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0026,
REG64( EX_10_HANG_PULSE_6_REG                                  , RULL(0x340F0026), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0026,
REG64( EX_11_HANG_PULSE_6_REG                                  , RULL(0x360F0026), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0026,

REG64( PEC_0_HANG_PULSE_6_REG                                  , RULL(0x0D0F0026), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_HANG_PULSE_6_REG                                  , RULL(0x0E0F0026), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_HANG_PULSE_6_REG                                  , RULL(0x0F0F0026), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_HEARTBEAT_REG                                         , RULL(0x200F0018), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_HEARTBEAT_REG                                       , RULL(0x200F0018), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_HEARTBEAT_REG                                       , RULL(0x210F0018), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_HEARTBEAT_REG                                       , RULL(0x220F0018), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_HEARTBEAT_REG                                       , RULL(0x230F0018), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_HEARTBEAT_REG                                       , RULL(0x240F0018), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_HEARTBEAT_REG                                       , RULL(0x250F0018), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_HEARTBEAT_REG                                       , RULL(0x260F0018), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_HEARTBEAT_REG                                       , RULL(0x270F0018), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_HEARTBEAT_REG                                       , RULL(0x280F0018), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_HEARTBEAT_REG                                       , RULL(0x290F0018), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_HEARTBEAT_REG                                      , RULL(0x2A0F0018), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_HEARTBEAT_REG                                      , RULL(0x2B0F0018), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_HEARTBEAT_REG                                      , RULL(0x2C0F0018), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_HEARTBEAT_REG                                      , RULL(0x2D0F0018), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_HEARTBEAT_REG                                      , RULL(0x2E0F0018), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_HEARTBEAT_REG                                      , RULL(0x2F0F0018), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_HEARTBEAT_REG                                      , RULL(0x300F0018), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_HEARTBEAT_REG                                      , RULL(0x310F0018), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_HEARTBEAT_REG                                      , RULL(0x320F0018), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_HEARTBEAT_REG                                      , RULL(0x330F0018), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_HEARTBEAT_REG                                      , RULL(0x340F0018), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_HEARTBEAT_REG                                      , RULL(0x350F0018), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_HEARTBEAT_REG                                      , RULL(0x360F0018), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_HEARTBEAT_REG                                      , RULL(0x370F0018), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_HEARTBEAT_REG                                        , RULL(0x100F0018), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_HEARTBEAT_REG                                      , RULL(0x100F0018), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_HEARTBEAT_REG                                      , RULL(0x110F0018), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_HEARTBEAT_REG                                      , RULL(0x120F0018), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_HEARTBEAT_REG                                      , RULL(0x130F0018), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_HEARTBEAT_REG                                      , RULL(0x140F0018), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_HEARTBEAT_REG                                      , RULL(0x150F0018), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_HEARTBEAT_REG                                        , RULL(0x200F0018), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0018,
REG64( EX_0_HEARTBEAT_REG                                      , RULL(0x200F0018), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0018,
REG64( EX_1_HEARTBEAT_REG                                      , RULL(0x230F0018), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0018,
REG64( EX_2_HEARTBEAT_REG                                      , RULL(0x240F0018), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0018,
REG64( EX_3_HEARTBEAT_REG                                      , RULL(0x260F0018), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0018,
REG64( EX_4_HEARTBEAT_REG                                      , RULL(0x280F0018), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0018,
REG64( EX_5_HEARTBEAT_REG                                      , RULL(0x2A0F0018), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0018,
REG64( EX_6_HEARTBEAT_REG                                      , RULL(0x2C0F0018), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0018,
REG64( EX_7_HEARTBEAT_REG                                      , RULL(0x2E0F0018), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0018,
REG64( EX_8_HEARTBEAT_REG                                      , RULL(0x300F0018), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0018,
REG64( EX_9_HEARTBEAT_REG                                      , RULL(0x320F0018), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0018,
REG64( EX_10_HEARTBEAT_REG                                     , RULL(0x340F0018), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0018,
REG64( EX_11_HEARTBEAT_REG                                     , RULL(0x360F0018), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0018,

REG64( PEC_0_HEARTBEAT_REG                                     , RULL(0x0D0F0018), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_HEARTBEAT_REG                                     , RULL(0x0E0F0018), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_HEARTBEAT_REG                                     , RULL(0x0F0F0018), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_HID                                                   , RULL(0x20010A01), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_HID                                                 , RULL(0x20010A01), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_HID                                                 , RULL(0x21010A01), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_HID                                                 , RULL(0x22010A01), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_HID                                                 , RULL(0x23010A01), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_HID                                                 , RULL(0x24010A01), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_HID                                                 , RULL(0x25010A01), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_HID                                                 , RULL(0x26010A01), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_HID                                                 , RULL(0x27010A01), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_HID                                                 , RULL(0x28010A01), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_HID                                                 , RULL(0x29010A01), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_HID                                                , RULL(0x2A010A01), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_HID                                                , RULL(0x2B010A01), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_HID                                                , RULL(0x2C010A01), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_HID                                                , RULL(0x2D010A01), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_HID                                                , RULL(0x2E010A01), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_HID                                                , RULL(0x2F010A01), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_HID                                                , RULL(0x30010A01), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_HID                                                , RULL(0x31010A01), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_HID                                                , RULL(0x32010A01), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_HID                                                , RULL(0x33010A01), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_HID                                                , RULL(0x34010A01), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_HID                                                , RULL(0x35010A01), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_HID                                                , RULL(0x36010A01), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_HID                                                , RULL(0x37010A01), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_HID                                             , RULL(0x20010A01), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010A01,
REG64( EX_10_L2_HID                                            , RULL(0x34010A01), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010A01,
REG64( EX_11_L2_HID                                            , RULL(0x36010A01), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010A01,
REG64( EX_1_L2_HID                                             , RULL(0x22010A01), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010A01,
REG64( EX_2_L2_HID                                             , RULL(0x24010A01), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010A01,
REG64( EX_3_L2_HID                                             , RULL(0x26010A01), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010A01,
REG64( EX_4_L2_HID                                             , RULL(0x28010A01), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010A01,
REG64( EX_5_L2_HID                                             , RULL(0x2A010A01), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010A01,
REG64( EX_6_L2_HID                                             , RULL(0x2C010A01), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010A01,
REG64( EX_7_L2_HID                                             , RULL(0x2E010A01), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010A01,
REG64( EX_8_L2_HID                                             , RULL(0x30010A01), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010A01,
REG64( EX_9_L2_HID                                             , RULL(0x32010A01), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010A01,
REG64( EX_L2_HID                                               , RULL(0x20010A01), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010A01,

REG64( C_HMEER                                                 , RULL(0x20010A96), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_HMEER                                               , RULL(0x20010A96), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_HMEER                                               , RULL(0x21010A96), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_HMEER                                               , RULL(0x22010A96), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_HMEER                                               , RULL(0x23010A96), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_HMEER                                               , RULL(0x24010A96), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_HMEER                                               , RULL(0x25010A96), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_HMEER                                               , RULL(0x26010A96), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_HMEER                                               , RULL(0x27010A96), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_HMEER                                               , RULL(0x28010A96), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_HMEER                                               , RULL(0x29010A96), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_HMEER                                              , RULL(0x2A010A96), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_HMEER                                              , RULL(0x2B010A96), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_HMEER                                              , RULL(0x2C010A96), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_HMEER                                              , RULL(0x2D010A96), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_HMEER                                              , RULL(0x2E010A96), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_HMEER                                              , RULL(0x2F010A96), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_HMEER                                              , RULL(0x30010A96), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_HMEER                                              , RULL(0x31010A96), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_HMEER                                              , RULL(0x32010A96), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_HMEER                                              , RULL(0x33010A96), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_HMEER                                              , RULL(0x34010A96), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_HMEER                                              , RULL(0x35010A96), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_HMEER                                              , RULL(0x36010A96), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_HMEER                                              , RULL(0x37010A96), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_HMEER                                           , RULL(0x21010A96), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A96,
REG64( EX_10_L2_HMEER                                          , RULL(0x35010A96), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010A96,
REG64( EX_11_L2_HMEER                                          , RULL(0x37010A96), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010A96,
REG64( EX_1_L2_HMEER                                           , RULL(0x23010A96), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010A96,
REG64( EX_2_L2_HMEER                                           , RULL(0x25010A96), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010A96,
REG64( EX_3_L2_HMEER                                           , RULL(0x27010A96), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010A96,
REG64( EX_4_L2_HMEER                                           , RULL(0x29010A96), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010A96,
REG64( EX_5_L2_HMEER                                           , RULL(0x2B010A96), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010A96,
REG64( EX_6_L2_HMEER                                           , RULL(0x2D010A96), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010A96,
REG64( EX_7_L2_HMEER                                           , RULL(0x2F010A96), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010A96,
REG64( EX_8_L2_HMEER                                           , RULL(0x31010A96), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010A96,
REG64( EX_9_L2_HMEER                                           , RULL(0x33010A96), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010A96,
REG64( EX_L2_HMEER                                             , RULL(0x21010A96), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A96,

REG64( C_HOSTATTN                                              , RULL(0x20040009), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_HOSTATTN                                            , RULL(0x20040009), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_HOSTATTN                                            , RULL(0x21040009), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_HOSTATTN                                            , RULL(0x22040009), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_HOSTATTN                                            , RULL(0x23040009), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_HOSTATTN                                            , RULL(0x24040009), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_HOSTATTN                                            , RULL(0x25040009), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_HOSTATTN                                            , RULL(0x26040009), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_HOSTATTN                                            , RULL(0x27040009), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_HOSTATTN                                            , RULL(0x28040009), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_HOSTATTN                                            , RULL(0x29040009), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_HOSTATTN                                           , RULL(0x2A040009), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_HOSTATTN                                           , RULL(0x2B040009), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_HOSTATTN                                           , RULL(0x2C040009), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_HOSTATTN                                           , RULL(0x2D040009), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_HOSTATTN                                           , RULL(0x2E040009), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_HOSTATTN                                           , RULL(0x2F040009), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_HOSTATTN                                           , RULL(0x30040009), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_HOSTATTN                                           , RULL(0x31040009), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_HOSTATTN                                           , RULL(0x32040009), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_HOSTATTN                                           , RULL(0x33040009), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_HOSTATTN                                           , RULL(0x34040009), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_HOSTATTN                                           , RULL(0x35040009), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_HOSTATTN                                           , RULL(0x36040009), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_HOSTATTN                                           , RULL(0x37040009), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_HOSTATTN                                             , RULL(0x10040009), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_HOSTATTN                                           , RULL(0x10040009), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_HOSTATTN                                           , RULL(0x11040009), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_HOSTATTN                                           , RULL(0x12040009), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_HOSTATTN                                           , RULL(0x13040009), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_HOSTATTN                                           , RULL(0x14040009), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_HOSTATTN                                           , RULL(0x15040009), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_HOSTATTN                                             , RULL(0x20040009), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 21040009,
REG64( EX_0_HOSTATTN                                           , RULL(0x20040009), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 21040009,
REG64( EX_1_HOSTATTN                                           , RULL(0x22040009), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 23040009,
REG64( EX_2_HOSTATTN                                           , RULL(0x24040009), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 25040009,
REG64( EX_3_HOSTATTN                                           , RULL(0x26040009), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 27040009,
REG64( EX_4_HOSTATTN                                           , RULL(0x28040009), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 29040009,
REG64( EX_5_HOSTATTN                                           , RULL(0x2A040009), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B040009,
REG64( EX_6_HOSTATTN                                           , RULL(0x2C040009), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D040009,
REG64( EX_7_HOSTATTN                                           , RULL(0x2E040009), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F040009,
REG64( EX_8_HOSTATTN                                           , RULL(0x30040009), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 31040009,
REG64( EX_9_HOSTATTN                                           , RULL(0x32040009), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 33040009,
REG64( EX_10_HOSTATTN                                          , RULL(0x34040009), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 35040009,
REG64( EX_11_HOSTATTN                                          , RULL(0x36040009), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 37040009,

REG64( PEC_0_HOSTATTN                                          , RULL(0x0D040009), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_HOSTATTN                                          , RULL(0x0E040009), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_HOSTATTN                                          , RULL(0x0F040009), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_HOSTATTN_MASK                                         , RULL(0x20040020), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_HOSTATTN_MASK                                       , RULL(0x20040020), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_HOSTATTN_MASK                                       , RULL(0x21040020), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_HOSTATTN_MASK                                       , RULL(0x22040020), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_HOSTATTN_MASK                                       , RULL(0x23040020), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_HOSTATTN_MASK                                       , RULL(0x24040020), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_HOSTATTN_MASK                                       , RULL(0x25040020), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_HOSTATTN_MASK                                       , RULL(0x26040020), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_HOSTATTN_MASK                                       , RULL(0x27040020), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_HOSTATTN_MASK                                       , RULL(0x28040020), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_HOSTATTN_MASK                                       , RULL(0x29040020), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_HOSTATTN_MASK                                      , RULL(0x2A040020), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_HOSTATTN_MASK                                      , RULL(0x2B040020), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_HOSTATTN_MASK                                      , RULL(0x2C040020), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_HOSTATTN_MASK                                      , RULL(0x2D040020), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_HOSTATTN_MASK                                      , RULL(0x2E040020), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_HOSTATTN_MASK                                      , RULL(0x2F040020), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_HOSTATTN_MASK                                      , RULL(0x30040020), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_HOSTATTN_MASK                                      , RULL(0x31040020), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_HOSTATTN_MASK                                      , RULL(0x32040020), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_HOSTATTN_MASK                                      , RULL(0x33040020), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_HOSTATTN_MASK                                      , RULL(0x34040020), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_HOSTATTN_MASK                                      , RULL(0x35040020), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_HOSTATTN_MASK                                      , RULL(0x36040020), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_HOSTATTN_MASK                                      , RULL(0x37040020), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_HOSTATTN_MASK                                        , RULL(0x10040020), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_HOSTATTN_MASK                                      , RULL(0x10040020), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_HOSTATTN_MASK                                      , RULL(0x11040020), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_HOSTATTN_MASK                                      , RULL(0x12040020), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_HOSTATTN_MASK                                      , RULL(0x13040020), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_HOSTATTN_MASK                                      , RULL(0x14040020), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_HOSTATTN_MASK                                      , RULL(0x15040020), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_HOSTATTN_MASK                                        , RULL(0x20040020), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040020,
REG64( EX_0_HOSTATTN_MASK                                      , RULL(0x20040020), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040020,
REG64( EX_1_HOSTATTN_MASK                                      , RULL(0x22040020), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040020,
REG64( EX_2_HOSTATTN_MASK                                      , RULL(0x24040020), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040020,
REG64( EX_3_HOSTATTN_MASK                                      , RULL(0x26040020), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040020,
REG64( EX_4_HOSTATTN_MASK                                      , RULL(0x28040020), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040020,
REG64( EX_5_HOSTATTN_MASK                                      , RULL(0x2A040020), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040020,
REG64( EX_6_HOSTATTN_MASK                                      , RULL(0x2C040020), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040020,
REG64( EX_7_HOSTATTN_MASK                                      , RULL(0x2E040020), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040020,
REG64( EX_8_HOSTATTN_MASK                                      , RULL(0x30040020), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040020,
REG64( EX_9_HOSTATTN_MASK                                      , RULL(0x32040020), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040020,
REG64( EX_10_HOSTATTN_MASK                                     , RULL(0x34040020), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040020,
REG64( EX_11_HOSTATTN_MASK                                     , RULL(0x36040020), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040020,

REG64( PEC_0_HOSTATTN_MASK                                     , RULL(0x0D040020), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_HOSTATTN_MASK                                     , RULL(0x0E040020), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_HOSTATTN_MASK                                     , RULL(0x0F040020), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( EQ_HTM_CTRL                                             , RULL(0x10012A05), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B05, 10012605, 10012705,
REG64( EQ_0_HTM_CTRL                                           , RULL(0x10012A05), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B05, 10012605, 10012705,
REG64( EQ_1_HTM_CTRL                                           , RULL(0x11012A05), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012B05, 11012605, 11012705,
REG64( EQ_2_HTM_CTRL                                           , RULL(0x12012A05), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012B05, 12012605, 12012705,
REG64( EQ_3_HTM_CTRL                                           , RULL(0x13012A05), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012B05, 13012605, 13012705,
REG64( EQ_4_HTM_CTRL                                           , RULL(0x14012A05), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012B05, 14012605, 14012705,
REG64( EQ_5_HTM_CTRL                                           , RULL(0x15012A05), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012B05, 15012605, 15012705,
REG64( EX_0_CHTMLBS0_HTM_CTRL                                  , RULL(0x10012605), SH_UNT_EX_0_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_0_CHTMLBS1_HTM_CTRL                                  , RULL(0x10012705), SH_UNT_EX_0_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS0_HTM_CTRL                                 , RULL(0x15012605), SH_UNT_EX_10_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS1_HTM_CTRL                                 , RULL(0x15012705), SH_UNT_EX_10_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS0_HTM_CTRL                                 , RULL(0x15012A05), SH_UNT_EX_11_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS1_HTM_CTRL                                 , RULL(0x15012B05), SH_UNT_EX_11_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS0_HTM_CTRL                                  , RULL(0x10012A05), SH_UNT_EX_1_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS1_HTM_CTRL                                  , RULL(0x10012B05), SH_UNT_EX_1_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS0_HTM_CTRL                                  , RULL(0x11012605), SH_UNT_EX_2_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS1_HTM_CTRL                                  , RULL(0x11012705), SH_UNT_EX_2_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS0_HTM_CTRL                                  , RULL(0x11012A05), SH_UNT_EX_3_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS1_HTM_CTRL                                  , RULL(0x11012B05), SH_UNT_EX_3_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS0_HTM_CTRL                                  , RULL(0x12012605), SH_UNT_EX_4_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS1_HTM_CTRL                                  , RULL(0x12012705), SH_UNT_EX_4_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS0_HTM_CTRL                                  , RULL(0x12012A05), SH_UNT_EX_5_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS1_HTM_CTRL                                  , RULL(0x12012B05), SH_UNT_EX_5_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS0_HTM_CTRL                                  , RULL(0x13012605), SH_UNT_EX_6_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS1_HTM_CTRL                                  , RULL(0x13012705), SH_UNT_EX_6_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS0_HTM_CTRL                                  , RULL(0x13012A05), SH_UNT_EX_7_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS1_HTM_CTRL                                  , RULL(0x13012B05), SH_UNT_EX_7_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS0_HTM_CTRL                                  , RULL(0x14012605), SH_UNT_EX_8_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS1_HTM_CTRL                                  , RULL(0x14012705), SH_UNT_EX_8_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS0_HTM_CTRL                                  , RULL(0x14012A05), SH_UNT_EX_9_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS1_HTM_CTRL                                  , RULL(0x14012B05), SH_UNT_EX_9_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS0_HTM_CTRL                                    , RULL(0x10012605), SH_UNT_EX_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS1_HTM_CTRL                                    , RULL(0x10012705), SH_UNT_EX_CHTMLBS1,
       SH_ACS_SCOM_RW   );

REG64( EQ_HTM_IMA_PDBAR                                        , RULL(0x10012A0B), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B0B, 1001260B, 1001270B,
REG64( EQ_0_HTM_IMA_PDBAR                                      , RULL(0x10012A0B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B0B, 1001260B, 1001270B,
REG64( EQ_1_HTM_IMA_PDBAR                                      , RULL(0x11012A0B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012B0B, 1101260B, 1101270B,
REG64( EQ_2_HTM_IMA_PDBAR                                      , RULL(0x12012A0B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012B0B, 1201260B, 1201270B,
REG64( EQ_3_HTM_IMA_PDBAR                                      , RULL(0x13012A0B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012B0B, 1301260B, 1301270B,
REG64( EQ_4_HTM_IMA_PDBAR                                      , RULL(0x14012A0B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012B0B, 1401260B, 1401270B,
REG64( EQ_5_HTM_IMA_PDBAR                                      , RULL(0x15012A0B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012B0B, 1501260B, 1501270B,
REG64( EX_0_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x1001260B), SH_UNT_EX_0_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_0_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x1001270B), SH_UNT_EX_0_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS0_HTM_IMA_PDBAR                            , RULL(0x1501260B), SH_UNT_EX_10_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS1_HTM_IMA_PDBAR                            , RULL(0x1501270B), SH_UNT_EX_10_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS0_HTM_IMA_PDBAR                            , RULL(0x15012A0B), SH_UNT_EX_11_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS1_HTM_IMA_PDBAR                            , RULL(0x15012B0B), SH_UNT_EX_11_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x10012A0B), SH_UNT_EX_1_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x10012B0B), SH_UNT_EX_1_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x1101260B), SH_UNT_EX_2_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x1101270B), SH_UNT_EX_2_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x11012A0B), SH_UNT_EX_3_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x11012B0B), SH_UNT_EX_3_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x1201260B), SH_UNT_EX_4_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x1201270B), SH_UNT_EX_4_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x12012A0B), SH_UNT_EX_5_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x12012B0B), SH_UNT_EX_5_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x1301260B), SH_UNT_EX_6_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x1301270B), SH_UNT_EX_6_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x13012A0B), SH_UNT_EX_7_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x13012B0B), SH_UNT_EX_7_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x1401260B), SH_UNT_EX_8_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x1401270B), SH_UNT_EX_8_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS0_HTM_IMA_PDBAR                             , RULL(0x14012A0B), SH_UNT_EX_9_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS1_HTM_IMA_PDBAR                             , RULL(0x14012B0B), SH_UNT_EX_9_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS0_HTM_IMA_PDBAR                               , RULL(0x1001260B), SH_UNT_EX_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS1_HTM_IMA_PDBAR                               , RULL(0x1001270B), SH_UNT_EX_CHTMLBS1,
       SH_ACS_SCOM_RW   );

REG64( EQ_HTM_IMA_STATUS                                       , RULL(0x10012A0A), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012B0A, 1001260A, 1001270A,
REG64( EQ_0_HTM_IMA_STATUS                                     , RULL(0x10012A0A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012B0A, 1001260A, 1001270A,
REG64( EQ_1_HTM_IMA_STATUS                                     , RULL(0x11012A0A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012B0A, 1101260A, 1101270A,
REG64( EQ_2_HTM_IMA_STATUS                                     , RULL(0x12012A0A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012B0A, 1201260A, 1201270A,
REG64( EQ_3_HTM_IMA_STATUS                                     , RULL(0x13012A0A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012B0A, 1301260A, 1301270A,
REG64( EQ_4_HTM_IMA_STATUS                                     , RULL(0x14012A0A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012B0A, 1401260A, 1401270A,
REG64( EQ_5_HTM_IMA_STATUS                                     , RULL(0x15012A0A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012B0A, 1501260A, 1501270A,
REG64( EX_0_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x1001260A), SH_UNT_EX_0_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_0_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x1001270A), SH_UNT_EX_0_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_10_CHTMLBS0_HTM_IMA_STATUS                           , RULL(0x1501260A), SH_UNT_EX_10_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_10_CHTMLBS1_HTM_IMA_STATUS                           , RULL(0x1501270A), SH_UNT_EX_10_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_11_CHTMLBS0_HTM_IMA_STATUS                           , RULL(0x15012A0A), SH_UNT_EX_11_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_11_CHTMLBS1_HTM_IMA_STATUS                           , RULL(0x15012B0A), SH_UNT_EX_11_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_1_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x10012A0A), SH_UNT_EX_1_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_1_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x10012B0A), SH_UNT_EX_1_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_2_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x1101260A), SH_UNT_EX_2_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_2_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x1101270A), SH_UNT_EX_2_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_3_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x11012A0A), SH_UNT_EX_3_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_3_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x11012B0A), SH_UNT_EX_3_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_4_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x1201260A), SH_UNT_EX_4_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_4_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x1201270A), SH_UNT_EX_4_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_5_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x12012A0A), SH_UNT_EX_5_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_5_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x12012B0A), SH_UNT_EX_5_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_6_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x1301260A), SH_UNT_EX_6_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_6_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x1301270A), SH_UNT_EX_6_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_7_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x13012A0A), SH_UNT_EX_7_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_7_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x13012B0A), SH_UNT_EX_7_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_8_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x1401260A), SH_UNT_EX_8_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_8_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x1401270A), SH_UNT_EX_8_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_9_CHTMLBS0_HTM_IMA_STATUS                            , RULL(0x14012A0A), SH_UNT_EX_9_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_9_CHTMLBS1_HTM_IMA_STATUS                            , RULL(0x14012B0A), SH_UNT_EX_9_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_CHTMLBS0_HTM_IMA_STATUS                              , RULL(0x1001260A), SH_UNT_EX_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_CHTMLBS1_HTM_IMA_STATUS                              , RULL(0x1001270A), SH_UNT_EX_CHTMLBS1,
       SH_ACS_SCOM_RO   );

REG64( EQ_HTM_LAST                                             , RULL(0x10012A03), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012B03, 10012603, 10012703,
REG64( EQ_0_HTM_LAST                                           , RULL(0x10012A03), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012B03, 10012603, 10012703,
REG64( EQ_1_HTM_LAST                                           , RULL(0x11012A03), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012B03, 11012603, 11012703,
REG64( EQ_2_HTM_LAST                                           , RULL(0x12012A03), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012B03, 12012603, 12012703,
REG64( EQ_3_HTM_LAST                                           , RULL(0x13012A03), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012B03, 13012603, 13012703,
REG64( EQ_4_HTM_LAST                                           , RULL(0x14012A03), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012B03, 14012603, 14012703,
REG64( EQ_5_HTM_LAST                                           , RULL(0x15012A03), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012B03, 15012603, 15012703,
REG64( EX_0_CHTMLBS0_HTM_LAST                                  , RULL(0x10012603), SH_UNT_EX_0_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_0_CHTMLBS1_HTM_LAST                                  , RULL(0x10012703), SH_UNT_EX_0_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_10_CHTMLBS0_HTM_LAST                                 , RULL(0x15012603), SH_UNT_EX_10_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_10_CHTMLBS1_HTM_LAST                                 , RULL(0x15012703), SH_UNT_EX_10_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_11_CHTMLBS0_HTM_LAST                                 , RULL(0x15012A03), SH_UNT_EX_11_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_11_CHTMLBS1_HTM_LAST                                 , RULL(0x15012B03), SH_UNT_EX_11_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_1_CHTMLBS0_HTM_LAST                                  , RULL(0x10012A03), SH_UNT_EX_1_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_1_CHTMLBS1_HTM_LAST                                  , RULL(0x10012B03), SH_UNT_EX_1_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_2_CHTMLBS0_HTM_LAST                                  , RULL(0x11012603), SH_UNT_EX_2_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_2_CHTMLBS1_HTM_LAST                                  , RULL(0x11012703), SH_UNT_EX_2_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_3_CHTMLBS0_HTM_LAST                                  , RULL(0x11012A03), SH_UNT_EX_3_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_3_CHTMLBS1_HTM_LAST                                  , RULL(0x11012B03), SH_UNT_EX_3_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_4_CHTMLBS0_HTM_LAST                                  , RULL(0x12012603), SH_UNT_EX_4_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_4_CHTMLBS1_HTM_LAST                                  , RULL(0x12012703), SH_UNT_EX_4_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_5_CHTMLBS0_HTM_LAST                                  , RULL(0x12012A03), SH_UNT_EX_5_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_5_CHTMLBS1_HTM_LAST                                  , RULL(0x12012B03), SH_UNT_EX_5_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_6_CHTMLBS0_HTM_LAST                                  , RULL(0x13012603), SH_UNT_EX_6_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_6_CHTMLBS1_HTM_LAST                                  , RULL(0x13012703), SH_UNT_EX_6_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_7_CHTMLBS0_HTM_LAST                                  , RULL(0x13012A03), SH_UNT_EX_7_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_7_CHTMLBS1_HTM_LAST                                  , RULL(0x13012B03), SH_UNT_EX_7_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_8_CHTMLBS0_HTM_LAST                                  , RULL(0x14012603), SH_UNT_EX_8_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_8_CHTMLBS1_HTM_LAST                                  , RULL(0x14012703), SH_UNT_EX_8_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_9_CHTMLBS0_HTM_LAST                                  , RULL(0x14012A03), SH_UNT_EX_9_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_9_CHTMLBS1_HTM_LAST                                  , RULL(0x14012B03), SH_UNT_EX_9_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_CHTMLBS0_HTM_LAST                                    , RULL(0x10012603), SH_UNT_EX_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_CHTMLBS1_HTM_LAST                                    , RULL(0x10012703), SH_UNT_EX_CHTMLBS1,
       SH_ACS_SCOM_RO   );

REG64( EQ_HTM_MEM                                              , RULL(0x10012A01), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B01, 10012601, 10012701,
REG64( EQ_0_HTM_MEM                                            , RULL(0x10012A01), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B01, 10012601, 10012701,
REG64( EQ_1_HTM_MEM                                            , RULL(0x11012A01), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012B01, 11012601, 11012701,
REG64( EQ_2_HTM_MEM                                            , RULL(0x12012A01), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012B01, 12012601, 12012701,
REG64( EQ_3_HTM_MEM                                            , RULL(0x13012A01), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012B01, 13012601, 13012701,
REG64( EQ_4_HTM_MEM                                            , RULL(0x14012A01), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012B01, 14012601, 14012701,
REG64( EQ_5_HTM_MEM                                            , RULL(0x15012A01), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012B01, 15012601, 15012701,
REG64( EX_0_CHTMLBS0_HTM_MEM                                   , RULL(0x10012601), SH_UNT_EX_0_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_0_CHTMLBS1_HTM_MEM                                   , RULL(0x10012701), SH_UNT_EX_0_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS0_HTM_MEM                                  , RULL(0x15012601), SH_UNT_EX_10_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS1_HTM_MEM                                  , RULL(0x15012701), SH_UNT_EX_10_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS0_HTM_MEM                                  , RULL(0x15012A01), SH_UNT_EX_11_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS1_HTM_MEM                                  , RULL(0x15012B01), SH_UNT_EX_11_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS0_HTM_MEM                                   , RULL(0x10012A01), SH_UNT_EX_1_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS1_HTM_MEM                                   , RULL(0x10012B01), SH_UNT_EX_1_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS0_HTM_MEM                                   , RULL(0x11012601), SH_UNT_EX_2_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS1_HTM_MEM                                   , RULL(0x11012701), SH_UNT_EX_2_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS0_HTM_MEM                                   , RULL(0x11012A01), SH_UNT_EX_3_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS1_HTM_MEM                                   , RULL(0x11012B01), SH_UNT_EX_3_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS0_HTM_MEM                                   , RULL(0x12012601), SH_UNT_EX_4_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS1_HTM_MEM                                   , RULL(0x12012701), SH_UNT_EX_4_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS0_HTM_MEM                                   , RULL(0x12012A01), SH_UNT_EX_5_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS1_HTM_MEM                                   , RULL(0x12012B01), SH_UNT_EX_5_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS0_HTM_MEM                                   , RULL(0x13012601), SH_UNT_EX_6_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS1_HTM_MEM                                   , RULL(0x13012701), SH_UNT_EX_6_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS0_HTM_MEM                                   , RULL(0x13012A01), SH_UNT_EX_7_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS1_HTM_MEM                                   , RULL(0x13012B01), SH_UNT_EX_7_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS0_HTM_MEM                                   , RULL(0x14012601), SH_UNT_EX_8_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS1_HTM_MEM                                   , RULL(0x14012701), SH_UNT_EX_8_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS0_HTM_MEM                                   , RULL(0x14012A01), SH_UNT_EX_9_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS1_HTM_MEM                                   , RULL(0x14012B01), SH_UNT_EX_9_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS0_HTM_MEM                                     , RULL(0x10012601), SH_UNT_EX_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS1_HTM_MEM                                     , RULL(0x10012701), SH_UNT_EX_CHTMLBS1,
       SH_ACS_SCOM_RW   );

REG64( EQ_HTM_MODE                                             , RULL(0x10012A00), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B00, 10012600, 10012700,
REG64( EQ_0_HTM_MODE                                           , RULL(0x10012A00), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B00, 10012600, 10012700,
REG64( EQ_1_HTM_MODE                                           , RULL(0x11012A00), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012B00, 11012600, 11012700,
REG64( EQ_2_HTM_MODE                                           , RULL(0x12012A00), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012B00, 12012600, 12012700,
REG64( EQ_3_HTM_MODE                                           , RULL(0x13012A00), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012B00, 13012600, 13012700,
REG64( EQ_4_HTM_MODE                                           , RULL(0x14012A00), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012B00, 14012600, 14012700,
REG64( EQ_5_HTM_MODE                                           , RULL(0x15012A00), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012B00, 15012600, 15012700,
REG64( EX_0_CHTMLBS0_HTM_MODE                                  , RULL(0x10012600), SH_UNT_EX_0_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_0_CHTMLBS1_HTM_MODE                                  , RULL(0x10012700), SH_UNT_EX_0_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS0_HTM_MODE                                 , RULL(0x15012600), SH_UNT_EX_10_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS1_HTM_MODE                                 , RULL(0x15012700), SH_UNT_EX_10_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS0_HTM_MODE                                 , RULL(0x15012A00), SH_UNT_EX_11_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS1_HTM_MODE                                 , RULL(0x15012B00), SH_UNT_EX_11_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS0_HTM_MODE                                  , RULL(0x10012A00), SH_UNT_EX_1_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS1_HTM_MODE                                  , RULL(0x10012B00), SH_UNT_EX_1_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS0_HTM_MODE                                  , RULL(0x11012600), SH_UNT_EX_2_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS1_HTM_MODE                                  , RULL(0x11012700), SH_UNT_EX_2_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS0_HTM_MODE                                  , RULL(0x11012A00), SH_UNT_EX_3_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS1_HTM_MODE                                  , RULL(0x11012B00), SH_UNT_EX_3_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS0_HTM_MODE                                  , RULL(0x12012600), SH_UNT_EX_4_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS1_HTM_MODE                                  , RULL(0x12012700), SH_UNT_EX_4_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS0_HTM_MODE                                  , RULL(0x12012A00), SH_UNT_EX_5_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS1_HTM_MODE                                  , RULL(0x12012B00), SH_UNT_EX_5_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS0_HTM_MODE                                  , RULL(0x13012600), SH_UNT_EX_6_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS1_HTM_MODE                                  , RULL(0x13012700), SH_UNT_EX_6_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS0_HTM_MODE                                  , RULL(0x13012A00), SH_UNT_EX_7_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS1_HTM_MODE                                  , RULL(0x13012B00), SH_UNT_EX_7_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS0_HTM_MODE                                  , RULL(0x14012600), SH_UNT_EX_8_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS1_HTM_MODE                                  , RULL(0x14012700), SH_UNT_EX_8_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS0_HTM_MODE                                  , RULL(0x14012A00), SH_UNT_EX_9_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS1_HTM_MODE                                  , RULL(0x14012B00), SH_UNT_EX_9_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS0_HTM_MODE                                    , RULL(0x10012600), SH_UNT_EX_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS1_HTM_MODE                                    , RULL(0x10012700), SH_UNT_EX_CHTMLBS1,
       SH_ACS_SCOM_RW   );

REG64( EQ_HTM_STAT                                             , RULL(0x10012A02), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012B02, 10012602, 10012702,
REG64( EQ_0_HTM_STAT                                           , RULL(0x10012A02), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012B02, 10012602, 10012702,
REG64( EQ_1_HTM_STAT                                           , RULL(0x11012A02), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012B02, 11012602, 11012702,
REG64( EQ_2_HTM_STAT                                           , RULL(0x12012A02), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012B02, 12012602, 12012702,
REG64( EQ_3_HTM_STAT                                           , RULL(0x13012A02), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012B02, 13012602, 13012702,
REG64( EQ_4_HTM_STAT                                           , RULL(0x14012A02), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012B02, 14012602, 14012702,
REG64( EQ_5_HTM_STAT                                           , RULL(0x15012A02), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012B02, 15012602, 15012702,
REG64( EX_0_CHTMLBS0_HTM_STAT                                  , RULL(0x10012602), SH_UNT_EX_0_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_0_CHTMLBS1_HTM_STAT                                  , RULL(0x10012702), SH_UNT_EX_0_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_10_CHTMLBS0_HTM_STAT                                 , RULL(0x15012602), SH_UNT_EX_10_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_10_CHTMLBS1_HTM_STAT                                 , RULL(0x15012702), SH_UNT_EX_10_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_11_CHTMLBS0_HTM_STAT                                 , RULL(0x15012A02), SH_UNT_EX_11_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_11_CHTMLBS1_HTM_STAT                                 , RULL(0x15012B02), SH_UNT_EX_11_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_1_CHTMLBS0_HTM_STAT                                  , RULL(0x10012A02), SH_UNT_EX_1_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_1_CHTMLBS1_HTM_STAT                                  , RULL(0x10012B02), SH_UNT_EX_1_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_2_CHTMLBS0_HTM_STAT                                  , RULL(0x11012602), SH_UNT_EX_2_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_2_CHTMLBS1_HTM_STAT                                  , RULL(0x11012702), SH_UNT_EX_2_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_3_CHTMLBS0_HTM_STAT                                  , RULL(0x11012A02), SH_UNT_EX_3_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_3_CHTMLBS1_HTM_STAT                                  , RULL(0x11012B02), SH_UNT_EX_3_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_4_CHTMLBS0_HTM_STAT                                  , RULL(0x12012602), SH_UNT_EX_4_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_4_CHTMLBS1_HTM_STAT                                  , RULL(0x12012702), SH_UNT_EX_4_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_5_CHTMLBS0_HTM_STAT                                  , RULL(0x12012A02), SH_UNT_EX_5_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_5_CHTMLBS1_HTM_STAT                                  , RULL(0x12012B02), SH_UNT_EX_5_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_6_CHTMLBS0_HTM_STAT                                  , RULL(0x13012602), SH_UNT_EX_6_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_6_CHTMLBS1_HTM_STAT                                  , RULL(0x13012702), SH_UNT_EX_6_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_7_CHTMLBS0_HTM_STAT                                  , RULL(0x13012A02), SH_UNT_EX_7_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_7_CHTMLBS1_HTM_STAT                                  , RULL(0x13012B02), SH_UNT_EX_7_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_8_CHTMLBS0_HTM_STAT                                  , RULL(0x14012602), SH_UNT_EX_8_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_8_CHTMLBS1_HTM_STAT                                  , RULL(0x14012702), SH_UNT_EX_8_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_9_CHTMLBS0_HTM_STAT                                  , RULL(0x14012A02), SH_UNT_EX_9_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_9_CHTMLBS1_HTM_STAT                                  , RULL(0x14012B02), SH_UNT_EX_9_CHTMLBS1,
       SH_ACS_SCOM_RO   );
REG64( EX_CHTMLBS0_HTM_STAT                                    , RULL(0x10012602), SH_UNT_EX_CHTMLBS0,
       SH_ACS_SCOM_RO   );
REG64( EX_CHTMLBS1_HTM_STAT                                    , RULL(0x10012702), SH_UNT_EX_CHTMLBS1,
       SH_ACS_SCOM_RO   );

REG64( EQ_HTM_TRIG                                             , RULL(0x10012A04), SH_UNT_EQ       ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B04, 10012604, 10012704,
REG64( EQ_0_HTM_TRIG                                           , RULL(0x10012A04), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 10012B04, 10012604, 10012704,
REG64( EQ_1_HTM_TRIG                                           , RULL(0x11012A04), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 11012B04, 11012604, 11012704,
REG64( EQ_2_HTM_TRIG                                           , RULL(0x12012A04), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 12012B04, 12012604, 12012704,
REG64( EQ_3_HTM_TRIG                                           , RULL(0x13012A04), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 13012B04, 13012604, 13012704,
REG64( EQ_4_HTM_TRIG                                           , RULL(0x14012A04), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 14012B04, 14012604, 14012704,
REG64( EQ_5_HTM_TRIG                                           , RULL(0x15012A04), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 15012B04, 15012604, 15012704,
REG64( EX_0_CHTMLBS0_HTM_TRIG                                  , RULL(0x10012604), SH_UNT_EX_0_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_0_CHTMLBS1_HTM_TRIG                                  , RULL(0x10012704), SH_UNT_EX_0_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS0_HTM_TRIG                                 , RULL(0x15012604), SH_UNT_EX_10_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_10_CHTMLBS1_HTM_TRIG                                 , RULL(0x15012704), SH_UNT_EX_10_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS0_HTM_TRIG                                 , RULL(0x15012A04), SH_UNT_EX_11_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_11_CHTMLBS1_HTM_TRIG                                 , RULL(0x15012B04), SH_UNT_EX_11_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS0_HTM_TRIG                                  , RULL(0x10012A04), SH_UNT_EX_1_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_1_CHTMLBS1_HTM_TRIG                                  , RULL(0x10012B04), SH_UNT_EX_1_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS0_HTM_TRIG                                  , RULL(0x11012604), SH_UNT_EX_2_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_2_CHTMLBS1_HTM_TRIG                                  , RULL(0x11012704), SH_UNT_EX_2_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS0_HTM_TRIG                                  , RULL(0x11012A04), SH_UNT_EX_3_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_3_CHTMLBS1_HTM_TRIG                                  , RULL(0x11012B04), SH_UNT_EX_3_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS0_HTM_TRIG                                  , RULL(0x12012604), SH_UNT_EX_4_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_4_CHTMLBS1_HTM_TRIG                                  , RULL(0x12012704), SH_UNT_EX_4_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS0_HTM_TRIG                                  , RULL(0x12012A04), SH_UNT_EX_5_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_5_CHTMLBS1_HTM_TRIG                                  , RULL(0x12012B04), SH_UNT_EX_5_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS0_HTM_TRIG                                  , RULL(0x13012604), SH_UNT_EX_6_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_6_CHTMLBS1_HTM_TRIG                                  , RULL(0x13012704), SH_UNT_EX_6_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS0_HTM_TRIG                                  , RULL(0x13012A04), SH_UNT_EX_7_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_7_CHTMLBS1_HTM_TRIG                                  , RULL(0x13012B04), SH_UNT_EX_7_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS0_HTM_TRIG                                  , RULL(0x14012604), SH_UNT_EX_8_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_8_CHTMLBS1_HTM_TRIG                                  , RULL(0x14012704), SH_UNT_EX_8_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS0_HTM_TRIG                                  , RULL(0x14012A04), SH_UNT_EX_9_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_9_CHTMLBS1_HTM_TRIG                                  , RULL(0x14012B04), SH_UNT_EX_9_CHTMLBS1,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS0_HTM_TRIG                                    , RULL(0x10012604), SH_UNT_EX_CHTMLBS0,
       SH_ACS_SCOM_RW   );
REG64( EX_CHTMLBS1_HTM_TRIG                                    , RULL(0x10012704), SH_UNT_EX_CHTMLBS1,
       SH_ACS_SCOM_RW   );

REG64( C_HV_STATE                                              , RULL(0x20010AA6), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_HV_STATE                                            , RULL(0x20010AA6), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_HV_STATE                                            , RULL(0x21010AA6), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_HV_STATE                                            , RULL(0x22010AA6), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_HV_STATE                                            , RULL(0x23010AA6), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_HV_STATE                                            , RULL(0x24010AA6), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_HV_STATE                                            , RULL(0x25010AA6), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_HV_STATE                                            , RULL(0x26010AA6), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_HV_STATE                                            , RULL(0x27010AA6), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_HV_STATE                                            , RULL(0x28010AA6), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_HV_STATE                                            , RULL(0x29010AA6), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_HV_STATE                                           , RULL(0x2A010AA6), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_HV_STATE                                           , RULL(0x2B010AA6), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_HV_STATE                                           , RULL(0x2C010AA6), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_HV_STATE                                           , RULL(0x2D010AA6), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_HV_STATE                                           , RULL(0x2E010AA6), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_HV_STATE                                           , RULL(0x2F010AA6), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_HV_STATE                                           , RULL(0x30010AA6), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_HV_STATE                                           , RULL(0x31010AA6), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_HV_STATE                                           , RULL(0x32010AA6), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_HV_STATE                                           , RULL(0x33010AA6), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_HV_STATE                                           , RULL(0x34010AA6), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_HV_STATE                                           , RULL(0x35010AA6), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_HV_STATE                                           , RULL(0x36010AA6), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_HV_STATE                                           , RULL(0x37010AA6), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_0_L2_HV_STATE                                        , RULL(0x20010AA6), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 21010AA6,
REG64( EX_10_L2_HV_STATE                                       , RULL(0x34010AA6), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 35010AA6,
REG64( EX_11_L2_HV_STATE                                       , RULL(0x36010AA6), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 37010AA6,
REG64( EX_1_L2_HV_STATE                                        , RULL(0x22010AA6), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 23010AA6,
REG64( EX_2_L2_HV_STATE                                        , RULL(0x24010AA6), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 25010AA6,
REG64( EX_3_L2_HV_STATE                                        , RULL(0x26010AA6), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 27010AA6,
REG64( EX_4_L2_HV_STATE                                        , RULL(0x28010AA6), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 29010AA6,
REG64( EX_5_L2_HV_STATE                                        , RULL(0x2A010AA6), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B010AA6,
REG64( EX_6_L2_HV_STATE                                        , RULL(0x2C010AA6), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D010AA6,
REG64( EX_7_L2_HV_STATE                                        , RULL(0x2E010AA6), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F010AA6,
REG64( EX_8_L2_HV_STATE                                        , RULL(0x30010AA6), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 31010AA6,
REG64( EX_9_L2_HV_STATE                                        , RULL(0x32010AA6), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 33010AA6,
REG64( EX_L2_HV_STATE                                          , RULL(0x20010AA6), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RO   ); //DUPS: 21010AA6,

REG64( C_IMA_EVENT_MASK                                        , RULL(0x20010AA8), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_IMA_EVENT_MASK                                      , RULL(0x20010AA8), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_IMA_EVENT_MASK                                      , RULL(0x21010AA8), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_IMA_EVENT_MASK                                      , RULL(0x22010AA8), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_IMA_EVENT_MASK                                      , RULL(0x23010AA8), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_IMA_EVENT_MASK                                      , RULL(0x24010AA8), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_IMA_EVENT_MASK                                      , RULL(0x25010AA8), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_IMA_EVENT_MASK                                      , RULL(0x26010AA8), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_IMA_EVENT_MASK                                      , RULL(0x27010AA8), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_IMA_EVENT_MASK                                      , RULL(0x28010AA8), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_IMA_EVENT_MASK                                      , RULL(0x29010AA8), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_IMA_EVENT_MASK                                     , RULL(0x2A010AA8), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_IMA_EVENT_MASK                                     , RULL(0x2B010AA8), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_IMA_EVENT_MASK                                     , RULL(0x2C010AA8), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_IMA_EVENT_MASK                                     , RULL(0x2D010AA8), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_IMA_EVENT_MASK                                     , RULL(0x2E010AA8), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_IMA_EVENT_MASK                                     , RULL(0x2F010AA8), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_IMA_EVENT_MASK                                     , RULL(0x30010AA8), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_IMA_EVENT_MASK                                     , RULL(0x31010AA8), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_IMA_EVENT_MASK                                     , RULL(0x32010AA8), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_IMA_EVENT_MASK                                     , RULL(0x33010AA8), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_IMA_EVENT_MASK                                     , RULL(0x34010AA8), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_IMA_EVENT_MASK                                     , RULL(0x35010AA8), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_IMA_EVENT_MASK                                     , RULL(0x36010AA8), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_IMA_EVENT_MASK                                     , RULL(0x37010AA8), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_IMA_EVENT_MASK                                       , RULL(0x20010AA8), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AA8,
REG64( EX_0_IMA_EVENT_MASK                                     , RULL(0x20010AA8), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AA8,
REG64( EX_1_IMA_EVENT_MASK                                     , RULL(0x22010AA8), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010AA8,
REG64( EX_2_IMA_EVENT_MASK                                     , RULL(0x24010AA8), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010AA8,
REG64( EX_3_IMA_EVENT_MASK                                     , RULL(0x26010AA8), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010AA8,
REG64( EX_4_IMA_EVENT_MASK                                     , RULL(0x28010AA8), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010AA8,
REG64( EX_5_IMA_EVENT_MASK                                     , RULL(0x2A010AA8), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010AA8,
REG64( EX_6_IMA_EVENT_MASK                                     , RULL(0x2C010AA8), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010AA8,
REG64( EX_7_IMA_EVENT_MASK                                     , RULL(0x2E010AA8), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010AA8,
REG64( EX_8_IMA_EVENT_MASK                                     , RULL(0x30010AA8), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010AA8,
REG64( EX_9_IMA_EVENT_MASK                                     , RULL(0x32010AA8), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010AA8,
REG64( EX_10_IMA_EVENT_MASK                                    , RULL(0x34010AA8), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010AA8,
REG64( EX_11_IMA_EVENT_MASK                                    , RULL(0x36010AA8), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010AA8,

REG64( C_IMA_TRACE                                             , RULL(0x20010AA9), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_IMA_TRACE                                           , RULL(0x20010AA9), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_IMA_TRACE                                           , RULL(0x21010AA9), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_IMA_TRACE                                           , RULL(0x22010AA9), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_IMA_TRACE                                           , RULL(0x23010AA9), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_IMA_TRACE                                           , RULL(0x24010AA9), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_IMA_TRACE                                           , RULL(0x25010AA9), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_IMA_TRACE                                           , RULL(0x26010AA9), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_IMA_TRACE                                           , RULL(0x27010AA9), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_IMA_TRACE                                           , RULL(0x28010AA9), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_IMA_TRACE                                           , RULL(0x29010AA9), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_IMA_TRACE                                          , RULL(0x2A010AA9), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_IMA_TRACE                                          , RULL(0x2B010AA9), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_IMA_TRACE                                          , RULL(0x2C010AA9), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_IMA_TRACE                                          , RULL(0x2D010AA9), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_IMA_TRACE                                          , RULL(0x2E010AA9), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_IMA_TRACE                                          , RULL(0x2F010AA9), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_IMA_TRACE                                          , RULL(0x30010AA9), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_IMA_TRACE                                          , RULL(0x31010AA9), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_IMA_TRACE                                          , RULL(0x32010AA9), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_IMA_TRACE                                          , RULL(0x33010AA9), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_IMA_TRACE                                          , RULL(0x34010AA9), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_IMA_TRACE                                          , RULL(0x35010AA9), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_IMA_TRACE                                          , RULL(0x36010AA9), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_IMA_TRACE                                          , RULL(0x37010AA9), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_IMA_TRACE                                            , RULL(0x20010AA9), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AA9,
REG64( EX_0_IMA_TRACE                                          , RULL(0x20010AA9), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AA9,
REG64( EX_1_IMA_TRACE                                          , RULL(0x22010AA9), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010AA9,
REG64( EX_2_IMA_TRACE                                          , RULL(0x24010AA9), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010AA9,
REG64( EX_3_IMA_TRACE                                          , RULL(0x26010AA9), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010AA9,
REG64( EX_4_IMA_TRACE                                          , RULL(0x28010AA9), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010AA9,
REG64( EX_5_IMA_TRACE                                          , RULL(0x2A010AA9), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010AA9,
REG64( EX_6_IMA_TRACE                                          , RULL(0x2C010AA9), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010AA9,
REG64( EX_7_IMA_TRACE                                          , RULL(0x2E010AA9), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010AA9,
REG64( EX_8_IMA_TRACE                                          , RULL(0x30010AA9), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010AA9,
REG64( EX_9_IMA_TRACE                                          , RULL(0x32010AA9), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010AA9,
REG64( EX_10_IMA_TRACE                                         , RULL(0x34010AA9), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010AA9,
REG64( EX_11_IMA_TRACE                                         , RULL(0x36010AA9), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010AA9,

REG64( C_INJECT_REG                                            , RULL(0x20050011), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_INJECT_REG                                          , RULL(0x20050011), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_INJECT_REG                                          , RULL(0x21050011), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_INJECT_REG                                          , RULL(0x22050011), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_INJECT_REG                                          , RULL(0x23050011), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_INJECT_REG                                          , RULL(0x24050011), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_INJECT_REG                                          , RULL(0x25050011), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_INJECT_REG                                          , RULL(0x26050011), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_INJECT_REG                                          , RULL(0x27050011), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_INJECT_REG                                          , RULL(0x28050011), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_INJECT_REG                                          , RULL(0x29050011), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_INJECT_REG                                         , RULL(0x2A050011), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_INJECT_REG                                         , RULL(0x2B050011), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_INJECT_REG                                         , RULL(0x2C050011), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_INJECT_REG                                         , RULL(0x2D050011), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_INJECT_REG                                         , RULL(0x2E050011), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_INJECT_REG                                         , RULL(0x2F050011), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_INJECT_REG                                         , RULL(0x30050011), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_INJECT_REG                                         , RULL(0x31050011), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_INJECT_REG                                         , RULL(0x32050011), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_INJECT_REG                                         , RULL(0x33050011), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_INJECT_REG                                         , RULL(0x34050011), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_INJECT_REG                                         , RULL(0x35050011), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_INJECT_REG                                         , RULL(0x36050011), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_INJECT_REG                                         , RULL(0x37050011), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_INJECT_REG                                           , RULL(0x10050011), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_INJECT_REG                                         , RULL(0x10050011), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_INJECT_REG                                         , RULL(0x11050011), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_INJECT_REG                                         , RULL(0x12050011), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_INJECT_REG                                         , RULL(0x13050011), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_INJECT_REG                                         , RULL(0x14050011), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_INJECT_REG                                         , RULL(0x15050011), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_INJECT_REG                                           , RULL(0x20050011), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21050011,
REG64( EX_0_INJECT_REG                                         , RULL(0x20050011), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21050011,
REG64( EX_1_INJECT_REG                                         , RULL(0x22050011), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23050011,
REG64( EX_2_INJECT_REG                                         , RULL(0x24050011), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25050011,
REG64( EX_3_INJECT_REG                                         , RULL(0x26050011), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27050011,
REG64( EX_4_INJECT_REG                                         , RULL(0x28050011), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29050011,
REG64( EX_5_INJECT_REG                                         , RULL(0x2A050011), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B050011,
REG64( EX_6_INJECT_REG                                         , RULL(0x2C050011), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D050011,
REG64( EX_7_INJECT_REG                                         , RULL(0x2E050011), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F050011,
REG64( EX_8_INJECT_REG                                         , RULL(0x30050011), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31050011,
REG64( EX_9_INJECT_REG                                         , RULL(0x32050011), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33050011,
REG64( EX_10_INJECT_REG                                        , RULL(0x34050011), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35050011,
REG64( EX_11_INJECT_REG                                        , RULL(0x36050011), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37050011,

REG64( PEC_0_INJECT_REG                                        , RULL(0x0D050011), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_INJECT_REG                                        , RULL(0x0E050011), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_INJECT_REG                                        , RULL(0x0F050011), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( EQ_INJ_REG                                              , RULL(0x1001100D), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001140D,
REG64( EQ_0_INJ_REG                                            , RULL(0x1001100D), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001140D,
REG64( EQ_1_INJ_REG                                            , RULL(0x1101100D), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101140D,
REG64( EQ_2_INJ_REG                                            , RULL(0x1201100D), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201140D,
REG64( EQ_3_INJ_REG                                            , RULL(0x1301100D), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301140D,
REG64( EQ_4_INJ_REG                                            , RULL(0x1401100D), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401140D,
REG64( EQ_5_INJ_REG                                            , RULL(0x1501100D), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501140D,
REG64( EX_INJ_REG                                              , RULL(0x1001100D), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_INJ_REG                                            , RULL(0x1001100D), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_INJ_REG                                            , RULL(0x1001140D), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_INJ_REG                                            , RULL(0x1101100D), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_INJ_REG                                            , RULL(0x1101140D), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_INJ_REG                                            , RULL(0x1201100D), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_INJ_REG                                            , RULL(0x1201140D), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_INJ_REG                                            , RULL(0x1301100D), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_INJ_REG                                            , RULL(0x1301140D), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_INJ_REG                                            , RULL(0x1401100D), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_INJ_REG                                            , RULL(0x1401140D), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_INJ_REG                                           , RULL(0x1501100D), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_INJ_REG                                           , RULL(0x1501140D), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( PEC_0_STACK0_INTBAR_REG                                 , RULL(0x04010C53), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK1_INTBAR_REG                                 , RULL(0x04010C93), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK2_INTBAR_REG                                 , RULL(0x04010CD3), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK0_INTBAR_REG                                 , RULL(0x04011053), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK1_INTBAR_REG                                 , RULL(0x04011093), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK2_INTBAR_REG                                 , RULL(0x040110D3), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK0_INTBAR_REG                                 , RULL(0x04011453), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK1_INTBAR_REG                                 , RULL(0x04011493), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK2_INTBAR_REG                                 , RULL(0x040114D3), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_STACK0_INTBAR_REG                                   , RULL(0x04010C53), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_STACK1_INTBAR_REG                                   , RULL(0x04010C93), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_STACK2_INTBAR_REG                                   , RULL(0x04010CD3), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM      );

REG64( C_INV_ERATE                                             , RULL(0x20010ABA), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_INV_ERATE                                           , RULL(0x20010ABA), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_INV_ERATE                                           , RULL(0x21010ABA), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_INV_ERATE                                           , RULL(0x22010ABA), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_INV_ERATE                                           , RULL(0x23010ABA), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_INV_ERATE                                           , RULL(0x24010ABA), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_INV_ERATE                                           , RULL(0x25010ABA), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_INV_ERATE                                           , RULL(0x26010ABA), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_INV_ERATE                                           , RULL(0x27010ABA), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_INV_ERATE                                           , RULL(0x28010ABA), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_INV_ERATE                                           , RULL(0x29010ABA), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_INV_ERATE                                          , RULL(0x2A010ABA), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_INV_ERATE                                          , RULL(0x2B010ABA), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_INV_ERATE                                          , RULL(0x2C010ABA), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_INV_ERATE                                          , RULL(0x2D010ABA), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_INV_ERATE                                          , RULL(0x2E010ABA), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_INV_ERATE                                          , RULL(0x2F010ABA), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_INV_ERATE                                          , RULL(0x30010ABA), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_INV_ERATE                                          , RULL(0x31010ABA), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_INV_ERATE                                          , RULL(0x32010ABA), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_INV_ERATE                                          , RULL(0x33010ABA), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_INV_ERATE                                          , RULL(0x34010ABA), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_INV_ERATE                                          , RULL(0x35010ABA), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_INV_ERATE                                          , RULL(0x36010ABA), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_INV_ERATE                                          , RULL(0x37010ABA), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_INV_ERATE                                       , RULL(0x20010ABA), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010ABA,
REG64( EX_10_L2_INV_ERATE                                      , RULL(0x34010ABA), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010ABA,
REG64( EX_11_L2_INV_ERATE                                      , RULL(0x36010ABA), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010ABA,
REG64( EX_1_L2_INV_ERATE                                       , RULL(0x22010ABA), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010ABA,
REG64( EX_2_L2_INV_ERATE                                       , RULL(0x24010ABA), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010ABA,
REG64( EX_3_L2_INV_ERATE                                       , RULL(0x26010ABA), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010ABA,
REG64( EX_4_L2_INV_ERATE                                       , RULL(0x28010ABA), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010ABA,
REG64( EX_5_L2_INV_ERATE                                       , RULL(0x2A010ABA), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010ABA,
REG64( EX_6_L2_INV_ERATE                                       , RULL(0x2C010ABA), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010ABA,
REG64( EX_7_L2_INV_ERATE                                       , RULL(0x2E010ABA), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010ABA,
REG64( EX_8_L2_INV_ERATE                                       , RULL(0x30010ABA), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010ABA,
REG64( EX_9_L2_INV_ERATE                                       , RULL(0x32010ABA), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010ABA,
REG64( EX_L2_INV_ERATE                                         , RULL(0x20010ABA), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010ABA,

REG64( EQ_L3TRA0_TR0_TRACE_HI_DATA_REG                         , RULL(0x10010400), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_L3TRA0_TR0_TRACE_HI_DATA_REG                       , RULL(0x10010400), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_L3TRA0_TR0_TRACE_HI_DATA_REG                       , RULL(0x11010400), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_L3TRA0_TR0_TRACE_HI_DATA_REG                       , RULL(0x12010400), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_L3TRA0_TR0_TRACE_HI_DATA_REG                       , RULL(0x13010400), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_L3TRA0_TR0_TRACE_HI_DATA_REG                       , RULL(0x14010400), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_L3TRA0_TR0_TRACE_HI_DATA_REG                       , RULL(0x15010400), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_L3TRA0_TR0_TRACE_LO_DATA_REG                         , RULL(0x10010401), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_L3TRA0_TR0_TRACE_LO_DATA_REG                       , RULL(0x10010401), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_L3TRA0_TR0_TRACE_LO_DATA_REG                       , RULL(0x11010401), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_L3TRA0_TR0_TRACE_LO_DATA_REG                       , RULL(0x12010401), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_L3TRA0_TR0_TRACE_LO_DATA_REG                       , RULL(0x13010401), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_L3TRA0_TR0_TRACE_LO_DATA_REG                       , RULL(0x14010401), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_L3TRA0_TR0_TRACE_LO_DATA_REG                       , RULL(0x15010401), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_L3TRA0_TR0_TRACE_TRCTRL_CONFIG                       , RULL(0x10010402), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x10010402), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x11010402), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x12010402), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x13010402), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x14010402), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x15010402), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR0_TRACE_TRDATA_CONFIG_0                     , RULL(0x10010403), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x10010403), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x11010403), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x12010403), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x13010403), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x14010403), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x15010403), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR0_TRACE_TRDATA_CONFIG_1                     , RULL(0x10010404), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x10010404), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x11010404), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x12010404), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x13010404), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x14010404), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x15010404), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR0_TRACE_TRDATA_CONFIG_2                     , RULL(0x10010405), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x10010405), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x11010405), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x12010405), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x13010405), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x14010405), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x15010405), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR0_TRACE_TRDATA_CONFIG_3                     , RULL(0x10010406), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x10010406), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x11010406), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x12010406), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x13010406), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x14010406), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x15010406), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR0_TRACE_TRDATA_CONFIG_4                     , RULL(0x10010407), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x10010407), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x11010407), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x12010407), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x13010407), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x14010407), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x15010407), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR0_TRACE_TRDATA_CONFIG_5                     , RULL(0x10010408), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x10010408), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x11010408), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x12010408), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x13010408), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x14010408), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x15010408), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR0_TRACE_TRDATA_CONFIG_9                     , RULL(0x10010409), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x10010409), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x11010409), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x12010409), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x13010409), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x14010409), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x15010409), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR1_TRACE_HI_DATA_REG                         , RULL(0x10010440), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_L3TRA0_TR1_TRACE_HI_DATA_REG                       , RULL(0x10010440), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_L3TRA0_TR1_TRACE_HI_DATA_REG                       , RULL(0x11010440), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_L3TRA0_TR1_TRACE_HI_DATA_REG                       , RULL(0x12010440), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_L3TRA0_TR1_TRACE_HI_DATA_REG                       , RULL(0x13010440), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_L3TRA0_TR1_TRACE_HI_DATA_REG                       , RULL(0x14010440), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_L3TRA0_TR1_TRACE_HI_DATA_REG                       , RULL(0x15010440), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_L3TRA0_TR1_TRACE_LO_DATA_REG                         , RULL(0x10010441), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_L3TRA0_TR1_TRACE_LO_DATA_REG                       , RULL(0x10010441), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_L3TRA0_TR1_TRACE_LO_DATA_REG                       , RULL(0x11010441), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_L3TRA0_TR1_TRACE_LO_DATA_REG                       , RULL(0x12010441), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_L3TRA0_TR1_TRACE_LO_DATA_REG                       , RULL(0x13010441), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_L3TRA0_TR1_TRACE_LO_DATA_REG                       , RULL(0x14010441), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_L3TRA0_TR1_TRACE_LO_DATA_REG                       , RULL(0x15010441), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_L3TRA0_TR1_TRACE_TRCTRL_CONFIG                       , RULL(0x10010442), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x10010442), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x11010442), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x12010442), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x13010442), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x14010442), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x15010442), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR1_TRACE_TRDATA_CONFIG_0                     , RULL(0x10010443), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x10010443), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x11010443), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x12010443), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x13010443), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x14010443), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x15010443), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR1_TRACE_TRDATA_CONFIG_1                     , RULL(0x10010444), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x10010444), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x11010444), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x12010444), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x13010444), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x14010444), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x15010444), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR1_TRACE_TRDATA_CONFIG_2                     , RULL(0x10010445), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x10010445), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x11010445), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x12010445), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x13010445), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x14010445), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x15010445), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR1_TRACE_TRDATA_CONFIG_3                     , RULL(0x10010446), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x10010446), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x11010446), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x12010446), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x13010446), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x14010446), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x15010446), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR1_TRACE_TRDATA_CONFIG_4                     , RULL(0x10010447), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x10010447), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x11010447), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x12010447), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x13010447), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x14010447), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x15010447), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR1_TRACE_TRDATA_CONFIG_5                     , RULL(0x10010448), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x10010448), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x11010448), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x12010448), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x13010448), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x14010448), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x15010448), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA0_TR1_TRACE_TRDATA_CONFIG_9                     , RULL(0x10010449), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA0_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x10010449), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA0_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x11010449), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA0_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x12010449), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA0_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x13010449), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA0_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x14010449), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA0_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x15010449), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR0_TRACE_HI_DATA_REG                         , RULL(0x10010480), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_L3TRA1_TR0_TRACE_HI_DATA_REG                       , RULL(0x10010480), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_L3TRA1_TR0_TRACE_HI_DATA_REG                       , RULL(0x11010480), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_L3TRA1_TR0_TRACE_HI_DATA_REG                       , RULL(0x12010480), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_L3TRA1_TR0_TRACE_HI_DATA_REG                       , RULL(0x13010480), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_L3TRA1_TR0_TRACE_HI_DATA_REG                       , RULL(0x14010480), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_L3TRA1_TR0_TRACE_HI_DATA_REG                       , RULL(0x15010480), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_L3TRA1_TR0_TRACE_LO_DATA_REG                         , RULL(0x10010481), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_L3TRA1_TR0_TRACE_LO_DATA_REG                       , RULL(0x10010481), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_L3TRA1_TR0_TRACE_LO_DATA_REG                       , RULL(0x11010481), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_L3TRA1_TR0_TRACE_LO_DATA_REG                       , RULL(0x12010481), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_L3TRA1_TR0_TRACE_LO_DATA_REG                       , RULL(0x13010481), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_L3TRA1_TR0_TRACE_LO_DATA_REG                       , RULL(0x14010481), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_L3TRA1_TR0_TRACE_LO_DATA_REG                       , RULL(0x15010481), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_L3TRA1_TR0_TRACE_TRCTRL_CONFIG                       , RULL(0x10010482), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x10010482), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x11010482), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x12010482), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x13010482), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x14010482), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x15010482), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR0_TRACE_TRDATA_CONFIG_0                     , RULL(0x10010483), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x10010483), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x11010483), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x12010483), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x13010483), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x14010483), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x15010483), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR0_TRACE_TRDATA_CONFIG_1                     , RULL(0x10010484), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x10010484), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x11010484), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x12010484), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x13010484), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x14010484), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x15010484), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR0_TRACE_TRDATA_CONFIG_2                     , RULL(0x10010485), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x10010485), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x11010485), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x12010485), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x13010485), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x14010485), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x15010485), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR0_TRACE_TRDATA_CONFIG_3                     , RULL(0x10010486), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x10010486), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x11010486), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x12010486), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x13010486), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x14010486), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x15010486), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR0_TRACE_TRDATA_CONFIG_4                     , RULL(0x10010487), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x10010487), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x11010487), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x12010487), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x13010487), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x14010487), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x15010487), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR0_TRACE_TRDATA_CONFIG_5                     , RULL(0x10010488), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x10010488), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x11010488), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x12010488), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x13010488), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x14010488), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x15010488), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR0_TRACE_TRDATA_CONFIG_9                     , RULL(0x10010489), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x10010489), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x11010489), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x12010489), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x13010489), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x14010489), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x15010489), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR1_TRACE_HI_DATA_REG                         , RULL(0x100104C0), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_L3TRA1_TR1_TRACE_HI_DATA_REG                       , RULL(0x100104C0), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_L3TRA1_TR1_TRACE_HI_DATA_REG                       , RULL(0x110104C0), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_L3TRA1_TR1_TRACE_HI_DATA_REG                       , RULL(0x120104C0), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_L3TRA1_TR1_TRACE_HI_DATA_REG                       , RULL(0x130104C0), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_L3TRA1_TR1_TRACE_HI_DATA_REG                       , RULL(0x140104C0), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_L3TRA1_TR1_TRACE_HI_DATA_REG                       , RULL(0x150104C0), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_L3TRA1_TR1_TRACE_LO_DATA_REG                         , RULL(0x100104C1), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_L3TRA1_TR1_TRACE_LO_DATA_REG                       , RULL(0x100104C1), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_L3TRA1_TR1_TRACE_LO_DATA_REG                       , RULL(0x110104C1), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_L3TRA1_TR1_TRACE_LO_DATA_REG                       , RULL(0x120104C1), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_L3TRA1_TR1_TRACE_LO_DATA_REG                       , RULL(0x130104C1), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_L3TRA1_TR1_TRACE_LO_DATA_REG                       , RULL(0x140104C1), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_L3TRA1_TR1_TRACE_LO_DATA_REG                       , RULL(0x150104C1), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_L3TRA1_TR1_TRACE_TRCTRL_CONFIG                       , RULL(0x100104C2), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x100104C2), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x110104C2), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x120104C2), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x130104C2), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x140104C2), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x150104C2), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR1_TRACE_TRDATA_CONFIG_0                     , RULL(0x100104C3), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x100104C3), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x110104C3), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x120104C3), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x130104C3), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x140104C3), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x150104C3), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR1_TRACE_TRDATA_CONFIG_1                     , RULL(0x100104C4), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x100104C4), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x110104C4), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x120104C4), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x130104C4), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x140104C4), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x150104C4), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR1_TRACE_TRDATA_CONFIG_2                     , RULL(0x100104C5), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x100104C5), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x110104C5), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x120104C5), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x130104C5), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x140104C5), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x150104C5), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR1_TRACE_TRDATA_CONFIG_3                     , RULL(0x100104C6), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x100104C6), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x110104C6), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x120104C6), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x130104C6), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x140104C6), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x150104C6), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR1_TRACE_TRDATA_CONFIG_4                     , RULL(0x100104C7), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x100104C7), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x110104C7), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x120104C7), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x130104C7), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x140104C7), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x150104C7), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR1_TRACE_TRDATA_CONFIG_5                     , RULL(0x100104C8), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x100104C8), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x110104C8), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x120104C8), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x130104C8), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x140104C8), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x150104C8), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3TRA1_TR1_TRACE_TRDATA_CONFIG_9                     , RULL(0x100104C9), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_L3TRA1_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x100104C9), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_L3TRA1_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x110104C9), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_L3TRA1_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x120104C9), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_L3TRA1_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x130104C9), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_L3TRA1_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x140104C9), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_L3TRA1_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x150104C9), SH_UNT_EQ_5     , SH_ACS_SCOM      );

REG64( EQ_L3_ERR_RPT0_REG                                      , RULL(0x10011810), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C10,
REG64( EQ_0_L3_ERR_RPT0_REG                                    , RULL(0x10011810), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C10,
REG64( EQ_1_L3_ERR_RPT0_REG                                    , RULL(0x11011810), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C10,
REG64( EQ_2_L3_ERR_RPT0_REG                                    , RULL(0x12011810), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C10,
REG64( EQ_3_L3_ERR_RPT0_REG                                    , RULL(0x13011810), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C10,
REG64( EQ_4_L3_ERR_RPT0_REG                                    , RULL(0x14011810), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C10,
REG64( EQ_5_L3_ERR_RPT0_REG                                    , RULL(0x15011810), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C10,
REG64( EX_0_L3_L3_ERR_RPT0_REG                                 , RULL(0x10011810), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_L3_ERR_RPT0_REG                                , RULL(0x15011810), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_L3_ERR_RPT0_REG                                , RULL(0x15011C10), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_L3_ERR_RPT0_REG                                 , RULL(0x10011C10), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_L3_ERR_RPT0_REG                                 , RULL(0x11011810), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_L3_ERR_RPT0_REG                                 , RULL(0x11011C10), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_L3_ERR_RPT0_REG                                 , RULL(0x12011810), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_L3_ERR_RPT0_REG                                 , RULL(0x12011C10), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_L3_ERR_RPT0_REG                                 , RULL(0x13011810), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_L3_ERR_RPT0_REG                                 , RULL(0x13011C10), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_L3_ERR_RPT0_REG                                 , RULL(0x14011810), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_L3_ERR_RPT0_REG                                 , RULL(0x14011C10), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_L3_ERR_RPT0_REG                                   , RULL(0x10011810), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_L3_ERR_RPT1_REG                                      , RULL(0x10011817), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C17,
REG64( EQ_0_L3_ERR_RPT1_REG                                    , RULL(0x10011817), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C17,
REG64( EQ_1_L3_ERR_RPT1_REG                                    , RULL(0x11011817), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C17,
REG64( EQ_2_L3_ERR_RPT1_REG                                    , RULL(0x12011817), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C17,
REG64( EQ_3_L3_ERR_RPT1_REG                                    , RULL(0x13011817), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C17,
REG64( EQ_4_L3_ERR_RPT1_REG                                    , RULL(0x14011817), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C17,
REG64( EQ_5_L3_ERR_RPT1_REG                                    , RULL(0x15011817), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C17,
REG64( EX_0_L3_L3_ERR_RPT1_REG                                 , RULL(0x10011817), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_L3_ERR_RPT1_REG                                , RULL(0x15011817), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_L3_ERR_RPT1_REG                                , RULL(0x15011C17), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_L3_ERR_RPT1_REG                                 , RULL(0x10011C17), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_L3_ERR_RPT1_REG                                 , RULL(0x11011817), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_L3_ERR_RPT1_REG                                 , RULL(0x11011C17), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_L3_ERR_RPT1_REG                                 , RULL(0x12011817), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_L3_ERR_RPT1_REG                                 , RULL(0x12011C17), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_L3_ERR_RPT1_REG                                 , RULL(0x13011817), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_L3_ERR_RPT1_REG                                 , RULL(0x13011C17), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_L3_ERR_RPT1_REG                                 , RULL(0x14011817), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_L3_ERR_RPT1_REG                                 , RULL(0x14011C17), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_L3_ERR_RPT1_REG                                   , RULL(0x10011817), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_L3_RD_EPSILON_CFG_REG                                , RULL(0x10011829), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C29,
REG64( EQ_0_L3_RD_EPSILON_CFG_REG                              , RULL(0x10011829), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C29,
REG64( EQ_1_L3_RD_EPSILON_CFG_REG                              , RULL(0x11011829), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C29,
REG64( EQ_2_L3_RD_EPSILON_CFG_REG                              , RULL(0x12011829), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C29,
REG64( EQ_3_L3_RD_EPSILON_CFG_REG                              , RULL(0x13011829), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C29,
REG64( EQ_4_L3_RD_EPSILON_CFG_REG                              , RULL(0x14011829), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C29,
REG64( EQ_5_L3_RD_EPSILON_CFG_REG                              , RULL(0x15011829), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C29,
REG64( EX_L3_RD_EPSILON_CFG_REG                                , RULL(0x10011829), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_L3_RD_EPSILON_CFG_REG                              , RULL(0x10011829), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_L3_RD_EPSILON_CFG_REG                              , RULL(0x10011C29), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_L3_RD_EPSILON_CFG_REG                              , RULL(0x11011829), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_L3_RD_EPSILON_CFG_REG                              , RULL(0x11011C29), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_L3_RD_EPSILON_CFG_REG                              , RULL(0x12011829), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_L3_RD_EPSILON_CFG_REG                              , RULL(0x12011C29), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_L3_RD_EPSILON_CFG_REG                              , RULL(0x13011829), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_L3_RD_EPSILON_CFG_REG                              , RULL(0x13011C29), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_L3_RD_EPSILON_CFG_REG                              , RULL(0x14011829), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_L3_RD_EPSILON_CFG_REG                              , RULL(0x14011C29), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_L3_RD_EPSILON_CFG_REG                             , RULL(0x15011829), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_L3_RD_EPSILON_CFG_REG                             , RULL(0x15011C29), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_L3_RTIM_PERIOD_MONITOR                               , RULL(0x10011812), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C12,
REG64( EQ_0_L3_RTIM_PERIOD_MONITOR                             , RULL(0x10011812), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C12,
REG64( EQ_1_L3_RTIM_PERIOD_MONITOR                             , RULL(0x11011812), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C12,
REG64( EQ_2_L3_RTIM_PERIOD_MONITOR                             , RULL(0x12011812), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C12,
REG64( EQ_3_L3_RTIM_PERIOD_MONITOR                             , RULL(0x13011812), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C12,
REG64( EQ_4_L3_RTIM_PERIOD_MONITOR                             , RULL(0x14011812), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C12,
REG64( EQ_5_L3_RTIM_PERIOD_MONITOR                             , RULL(0x15011812), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C12,
REG64( EX_0_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x10011812), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_L3_RTIM_PERIOD_MONITOR                         , RULL(0x15011812), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_L3_RTIM_PERIOD_MONITOR                         , RULL(0x15011C12), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x10011C12), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x11011812), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x11011C12), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x12011812), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x12011C12), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x13011812), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x13011C12), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x14011812), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_L3_RTIM_PERIOD_MONITOR                          , RULL(0x14011C12), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_L3_RTIM_PERIOD_MONITOR                            , RULL(0x10011812), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_L3_WR_EPSILON_CFG_REG                                , RULL(0x1001182A), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C2A,
REG64( EQ_0_L3_WR_EPSILON_CFG_REG                              , RULL(0x1001182A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C2A,
REG64( EQ_1_L3_WR_EPSILON_CFG_REG                              , RULL(0x1101182A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C2A,
REG64( EQ_2_L3_WR_EPSILON_CFG_REG                              , RULL(0x1201182A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C2A,
REG64( EQ_3_L3_WR_EPSILON_CFG_REG                              , RULL(0x1301182A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C2A,
REG64( EQ_4_L3_WR_EPSILON_CFG_REG                              , RULL(0x1401182A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C2A,
REG64( EQ_5_L3_WR_EPSILON_CFG_REG                              , RULL(0x1501182A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C2A,
REG64( EX_0_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x1001182A), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_L3_WR_EPSILON_CFG_REG                          , RULL(0x1501182A), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_L3_WR_EPSILON_CFG_REG                          , RULL(0x15011C2A), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x10011C2A), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x1101182A), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x11011C2A), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x1201182A), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x12011C2A), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x1301182A), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x13011C2A), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x1401182A), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_L3_WR_EPSILON_CFG_REG                           , RULL(0x14011C2A), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_L3_WR_EPSILON_CFG_REG                             , RULL(0x1001182A), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_LINEDEL_TRIG_REG                                     , RULL(0x1001080D), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10010C0D,
REG64( EQ_0_LINEDEL_TRIG_REG                                   , RULL(0x1001080D), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10010C0D,
REG64( EQ_1_LINEDEL_TRIG_REG                                   , RULL(0x1101080D), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11010C0D,
REG64( EQ_2_LINEDEL_TRIG_REG                                   , RULL(0x1201080D), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12010C0D,
REG64( EQ_3_LINEDEL_TRIG_REG                                   , RULL(0x1301080D), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13010C0D,
REG64( EQ_4_LINEDEL_TRIG_REG                                   , RULL(0x1401080D), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14010C0D,
REG64( EQ_5_LINEDEL_TRIG_REG                                   , RULL(0x1501080D), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15010C0D,
REG64( EX_0_L2_LINEDEL_TRIG_REG                                , RULL(0x1001080D), SH_UNT_EX_0_L2  , SH_ACS_SCOM      );
REG64( EX_10_L2_LINEDEL_TRIG_REG                               , RULL(0x1501080D), SH_UNT_EX_10_L2 , SH_ACS_SCOM      );
REG64( EX_11_L2_LINEDEL_TRIG_REG                               , RULL(0x15010C0D), SH_UNT_EX_11_L2 , SH_ACS_SCOM      );
REG64( EX_1_L2_LINEDEL_TRIG_REG                                , RULL(0x10010C0D), SH_UNT_EX_1_L2  , SH_ACS_SCOM      );
REG64( EX_2_L2_LINEDEL_TRIG_REG                                , RULL(0x1101080D), SH_UNT_EX_2_L2  , SH_ACS_SCOM      );
REG64( EX_3_L2_LINEDEL_TRIG_REG                                , RULL(0x11010C0D), SH_UNT_EX_3_L2  , SH_ACS_SCOM      );
REG64( EX_4_L2_LINEDEL_TRIG_REG                                , RULL(0x1201080D), SH_UNT_EX_4_L2  , SH_ACS_SCOM      );
REG64( EX_5_L2_LINEDEL_TRIG_REG                                , RULL(0x12010C0D), SH_UNT_EX_5_L2  , SH_ACS_SCOM      );
REG64( EX_6_L2_LINEDEL_TRIG_REG                                , RULL(0x1301080D), SH_UNT_EX_6_L2  , SH_ACS_SCOM      );
REG64( EX_7_L2_LINEDEL_TRIG_REG                                , RULL(0x13010C0D), SH_UNT_EX_7_L2  , SH_ACS_SCOM      );
REG64( EX_8_L2_LINEDEL_TRIG_REG                                , RULL(0x1401080D), SH_UNT_EX_8_L2  , SH_ACS_SCOM      );
REG64( EX_9_L2_LINEDEL_TRIG_REG                                , RULL(0x14010C0D), SH_UNT_EX_9_L2  , SH_ACS_SCOM      );
REG64( EX_L2_LINEDEL_TRIG_REG                                  , RULL(0x1001080D), SH_UNT_EX_L2    , SH_ACS_SCOM      );

REG64( EQ_LINE_DELETED_MEMBERS_REG                             , RULL(0x10011815), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C15,
REG64( EQ_0_LINE_DELETED_MEMBERS_REG                           , RULL(0x10011815), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C15,
REG64( EQ_1_LINE_DELETED_MEMBERS_REG                           , RULL(0x11011815), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C15,
REG64( EQ_2_LINE_DELETED_MEMBERS_REG                           , RULL(0x12011815), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C15,
REG64( EQ_3_LINE_DELETED_MEMBERS_REG                           , RULL(0x13011815), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C15,
REG64( EQ_4_LINE_DELETED_MEMBERS_REG                           , RULL(0x14011815), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C15,
REG64( EQ_5_LINE_DELETED_MEMBERS_REG                           , RULL(0x15011815), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C15,
REG64( EX_0_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x10011815), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_LINE_DELETED_MEMBERS_REG                       , RULL(0x15011815), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_LINE_DELETED_MEMBERS_REG                       , RULL(0x15011C15), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x10011C15), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x11011815), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x11011C15), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x12011815), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x12011C15), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x13011815), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x13011C15), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x14011815), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_LINE_DELETED_MEMBERS_REG                        , RULL(0x14011C15), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_LINE_DELETED_MEMBERS_REG                          , RULL(0x10011815), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( C_LOCAL_FIR                                             , RULL(0x2004000A), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_LOCAL_FIR_AND                                         , RULL(0x2004000B), SH_UNT_C        , SH_ACS_SCOM1_AND );
REG64( C_LOCAL_FIR_OR                                          , RULL(0x2004000C), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_LOCAL_FIR                                           , RULL(0x2004000A), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_LOCAL_FIR_AND                                       , RULL(0x2004000B), SH_UNT_C_0      , SH_ACS_SCOM1_AND );
REG64( C_0_LOCAL_FIR_OR                                        , RULL(0x2004000C), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_LOCAL_FIR                                           , RULL(0x2104000A), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_LOCAL_FIR_AND                                       , RULL(0x2104000B), SH_UNT_C_1      , SH_ACS_SCOM1_AND );
REG64( C_1_LOCAL_FIR_OR                                        , RULL(0x2104000C), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_LOCAL_FIR                                           , RULL(0x2204000A), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_LOCAL_FIR_AND                                       , RULL(0x2204000B), SH_UNT_C_2      , SH_ACS_SCOM1_AND );
REG64( C_2_LOCAL_FIR_OR                                        , RULL(0x2204000C), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_LOCAL_FIR                                           , RULL(0x2304000A), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_LOCAL_FIR_AND                                       , RULL(0x2304000B), SH_UNT_C_3      , SH_ACS_SCOM1_AND );
REG64( C_3_LOCAL_FIR_OR                                        , RULL(0x2304000C), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_LOCAL_FIR                                           , RULL(0x2404000A), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_LOCAL_FIR_AND                                       , RULL(0x2404000B), SH_UNT_C_4      , SH_ACS_SCOM1_AND );
REG64( C_4_LOCAL_FIR_OR                                        , RULL(0x2404000C), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_LOCAL_FIR                                           , RULL(0x2504000A), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_LOCAL_FIR_AND                                       , RULL(0x2504000B), SH_UNT_C_5      , SH_ACS_SCOM1_AND );
REG64( C_5_LOCAL_FIR_OR                                        , RULL(0x2504000C), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_LOCAL_FIR                                           , RULL(0x2604000A), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_LOCAL_FIR_AND                                       , RULL(0x2604000B), SH_UNT_C_6      , SH_ACS_SCOM1_AND );
REG64( C_6_LOCAL_FIR_OR                                        , RULL(0x2604000C), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_LOCAL_FIR                                           , RULL(0x2704000A), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_LOCAL_FIR_AND                                       , RULL(0x2704000B), SH_UNT_C_7      , SH_ACS_SCOM1_AND );
REG64( C_7_LOCAL_FIR_OR                                        , RULL(0x2704000C), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_LOCAL_FIR                                           , RULL(0x2804000A), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_LOCAL_FIR_AND                                       , RULL(0x2804000B), SH_UNT_C_8      , SH_ACS_SCOM1_AND );
REG64( C_8_LOCAL_FIR_OR                                        , RULL(0x2804000C), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_LOCAL_FIR                                           , RULL(0x2904000A), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_LOCAL_FIR_AND                                       , RULL(0x2904000B), SH_UNT_C_9      , SH_ACS_SCOM1_AND );
REG64( C_9_LOCAL_FIR_OR                                        , RULL(0x2904000C), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_LOCAL_FIR                                          , RULL(0x2A04000A), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_LOCAL_FIR_AND                                      , RULL(0x2A04000B), SH_UNT_C_10     , SH_ACS_SCOM1_AND );
REG64( C_10_LOCAL_FIR_OR                                       , RULL(0x2A04000C), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_LOCAL_FIR                                          , RULL(0x2B04000A), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_LOCAL_FIR_AND                                      , RULL(0x2B04000B), SH_UNT_C_11     , SH_ACS_SCOM1_AND );
REG64( C_11_LOCAL_FIR_OR                                       , RULL(0x2B04000C), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_LOCAL_FIR                                          , RULL(0x2C04000A), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_LOCAL_FIR_AND                                      , RULL(0x2C04000B), SH_UNT_C_12     , SH_ACS_SCOM1_AND );
REG64( C_12_LOCAL_FIR_OR                                       , RULL(0x2C04000C), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_LOCAL_FIR                                          , RULL(0x2D04000A), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_LOCAL_FIR_AND                                      , RULL(0x2D04000B), SH_UNT_C_13     , SH_ACS_SCOM1_AND );
REG64( C_13_LOCAL_FIR_OR                                       , RULL(0x2D04000C), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_LOCAL_FIR                                          , RULL(0x2E04000A), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_LOCAL_FIR_AND                                      , RULL(0x2E04000B), SH_UNT_C_14     , SH_ACS_SCOM1_AND );
REG64( C_14_LOCAL_FIR_OR                                       , RULL(0x2E04000C), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_LOCAL_FIR                                          , RULL(0x2F04000A), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_LOCAL_FIR_AND                                      , RULL(0x2F04000B), SH_UNT_C_15     , SH_ACS_SCOM1_AND );
REG64( C_15_LOCAL_FIR_OR                                       , RULL(0x2F04000C), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_LOCAL_FIR                                          , RULL(0x3004000A), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_LOCAL_FIR_AND                                      , RULL(0x3004000B), SH_UNT_C_16     , SH_ACS_SCOM1_AND );
REG64( C_16_LOCAL_FIR_OR                                       , RULL(0x3004000C), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_LOCAL_FIR                                          , RULL(0x3104000A), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_LOCAL_FIR_AND                                      , RULL(0x3104000B), SH_UNT_C_17     , SH_ACS_SCOM1_AND );
REG64( C_17_LOCAL_FIR_OR                                       , RULL(0x3104000C), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_LOCAL_FIR                                          , RULL(0x3204000A), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_LOCAL_FIR_AND                                      , RULL(0x3204000B), SH_UNT_C_18     , SH_ACS_SCOM1_AND );
REG64( C_18_LOCAL_FIR_OR                                       , RULL(0x3204000C), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_LOCAL_FIR                                          , RULL(0x3304000A), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_LOCAL_FIR_AND                                      , RULL(0x3304000B), SH_UNT_C_19     , SH_ACS_SCOM1_AND );
REG64( C_19_LOCAL_FIR_OR                                       , RULL(0x3304000C), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_LOCAL_FIR                                          , RULL(0x3404000A), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_LOCAL_FIR_AND                                      , RULL(0x3404000B), SH_UNT_C_20     , SH_ACS_SCOM1_AND );
REG64( C_20_LOCAL_FIR_OR                                       , RULL(0x3404000C), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_LOCAL_FIR                                          , RULL(0x3504000A), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_LOCAL_FIR_AND                                      , RULL(0x3504000B), SH_UNT_C_21     , SH_ACS_SCOM1_AND );
REG64( C_21_LOCAL_FIR_OR                                       , RULL(0x3504000C), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_LOCAL_FIR                                          , RULL(0x3604000A), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_LOCAL_FIR_AND                                      , RULL(0x3604000B), SH_UNT_C_22     , SH_ACS_SCOM1_AND );
REG64( C_22_LOCAL_FIR_OR                                       , RULL(0x3604000C), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_LOCAL_FIR                                          , RULL(0x3704000A), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_LOCAL_FIR_AND                                      , RULL(0x3704000B), SH_UNT_C_23     , SH_ACS_SCOM1_AND );
REG64( C_23_LOCAL_FIR_OR                                       , RULL(0x3704000C), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EQ_LOCAL_FIR                                            , RULL(0x1004000A), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_LOCAL_FIR_AND                                        , RULL(0x1004000B), SH_UNT_EQ       , SH_ACS_SCOM1_AND );
REG64( EQ_LOCAL_FIR_OR                                         , RULL(0x1004000C), SH_UNT_EQ       , SH_ACS_SCOM2_OR  );
REG64( EQ_0_LOCAL_FIR                                          , RULL(0x1004000A), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_LOCAL_FIR_AND                                      , RULL(0x1004000B), SH_UNT_EQ_0     , SH_ACS_SCOM1_AND );
REG64( EQ_0_LOCAL_FIR_OR                                       , RULL(0x1004000C), SH_UNT_EQ_0     , SH_ACS_SCOM2_OR  );
REG64( EQ_1_LOCAL_FIR                                          , RULL(0x1104000A), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_LOCAL_FIR_AND                                      , RULL(0x1104000B), SH_UNT_EQ_1     , SH_ACS_SCOM1_AND );
REG64( EQ_1_LOCAL_FIR_OR                                       , RULL(0x1104000C), SH_UNT_EQ_1     , SH_ACS_SCOM2_OR  );
REG64( EQ_2_LOCAL_FIR                                          , RULL(0x1204000A), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_LOCAL_FIR_AND                                      , RULL(0x1204000B), SH_UNT_EQ_2     , SH_ACS_SCOM1_AND );
REG64( EQ_2_LOCAL_FIR_OR                                       , RULL(0x1204000C), SH_UNT_EQ_2     , SH_ACS_SCOM2_OR  );
REG64( EQ_3_LOCAL_FIR                                          , RULL(0x1304000A), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_LOCAL_FIR_AND                                      , RULL(0x1304000B), SH_UNT_EQ_3     , SH_ACS_SCOM1_AND );
REG64( EQ_3_LOCAL_FIR_OR                                       , RULL(0x1304000C), SH_UNT_EQ_3     , SH_ACS_SCOM2_OR  );
REG64( EQ_4_LOCAL_FIR                                          , RULL(0x1404000A), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_LOCAL_FIR_AND                                      , RULL(0x1404000B), SH_UNT_EQ_4     , SH_ACS_SCOM1_AND );
REG64( EQ_4_LOCAL_FIR_OR                                       , RULL(0x1404000C), SH_UNT_EQ_4     , SH_ACS_SCOM2_OR  );
REG64( EQ_5_LOCAL_FIR                                          , RULL(0x1504000A), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_LOCAL_FIR_AND                                      , RULL(0x1504000B), SH_UNT_EQ_5     , SH_ACS_SCOM1_AND );
REG64( EQ_5_LOCAL_FIR_OR                                       , RULL(0x1504000C), SH_UNT_EQ_5     , SH_ACS_SCOM2_OR  );
REG64( EX_LOCAL_FIR                                            , RULL(0x2004000A), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 2104000A,
REG64( EX_LOCAL_FIR_AND                                        , RULL(0x2004000B), SH_UNT_EX       ,
       SH_ACS_SCOM1_AND ); //DUPS: 2104000B,
REG64( EX_LOCAL_FIR_OR                                         , RULL(0x2004000C), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2104000C,
REG64( EX_0_LOCAL_FIR                                          , RULL(0x2004000A), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2104000A,
REG64( EX_0_LOCAL_FIR_AND                                      , RULL(0x2004000B), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2104000B,
REG64( EX_0_LOCAL_FIR_OR                                       , RULL(0x2004000C), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2104000C,
REG64( EX_1_LOCAL_FIR                                          , RULL(0x2204000A), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2304000A,
REG64( EX_1_LOCAL_FIR_AND                                      , RULL(0x2204000B), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2304000B,
REG64( EX_1_LOCAL_FIR_OR                                       , RULL(0x2204000C), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2304000C,
REG64( EX_2_LOCAL_FIR                                          , RULL(0x2404000A), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2504000A,
REG64( EX_2_LOCAL_FIR_AND                                      , RULL(0x2404000B), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2504000B,
REG64( EX_2_LOCAL_FIR_OR                                       , RULL(0x2404000C), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2504000C,
REG64( EX_3_LOCAL_FIR                                          , RULL(0x2604000A), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2704000A,
REG64( EX_3_LOCAL_FIR_AND                                      , RULL(0x2604000B), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2704000B,
REG64( EX_3_LOCAL_FIR_OR                                       , RULL(0x2604000C), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2704000C,
REG64( EX_4_LOCAL_FIR                                          , RULL(0x2804000A), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2904000A,
REG64( EX_4_LOCAL_FIR_AND                                      , RULL(0x2804000B), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2904000B,
REG64( EX_4_LOCAL_FIR_OR                                       , RULL(0x2804000C), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2904000C,
REG64( EX_5_LOCAL_FIR                                          , RULL(0x2A04000A), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B04000A,
REG64( EX_5_LOCAL_FIR_AND                                      , RULL(0x2A04000B), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2B04000B,
REG64( EX_5_LOCAL_FIR_OR                                       , RULL(0x2A04000C), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B04000C,
REG64( EX_6_LOCAL_FIR                                          , RULL(0x2C04000A), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D04000A,
REG64( EX_6_LOCAL_FIR_AND                                      , RULL(0x2C04000B), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2D04000B,
REG64( EX_6_LOCAL_FIR_OR                                       , RULL(0x2C04000C), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D04000C,
REG64( EX_7_LOCAL_FIR                                          , RULL(0x2E04000A), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F04000A,
REG64( EX_7_LOCAL_FIR_AND                                      , RULL(0x2E04000B), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2F04000B,
REG64( EX_7_LOCAL_FIR_OR                                       , RULL(0x2E04000C), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F04000C,
REG64( EX_8_LOCAL_FIR                                          , RULL(0x3004000A), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 3104000A,
REG64( EX_8_LOCAL_FIR_AND                                      , RULL(0x3004000B), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_AND ); //DUPS: 3104000B,
REG64( EX_8_LOCAL_FIR_OR                                       , RULL(0x3004000C), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 3104000C,
REG64( EX_9_LOCAL_FIR                                          , RULL(0x3204000A), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 3304000A,
REG64( EX_9_LOCAL_FIR_AND                                      , RULL(0x3204000B), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_AND ); //DUPS: 3304000B,
REG64( EX_9_LOCAL_FIR_OR                                       , RULL(0x3204000C), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 3304000C,
REG64( EX_10_LOCAL_FIR                                         , RULL(0x3404000A), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 3504000A,
REG64( EX_10_LOCAL_FIR_AND                                     , RULL(0x3404000B), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_AND ); //DUPS: 3504000B,
REG64( EX_10_LOCAL_FIR_OR                                      , RULL(0x3404000C), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 3504000C,
REG64( EX_11_LOCAL_FIR                                         , RULL(0x3604000A), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 3704000A,
REG64( EX_11_LOCAL_FIR_AND                                     , RULL(0x3604000B), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_AND ); //DUPS: 3704000B,
REG64( EX_11_LOCAL_FIR_OR                                      , RULL(0x3604000C), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 3704000C,

REG64( PEC_0_LOCAL_FIR                                         , RULL(0x0D04000A), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_0_LOCAL_FIR_AND                                     , RULL(0x0D04000B), SH_UNT_PEC_0    , SH_ACS_SCOM1_AND );
REG64( PEC_0_LOCAL_FIR_OR                                      , RULL(0x0D04000C), SH_UNT_PEC_0    , SH_ACS_SCOM2_OR  );
REG64( PEC_1_LOCAL_FIR                                         , RULL(0x0E04000A), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_1_LOCAL_FIR_AND                                     , RULL(0x0E04000B), SH_UNT_PEC_1    , SH_ACS_SCOM1_AND );
REG64( PEC_1_LOCAL_FIR_OR                                      , RULL(0x0E04000C), SH_UNT_PEC_1    , SH_ACS_SCOM2_OR  );
REG64( PEC_2_LOCAL_FIR                                         , RULL(0x0F04000A), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );
REG64( PEC_2_LOCAL_FIR_AND                                     , RULL(0x0F04000B), SH_UNT_PEC_2    , SH_ACS_SCOM1_AND );
REG64( PEC_2_LOCAL_FIR_OR                                      , RULL(0x0F04000C), SH_UNT_PEC_2    , SH_ACS_SCOM2_OR  );

REG64( C_LOCAL_FIR_ACTION0                                     , RULL(0x20040010), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_LOCAL_FIR_ACTION0                                   , RULL(0x20040010), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_LOCAL_FIR_ACTION0                                   , RULL(0x21040010), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_LOCAL_FIR_ACTION0                                   , RULL(0x22040010), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_LOCAL_FIR_ACTION0                                   , RULL(0x23040010), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_LOCAL_FIR_ACTION0                                   , RULL(0x24040010), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_LOCAL_FIR_ACTION0                                   , RULL(0x25040010), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_LOCAL_FIR_ACTION0                                   , RULL(0x26040010), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_LOCAL_FIR_ACTION0                                   , RULL(0x27040010), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_LOCAL_FIR_ACTION0                                   , RULL(0x28040010), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_LOCAL_FIR_ACTION0                                   , RULL(0x29040010), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_LOCAL_FIR_ACTION0                                  , RULL(0x2A040010), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_LOCAL_FIR_ACTION0                                  , RULL(0x2B040010), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_LOCAL_FIR_ACTION0                                  , RULL(0x2C040010), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_LOCAL_FIR_ACTION0                                  , RULL(0x2D040010), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_LOCAL_FIR_ACTION0                                  , RULL(0x2E040010), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_LOCAL_FIR_ACTION0                                  , RULL(0x2F040010), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_LOCAL_FIR_ACTION0                                  , RULL(0x30040010), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_LOCAL_FIR_ACTION0                                  , RULL(0x31040010), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_LOCAL_FIR_ACTION0                                  , RULL(0x32040010), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_LOCAL_FIR_ACTION0                                  , RULL(0x33040010), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_LOCAL_FIR_ACTION0                                  , RULL(0x34040010), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_LOCAL_FIR_ACTION0                                  , RULL(0x35040010), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_LOCAL_FIR_ACTION0                                  , RULL(0x36040010), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_LOCAL_FIR_ACTION0                                  , RULL(0x37040010), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_LOCAL_FIR_ACTION0                                    , RULL(0x10040010), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_LOCAL_FIR_ACTION0                                  , RULL(0x10040010), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_LOCAL_FIR_ACTION0                                  , RULL(0x11040010), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_LOCAL_FIR_ACTION0                                  , RULL(0x12040010), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_LOCAL_FIR_ACTION0                                  , RULL(0x13040010), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_LOCAL_FIR_ACTION0                                  , RULL(0x14040010), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_LOCAL_FIR_ACTION0                                  , RULL(0x15040010), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_LOCAL_FIR_ACTION0                                    , RULL(0x20040010), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040010,
REG64( EX_0_LOCAL_FIR_ACTION0                                  , RULL(0x20040010), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040010,
REG64( EX_1_LOCAL_FIR_ACTION0                                  , RULL(0x22040010), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040010,
REG64( EX_2_LOCAL_FIR_ACTION0                                  , RULL(0x24040010), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040010,
REG64( EX_3_LOCAL_FIR_ACTION0                                  , RULL(0x26040010), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040010,
REG64( EX_4_LOCAL_FIR_ACTION0                                  , RULL(0x28040010), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040010,
REG64( EX_5_LOCAL_FIR_ACTION0                                  , RULL(0x2A040010), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040010,
REG64( EX_6_LOCAL_FIR_ACTION0                                  , RULL(0x2C040010), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040010,
REG64( EX_7_LOCAL_FIR_ACTION0                                  , RULL(0x2E040010), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040010,
REG64( EX_8_LOCAL_FIR_ACTION0                                  , RULL(0x30040010), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040010,
REG64( EX_9_LOCAL_FIR_ACTION0                                  , RULL(0x32040010), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040010,
REG64( EX_10_LOCAL_FIR_ACTION0                                 , RULL(0x34040010), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040010,
REG64( EX_11_LOCAL_FIR_ACTION0                                 , RULL(0x36040010), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040010,

REG64( PEC_0_LOCAL_FIR_ACTION0                                 , RULL(0x0D040010), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_LOCAL_FIR_ACTION0                                 , RULL(0x0E040010), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_LOCAL_FIR_ACTION0                                 , RULL(0x0F040010), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_LOCAL_FIR_ACTION1                                     , RULL(0x20040011), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_LOCAL_FIR_ACTION1                                   , RULL(0x20040011), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_LOCAL_FIR_ACTION1                                   , RULL(0x21040011), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_LOCAL_FIR_ACTION1                                   , RULL(0x22040011), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_LOCAL_FIR_ACTION1                                   , RULL(0x23040011), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_LOCAL_FIR_ACTION1                                   , RULL(0x24040011), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_LOCAL_FIR_ACTION1                                   , RULL(0x25040011), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_LOCAL_FIR_ACTION1                                   , RULL(0x26040011), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_LOCAL_FIR_ACTION1                                   , RULL(0x27040011), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_LOCAL_FIR_ACTION1                                   , RULL(0x28040011), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_LOCAL_FIR_ACTION1                                   , RULL(0x29040011), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_LOCAL_FIR_ACTION1                                  , RULL(0x2A040011), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_LOCAL_FIR_ACTION1                                  , RULL(0x2B040011), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_LOCAL_FIR_ACTION1                                  , RULL(0x2C040011), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_LOCAL_FIR_ACTION1                                  , RULL(0x2D040011), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_LOCAL_FIR_ACTION1                                  , RULL(0x2E040011), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_LOCAL_FIR_ACTION1                                  , RULL(0x2F040011), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_LOCAL_FIR_ACTION1                                  , RULL(0x30040011), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_LOCAL_FIR_ACTION1                                  , RULL(0x31040011), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_LOCAL_FIR_ACTION1                                  , RULL(0x32040011), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_LOCAL_FIR_ACTION1                                  , RULL(0x33040011), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_LOCAL_FIR_ACTION1                                  , RULL(0x34040011), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_LOCAL_FIR_ACTION1                                  , RULL(0x35040011), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_LOCAL_FIR_ACTION1                                  , RULL(0x36040011), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_LOCAL_FIR_ACTION1                                  , RULL(0x37040011), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_LOCAL_FIR_ACTION1                                    , RULL(0x10040011), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_LOCAL_FIR_ACTION1                                  , RULL(0x10040011), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_LOCAL_FIR_ACTION1                                  , RULL(0x11040011), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_LOCAL_FIR_ACTION1                                  , RULL(0x12040011), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_LOCAL_FIR_ACTION1                                  , RULL(0x13040011), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_LOCAL_FIR_ACTION1                                  , RULL(0x14040011), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_LOCAL_FIR_ACTION1                                  , RULL(0x15040011), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_LOCAL_FIR_ACTION1                                    , RULL(0x20040011), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040011,
REG64( EX_0_LOCAL_FIR_ACTION1                                  , RULL(0x20040011), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040011,
REG64( EX_1_LOCAL_FIR_ACTION1                                  , RULL(0x22040011), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040011,
REG64( EX_2_LOCAL_FIR_ACTION1                                  , RULL(0x24040011), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040011,
REG64( EX_3_LOCAL_FIR_ACTION1                                  , RULL(0x26040011), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040011,
REG64( EX_4_LOCAL_FIR_ACTION1                                  , RULL(0x28040011), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040011,
REG64( EX_5_LOCAL_FIR_ACTION1                                  , RULL(0x2A040011), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040011,
REG64( EX_6_LOCAL_FIR_ACTION1                                  , RULL(0x2C040011), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040011,
REG64( EX_7_LOCAL_FIR_ACTION1                                  , RULL(0x2E040011), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040011,
REG64( EX_8_LOCAL_FIR_ACTION1                                  , RULL(0x30040011), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040011,
REG64( EX_9_LOCAL_FIR_ACTION1                                  , RULL(0x32040011), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040011,
REG64( EX_10_LOCAL_FIR_ACTION1                                 , RULL(0x34040011), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040011,
REG64( EX_11_LOCAL_FIR_ACTION1                                 , RULL(0x36040011), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040011,

REG64( PEC_0_LOCAL_FIR_ACTION1                                 , RULL(0x0D040011), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_LOCAL_FIR_ACTION1                                 , RULL(0x0E040011), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_LOCAL_FIR_ACTION1                                 , RULL(0x0F040011), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_LOCAL_FIR_MASK                                        , RULL(0x2004000D), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_LOCAL_FIR_MASK_AND                                    , RULL(0x2004000E), SH_UNT_C        , SH_ACS_SCOM1_AND );
REG64( C_LOCAL_FIR_MASK_OR                                     , RULL(0x2004000F), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_LOCAL_FIR_MASK                                      , RULL(0x2004000D), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_LOCAL_FIR_MASK_AND                                  , RULL(0x2004000E), SH_UNT_C_0      , SH_ACS_SCOM1_AND );
REG64( C_0_LOCAL_FIR_MASK_OR                                   , RULL(0x2004000F), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_LOCAL_FIR_MASK                                      , RULL(0x2104000D), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_LOCAL_FIR_MASK_AND                                  , RULL(0x2104000E), SH_UNT_C_1      , SH_ACS_SCOM1_AND );
REG64( C_1_LOCAL_FIR_MASK_OR                                   , RULL(0x2104000F), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_LOCAL_FIR_MASK                                      , RULL(0x2204000D), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_LOCAL_FIR_MASK_AND                                  , RULL(0x2204000E), SH_UNT_C_2      , SH_ACS_SCOM1_AND );
REG64( C_2_LOCAL_FIR_MASK_OR                                   , RULL(0x2204000F), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_LOCAL_FIR_MASK                                      , RULL(0x2304000D), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_LOCAL_FIR_MASK_AND                                  , RULL(0x2304000E), SH_UNT_C_3      , SH_ACS_SCOM1_AND );
REG64( C_3_LOCAL_FIR_MASK_OR                                   , RULL(0x2304000F), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_LOCAL_FIR_MASK                                      , RULL(0x2404000D), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_LOCAL_FIR_MASK_AND                                  , RULL(0x2404000E), SH_UNT_C_4      , SH_ACS_SCOM1_AND );
REG64( C_4_LOCAL_FIR_MASK_OR                                   , RULL(0x2404000F), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_LOCAL_FIR_MASK                                      , RULL(0x2504000D), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_LOCAL_FIR_MASK_AND                                  , RULL(0x2504000E), SH_UNT_C_5      , SH_ACS_SCOM1_AND );
REG64( C_5_LOCAL_FIR_MASK_OR                                   , RULL(0x2504000F), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_LOCAL_FIR_MASK                                      , RULL(0x2604000D), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_LOCAL_FIR_MASK_AND                                  , RULL(0x2604000E), SH_UNT_C_6      , SH_ACS_SCOM1_AND );
REG64( C_6_LOCAL_FIR_MASK_OR                                   , RULL(0x2604000F), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_LOCAL_FIR_MASK                                      , RULL(0x2704000D), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_LOCAL_FIR_MASK_AND                                  , RULL(0x2704000E), SH_UNT_C_7      , SH_ACS_SCOM1_AND );
REG64( C_7_LOCAL_FIR_MASK_OR                                   , RULL(0x2704000F), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_LOCAL_FIR_MASK                                      , RULL(0x2804000D), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_LOCAL_FIR_MASK_AND                                  , RULL(0x2804000E), SH_UNT_C_8      , SH_ACS_SCOM1_AND );
REG64( C_8_LOCAL_FIR_MASK_OR                                   , RULL(0x2804000F), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_LOCAL_FIR_MASK                                      , RULL(0x2904000D), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_LOCAL_FIR_MASK_AND                                  , RULL(0x2904000E), SH_UNT_C_9      , SH_ACS_SCOM1_AND );
REG64( C_9_LOCAL_FIR_MASK_OR                                   , RULL(0x2904000F), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_LOCAL_FIR_MASK                                     , RULL(0x2A04000D), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_LOCAL_FIR_MASK_AND                                 , RULL(0x2A04000E), SH_UNT_C_10     , SH_ACS_SCOM1_AND );
REG64( C_10_LOCAL_FIR_MASK_OR                                  , RULL(0x2A04000F), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_LOCAL_FIR_MASK                                     , RULL(0x2B04000D), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_LOCAL_FIR_MASK_AND                                 , RULL(0x2B04000E), SH_UNT_C_11     , SH_ACS_SCOM1_AND );
REG64( C_11_LOCAL_FIR_MASK_OR                                  , RULL(0x2B04000F), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_LOCAL_FIR_MASK                                     , RULL(0x2C04000D), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_LOCAL_FIR_MASK_AND                                 , RULL(0x2C04000E), SH_UNT_C_12     , SH_ACS_SCOM1_AND );
REG64( C_12_LOCAL_FIR_MASK_OR                                  , RULL(0x2C04000F), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_LOCAL_FIR_MASK                                     , RULL(0x2D04000D), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_LOCAL_FIR_MASK_AND                                 , RULL(0x2D04000E), SH_UNT_C_13     , SH_ACS_SCOM1_AND );
REG64( C_13_LOCAL_FIR_MASK_OR                                  , RULL(0x2D04000F), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_LOCAL_FIR_MASK                                     , RULL(0x2E04000D), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_LOCAL_FIR_MASK_AND                                 , RULL(0x2E04000E), SH_UNT_C_14     , SH_ACS_SCOM1_AND );
REG64( C_14_LOCAL_FIR_MASK_OR                                  , RULL(0x2E04000F), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_LOCAL_FIR_MASK                                     , RULL(0x2F04000D), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_LOCAL_FIR_MASK_AND                                 , RULL(0x2F04000E), SH_UNT_C_15     , SH_ACS_SCOM1_AND );
REG64( C_15_LOCAL_FIR_MASK_OR                                  , RULL(0x2F04000F), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_LOCAL_FIR_MASK                                     , RULL(0x3004000D), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_LOCAL_FIR_MASK_AND                                 , RULL(0x3004000E), SH_UNT_C_16     , SH_ACS_SCOM1_AND );
REG64( C_16_LOCAL_FIR_MASK_OR                                  , RULL(0x3004000F), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_LOCAL_FIR_MASK                                     , RULL(0x3104000D), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_LOCAL_FIR_MASK_AND                                 , RULL(0x3104000E), SH_UNT_C_17     , SH_ACS_SCOM1_AND );
REG64( C_17_LOCAL_FIR_MASK_OR                                  , RULL(0x3104000F), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_LOCAL_FIR_MASK                                     , RULL(0x3204000D), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_LOCAL_FIR_MASK_AND                                 , RULL(0x3204000E), SH_UNT_C_18     , SH_ACS_SCOM1_AND );
REG64( C_18_LOCAL_FIR_MASK_OR                                  , RULL(0x3204000F), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_LOCAL_FIR_MASK                                     , RULL(0x3304000D), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_LOCAL_FIR_MASK_AND                                 , RULL(0x3304000E), SH_UNT_C_19     , SH_ACS_SCOM1_AND );
REG64( C_19_LOCAL_FIR_MASK_OR                                  , RULL(0x3304000F), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_LOCAL_FIR_MASK                                     , RULL(0x3404000D), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_LOCAL_FIR_MASK_AND                                 , RULL(0x3404000E), SH_UNT_C_20     , SH_ACS_SCOM1_AND );
REG64( C_20_LOCAL_FIR_MASK_OR                                  , RULL(0x3404000F), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_LOCAL_FIR_MASK                                     , RULL(0x3504000D), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_LOCAL_FIR_MASK_AND                                 , RULL(0x3504000E), SH_UNT_C_21     , SH_ACS_SCOM1_AND );
REG64( C_21_LOCAL_FIR_MASK_OR                                  , RULL(0x3504000F), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_LOCAL_FIR_MASK                                     , RULL(0x3604000D), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_LOCAL_FIR_MASK_AND                                 , RULL(0x3604000E), SH_UNT_C_22     , SH_ACS_SCOM1_AND );
REG64( C_22_LOCAL_FIR_MASK_OR                                  , RULL(0x3604000F), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_LOCAL_FIR_MASK                                     , RULL(0x3704000D), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_LOCAL_FIR_MASK_AND                                 , RULL(0x3704000E), SH_UNT_C_23     , SH_ACS_SCOM1_AND );
REG64( C_23_LOCAL_FIR_MASK_OR                                  , RULL(0x3704000F), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EQ_LOCAL_FIR_MASK                                       , RULL(0x1004000D), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_LOCAL_FIR_MASK_AND                                   , RULL(0x1004000E), SH_UNT_EQ       , SH_ACS_SCOM1_AND );
REG64( EQ_LOCAL_FIR_MASK_OR                                    , RULL(0x1004000F), SH_UNT_EQ       , SH_ACS_SCOM2_OR  );
REG64( EQ_0_LOCAL_FIR_MASK                                     , RULL(0x1004000D), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_LOCAL_FIR_MASK_AND                                 , RULL(0x1004000E), SH_UNT_EQ_0     , SH_ACS_SCOM1_AND );
REG64( EQ_0_LOCAL_FIR_MASK_OR                                  , RULL(0x1004000F), SH_UNT_EQ_0     , SH_ACS_SCOM2_OR  );
REG64( EQ_1_LOCAL_FIR_MASK                                     , RULL(0x1104000D), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_LOCAL_FIR_MASK_AND                                 , RULL(0x1104000E), SH_UNT_EQ_1     , SH_ACS_SCOM1_AND );
REG64( EQ_1_LOCAL_FIR_MASK_OR                                  , RULL(0x1104000F), SH_UNT_EQ_1     , SH_ACS_SCOM2_OR  );
REG64( EQ_2_LOCAL_FIR_MASK                                     , RULL(0x1204000D), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_LOCAL_FIR_MASK_AND                                 , RULL(0x1204000E), SH_UNT_EQ_2     , SH_ACS_SCOM1_AND );
REG64( EQ_2_LOCAL_FIR_MASK_OR                                  , RULL(0x1204000F), SH_UNT_EQ_2     , SH_ACS_SCOM2_OR  );
REG64( EQ_3_LOCAL_FIR_MASK                                     , RULL(0x1304000D), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_LOCAL_FIR_MASK_AND                                 , RULL(0x1304000E), SH_UNT_EQ_3     , SH_ACS_SCOM1_AND );
REG64( EQ_3_LOCAL_FIR_MASK_OR                                  , RULL(0x1304000F), SH_UNT_EQ_3     , SH_ACS_SCOM2_OR  );
REG64( EQ_4_LOCAL_FIR_MASK                                     , RULL(0x1404000D), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_LOCAL_FIR_MASK_AND                                 , RULL(0x1404000E), SH_UNT_EQ_4     , SH_ACS_SCOM1_AND );
REG64( EQ_4_LOCAL_FIR_MASK_OR                                  , RULL(0x1404000F), SH_UNT_EQ_4     , SH_ACS_SCOM2_OR  );
REG64( EQ_5_LOCAL_FIR_MASK                                     , RULL(0x1504000D), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_LOCAL_FIR_MASK_AND                                 , RULL(0x1504000E), SH_UNT_EQ_5     , SH_ACS_SCOM1_AND );
REG64( EQ_5_LOCAL_FIR_MASK_OR                                  , RULL(0x1504000F), SH_UNT_EQ_5     , SH_ACS_SCOM2_OR  );
REG64( EX_LOCAL_FIR_MASK                                       , RULL(0x2004000D), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 2104000D,
REG64( EX_LOCAL_FIR_MASK_AND                                   , RULL(0x2004000E), SH_UNT_EX       ,
       SH_ACS_SCOM1_AND ); //DUPS: 2104000E,
REG64( EX_LOCAL_FIR_MASK_OR                                    , RULL(0x2004000F), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2104000F,
REG64( EX_0_LOCAL_FIR_MASK                                     , RULL(0x2004000D), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2104000D,
REG64( EX_0_LOCAL_FIR_MASK_AND                                 , RULL(0x2004000E), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2104000E,
REG64( EX_0_LOCAL_FIR_MASK_OR                                  , RULL(0x2004000F), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2104000F,
REG64( EX_1_LOCAL_FIR_MASK                                     , RULL(0x2204000D), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2304000D,
REG64( EX_1_LOCAL_FIR_MASK_AND                                 , RULL(0x2204000E), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2304000E,
REG64( EX_1_LOCAL_FIR_MASK_OR                                  , RULL(0x2204000F), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2304000F,
REG64( EX_2_LOCAL_FIR_MASK                                     , RULL(0x2404000D), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2504000D,
REG64( EX_2_LOCAL_FIR_MASK_AND                                 , RULL(0x2404000E), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2504000E,
REG64( EX_2_LOCAL_FIR_MASK_OR                                  , RULL(0x2404000F), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2504000F,
REG64( EX_3_LOCAL_FIR_MASK                                     , RULL(0x2604000D), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2704000D,
REG64( EX_3_LOCAL_FIR_MASK_AND                                 , RULL(0x2604000E), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2704000E,
REG64( EX_3_LOCAL_FIR_MASK_OR                                  , RULL(0x2604000F), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2704000F,
REG64( EX_4_LOCAL_FIR_MASK                                     , RULL(0x2804000D), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2904000D,
REG64( EX_4_LOCAL_FIR_MASK_AND                                 , RULL(0x2804000E), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2904000E,
REG64( EX_4_LOCAL_FIR_MASK_OR                                  , RULL(0x2804000F), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2904000F,
REG64( EX_5_LOCAL_FIR_MASK                                     , RULL(0x2A04000D), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B04000D,
REG64( EX_5_LOCAL_FIR_MASK_AND                                 , RULL(0x2A04000E), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2B04000E,
REG64( EX_5_LOCAL_FIR_MASK_OR                                  , RULL(0x2A04000F), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B04000F,
REG64( EX_6_LOCAL_FIR_MASK                                     , RULL(0x2C04000D), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D04000D,
REG64( EX_6_LOCAL_FIR_MASK_AND                                 , RULL(0x2C04000E), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2D04000E,
REG64( EX_6_LOCAL_FIR_MASK_OR                                  , RULL(0x2C04000F), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D04000F,
REG64( EX_7_LOCAL_FIR_MASK                                     , RULL(0x2E04000D), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F04000D,
REG64( EX_7_LOCAL_FIR_MASK_AND                                 , RULL(0x2E04000E), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_AND ); //DUPS: 2F04000E,
REG64( EX_7_LOCAL_FIR_MASK_OR                                  , RULL(0x2E04000F), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F04000F,
REG64( EX_8_LOCAL_FIR_MASK                                     , RULL(0x3004000D), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 3104000D,
REG64( EX_8_LOCAL_FIR_MASK_AND                                 , RULL(0x3004000E), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_AND ); //DUPS: 3104000E,
REG64( EX_8_LOCAL_FIR_MASK_OR                                  , RULL(0x3004000F), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 3104000F,
REG64( EX_9_LOCAL_FIR_MASK                                     , RULL(0x3204000D), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 3304000D,
REG64( EX_9_LOCAL_FIR_MASK_AND                                 , RULL(0x3204000E), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_AND ); //DUPS: 3304000E,
REG64( EX_9_LOCAL_FIR_MASK_OR                                  , RULL(0x3204000F), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 3304000F,
REG64( EX_10_LOCAL_FIR_MASK                                    , RULL(0x3404000D), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 3504000D,
REG64( EX_10_LOCAL_FIR_MASK_AND                                , RULL(0x3404000E), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_AND ); //DUPS: 3504000E,
REG64( EX_10_LOCAL_FIR_MASK_OR                                 , RULL(0x3404000F), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 3504000F,
REG64( EX_11_LOCAL_FIR_MASK                                    , RULL(0x3604000D), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 3704000D,
REG64( EX_11_LOCAL_FIR_MASK_AND                                , RULL(0x3604000E), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_AND ); //DUPS: 3704000E,
REG64( EX_11_LOCAL_FIR_MASK_OR                                 , RULL(0x3604000F), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 3704000F,

REG64( PEC_0_LOCAL_FIR_MASK                                    , RULL(0x0D04000D), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_0_LOCAL_FIR_MASK_AND                                , RULL(0x0D04000E), SH_UNT_PEC_0    , SH_ACS_SCOM1_AND );
REG64( PEC_0_LOCAL_FIR_MASK_OR                                 , RULL(0x0D04000F), SH_UNT_PEC_0    , SH_ACS_SCOM2_OR  );
REG64( PEC_1_LOCAL_FIR_MASK                                    , RULL(0x0E04000D), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_1_LOCAL_FIR_MASK_AND                                , RULL(0x0E04000E), SH_UNT_PEC_1    , SH_ACS_SCOM1_AND );
REG64( PEC_1_LOCAL_FIR_MASK_OR                                 , RULL(0x0E04000F), SH_UNT_PEC_1    , SH_ACS_SCOM2_OR  );
REG64( PEC_2_LOCAL_FIR_MASK                                    , RULL(0x0F04000D), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );
REG64( PEC_2_LOCAL_FIR_MASK_AND                                , RULL(0x0F04000E), SH_UNT_PEC_2    , SH_ACS_SCOM1_AND );
REG64( PEC_2_LOCAL_FIR_MASK_OR                                 , RULL(0x0F04000F), SH_UNT_PEC_2    , SH_ACS_SCOM2_OR  );

REG64( C_LOCAL_XSTOP_ERR                                       , RULL(0x20040018), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_LOCAL_XSTOP_ERR                                     , RULL(0x20040018), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_LOCAL_XSTOP_ERR                                     , RULL(0x21040018), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_LOCAL_XSTOP_ERR                                     , RULL(0x22040018), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_LOCAL_XSTOP_ERR                                     , RULL(0x23040018), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_LOCAL_XSTOP_ERR                                     , RULL(0x24040018), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_LOCAL_XSTOP_ERR                                     , RULL(0x25040018), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_LOCAL_XSTOP_ERR                                     , RULL(0x26040018), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_LOCAL_XSTOP_ERR                                     , RULL(0x27040018), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_LOCAL_XSTOP_ERR                                     , RULL(0x28040018), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_LOCAL_XSTOP_ERR                                     , RULL(0x29040018), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_LOCAL_XSTOP_ERR                                    , RULL(0x2A040018), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_LOCAL_XSTOP_ERR                                    , RULL(0x2B040018), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_LOCAL_XSTOP_ERR                                    , RULL(0x2C040018), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_LOCAL_XSTOP_ERR                                    , RULL(0x2D040018), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_LOCAL_XSTOP_ERR                                    , RULL(0x2E040018), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_LOCAL_XSTOP_ERR                                    , RULL(0x2F040018), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_LOCAL_XSTOP_ERR                                    , RULL(0x30040018), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_LOCAL_XSTOP_ERR                                    , RULL(0x31040018), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_LOCAL_XSTOP_ERR                                    , RULL(0x32040018), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_LOCAL_XSTOP_ERR                                    , RULL(0x33040018), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_LOCAL_XSTOP_ERR                                    , RULL(0x34040018), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_LOCAL_XSTOP_ERR                                    , RULL(0x35040018), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_LOCAL_XSTOP_ERR                                    , RULL(0x36040018), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_LOCAL_XSTOP_ERR                                    , RULL(0x37040018), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_LOCAL_XSTOP_ERR                                      , RULL(0x10040018), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_LOCAL_XSTOP_ERR                                    , RULL(0x10040018), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_LOCAL_XSTOP_ERR                                    , RULL(0x11040018), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_LOCAL_XSTOP_ERR                                    , RULL(0x12040018), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_LOCAL_XSTOP_ERR                                    , RULL(0x13040018), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_LOCAL_XSTOP_ERR                                    , RULL(0x14040018), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_LOCAL_XSTOP_ERR                                    , RULL(0x15040018), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_LOCAL_XSTOP_ERR                                      , RULL(0x20040018), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 21040018,
REG64( EX_0_LOCAL_XSTOP_ERR                                    , RULL(0x20040018), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 21040018,
REG64( EX_1_LOCAL_XSTOP_ERR                                    , RULL(0x22040018), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 23040018,
REG64( EX_2_LOCAL_XSTOP_ERR                                    , RULL(0x24040018), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 25040018,
REG64( EX_3_LOCAL_XSTOP_ERR                                    , RULL(0x26040018), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 27040018,
REG64( EX_4_LOCAL_XSTOP_ERR                                    , RULL(0x28040018), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 29040018,
REG64( EX_5_LOCAL_XSTOP_ERR                                    , RULL(0x2A040018), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B040018,
REG64( EX_6_LOCAL_XSTOP_ERR                                    , RULL(0x2C040018), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D040018,
REG64( EX_7_LOCAL_XSTOP_ERR                                    , RULL(0x2E040018), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F040018,
REG64( EX_8_LOCAL_XSTOP_ERR                                    , RULL(0x30040018), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 31040018,
REG64( EX_9_LOCAL_XSTOP_ERR                                    , RULL(0x32040018), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 33040018,
REG64( EX_10_LOCAL_XSTOP_ERR                                   , RULL(0x34040018), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 35040018,
REG64( EX_11_LOCAL_XSTOP_ERR                                   , RULL(0x36040018), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 37040018,

REG64( PEC_0_LOCAL_XSTOP_ERR                                   , RULL(0x0D040018), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_LOCAL_XSTOP_ERR                                   , RULL(0x0E040018), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_LOCAL_XSTOP_ERR                                   , RULL(0x0F040018), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_LOCAL_XSTOP_MASK                                      , RULL(0x20040019), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_LOCAL_XSTOP_MASK                                    , RULL(0x20040019), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_LOCAL_XSTOP_MASK                                    , RULL(0x21040019), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_LOCAL_XSTOP_MASK                                    , RULL(0x22040019), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_LOCAL_XSTOP_MASK                                    , RULL(0x23040019), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_LOCAL_XSTOP_MASK                                    , RULL(0x24040019), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_LOCAL_XSTOP_MASK                                    , RULL(0x25040019), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_LOCAL_XSTOP_MASK                                    , RULL(0x26040019), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_LOCAL_XSTOP_MASK                                    , RULL(0x27040019), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_LOCAL_XSTOP_MASK                                    , RULL(0x28040019), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_LOCAL_XSTOP_MASK                                    , RULL(0x29040019), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_LOCAL_XSTOP_MASK                                   , RULL(0x2A040019), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_LOCAL_XSTOP_MASK                                   , RULL(0x2B040019), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_LOCAL_XSTOP_MASK                                   , RULL(0x2C040019), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_LOCAL_XSTOP_MASK                                   , RULL(0x2D040019), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_LOCAL_XSTOP_MASK                                   , RULL(0x2E040019), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_LOCAL_XSTOP_MASK                                   , RULL(0x2F040019), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_LOCAL_XSTOP_MASK                                   , RULL(0x30040019), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_LOCAL_XSTOP_MASK                                   , RULL(0x31040019), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_LOCAL_XSTOP_MASK                                   , RULL(0x32040019), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_LOCAL_XSTOP_MASK                                   , RULL(0x33040019), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_LOCAL_XSTOP_MASK                                   , RULL(0x34040019), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_LOCAL_XSTOP_MASK                                   , RULL(0x35040019), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_LOCAL_XSTOP_MASK                                   , RULL(0x36040019), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_LOCAL_XSTOP_MASK                                   , RULL(0x37040019), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_LOCAL_XSTOP_MASK                                     , RULL(0x10040019), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_LOCAL_XSTOP_MASK                                   , RULL(0x10040019), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_LOCAL_XSTOP_MASK                                   , RULL(0x11040019), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_LOCAL_XSTOP_MASK                                   , RULL(0x12040019), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_LOCAL_XSTOP_MASK                                   , RULL(0x13040019), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_LOCAL_XSTOP_MASK                                   , RULL(0x14040019), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_LOCAL_XSTOP_MASK                                   , RULL(0x15040019), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_LOCAL_XSTOP_MASK                                     , RULL(0x20040019), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040019,
REG64( EX_0_LOCAL_XSTOP_MASK                                   , RULL(0x20040019), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040019,
REG64( EX_1_LOCAL_XSTOP_MASK                                   , RULL(0x22040019), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040019,
REG64( EX_2_LOCAL_XSTOP_MASK                                   , RULL(0x24040019), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040019,
REG64( EX_3_LOCAL_XSTOP_MASK                                   , RULL(0x26040019), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040019,
REG64( EX_4_LOCAL_XSTOP_MASK                                   , RULL(0x28040019), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040019,
REG64( EX_5_LOCAL_XSTOP_MASK                                   , RULL(0x2A040019), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040019,
REG64( EX_6_LOCAL_XSTOP_MASK                                   , RULL(0x2C040019), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040019,
REG64( EX_7_LOCAL_XSTOP_MASK                                   , RULL(0x2E040019), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040019,
REG64( EX_8_LOCAL_XSTOP_MASK                                   , RULL(0x30040019), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040019,
REG64( EX_9_LOCAL_XSTOP_MASK                                   , RULL(0x32040019), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040019,
REG64( EX_10_LOCAL_XSTOP_MASK                                  , RULL(0x34040019), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040019,
REG64( EX_11_LOCAL_XSTOP_MASK                                  , RULL(0x36040019), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040019,

REG64( PEC_0_LOCAL_XSTOP_MASK                                  , RULL(0x0D040019), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_LOCAL_XSTOP_MASK                                  , RULL(0x0E040019), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_LOCAL_XSTOP_MASK                                  , RULL(0x0F040019), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( EQ_LRU_VIC_ALLOC_REG                                    , RULL(0x10011811), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C11,
REG64( EQ_0_LRU_VIC_ALLOC_REG                                  , RULL(0x10011811), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C11,
REG64( EQ_1_LRU_VIC_ALLOC_REG                                  , RULL(0x11011811), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C11,
REG64( EQ_2_LRU_VIC_ALLOC_REG                                  , RULL(0x12011811), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C11,
REG64( EQ_3_LRU_VIC_ALLOC_REG                                  , RULL(0x13011811), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C11,
REG64( EQ_4_LRU_VIC_ALLOC_REG                                  , RULL(0x14011811), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C11,
REG64( EQ_5_LRU_VIC_ALLOC_REG                                  , RULL(0x15011811), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C11,
REG64( EX_0_L3_LRU_VIC_ALLOC_REG                               , RULL(0x10011811), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_LRU_VIC_ALLOC_REG                              , RULL(0x15011811), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_LRU_VIC_ALLOC_REG                              , RULL(0x15011C11), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_LRU_VIC_ALLOC_REG                               , RULL(0x10011C11), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_LRU_VIC_ALLOC_REG                               , RULL(0x11011811), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_LRU_VIC_ALLOC_REG                               , RULL(0x11011C11), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_LRU_VIC_ALLOC_REG                               , RULL(0x12011811), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_LRU_VIC_ALLOC_REG                               , RULL(0x12011C11), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_LRU_VIC_ALLOC_REG                               , RULL(0x13011811), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_LRU_VIC_ALLOC_REG                               , RULL(0x13011C11), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_LRU_VIC_ALLOC_REG                               , RULL(0x14011811), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_LRU_VIC_ALLOC_REG                               , RULL(0x14011C11), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_LRU_VIC_ALLOC_REG                                 , RULL(0x10011811), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_MIB_XIICAC                                           , RULL(0x10012839), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012439,
REG64( EQ_0_MIB_XIICAC                                         , RULL(0x10012839), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012439,
REG64( EQ_1_MIB_XIICAC                                         , RULL(0x11012839), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012439,
REG64( EQ_2_MIB_XIICAC                                         , RULL(0x12012839), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012439,
REG64( EQ_3_MIB_XIICAC                                         , RULL(0x13012839), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012439,
REG64( EQ_4_MIB_XIICAC                                         , RULL(0x14012839), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012439,
REG64( EQ_5_MIB_XIICAC                                         , RULL(0x15012839), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012439,
REG64( EX_MIB_XIICAC                                           , RULL(0x10012439), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_MIB_XIICAC                                         , RULL(0x10012439), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_MIB_XIICAC                                         , RULL(0x10012839), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_MIB_XIICAC                                         , RULL(0x11012439), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_MIB_XIICAC                                         , RULL(0x11012839), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_MIB_XIICAC                                         , RULL(0x12012439), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_MIB_XIICAC                                         , RULL(0x12012839), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_MIB_XIICAC                                         , RULL(0x13012439), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_MIB_XIICAC                                         , RULL(0x13012839), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_MIB_XIICAC                                         , RULL(0x14012439), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_MIB_XIICAC                                         , RULL(0x14012839), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_MIB_XIICAC                                        , RULL(0x15012439), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_MIB_XIICAC                                        , RULL(0x15012839), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_MIB_XIMEM                                            , RULL(0x10012837), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012437,
REG64( EQ_0_MIB_XIMEM                                          , RULL(0x10012837), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012437,
REG64( EQ_1_MIB_XIMEM                                          , RULL(0x11012837), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012437,
REG64( EQ_2_MIB_XIMEM                                          , RULL(0x12012837), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012437,
REG64( EQ_3_MIB_XIMEM                                          , RULL(0x13012837), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012437,
REG64( EQ_4_MIB_XIMEM                                          , RULL(0x14012837), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012437,
REG64( EQ_5_MIB_XIMEM                                          , RULL(0x15012837), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012437,
REG64( EX_MIB_XIMEM                                            , RULL(0x10012437), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_MIB_XIMEM                                          , RULL(0x10012437), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_MIB_XIMEM                                          , RULL(0x10012837), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_MIB_XIMEM                                          , RULL(0x11012437), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_MIB_XIMEM                                          , RULL(0x11012837), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_MIB_XIMEM                                          , RULL(0x12012437), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_MIB_XIMEM                                          , RULL(0x12012837), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_MIB_XIMEM                                          , RULL(0x13012437), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_MIB_XIMEM                                          , RULL(0x13012837), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_MIB_XIMEM                                          , RULL(0x14012437), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_MIB_XIMEM                                          , RULL(0x14012837), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_MIB_XIMEM                                         , RULL(0x15012437), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_MIB_XIMEM                                         , RULL(0x15012837), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_MIB_XISGB                                            , RULL(0x10012838), SH_UNT_EQ       ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012438,
REG64( EQ_0_MIB_XISGB                                          , RULL(0x10012838), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 10012438,
REG64( EQ_1_MIB_XISGB                                          , RULL(0x11012838), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 11012438,
REG64( EQ_2_MIB_XISGB                                          , RULL(0x12012838), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 12012438,
REG64( EQ_3_MIB_XISGB                                          , RULL(0x13012838), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 13012438,
REG64( EQ_4_MIB_XISGB                                          , RULL(0x14012838), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 14012438,
REG64( EQ_5_MIB_XISGB                                          , RULL(0x15012838), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 15012438,
REG64( EX_MIB_XISGB                                            , RULL(0x10012438), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_MIB_XISGB                                          , RULL(0x10012438), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_1_MIB_XISGB                                          , RULL(0x10012838), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_2_MIB_XISGB                                          , RULL(0x11012438), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_3_MIB_XISGB                                          , RULL(0x11012838), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_4_MIB_XISGB                                          , RULL(0x12012438), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_5_MIB_XISGB                                          , RULL(0x12012838), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_6_MIB_XISGB                                          , RULL(0x13012438), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_7_MIB_XISGB                                          , RULL(0x13012838), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_8_MIB_XISGB                                          , RULL(0x14012438), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_9_MIB_XISGB                                          , RULL(0x14012838), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_10_MIB_XISGB                                         , RULL(0x15012438), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );
REG64( EX_11_MIB_XISGB                                         , RULL(0x15012838), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( PEC_0_STACK0_MMIOBAR0_MASK_REG                          , RULL(0x04010C4F), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK1_MMIOBAR0_MASK_REG                          , RULL(0x04010C8F), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK2_MMIOBAR0_MASK_REG                          , RULL(0x04010CCF), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK0_MMIOBAR0_MASK_REG                          , RULL(0x0401104F), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK1_MMIOBAR0_MASK_REG                          , RULL(0x0401108F), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK2_MMIOBAR0_MASK_REG                          , RULL(0x040110CF), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK0_MMIOBAR0_MASK_REG                          , RULL(0x0401144F), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK1_MMIOBAR0_MASK_REG                          , RULL(0x0401148F), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK2_MMIOBAR0_MASK_REG                          , RULL(0x040114CF), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_STACK0_MMIOBAR0_MASK_REG                            , RULL(0x04010C4F), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_STACK1_MMIOBAR0_MASK_REG                            , RULL(0x04010C8F), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_STACK2_MMIOBAR0_MASK_REG                            , RULL(0x04010CCF), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM      );

REG64( PEC_0_STACK0_MMIOBAR0_REG                               , RULL(0x04010C4E), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK1_MMIOBAR0_REG                               , RULL(0x04010C8E), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK2_MMIOBAR0_REG                               , RULL(0x04010CCE), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK0_MMIOBAR0_REG                               , RULL(0x0401104E), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK1_MMIOBAR0_REG                               , RULL(0x0401108E), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK2_MMIOBAR0_REG                               , RULL(0x040110CE), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK0_MMIOBAR0_REG                               , RULL(0x0401144E), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK1_MMIOBAR0_REG                               , RULL(0x0401148E), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK2_MMIOBAR0_REG                               , RULL(0x040114CE), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_STACK0_MMIOBAR0_REG                                 , RULL(0x04010C4E), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_STACK1_MMIOBAR0_REG                                 , RULL(0x04010C8E), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_STACK2_MMIOBAR0_REG                                 , RULL(0x04010CCE), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM      );

REG64( PEC_0_STACK0_MMIOBAR1_MASK_REG                          , RULL(0x04010C51), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK1_MMIOBAR1_MASK_REG                          , RULL(0x04010C91), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK2_MMIOBAR1_MASK_REG                          , RULL(0x04010CD1), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK0_MMIOBAR1_MASK_REG                          , RULL(0x04011051), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK1_MMIOBAR1_MASK_REG                          , RULL(0x04011091), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK2_MMIOBAR1_MASK_REG                          , RULL(0x040110D1), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK0_MMIOBAR1_MASK_REG                          , RULL(0x04011451), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK1_MMIOBAR1_MASK_REG                          , RULL(0x04011491), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK2_MMIOBAR1_MASK_REG                          , RULL(0x040114D1), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_STACK0_MMIOBAR1_MASK_REG                            , RULL(0x04010C51), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_STACK1_MMIOBAR1_MASK_REG                            , RULL(0x04010C91), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_STACK2_MMIOBAR1_MASK_REG                            , RULL(0x04010CD1), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM      );

REG64( PEC_0_STACK0_MMIOBAR1_REG                               , RULL(0x04010C50), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK1_MMIOBAR1_REG                               , RULL(0x04010C90), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK2_MMIOBAR1_REG                               , RULL(0x04010CD0), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK0_MMIOBAR1_REG                               , RULL(0x04011050), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK1_MMIOBAR1_REG                               , RULL(0x04011090), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK2_MMIOBAR1_REG                               , RULL(0x040110D0), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK0_MMIOBAR1_REG                               , RULL(0x04011450), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK1_MMIOBAR1_REG                               , RULL(0x04011490), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK2_MMIOBAR1_REG                               , RULL(0x040114D0), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_STACK0_MMIOBAR1_REG                                 , RULL(0x04010C50), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_STACK1_MMIOBAR1_REG                                 , RULL(0x04010C90), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_STACK2_MMIOBAR1_REG                                 , RULL(0x04010CD0), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM      );

REG64( C_MODE_REG                                              , RULL(0x20040008), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_MODE_REG                                            , RULL(0x20040008), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_MODE_REG                                            , RULL(0x21040008), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_MODE_REG                                            , RULL(0x22040008), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_MODE_REG                                            , RULL(0x23040008), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_MODE_REG                                            , RULL(0x24040008), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_MODE_REG                                            , RULL(0x25040008), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_MODE_REG                                            , RULL(0x26040008), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_MODE_REG                                            , RULL(0x27040008), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_MODE_REG                                            , RULL(0x28040008), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_MODE_REG                                            , RULL(0x29040008), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_MODE_REG                                           , RULL(0x2A040008), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_MODE_REG                                           , RULL(0x2B040008), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_MODE_REG                                           , RULL(0x2C040008), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_MODE_REG                                           , RULL(0x2D040008), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_MODE_REG                                           , RULL(0x2E040008), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_MODE_REG                                           , RULL(0x2F040008), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_MODE_REG                                           , RULL(0x30040008), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_MODE_REG                                           , RULL(0x31040008), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_MODE_REG                                           , RULL(0x32040008), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_MODE_REG                                           , RULL(0x33040008), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_MODE_REG                                           , RULL(0x34040008), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_MODE_REG                                           , RULL(0x35040008), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_MODE_REG                                           , RULL(0x36040008), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_MODE_REG                                           , RULL(0x37040008), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_MODE_REG                                             , RULL(0x10040008), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_MODE_REG                                           , RULL(0x10040008), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_MODE_REG                                           , RULL(0x11040008), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_MODE_REG                                           , RULL(0x12040008), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_MODE_REG                                           , RULL(0x13040008), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_MODE_REG                                           , RULL(0x14040008), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_MODE_REG                                           , RULL(0x15040008), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_MODE_REG                                             , RULL(0x20040008), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040008,
REG64( EX_0_MODE_REG                                           , RULL(0x20040008), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040008,
REG64( EX_1_MODE_REG                                           , RULL(0x22040008), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040008,
REG64( EX_2_MODE_REG                                           , RULL(0x24040008), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040008,
REG64( EX_3_MODE_REG                                           , RULL(0x26040008), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040008,
REG64( EX_4_MODE_REG                                           , RULL(0x28040008), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040008,
REG64( EX_5_MODE_REG                                           , RULL(0x2A040008), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040008,
REG64( EX_6_MODE_REG                                           , RULL(0x2C040008), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040008,
REG64( EX_7_MODE_REG                                           , RULL(0x2E040008), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040008,
REG64( EX_8_MODE_REG                                           , RULL(0x30040008), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040008,
REG64( EX_9_MODE_REG                                           , RULL(0x32040008), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040008,
REG64( EX_10_MODE_REG                                          , RULL(0x34040008), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040008,
REG64( EX_11_MODE_REG                                          , RULL(0x36040008), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040008,

REG64( PEC_0_MODE_REG                                          , RULL(0x0D040008), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_MODE_REG                                          , RULL(0x0E040008), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_MODE_REG                                          , RULL(0x0F040008), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( EQ_MODE_REG0                                            , RULL(0x1001080A), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001182B, 10010C0A, 10011C2B,
REG64( EQ_0_MODE_REG0                                          , RULL(0x1001080A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001182B, 10010C0A, 10011C2B,
REG64( EQ_1_MODE_REG0                                          , RULL(0x1101080A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101182B, 11010C0A, 11011C2B,
REG64( EQ_2_MODE_REG0                                          , RULL(0x1201080A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201182B, 12010C0A, 12011C2B,
REG64( EQ_3_MODE_REG0                                          , RULL(0x1301080A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301182B, 13010C0A, 13011C2B,
REG64( EQ_4_MODE_REG0                                          , RULL(0x1401080A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401182B, 14010C0A, 14011C2B,
REG64( EQ_5_MODE_REG0                                          , RULL(0x1501080A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501182B, 15010C0A, 15011C2B,
REG64( EX_0_L2_MODE_REG0                                       , RULL(0x1001080A), SH_UNT_EX_0_L2  , SH_ACS_SCOM      );
REG64( EX_0_L3_MODE_REG0                                       , RULL(0x1001182B), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L2_MODE_REG0                                      , RULL(0x1501080A), SH_UNT_EX_10_L2 , SH_ACS_SCOM      );
REG64( EX_10_L3_MODE_REG0                                      , RULL(0x1501182B), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L2_MODE_REG0                                      , RULL(0x15010C0A), SH_UNT_EX_11_L2 , SH_ACS_SCOM      );
REG64( EX_11_L3_MODE_REG0                                      , RULL(0x15011C2B), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L2_MODE_REG0                                       , RULL(0x10010C0A), SH_UNT_EX_1_L2  , SH_ACS_SCOM      );
REG64( EX_1_L3_MODE_REG0                                       , RULL(0x10011C2B), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L2_MODE_REG0                                       , RULL(0x1101080A), SH_UNT_EX_2_L2  , SH_ACS_SCOM      );
REG64( EX_2_L3_MODE_REG0                                       , RULL(0x1101182B), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L2_MODE_REG0                                       , RULL(0x11010C0A), SH_UNT_EX_3_L2  , SH_ACS_SCOM      );
REG64( EX_3_L3_MODE_REG0                                       , RULL(0x11011C2B), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L2_MODE_REG0                                       , RULL(0x1201080A), SH_UNT_EX_4_L2  , SH_ACS_SCOM      );
REG64( EX_4_L3_MODE_REG0                                       , RULL(0x1201182B), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L2_MODE_REG0                                       , RULL(0x12010C0A), SH_UNT_EX_5_L2  , SH_ACS_SCOM      );
REG64( EX_5_L3_MODE_REG0                                       , RULL(0x12011C2B), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L2_MODE_REG0                                       , RULL(0x1301080A), SH_UNT_EX_6_L2  , SH_ACS_SCOM      );
REG64( EX_6_L3_MODE_REG0                                       , RULL(0x1301182B), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L2_MODE_REG0                                       , RULL(0x13010C0A), SH_UNT_EX_7_L2  , SH_ACS_SCOM      );
REG64( EX_7_L3_MODE_REG0                                       , RULL(0x13011C2B), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L2_MODE_REG0                                       , RULL(0x1401080A), SH_UNT_EX_8_L2  , SH_ACS_SCOM      );
REG64( EX_8_L3_MODE_REG0                                       , RULL(0x1401182B), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L2_MODE_REG0                                       , RULL(0x14010C0A), SH_UNT_EX_9_L2  , SH_ACS_SCOM      );
REG64( EX_9_L3_MODE_REG0                                       , RULL(0x14011C2B), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L2_MODE_REG0                                         , RULL(0x1001080A), SH_UNT_EX_L2    , SH_ACS_SCOM      );
REG64( EX_L3_MODE_REG0                                         , RULL(0x1001182B), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_MODE_REG1                                            , RULL(0x1001080B), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001180A, 10010C0B, 10011C0A,
REG64( EQ_0_MODE_REG1                                          , RULL(0x1001080B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001180A, 10010C0B, 10011C0A,
REG64( EQ_1_MODE_REG1                                          , RULL(0x1101080B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101180A, 11010C0B, 11011C0A,
REG64( EQ_2_MODE_REG1                                          , RULL(0x1201080B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201180A, 12010C0B, 12011C0A,
REG64( EQ_3_MODE_REG1                                          , RULL(0x1301080B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301180A, 13010C0B, 13011C0A,
REG64( EQ_4_MODE_REG1                                          , RULL(0x1401080B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401180A, 14010C0B, 14011C0A,
REG64( EQ_5_MODE_REG1                                          , RULL(0x1501080B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501180A, 15010C0B, 15011C0A,
REG64( EX_0_L2_MODE_REG1                                       , RULL(0x1001080B), SH_UNT_EX_0_L2  , SH_ACS_SCOM      );
REG64( EX_0_L3_MODE_REG1                                       , RULL(0x1001180A), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L2_MODE_REG1                                      , RULL(0x1501080B), SH_UNT_EX_10_L2 , SH_ACS_SCOM      );
REG64( EX_10_L3_MODE_REG1                                      , RULL(0x1501180A), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L2_MODE_REG1                                      , RULL(0x15010C0B), SH_UNT_EX_11_L2 , SH_ACS_SCOM      );
REG64( EX_11_L3_MODE_REG1                                      , RULL(0x15011C0A), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L2_MODE_REG1                                       , RULL(0x10010C0B), SH_UNT_EX_1_L2  , SH_ACS_SCOM      );
REG64( EX_1_L3_MODE_REG1                                       , RULL(0x10011C0A), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L2_MODE_REG1                                       , RULL(0x1101080B), SH_UNT_EX_2_L2  , SH_ACS_SCOM      );
REG64( EX_2_L3_MODE_REG1                                       , RULL(0x1101180A), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L2_MODE_REG1                                       , RULL(0x11010C0B), SH_UNT_EX_3_L2  , SH_ACS_SCOM      );
REG64( EX_3_L3_MODE_REG1                                       , RULL(0x11011C0A), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L2_MODE_REG1                                       , RULL(0x1201080B), SH_UNT_EX_4_L2  , SH_ACS_SCOM      );
REG64( EX_4_L3_MODE_REG1                                       , RULL(0x1201180A), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L2_MODE_REG1                                       , RULL(0x12010C0B), SH_UNT_EX_5_L2  , SH_ACS_SCOM      );
REG64( EX_5_L3_MODE_REG1                                       , RULL(0x12011C0A), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L2_MODE_REG1                                       , RULL(0x1301080B), SH_UNT_EX_6_L2  , SH_ACS_SCOM      );
REG64( EX_6_L3_MODE_REG1                                       , RULL(0x1301180A), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L2_MODE_REG1                                       , RULL(0x13010C0B), SH_UNT_EX_7_L2  , SH_ACS_SCOM      );
REG64( EX_7_L3_MODE_REG1                                       , RULL(0x13011C0A), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L2_MODE_REG1                                       , RULL(0x1401080B), SH_UNT_EX_8_L2  , SH_ACS_SCOM      );
REG64( EX_8_L3_MODE_REG1                                       , RULL(0x1401180A), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L2_MODE_REG1                                       , RULL(0x14010C0B), SH_UNT_EX_9_L2  , SH_ACS_SCOM      );
REG64( EX_9_L3_MODE_REG1                                       , RULL(0x14011C0A), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L2_MODE_REG1                                         , RULL(0x1001080B), SH_UNT_EX_L2    , SH_ACS_SCOM      );
REG64( EX_L3_MODE_REG1                                         , RULL(0x1001180A), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( C_MULTICAST_GROUP_1                                     , RULL(0x200F0001), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_MULTICAST_GROUP_1                                   , RULL(0x200F0001), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_MULTICAST_GROUP_1                                   , RULL(0x210F0001), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_MULTICAST_GROUP_1                                   , RULL(0x220F0001), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_MULTICAST_GROUP_1                                   , RULL(0x230F0001), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_MULTICAST_GROUP_1                                   , RULL(0x240F0001), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_MULTICAST_GROUP_1                                   , RULL(0x250F0001), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_MULTICAST_GROUP_1                                   , RULL(0x260F0001), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_MULTICAST_GROUP_1                                   , RULL(0x270F0001), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_MULTICAST_GROUP_1                                   , RULL(0x280F0001), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_MULTICAST_GROUP_1                                   , RULL(0x290F0001), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_MULTICAST_GROUP_1                                  , RULL(0x2A0F0001), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_MULTICAST_GROUP_1                                  , RULL(0x2B0F0001), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_MULTICAST_GROUP_1                                  , RULL(0x2C0F0001), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_MULTICAST_GROUP_1                                  , RULL(0x2D0F0001), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_MULTICAST_GROUP_1                                  , RULL(0x2E0F0001), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_MULTICAST_GROUP_1                                  , RULL(0x2F0F0001), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_MULTICAST_GROUP_1                                  , RULL(0x300F0001), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_MULTICAST_GROUP_1                                  , RULL(0x310F0001), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_MULTICAST_GROUP_1                                  , RULL(0x320F0001), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_MULTICAST_GROUP_1                                  , RULL(0x330F0001), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_MULTICAST_GROUP_1                                  , RULL(0x340F0001), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_MULTICAST_GROUP_1                                  , RULL(0x350F0001), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_MULTICAST_GROUP_1                                  , RULL(0x360F0001), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_MULTICAST_GROUP_1                                  , RULL(0x370F0001), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_MULTICAST_GROUP_1                                    , RULL(0x100F0001), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_MULTICAST_GROUP_1                                  , RULL(0x100F0001), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_MULTICAST_GROUP_1                                  , RULL(0x110F0001), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_MULTICAST_GROUP_1                                  , RULL(0x120F0001), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_MULTICAST_GROUP_1                                  , RULL(0x130F0001), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_MULTICAST_GROUP_1                                  , RULL(0x140F0001), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_MULTICAST_GROUP_1                                  , RULL(0x150F0001), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_MULTICAST_GROUP_1                                    , RULL(0x200F0001), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0001,
REG64( EX_0_MULTICAST_GROUP_1                                  , RULL(0x200F0001), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0001,
REG64( EX_1_MULTICAST_GROUP_1                                  , RULL(0x230F0001), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0001,
REG64( EX_2_MULTICAST_GROUP_1                                  , RULL(0x240F0001), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0001,
REG64( EX_3_MULTICAST_GROUP_1                                  , RULL(0x260F0001), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0001,
REG64( EX_4_MULTICAST_GROUP_1                                  , RULL(0x280F0001), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0001,
REG64( EX_5_MULTICAST_GROUP_1                                  , RULL(0x2A0F0001), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0001,
REG64( EX_6_MULTICAST_GROUP_1                                  , RULL(0x2C0F0001), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0001,
REG64( EX_7_MULTICAST_GROUP_1                                  , RULL(0x2E0F0001), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0001,
REG64( EX_8_MULTICAST_GROUP_1                                  , RULL(0x300F0001), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0001,
REG64( EX_9_MULTICAST_GROUP_1                                  , RULL(0x320F0001), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0001,
REG64( EX_10_MULTICAST_GROUP_1                                 , RULL(0x340F0001), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0001,
REG64( EX_11_MULTICAST_GROUP_1                                 , RULL(0x360F0001), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0001,

REG64( PEC_0_MULTICAST_GROUP_1                                 , RULL(0x0D0F0001), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_MULTICAST_GROUP_1                                 , RULL(0x0E0F0001), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_MULTICAST_GROUP_1                                 , RULL(0x0F0F0001), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_MULTICAST_GROUP_2                                     , RULL(0x200F0002), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_MULTICAST_GROUP_2                                   , RULL(0x200F0002), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_MULTICAST_GROUP_2                                   , RULL(0x210F0002), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_MULTICAST_GROUP_2                                   , RULL(0x220F0002), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_MULTICAST_GROUP_2                                   , RULL(0x230F0002), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_MULTICAST_GROUP_2                                   , RULL(0x240F0002), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_MULTICAST_GROUP_2                                   , RULL(0x250F0002), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_MULTICAST_GROUP_2                                   , RULL(0x260F0002), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_MULTICAST_GROUP_2                                   , RULL(0x270F0002), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_MULTICAST_GROUP_2                                   , RULL(0x280F0002), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_MULTICAST_GROUP_2                                   , RULL(0x290F0002), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_MULTICAST_GROUP_2                                  , RULL(0x2A0F0002), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_MULTICAST_GROUP_2                                  , RULL(0x2B0F0002), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_MULTICAST_GROUP_2                                  , RULL(0x2C0F0002), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_MULTICAST_GROUP_2                                  , RULL(0x2D0F0002), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_MULTICAST_GROUP_2                                  , RULL(0x2E0F0002), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_MULTICAST_GROUP_2                                  , RULL(0x2F0F0002), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_MULTICAST_GROUP_2                                  , RULL(0x300F0002), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_MULTICAST_GROUP_2                                  , RULL(0x310F0002), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_MULTICAST_GROUP_2                                  , RULL(0x320F0002), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_MULTICAST_GROUP_2                                  , RULL(0x330F0002), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_MULTICAST_GROUP_2                                  , RULL(0x340F0002), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_MULTICAST_GROUP_2                                  , RULL(0x350F0002), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_MULTICAST_GROUP_2                                  , RULL(0x360F0002), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_MULTICAST_GROUP_2                                  , RULL(0x370F0002), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_MULTICAST_GROUP_2                                    , RULL(0x100F0002), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_MULTICAST_GROUP_2                                  , RULL(0x100F0002), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_MULTICAST_GROUP_2                                  , RULL(0x110F0002), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_MULTICAST_GROUP_2                                  , RULL(0x120F0002), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_MULTICAST_GROUP_2                                  , RULL(0x130F0002), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_MULTICAST_GROUP_2                                  , RULL(0x140F0002), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_MULTICAST_GROUP_2                                  , RULL(0x150F0002), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_MULTICAST_GROUP_2                                    , RULL(0x200F0002), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0002,
REG64( EX_0_MULTICAST_GROUP_2                                  , RULL(0x200F0002), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0002,
REG64( EX_1_MULTICAST_GROUP_2                                  , RULL(0x230F0002), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0002,
REG64( EX_2_MULTICAST_GROUP_2                                  , RULL(0x240F0002), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0002,
REG64( EX_3_MULTICAST_GROUP_2                                  , RULL(0x260F0002), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0002,
REG64( EX_4_MULTICAST_GROUP_2                                  , RULL(0x280F0002), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0002,
REG64( EX_5_MULTICAST_GROUP_2                                  , RULL(0x2A0F0002), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0002,
REG64( EX_6_MULTICAST_GROUP_2                                  , RULL(0x2C0F0002), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0002,
REG64( EX_7_MULTICAST_GROUP_2                                  , RULL(0x2E0F0002), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0002,
REG64( EX_8_MULTICAST_GROUP_2                                  , RULL(0x300F0002), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0002,
REG64( EX_9_MULTICAST_GROUP_2                                  , RULL(0x320F0002), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0002,
REG64( EX_10_MULTICAST_GROUP_2                                 , RULL(0x340F0002), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0002,
REG64( EX_11_MULTICAST_GROUP_2                                 , RULL(0x360F0002), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0002,

REG64( PEC_0_MULTICAST_GROUP_2                                 , RULL(0x0D0F0002), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_MULTICAST_GROUP_2                                 , RULL(0x0E0F0002), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_MULTICAST_GROUP_2                                 , RULL(0x0F0F0002), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_MULTICAST_GROUP_3                                     , RULL(0x200F0003), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_MULTICAST_GROUP_3                                   , RULL(0x200F0003), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_MULTICAST_GROUP_3                                   , RULL(0x210F0003), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_MULTICAST_GROUP_3                                   , RULL(0x220F0003), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_MULTICAST_GROUP_3                                   , RULL(0x230F0003), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_MULTICAST_GROUP_3                                   , RULL(0x240F0003), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_MULTICAST_GROUP_3                                   , RULL(0x250F0003), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_MULTICAST_GROUP_3                                   , RULL(0x260F0003), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_MULTICAST_GROUP_3                                   , RULL(0x270F0003), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_MULTICAST_GROUP_3                                   , RULL(0x280F0003), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_MULTICAST_GROUP_3                                   , RULL(0x290F0003), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_MULTICAST_GROUP_3                                  , RULL(0x2A0F0003), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_MULTICAST_GROUP_3                                  , RULL(0x2B0F0003), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_MULTICAST_GROUP_3                                  , RULL(0x2C0F0003), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_MULTICAST_GROUP_3                                  , RULL(0x2D0F0003), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_MULTICAST_GROUP_3                                  , RULL(0x2E0F0003), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_MULTICAST_GROUP_3                                  , RULL(0x2F0F0003), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_MULTICAST_GROUP_3                                  , RULL(0x300F0003), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_MULTICAST_GROUP_3                                  , RULL(0x310F0003), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_MULTICAST_GROUP_3                                  , RULL(0x320F0003), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_MULTICAST_GROUP_3                                  , RULL(0x330F0003), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_MULTICAST_GROUP_3                                  , RULL(0x340F0003), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_MULTICAST_GROUP_3                                  , RULL(0x350F0003), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_MULTICAST_GROUP_3                                  , RULL(0x360F0003), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_MULTICAST_GROUP_3                                  , RULL(0x370F0003), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_MULTICAST_GROUP_3                                    , RULL(0x100F0003), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_MULTICAST_GROUP_3                                  , RULL(0x100F0003), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_MULTICAST_GROUP_3                                  , RULL(0x110F0003), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_MULTICAST_GROUP_3                                  , RULL(0x120F0003), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_MULTICAST_GROUP_3                                  , RULL(0x130F0003), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_MULTICAST_GROUP_3                                  , RULL(0x140F0003), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_MULTICAST_GROUP_3                                  , RULL(0x150F0003), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_MULTICAST_GROUP_3                                    , RULL(0x200F0003), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0003,
REG64( EX_0_MULTICAST_GROUP_3                                  , RULL(0x200F0003), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0003,
REG64( EX_1_MULTICAST_GROUP_3                                  , RULL(0x230F0003), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0003,
REG64( EX_2_MULTICAST_GROUP_3                                  , RULL(0x240F0003), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0003,
REG64( EX_3_MULTICAST_GROUP_3                                  , RULL(0x260F0003), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0003,
REG64( EX_4_MULTICAST_GROUP_3                                  , RULL(0x280F0003), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0003,
REG64( EX_5_MULTICAST_GROUP_3                                  , RULL(0x2A0F0003), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0003,
REG64( EX_6_MULTICAST_GROUP_3                                  , RULL(0x2C0F0003), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0003,
REG64( EX_7_MULTICAST_GROUP_3                                  , RULL(0x2E0F0003), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0003,
REG64( EX_8_MULTICAST_GROUP_3                                  , RULL(0x300F0003), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0003,
REG64( EX_9_MULTICAST_GROUP_3                                  , RULL(0x320F0003), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0003,
REG64( EX_10_MULTICAST_GROUP_3                                 , RULL(0x340F0003), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0003,
REG64( EX_11_MULTICAST_GROUP_3                                 , RULL(0x360F0003), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0003,

REG64( PEC_0_MULTICAST_GROUP_3                                 , RULL(0x0D0F0003), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_MULTICAST_GROUP_3                                 , RULL(0x0E0F0003), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_MULTICAST_GROUP_3                                 , RULL(0x0F0F0003), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_MULTICAST_GROUP_4                                     , RULL(0x200F0004), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_MULTICAST_GROUP_4                                   , RULL(0x200F0004), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_MULTICAST_GROUP_4                                   , RULL(0x210F0004), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_MULTICAST_GROUP_4                                   , RULL(0x220F0004), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_MULTICAST_GROUP_4                                   , RULL(0x230F0004), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_MULTICAST_GROUP_4                                   , RULL(0x240F0004), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_MULTICAST_GROUP_4                                   , RULL(0x250F0004), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_MULTICAST_GROUP_4                                   , RULL(0x260F0004), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_MULTICAST_GROUP_4                                   , RULL(0x270F0004), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_MULTICAST_GROUP_4                                   , RULL(0x280F0004), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_MULTICAST_GROUP_4                                   , RULL(0x290F0004), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_MULTICAST_GROUP_4                                  , RULL(0x2A0F0004), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_MULTICAST_GROUP_4                                  , RULL(0x2B0F0004), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_MULTICAST_GROUP_4                                  , RULL(0x2C0F0004), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_MULTICAST_GROUP_4                                  , RULL(0x2D0F0004), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_MULTICAST_GROUP_4                                  , RULL(0x2E0F0004), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_MULTICAST_GROUP_4                                  , RULL(0x2F0F0004), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_MULTICAST_GROUP_4                                  , RULL(0x300F0004), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_MULTICAST_GROUP_4                                  , RULL(0x310F0004), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_MULTICAST_GROUP_4                                  , RULL(0x320F0004), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_MULTICAST_GROUP_4                                  , RULL(0x330F0004), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_MULTICAST_GROUP_4                                  , RULL(0x340F0004), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_MULTICAST_GROUP_4                                  , RULL(0x350F0004), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_MULTICAST_GROUP_4                                  , RULL(0x360F0004), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_MULTICAST_GROUP_4                                  , RULL(0x370F0004), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_MULTICAST_GROUP_4                                    , RULL(0x100F0004), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_MULTICAST_GROUP_4                                  , RULL(0x100F0004), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_MULTICAST_GROUP_4                                  , RULL(0x110F0004), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_MULTICAST_GROUP_4                                  , RULL(0x120F0004), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_MULTICAST_GROUP_4                                  , RULL(0x130F0004), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_MULTICAST_GROUP_4                                  , RULL(0x140F0004), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_MULTICAST_GROUP_4                                  , RULL(0x150F0004), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_MULTICAST_GROUP_4                                    , RULL(0x200F0004), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0004,
REG64( EX_0_MULTICAST_GROUP_4                                  , RULL(0x200F0004), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0004,
REG64( EX_1_MULTICAST_GROUP_4                                  , RULL(0x230F0004), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0004,
REG64( EX_2_MULTICAST_GROUP_4                                  , RULL(0x240F0004), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0004,
REG64( EX_3_MULTICAST_GROUP_4                                  , RULL(0x260F0004), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0004,
REG64( EX_4_MULTICAST_GROUP_4                                  , RULL(0x280F0004), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0004,
REG64( EX_5_MULTICAST_GROUP_4                                  , RULL(0x2A0F0004), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0004,
REG64( EX_6_MULTICAST_GROUP_4                                  , RULL(0x2C0F0004), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0004,
REG64( EX_7_MULTICAST_GROUP_4                                  , RULL(0x2E0F0004), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0004,
REG64( EX_8_MULTICAST_GROUP_4                                  , RULL(0x300F0004), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0004,
REG64( EX_9_MULTICAST_GROUP_4                                  , RULL(0x320F0004), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0004,
REG64( EX_10_MULTICAST_GROUP_4                                 , RULL(0x340F0004), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0004,
REG64( EX_11_MULTICAST_GROUP_4                                 , RULL(0x360F0004), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0004,

REG64( PEC_0_MULTICAST_GROUP_4                                 , RULL(0x0D0F0004), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_MULTICAST_GROUP_4                                 , RULL(0x0E0F0004), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_MULTICAST_GROUP_4                                 , RULL(0x0F0F0004), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( EQ_NCU_DARN_BAR_REG                                     , RULL(0x10011011), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011411,
REG64( EQ_0_NCU_DARN_BAR_REG                                   , RULL(0x10011011), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011411,
REG64( EQ_1_NCU_DARN_BAR_REG                                   , RULL(0x11011011), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011411,
REG64( EQ_2_NCU_DARN_BAR_REG                                   , RULL(0x12011011), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011411,
REG64( EQ_3_NCU_DARN_BAR_REG                                   , RULL(0x13011011), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011411,
REG64( EQ_4_NCU_DARN_BAR_REG                                   , RULL(0x14011011), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011411,
REG64( EQ_5_NCU_DARN_BAR_REG                                   , RULL(0x15011011), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011411,
REG64( EX_NCU_DARN_BAR_REG                                     , RULL(0x10011011), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_NCU_DARN_BAR_REG                                   , RULL(0x10011011), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_NCU_DARN_BAR_REG                                   , RULL(0x10011411), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_NCU_DARN_BAR_REG                                   , RULL(0x11011011), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_NCU_DARN_BAR_REG                                   , RULL(0x11011411), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_NCU_DARN_BAR_REG                                   , RULL(0x12011011), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_NCU_DARN_BAR_REG                                   , RULL(0x12011411), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_NCU_DARN_BAR_REG                                   , RULL(0x13011011), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_NCU_DARN_BAR_REG                                   , RULL(0x13011411), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_NCU_DARN_BAR_REG                                   , RULL(0x14011011), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_NCU_DARN_BAR_REG                                   , RULL(0x14011411), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_NCU_DARN_BAR_REG                                  , RULL(0x15011011), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_NCU_DARN_BAR_REG                                  , RULL(0x15011411), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_NCU_MODE_REG                                         , RULL(0x1001100A), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001140A,
REG64( EQ_0_NCU_MODE_REG                                       , RULL(0x1001100A), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001140A,
REG64( EQ_1_NCU_MODE_REG                                       , RULL(0x1101100A), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101140A,
REG64( EQ_2_NCU_MODE_REG                                       , RULL(0x1201100A), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201140A,
REG64( EQ_3_NCU_MODE_REG                                       , RULL(0x1301100A), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301140A,
REG64( EQ_4_NCU_MODE_REG                                       , RULL(0x1401100A), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401140A,
REG64( EQ_5_NCU_MODE_REG                                       , RULL(0x1501100A), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501140A,
REG64( EX_NCU_MODE_REG                                         , RULL(0x1001100A), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_NCU_MODE_REG                                       , RULL(0x1001100A), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_NCU_MODE_REG                                       , RULL(0x1001140A), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_NCU_MODE_REG                                       , RULL(0x1101100A), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_NCU_MODE_REG                                       , RULL(0x1101140A), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_NCU_MODE_REG                                       , RULL(0x1201100A), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_NCU_MODE_REG                                       , RULL(0x1201140A), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_NCU_MODE_REG                                       , RULL(0x1301100A), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_NCU_MODE_REG                                       , RULL(0x1301140A), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_NCU_MODE_REG                                       , RULL(0x1401100A), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_NCU_MODE_REG                                       , RULL(0x1401140A), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_NCU_MODE_REG                                      , RULL(0x1501100A), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_NCU_MODE_REG                                      , RULL(0x1501140A), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_NCU_MODE_REG2                                        , RULL(0x1001100B), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001140B,
REG64( EQ_0_NCU_MODE_REG2                                      , RULL(0x1001100B), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001140B,
REG64( EQ_1_NCU_MODE_REG2                                      , RULL(0x1101100B), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101140B,
REG64( EQ_2_NCU_MODE_REG2                                      , RULL(0x1201100B), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201140B,
REG64( EQ_3_NCU_MODE_REG2                                      , RULL(0x1301100B), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301140B,
REG64( EQ_4_NCU_MODE_REG2                                      , RULL(0x1401100B), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401140B,
REG64( EQ_5_NCU_MODE_REG2                                      , RULL(0x1501100B), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501140B,
REG64( EX_NCU_MODE_REG2                                        , RULL(0x1001100B), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_NCU_MODE_REG2                                      , RULL(0x1001100B), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_NCU_MODE_REG2                                      , RULL(0x1001140B), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_NCU_MODE_REG2                                      , RULL(0x1101100B), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_NCU_MODE_REG2                                      , RULL(0x1101140B), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_NCU_MODE_REG2                                      , RULL(0x1201100B), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_NCU_MODE_REG2                                      , RULL(0x1201140B), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_NCU_MODE_REG2                                      , RULL(0x1301100B), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_NCU_MODE_REG2                                      , RULL(0x1301140B), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_NCU_MODE_REG2                                      , RULL(0x1401100B), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_NCU_MODE_REG2                                      , RULL(0x1401140B), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_NCU_MODE_REG2                                     , RULL(0x1501100B), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_NCU_MODE_REG2                                     , RULL(0x1501140B), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_NCU_MODE_REG3                                        , RULL(0x1001100C), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001140C,
REG64( EQ_0_NCU_MODE_REG3                                      , RULL(0x1001100C), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001140C,
REG64( EQ_1_NCU_MODE_REG3                                      , RULL(0x1101100C), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101140C,
REG64( EQ_2_NCU_MODE_REG3                                      , RULL(0x1201100C), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201140C,
REG64( EQ_3_NCU_MODE_REG3                                      , RULL(0x1301100C), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301140C,
REG64( EQ_4_NCU_MODE_REG3                                      , RULL(0x1401100C), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401140C,
REG64( EQ_5_NCU_MODE_REG3                                      , RULL(0x1501100C), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501140C,
REG64( EX_NCU_MODE_REG3                                        , RULL(0x1001100C), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_NCU_MODE_REG3                                      , RULL(0x1001100C), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_NCU_MODE_REG3                                      , RULL(0x1001140C), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_NCU_MODE_REG3                                      , RULL(0x1101100C), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_NCU_MODE_REG3                                      , RULL(0x1101140C), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_NCU_MODE_REG3                                      , RULL(0x1201100C), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_NCU_MODE_REG3                                      , RULL(0x1201140C), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_NCU_MODE_REG3                                      , RULL(0x1301100C), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_NCU_MODE_REG3                                      , RULL(0x1301140C), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_NCU_MODE_REG3                                      , RULL(0x1401100C), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_NCU_MODE_REG3                                      , RULL(0x1401140C), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_NCU_MODE_REG3                                     , RULL(0x1501100C), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_NCU_MODE_REG3                                     , RULL(0x1501140C), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_NCU_SLOW_LPAR_REG0                                   , RULL(0x10011012), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011412,
REG64( EQ_0_NCU_SLOW_LPAR_REG0                                 , RULL(0x10011012), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011412,
REG64( EQ_1_NCU_SLOW_LPAR_REG0                                 , RULL(0x11011012), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011412,
REG64( EQ_2_NCU_SLOW_LPAR_REG0                                 , RULL(0x12011012), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011412,
REG64( EQ_3_NCU_SLOW_LPAR_REG0                                 , RULL(0x13011012), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011412,
REG64( EQ_4_NCU_SLOW_LPAR_REG0                                 , RULL(0x14011012), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011412,
REG64( EQ_5_NCU_SLOW_LPAR_REG0                                 , RULL(0x15011012), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011412,
REG64( EX_NCU_SLOW_LPAR_REG0                                   , RULL(0x10011012), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_NCU_SLOW_LPAR_REG0                                 , RULL(0x10011012), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_NCU_SLOW_LPAR_REG0                                 , RULL(0x10011412), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_NCU_SLOW_LPAR_REG0                                 , RULL(0x11011012), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_NCU_SLOW_LPAR_REG0                                 , RULL(0x11011412), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_NCU_SLOW_LPAR_REG0                                 , RULL(0x12011012), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_NCU_SLOW_LPAR_REG0                                 , RULL(0x12011412), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_NCU_SLOW_LPAR_REG0                                 , RULL(0x13011012), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_NCU_SLOW_LPAR_REG0                                 , RULL(0x13011412), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_NCU_SLOW_LPAR_REG0                                 , RULL(0x14011012), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_NCU_SLOW_LPAR_REG0                                 , RULL(0x14011412), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_NCU_SLOW_LPAR_REG0                                , RULL(0x15011012), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_NCU_SLOW_LPAR_REG0                                , RULL(0x15011412), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_NCU_SLOW_LPAR_REG1                                   , RULL(0x10011013), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011413,
REG64( EQ_0_NCU_SLOW_LPAR_REG1                                 , RULL(0x10011013), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011413,
REG64( EQ_1_NCU_SLOW_LPAR_REG1                                 , RULL(0x11011013), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011413,
REG64( EQ_2_NCU_SLOW_LPAR_REG1                                 , RULL(0x12011013), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011413,
REG64( EQ_3_NCU_SLOW_LPAR_REG1                                 , RULL(0x13011013), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011413,
REG64( EQ_4_NCU_SLOW_LPAR_REG1                                 , RULL(0x14011013), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011413,
REG64( EQ_5_NCU_SLOW_LPAR_REG1                                 , RULL(0x15011013), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011413,
REG64( EX_NCU_SLOW_LPAR_REG1                                   , RULL(0x10011013), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_NCU_SLOW_LPAR_REG1                                 , RULL(0x10011013), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_NCU_SLOW_LPAR_REG1                                 , RULL(0x10011413), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_NCU_SLOW_LPAR_REG1                                 , RULL(0x11011013), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_NCU_SLOW_LPAR_REG1                                 , RULL(0x11011413), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_NCU_SLOW_LPAR_REG1                                 , RULL(0x12011013), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_NCU_SLOW_LPAR_REG1                                 , RULL(0x12011413), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_NCU_SLOW_LPAR_REG1                                 , RULL(0x13011013), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_NCU_SLOW_LPAR_REG1                                 , RULL(0x13011413), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_NCU_SLOW_LPAR_REG1                                 , RULL(0x14011013), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_NCU_SLOW_LPAR_REG1                                 , RULL(0x14011413), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_NCU_SLOW_LPAR_REG1                                , RULL(0x15011013), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_NCU_SLOW_LPAR_REG1                                , RULL(0x15011413), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_NCU_SPEC_BAR_REG                                     , RULL(0x10011010), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011410,
REG64( EQ_0_NCU_SPEC_BAR_REG                                   , RULL(0x10011010), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011410,
REG64( EQ_1_NCU_SPEC_BAR_REG                                   , RULL(0x11011010), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011410,
REG64( EQ_2_NCU_SPEC_BAR_REG                                   , RULL(0x12011010), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011410,
REG64( EQ_3_NCU_SPEC_BAR_REG                                   , RULL(0x13011010), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011410,
REG64( EQ_4_NCU_SPEC_BAR_REG                                   , RULL(0x14011010), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011410,
REG64( EQ_5_NCU_SPEC_BAR_REG                                   , RULL(0x15011010), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011410,
REG64( EX_NCU_SPEC_BAR_REG                                     , RULL(0x10011010), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_NCU_SPEC_BAR_REG                                   , RULL(0x10011010), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_NCU_SPEC_BAR_REG                                   , RULL(0x10011410), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_NCU_SPEC_BAR_REG                                   , RULL(0x11011010), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_NCU_SPEC_BAR_REG                                   , RULL(0x11011410), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_NCU_SPEC_BAR_REG                                   , RULL(0x12011010), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_NCU_SPEC_BAR_REG                                   , RULL(0x12011410), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_NCU_SPEC_BAR_REG                                   , RULL(0x13011010), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_NCU_SPEC_BAR_REG                                   , RULL(0x13011410), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_NCU_SPEC_BAR_REG                                   , RULL(0x14011010), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_NCU_SPEC_BAR_REG                                   , RULL(0x14011410), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_NCU_SPEC_BAR_REG                                  , RULL(0x15011010), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_NCU_SPEC_BAR_REG                                  , RULL(0x15011410), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_NCU_STATUS_REG                                       , RULL(0x1001100F), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 1001140F,
REG64( EQ_0_NCU_STATUS_REG                                     , RULL(0x1001100F), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 1001140F,
REG64( EQ_1_NCU_STATUS_REG                                     , RULL(0x1101100F), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 1101140F,
REG64( EQ_2_NCU_STATUS_REG                                     , RULL(0x1201100F), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 1201140F,
REG64( EQ_3_NCU_STATUS_REG                                     , RULL(0x1301100F), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 1301140F,
REG64( EQ_4_NCU_STATUS_REG                                     , RULL(0x1401100F), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 1401140F,
REG64( EQ_5_NCU_STATUS_REG                                     , RULL(0x1501100F), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 1501140F,
REG64( EX_NCU_STATUS_REG                                       , RULL(0x1001100F), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_NCU_STATUS_REG                                     , RULL(0x1001100F), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_NCU_STATUS_REG                                     , RULL(0x1001140F), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_NCU_STATUS_REG                                     , RULL(0x1101100F), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_NCU_STATUS_REG                                     , RULL(0x1101140F), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_NCU_STATUS_REG                                     , RULL(0x1201100F), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_NCU_STATUS_REG                                     , RULL(0x1201140F), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_NCU_STATUS_REG                                     , RULL(0x1301100F), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_NCU_STATUS_REG                                     , RULL(0x1301140F), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_NCU_STATUS_REG                                     , RULL(0x1401100F), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_NCU_STATUS_REG                                     , RULL(0x1401140F), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_NCU_STATUS_REG                                    , RULL(0x1501100F), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_NCU_STATUS_REG                                    , RULL(0x1501140F), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( PEC_0_NESTTRC_REG                                       , RULL(0x04010C03), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_NESTTRC_REG                                       , RULL(0x04011003), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_NESTTRC_REG                                       , RULL(0x04011403), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_NET_CTRL0                                             , RULL(0x200F0040), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_NET_CTRL0_WAND                                        , RULL(0x200F0041), SH_UNT_C        ,
       SH_ACS_SCOM1_WAND );
REG64( C_NET_CTRL0_WOR                                         , RULL(0x200F0042), SH_UNT_C        , SH_ACS_SCOM2_WOR );
REG64( C_0_NET_CTRL0                                           , RULL(0x200F0040), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_NET_CTRL0_WAND                                      , RULL(0x200F0041), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WAND );
REG64( C_0_NET_CTRL0_WOR                                       , RULL(0x200F0042), SH_UNT_C_0      , SH_ACS_SCOM2_WOR );
REG64( C_1_NET_CTRL0                                           , RULL(0x210F0040), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_NET_CTRL0_WAND                                      , RULL(0x210F0041), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WAND );
REG64( C_1_NET_CTRL0_WOR                                       , RULL(0x210F0042), SH_UNT_C_1      , SH_ACS_SCOM2_WOR );
REG64( C_2_NET_CTRL0                                           , RULL(0x220F0040), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_NET_CTRL0_WAND                                      , RULL(0x220F0041), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WAND );
REG64( C_2_NET_CTRL0_WOR                                       , RULL(0x220F0042), SH_UNT_C_2      , SH_ACS_SCOM2_WOR );
REG64( C_3_NET_CTRL0                                           , RULL(0x230F0040), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_NET_CTRL0_WAND                                      , RULL(0x230F0041), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WAND );
REG64( C_3_NET_CTRL0_WOR                                       , RULL(0x230F0042), SH_UNT_C_3      , SH_ACS_SCOM2_WOR );
REG64( C_4_NET_CTRL0                                           , RULL(0x240F0040), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_NET_CTRL0_WAND                                      , RULL(0x240F0041), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WAND );
REG64( C_4_NET_CTRL0_WOR                                       , RULL(0x240F0042), SH_UNT_C_4      , SH_ACS_SCOM2_WOR );
REG64( C_5_NET_CTRL0                                           , RULL(0x250F0040), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_NET_CTRL0_WAND                                      , RULL(0x250F0041), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WAND );
REG64( C_5_NET_CTRL0_WOR                                       , RULL(0x250F0042), SH_UNT_C_5      , SH_ACS_SCOM2_WOR );
REG64( C_6_NET_CTRL0                                           , RULL(0x260F0040), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_NET_CTRL0_WAND                                      , RULL(0x260F0041), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WAND );
REG64( C_6_NET_CTRL0_WOR                                       , RULL(0x260F0042), SH_UNT_C_6      , SH_ACS_SCOM2_WOR );
REG64( C_7_NET_CTRL0                                           , RULL(0x270F0040), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_NET_CTRL0_WAND                                      , RULL(0x270F0041), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WAND );
REG64( C_7_NET_CTRL0_WOR                                       , RULL(0x270F0042), SH_UNT_C_7      , SH_ACS_SCOM2_WOR );
REG64( C_8_NET_CTRL0                                           , RULL(0x280F0040), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_NET_CTRL0_WAND                                      , RULL(0x280F0041), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WAND );
REG64( C_8_NET_CTRL0_WOR                                       , RULL(0x280F0042), SH_UNT_C_8      , SH_ACS_SCOM2_WOR );
REG64( C_9_NET_CTRL0                                           , RULL(0x290F0040), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_NET_CTRL0_WAND                                      , RULL(0x290F0041), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WAND );
REG64( C_9_NET_CTRL0_WOR                                       , RULL(0x290F0042), SH_UNT_C_9      , SH_ACS_SCOM2_WOR );
REG64( C_10_NET_CTRL0                                          , RULL(0x2A0F0040), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_NET_CTRL0_WAND                                     , RULL(0x2A0F0041), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WAND );
REG64( C_10_NET_CTRL0_WOR                                      , RULL(0x2A0F0042), SH_UNT_C_10     , SH_ACS_SCOM2_WOR );
REG64( C_11_NET_CTRL0                                          , RULL(0x2B0F0040), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_NET_CTRL0_WAND                                     , RULL(0x2B0F0041), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WAND );
REG64( C_11_NET_CTRL0_WOR                                      , RULL(0x2B0F0042), SH_UNT_C_11     , SH_ACS_SCOM2_WOR );
REG64( C_12_NET_CTRL0                                          , RULL(0x2C0F0040), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_NET_CTRL0_WAND                                     , RULL(0x2C0F0041), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WAND );
REG64( C_12_NET_CTRL0_WOR                                      , RULL(0x2C0F0042), SH_UNT_C_12     , SH_ACS_SCOM2_WOR );
REG64( C_13_NET_CTRL0                                          , RULL(0x2D0F0040), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_NET_CTRL0_WAND                                     , RULL(0x2D0F0041), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WAND );
REG64( C_13_NET_CTRL0_WOR                                      , RULL(0x2D0F0042), SH_UNT_C_13     , SH_ACS_SCOM2_WOR );
REG64( C_14_NET_CTRL0                                          , RULL(0x2E0F0040), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_NET_CTRL0_WAND                                     , RULL(0x2E0F0041), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WAND );
REG64( C_14_NET_CTRL0_WOR                                      , RULL(0x2E0F0042), SH_UNT_C_14     , SH_ACS_SCOM2_WOR );
REG64( C_15_NET_CTRL0                                          , RULL(0x2F0F0040), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_NET_CTRL0_WAND                                     , RULL(0x2F0F0041), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WAND );
REG64( C_15_NET_CTRL0_WOR                                      , RULL(0x2F0F0042), SH_UNT_C_15     , SH_ACS_SCOM2_WOR );
REG64( C_16_NET_CTRL0                                          , RULL(0x300F0040), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_NET_CTRL0_WAND                                     , RULL(0x300F0041), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WAND );
REG64( C_16_NET_CTRL0_WOR                                      , RULL(0x300F0042), SH_UNT_C_16     , SH_ACS_SCOM2_WOR );
REG64( C_17_NET_CTRL0                                          , RULL(0x310F0040), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_NET_CTRL0_WAND                                     , RULL(0x310F0041), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WAND );
REG64( C_17_NET_CTRL0_WOR                                      , RULL(0x310F0042), SH_UNT_C_17     , SH_ACS_SCOM2_WOR );
REG64( C_18_NET_CTRL0                                          , RULL(0x320F0040), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_NET_CTRL0_WAND                                     , RULL(0x320F0041), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WAND );
REG64( C_18_NET_CTRL0_WOR                                      , RULL(0x320F0042), SH_UNT_C_18     , SH_ACS_SCOM2_WOR );
REG64( C_19_NET_CTRL0                                          , RULL(0x330F0040), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_NET_CTRL0_WAND                                     , RULL(0x330F0041), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WAND );
REG64( C_19_NET_CTRL0_WOR                                      , RULL(0x330F0042), SH_UNT_C_19     , SH_ACS_SCOM2_WOR );
REG64( C_20_NET_CTRL0                                          , RULL(0x340F0040), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_NET_CTRL0_WAND                                     , RULL(0x340F0041), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WAND );
REG64( C_20_NET_CTRL0_WOR                                      , RULL(0x340F0042), SH_UNT_C_20     , SH_ACS_SCOM2_WOR );
REG64( C_21_NET_CTRL0                                          , RULL(0x350F0040), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_NET_CTRL0_WAND                                     , RULL(0x350F0041), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WAND );
REG64( C_21_NET_CTRL0_WOR                                      , RULL(0x350F0042), SH_UNT_C_21     , SH_ACS_SCOM2_WOR );
REG64( C_22_NET_CTRL0                                          , RULL(0x360F0040), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_NET_CTRL0_WAND                                     , RULL(0x360F0041), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WAND );
REG64( C_22_NET_CTRL0_WOR                                      , RULL(0x360F0042), SH_UNT_C_22     , SH_ACS_SCOM2_WOR );
REG64( C_23_NET_CTRL0                                          , RULL(0x370F0040), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_NET_CTRL0_WAND                                     , RULL(0x370F0041), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WAND );
REG64( C_23_NET_CTRL0_WOR                                      , RULL(0x370F0042), SH_UNT_C_23     , SH_ACS_SCOM2_WOR );
REG64( EQ_NET_CTRL0                                            , RULL(0x100F0040), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_NET_CTRL0_WAND                                       , RULL(0x100F0041), SH_UNT_EQ       ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_NET_CTRL0_WOR                                        , RULL(0x100F0042), SH_UNT_EQ       , SH_ACS_SCOM2_WOR );
REG64( EQ_0_NET_CTRL0                                          , RULL(0x100F0040), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_NET_CTRL0_WAND                                     , RULL(0x100F0041), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_0_NET_CTRL0_WOR                                      , RULL(0x100F0042), SH_UNT_EQ_0     , SH_ACS_SCOM2_WOR );
REG64( EQ_1_NET_CTRL0                                          , RULL(0x110F0040), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_NET_CTRL0_WAND                                     , RULL(0x110F0041), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_1_NET_CTRL0_WOR                                      , RULL(0x110F0042), SH_UNT_EQ_1     , SH_ACS_SCOM2_WOR );
REG64( EQ_2_NET_CTRL0                                          , RULL(0x120F0040), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_NET_CTRL0_WAND                                     , RULL(0x120F0041), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_2_NET_CTRL0_WOR                                      , RULL(0x120F0042), SH_UNT_EQ_2     , SH_ACS_SCOM2_WOR );
REG64( EQ_3_NET_CTRL0                                          , RULL(0x130F0040), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_NET_CTRL0_WAND                                     , RULL(0x130F0041), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_3_NET_CTRL0_WOR                                      , RULL(0x130F0042), SH_UNT_EQ_3     , SH_ACS_SCOM2_WOR );
REG64( EQ_4_NET_CTRL0                                          , RULL(0x140F0040), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_NET_CTRL0_WAND                                     , RULL(0x140F0041), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_4_NET_CTRL0_WOR                                      , RULL(0x140F0042), SH_UNT_EQ_4     , SH_ACS_SCOM2_WOR );
REG64( EQ_5_NET_CTRL0                                          , RULL(0x150F0040), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_NET_CTRL0_WAND                                     , RULL(0x150F0041), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_5_NET_CTRL0_WOR                                      , RULL(0x150F0042), SH_UNT_EQ_5     , SH_ACS_SCOM2_WOR );
REG64( EX_NET_CTRL0                                            , RULL(0x200F0040), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0040,
REG64( EX_NET_CTRL0_WAND                                       , RULL(0x200F0041), SH_UNT_EX       ,
       SH_ACS_SCOM1_WAND ); //DUPS: 210F0041,
REG64( EX_NET_CTRL0_WOR                                        , RULL(0x200F0042), SH_UNT_EX       ,
       SH_ACS_SCOM2_WOR ); //DUPS: 210F0042,
REG64( EX_0_NET_CTRL0                                          , RULL(0x200F0040), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0040,
REG64( EX_0_NET_CTRL0_WAND                                     , RULL(0x200F0041), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 210F0041,
REG64( EX_0_NET_CTRL0_WOR                                      , RULL(0x200F0042), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 210F0042,
REG64( EX_1_NET_CTRL0                                          , RULL(0x230F0040), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0040,
REG64( EX_1_NET_CTRL0_WAND                                     , RULL(0x230F0041), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 220F0041,
REG64( EX_1_NET_CTRL0_WOR                                      , RULL(0x230F0042), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 220F0042,
REG64( EX_2_NET_CTRL0                                          , RULL(0x240F0040), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0040,
REG64( EX_2_NET_CTRL0_WAND                                     , RULL(0x240F0041), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 250F0041,
REG64( EX_2_NET_CTRL0_WOR                                      , RULL(0x240F0042), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 250F0042,
REG64( EX_3_NET_CTRL0                                          , RULL(0x260F0040), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0040,
REG64( EX_3_NET_CTRL0_WAND                                     , RULL(0x260F0041), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 270F0041,
REG64( EX_3_NET_CTRL0_WOR                                      , RULL(0x260F0042), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 270F0042,
REG64( EX_4_NET_CTRL0                                          , RULL(0x280F0040), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0040,
REG64( EX_4_NET_CTRL0_WAND                                     , RULL(0x280F0041), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 290F0041,
REG64( EX_4_NET_CTRL0_WOR                                      , RULL(0x280F0042), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 290F0042,
REG64( EX_5_NET_CTRL0                                          , RULL(0x2A0F0040), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0040,
REG64( EX_5_NET_CTRL0_WAND                                     , RULL(0x2A0F0041), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2B0F0041,
REG64( EX_5_NET_CTRL0_WOR                                      , RULL(0x2A0F0042), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 2B0F0042,
REG64( EX_6_NET_CTRL0                                          , RULL(0x2C0F0040), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0040,
REG64( EX_6_NET_CTRL0_WAND                                     , RULL(0x2C0F0041), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2D0F0041,
REG64( EX_6_NET_CTRL0_WOR                                      , RULL(0x2C0F0042), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 2D0F0042,
REG64( EX_7_NET_CTRL0                                          , RULL(0x2E0F0040), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0040,
REG64( EX_7_NET_CTRL0_WAND                                     , RULL(0x2E0F0041), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2F0F0041,
REG64( EX_7_NET_CTRL0_WOR                                      , RULL(0x2E0F0042), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 2F0F0042,
REG64( EX_8_NET_CTRL0                                          , RULL(0x300F0040), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0040,
REG64( EX_8_NET_CTRL0_WAND                                     , RULL(0x300F0041), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 310F0041,
REG64( EX_8_NET_CTRL0_WOR                                      , RULL(0x300F0042), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 310F0042,
REG64( EX_9_NET_CTRL0                                          , RULL(0x320F0040), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0040,
REG64( EX_9_NET_CTRL0_WAND                                     , RULL(0x320F0041), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 330F0041,
REG64( EX_9_NET_CTRL0_WOR                                      , RULL(0x320F0042), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 330F0042,
REG64( EX_10_NET_CTRL0                                         , RULL(0x340F0040), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0040,
REG64( EX_10_NET_CTRL0_WAND                                    , RULL(0x340F0041), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_WAND ); //DUPS: 350F0041,
REG64( EX_10_NET_CTRL0_WOR                                     , RULL(0x340F0042), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_WOR ); //DUPS: 350F0042,
REG64( EX_11_NET_CTRL0                                         , RULL(0x360F0040), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0040,
REG64( EX_11_NET_CTRL0_WAND                                    , RULL(0x360F0041), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_WAND ); //DUPS: 370F0041,
REG64( EX_11_NET_CTRL0_WOR                                     , RULL(0x360F0042), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_WOR ); //DUPS: 370F0042,
REG64( PEC_0_STACK0_NET_CTRL0                                  , RULL(0x0D0F0040), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK0_NET_CTRL0_WAND                             , RULL(0x0D0F0041), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM1_WAND );
REG64( PEC_0_STACK0_NET_CTRL0_WOR                              , RULL(0x0D0F0042), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM2_WOR );
REG64( PEC_1_STACK0_NET_CTRL0                                  , RULL(0x0E0F0040), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_NET_CTRL0_WAND                             , RULL(0x0E0F0041), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM1_WAND );
REG64( PEC_1_STACK0_NET_CTRL0_WOR                              , RULL(0x0E0F0042), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM2_WOR );
REG64( PEC_2_STACK0_NET_CTRL0                                  , RULL(0x0F0F0040), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_NET_CTRL0_WAND                             , RULL(0x0F0F0041), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM1_WAND );
REG64( PEC_2_STACK0_NET_CTRL0_WOR                              , RULL(0x0F0F0042), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM2_WOR );
REG64( PEC_STACK0_NET_CTRL0                                    , RULL(0x0D0F0040), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_NET_CTRL0_WAND                               , RULL(0x0D0F0041), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM1_WAND );
REG64( PEC_STACK0_NET_CTRL0_WOR                                , RULL(0x0D0F0042), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM2_WOR );

REG64( C_NET_CTRL1                                             , RULL(0x200F0044), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_NET_CTRL1_WAND                                        , RULL(0x200F0045), SH_UNT_C        ,
       SH_ACS_SCOM1_WAND );
REG64( C_NET_CTRL1_WOR                                         , RULL(0x200F0046), SH_UNT_C        , SH_ACS_SCOM2_WOR );
REG64( C_0_NET_CTRL1                                           , RULL(0x200F0044), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_NET_CTRL1_WAND                                      , RULL(0x200F0045), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WAND );
REG64( C_0_NET_CTRL1_WOR                                       , RULL(0x200F0046), SH_UNT_C_0      , SH_ACS_SCOM2_WOR );
REG64( C_1_NET_CTRL1                                           , RULL(0x210F0044), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_NET_CTRL1_WAND                                      , RULL(0x210F0045), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WAND );
REG64( C_1_NET_CTRL1_WOR                                       , RULL(0x210F0046), SH_UNT_C_1      , SH_ACS_SCOM2_WOR );
REG64( C_2_NET_CTRL1                                           , RULL(0x220F0044), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_NET_CTRL1_WAND                                      , RULL(0x220F0045), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WAND );
REG64( C_2_NET_CTRL1_WOR                                       , RULL(0x220F0046), SH_UNT_C_2      , SH_ACS_SCOM2_WOR );
REG64( C_3_NET_CTRL1                                           , RULL(0x230F0044), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_NET_CTRL1_WAND                                      , RULL(0x230F0045), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WAND );
REG64( C_3_NET_CTRL1_WOR                                       , RULL(0x230F0046), SH_UNT_C_3      , SH_ACS_SCOM2_WOR );
REG64( C_4_NET_CTRL1                                           , RULL(0x240F0044), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_NET_CTRL1_WAND                                      , RULL(0x240F0045), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WAND );
REG64( C_4_NET_CTRL1_WOR                                       , RULL(0x240F0046), SH_UNT_C_4      , SH_ACS_SCOM2_WOR );
REG64( C_5_NET_CTRL1                                           , RULL(0x250F0044), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_NET_CTRL1_WAND                                      , RULL(0x250F0045), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WAND );
REG64( C_5_NET_CTRL1_WOR                                       , RULL(0x250F0046), SH_UNT_C_5      , SH_ACS_SCOM2_WOR );
REG64( C_6_NET_CTRL1                                           , RULL(0x260F0044), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_NET_CTRL1_WAND                                      , RULL(0x260F0045), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WAND );
REG64( C_6_NET_CTRL1_WOR                                       , RULL(0x260F0046), SH_UNT_C_6      , SH_ACS_SCOM2_WOR );
REG64( C_7_NET_CTRL1                                           , RULL(0x270F0044), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_NET_CTRL1_WAND                                      , RULL(0x270F0045), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WAND );
REG64( C_7_NET_CTRL1_WOR                                       , RULL(0x270F0046), SH_UNT_C_7      , SH_ACS_SCOM2_WOR );
REG64( C_8_NET_CTRL1                                           , RULL(0x280F0044), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_NET_CTRL1_WAND                                      , RULL(0x280F0045), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WAND );
REG64( C_8_NET_CTRL1_WOR                                       , RULL(0x280F0046), SH_UNT_C_8      , SH_ACS_SCOM2_WOR );
REG64( C_9_NET_CTRL1                                           , RULL(0x290F0044), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_NET_CTRL1_WAND                                      , RULL(0x290F0045), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WAND );
REG64( C_9_NET_CTRL1_WOR                                       , RULL(0x290F0046), SH_UNT_C_9      , SH_ACS_SCOM2_WOR );
REG64( C_10_NET_CTRL1                                          , RULL(0x2A0F0044), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_NET_CTRL1_WAND                                     , RULL(0x2A0F0045), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WAND );
REG64( C_10_NET_CTRL1_WOR                                      , RULL(0x2A0F0046), SH_UNT_C_10     , SH_ACS_SCOM2_WOR );
REG64( C_11_NET_CTRL1                                          , RULL(0x2B0F0044), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_NET_CTRL1_WAND                                     , RULL(0x2B0F0045), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WAND );
REG64( C_11_NET_CTRL1_WOR                                      , RULL(0x2B0F0046), SH_UNT_C_11     , SH_ACS_SCOM2_WOR );
REG64( C_12_NET_CTRL1                                          , RULL(0x2C0F0044), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_NET_CTRL1_WAND                                     , RULL(0x2C0F0045), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WAND );
REG64( C_12_NET_CTRL1_WOR                                      , RULL(0x2C0F0046), SH_UNT_C_12     , SH_ACS_SCOM2_WOR );
REG64( C_13_NET_CTRL1                                          , RULL(0x2D0F0044), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_NET_CTRL1_WAND                                     , RULL(0x2D0F0045), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WAND );
REG64( C_13_NET_CTRL1_WOR                                      , RULL(0x2D0F0046), SH_UNT_C_13     , SH_ACS_SCOM2_WOR );
REG64( C_14_NET_CTRL1                                          , RULL(0x2E0F0044), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_NET_CTRL1_WAND                                     , RULL(0x2E0F0045), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WAND );
REG64( C_14_NET_CTRL1_WOR                                      , RULL(0x2E0F0046), SH_UNT_C_14     , SH_ACS_SCOM2_WOR );
REG64( C_15_NET_CTRL1                                          , RULL(0x2F0F0044), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_NET_CTRL1_WAND                                     , RULL(0x2F0F0045), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WAND );
REG64( C_15_NET_CTRL1_WOR                                      , RULL(0x2F0F0046), SH_UNT_C_15     , SH_ACS_SCOM2_WOR );
REG64( C_16_NET_CTRL1                                          , RULL(0x300F0044), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_NET_CTRL1_WAND                                     , RULL(0x300F0045), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WAND );
REG64( C_16_NET_CTRL1_WOR                                      , RULL(0x300F0046), SH_UNT_C_16     , SH_ACS_SCOM2_WOR );
REG64( C_17_NET_CTRL1                                          , RULL(0x310F0044), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_NET_CTRL1_WAND                                     , RULL(0x310F0045), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WAND );
REG64( C_17_NET_CTRL1_WOR                                      , RULL(0x310F0046), SH_UNT_C_17     , SH_ACS_SCOM2_WOR );
REG64( C_18_NET_CTRL1                                          , RULL(0x320F0044), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_NET_CTRL1_WAND                                     , RULL(0x320F0045), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WAND );
REG64( C_18_NET_CTRL1_WOR                                      , RULL(0x320F0046), SH_UNT_C_18     , SH_ACS_SCOM2_WOR );
REG64( C_19_NET_CTRL1                                          , RULL(0x330F0044), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_NET_CTRL1_WAND                                     , RULL(0x330F0045), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WAND );
REG64( C_19_NET_CTRL1_WOR                                      , RULL(0x330F0046), SH_UNT_C_19     , SH_ACS_SCOM2_WOR );
REG64( C_20_NET_CTRL1                                          , RULL(0x340F0044), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_NET_CTRL1_WAND                                     , RULL(0x340F0045), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WAND );
REG64( C_20_NET_CTRL1_WOR                                      , RULL(0x340F0046), SH_UNT_C_20     , SH_ACS_SCOM2_WOR );
REG64( C_21_NET_CTRL1                                          , RULL(0x350F0044), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_NET_CTRL1_WAND                                     , RULL(0x350F0045), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WAND );
REG64( C_21_NET_CTRL1_WOR                                      , RULL(0x350F0046), SH_UNT_C_21     , SH_ACS_SCOM2_WOR );
REG64( C_22_NET_CTRL1                                          , RULL(0x360F0044), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_NET_CTRL1_WAND                                     , RULL(0x360F0045), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WAND );
REG64( C_22_NET_CTRL1_WOR                                      , RULL(0x360F0046), SH_UNT_C_22     , SH_ACS_SCOM2_WOR );
REG64( C_23_NET_CTRL1                                          , RULL(0x370F0044), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_NET_CTRL1_WAND                                     , RULL(0x370F0045), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WAND );
REG64( C_23_NET_CTRL1_WOR                                      , RULL(0x370F0046), SH_UNT_C_23     , SH_ACS_SCOM2_WOR );
REG64( EQ_NET_CTRL1                                            , RULL(0x100F0044), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_NET_CTRL1_WAND                                       , RULL(0x100F0045), SH_UNT_EQ       ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_NET_CTRL1_WOR                                        , RULL(0x100F0046), SH_UNT_EQ       , SH_ACS_SCOM2_WOR );
REG64( EQ_0_NET_CTRL1                                          , RULL(0x100F0044), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_NET_CTRL1_WAND                                     , RULL(0x100F0045), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_0_NET_CTRL1_WOR                                      , RULL(0x100F0046), SH_UNT_EQ_0     , SH_ACS_SCOM2_WOR );
REG64( EQ_1_NET_CTRL1                                          , RULL(0x110F0044), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_NET_CTRL1_WAND                                     , RULL(0x110F0045), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_1_NET_CTRL1_WOR                                      , RULL(0x110F0046), SH_UNT_EQ_1     , SH_ACS_SCOM2_WOR );
REG64( EQ_2_NET_CTRL1                                          , RULL(0x120F0044), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_NET_CTRL1_WAND                                     , RULL(0x120F0045), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_2_NET_CTRL1_WOR                                      , RULL(0x120F0046), SH_UNT_EQ_2     , SH_ACS_SCOM2_WOR );
REG64( EQ_3_NET_CTRL1                                          , RULL(0x130F0044), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_NET_CTRL1_WAND                                     , RULL(0x130F0045), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_3_NET_CTRL1_WOR                                      , RULL(0x130F0046), SH_UNT_EQ_3     , SH_ACS_SCOM2_WOR );
REG64( EQ_4_NET_CTRL1                                          , RULL(0x140F0044), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_NET_CTRL1_WAND                                     , RULL(0x140F0045), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_4_NET_CTRL1_WOR                                      , RULL(0x140F0046), SH_UNT_EQ_4     , SH_ACS_SCOM2_WOR );
REG64( EQ_5_NET_CTRL1                                          , RULL(0x150F0044), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_NET_CTRL1_WAND                                     , RULL(0x150F0045), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_WAND );
REG64( EQ_5_NET_CTRL1_WOR                                      , RULL(0x150F0046), SH_UNT_EQ_5     , SH_ACS_SCOM2_WOR );
REG64( EX_NET_CTRL1                                            , RULL(0x200F0044), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0044,
REG64( EX_NET_CTRL1_WAND                                       , RULL(0x200F0045), SH_UNT_EX       ,
       SH_ACS_SCOM1_WAND ); //DUPS: 210F0045,
REG64( EX_NET_CTRL1_WOR                                        , RULL(0x200F0046), SH_UNT_EX       ,
       SH_ACS_SCOM2_WOR ); //DUPS: 210F0046,
REG64( EX_0_NET_CTRL1                                          , RULL(0x200F0044), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0044,
REG64( EX_0_NET_CTRL1_WAND                                     , RULL(0x200F0045), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 210F0045,
REG64( EX_0_NET_CTRL1_WOR                                      , RULL(0x200F0046), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 210F0046,
REG64( EX_1_NET_CTRL1                                          , RULL(0x230F0044), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0044,
REG64( EX_1_NET_CTRL1_WAND                                     , RULL(0x230F0045), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 220F0045,
REG64( EX_1_NET_CTRL1_WOR                                      , RULL(0x230F0046), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 220F0046,
REG64( EX_2_NET_CTRL1                                          , RULL(0x240F0044), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0044,
REG64( EX_2_NET_CTRL1_WAND                                     , RULL(0x240F0045), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 250F0045,
REG64( EX_2_NET_CTRL1_WOR                                      , RULL(0x240F0046), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 250F0046,
REG64( EX_3_NET_CTRL1                                          , RULL(0x260F0044), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0044,
REG64( EX_3_NET_CTRL1_WAND                                     , RULL(0x260F0045), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 270F0045,
REG64( EX_3_NET_CTRL1_WOR                                      , RULL(0x260F0046), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 270F0046,
REG64( EX_4_NET_CTRL1                                          , RULL(0x280F0044), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0044,
REG64( EX_4_NET_CTRL1_WAND                                     , RULL(0x280F0045), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 290F0045,
REG64( EX_4_NET_CTRL1_WOR                                      , RULL(0x280F0046), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 290F0046,
REG64( EX_5_NET_CTRL1                                          , RULL(0x2A0F0044), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0044,
REG64( EX_5_NET_CTRL1_WAND                                     , RULL(0x2A0F0045), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2B0F0045,
REG64( EX_5_NET_CTRL1_WOR                                      , RULL(0x2A0F0046), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 2B0F0046,
REG64( EX_6_NET_CTRL1                                          , RULL(0x2C0F0044), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0044,
REG64( EX_6_NET_CTRL1_WAND                                     , RULL(0x2C0F0045), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2D0F0045,
REG64( EX_6_NET_CTRL1_WOR                                      , RULL(0x2C0F0046), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 2D0F0046,
REG64( EX_7_NET_CTRL1                                          , RULL(0x2E0F0044), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0044,
REG64( EX_7_NET_CTRL1_WAND                                     , RULL(0x2E0F0045), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2F0F0045,
REG64( EX_7_NET_CTRL1_WOR                                      , RULL(0x2E0F0046), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 2F0F0046,
REG64( EX_8_NET_CTRL1                                          , RULL(0x300F0044), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0044,
REG64( EX_8_NET_CTRL1_WAND                                     , RULL(0x300F0045), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 310F0045,
REG64( EX_8_NET_CTRL1_WOR                                      , RULL(0x300F0046), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 310F0046,
REG64( EX_9_NET_CTRL1                                          , RULL(0x320F0044), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0044,
REG64( EX_9_NET_CTRL1_WAND                                     , RULL(0x320F0045), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_WAND ); //DUPS: 330F0045,
REG64( EX_9_NET_CTRL1_WOR                                      , RULL(0x320F0046), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_WOR ); //DUPS: 330F0046,
REG64( EX_10_NET_CTRL1                                         , RULL(0x340F0044), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0044,
REG64( EX_10_NET_CTRL1_WAND                                    , RULL(0x340F0045), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_WAND ); //DUPS: 350F0045,
REG64( EX_10_NET_CTRL1_WOR                                     , RULL(0x340F0046), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_WOR ); //DUPS: 350F0046,
REG64( EX_11_NET_CTRL1                                         , RULL(0x360F0044), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0044,
REG64( EX_11_NET_CTRL1_WAND                                    , RULL(0x360F0045), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_WAND ); //DUPS: 370F0045,
REG64( EX_11_NET_CTRL1_WOR                                     , RULL(0x360F0046), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_WOR ); //DUPS: 370F0046,
REG64( PEC_0_STACK0_NET_CTRL1                                  , RULL(0x0D0F0044), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK0_NET_CTRL1_WAND                             , RULL(0x0D0F0045), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM1_WAND );
REG64( PEC_0_STACK0_NET_CTRL1_WOR                              , RULL(0x0D0F0046), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM2_WOR );
REG64( PEC_1_STACK0_NET_CTRL1                                  , RULL(0x0E0F0044), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_NET_CTRL1_WAND                             , RULL(0x0E0F0045), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM1_WAND );
REG64( PEC_1_STACK0_NET_CTRL1_WOR                              , RULL(0x0E0F0046), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM2_WOR );
REG64( PEC_2_STACK0_NET_CTRL1                                  , RULL(0x0F0F0044), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_NET_CTRL1_WAND                             , RULL(0x0F0F0045), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM1_WAND );
REG64( PEC_2_STACK0_NET_CTRL1_WOR                              , RULL(0x0F0F0046), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM2_WOR );
REG64( PEC_STACK0_NET_CTRL1                                    , RULL(0x0D0F0044), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_NET_CTRL1_WAND                               , RULL(0x0D0F0045), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM1_WAND );
REG64( PEC_STACK0_NET_CTRL1_WOR                                , RULL(0x0D0F0046), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM2_WOR );

REG64( PEC_0_STACK0_NFIRACTION0_REG                            , RULL(0x04010C46), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK1_NFIRACTION0_REG                            , RULL(0x04010C86), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK2_NFIRACTION0_REG                            , RULL(0x04010CC6), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_NFIRACTION0_REG                            , RULL(0x04011046), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK1_NFIRACTION0_REG                            , RULL(0x04011086), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK2_NFIRACTION0_REG                            , RULL(0x040110C6), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_NFIRACTION0_REG                            , RULL(0x04011446), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK1_NFIRACTION0_REG                            , RULL(0x04011486), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK2_NFIRACTION0_REG                            , RULL(0x040114C6), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_NFIRACTION0_REG                              , RULL(0x04010C46), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK1_NFIRACTION0_REG                              , RULL(0x04010C86), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK2_NFIRACTION0_REG                              , RULL(0x04010CC6), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RW   );

REG64( PEC_0_STACK0_NFIRACTION1_REG                            , RULL(0x04010C47), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK1_NFIRACTION1_REG                            , RULL(0x04010C87), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK2_NFIRACTION1_REG                            , RULL(0x04010CC7), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_NFIRACTION1_REG                            , RULL(0x04011047), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK1_NFIRACTION1_REG                            , RULL(0x04011087), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK2_NFIRACTION1_REG                            , RULL(0x040110C7), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_NFIRACTION1_REG                            , RULL(0x04011447), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK1_NFIRACTION1_REG                            , RULL(0x04011487), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK2_NFIRACTION1_REG                            , RULL(0x040114C7), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_NFIRACTION1_REG                              , RULL(0x04010C47), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK1_NFIRACTION1_REG                              , RULL(0x04010C87), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK2_NFIRACTION1_REG                              , RULL(0x04010CC7), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RW   );

REG64( PEC_0_STACK0_NFIRMASK_REG                               , RULL(0x04010C43), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK0_NFIRMASK_REG_AND                           , RULL(0x04010C44), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM1_AND );
REG64( PEC_0_STACK0_NFIRMASK_REG_OR                            , RULL(0x04010C45), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM2_OR  );
REG64( PEC_0_STACK1_NFIRMASK_REG                               , RULL(0x04010C83), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK1_NFIRMASK_REG_AND                           , RULL(0x04010C84), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM1_AND );
REG64( PEC_0_STACK1_NFIRMASK_REG_OR                            , RULL(0x04010C85), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM2_OR  );
REG64( PEC_0_STACK2_NFIRMASK_REG                               , RULL(0x04010CC3), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK2_NFIRMASK_REG_AND                           , RULL(0x04010CC4), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM1_AND );
REG64( PEC_0_STACK2_NFIRMASK_REG_OR                            , RULL(0x04010CC5), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM2_OR  );
REG64( PEC_1_STACK0_NFIRMASK_REG                               , RULL(0x04011043), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_NFIRMASK_REG_AND                           , RULL(0x04011044), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM1_AND );
REG64( PEC_1_STACK0_NFIRMASK_REG_OR                            , RULL(0x04011045), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM2_OR  );
REG64( PEC_1_STACK1_NFIRMASK_REG                               , RULL(0x04011083), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK1_NFIRMASK_REG_AND                           , RULL(0x04011084), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM1_AND );
REG64( PEC_1_STACK1_NFIRMASK_REG_OR                            , RULL(0x04011085), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM2_OR  );
REG64( PEC_1_STACK2_NFIRMASK_REG                               , RULL(0x040110C3), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK2_NFIRMASK_REG_AND                           , RULL(0x040110C4), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM1_AND );
REG64( PEC_1_STACK2_NFIRMASK_REG_OR                            , RULL(0x040110C5), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM2_OR  );
REG64( PEC_2_STACK0_NFIRMASK_REG                               , RULL(0x04011443), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_NFIRMASK_REG_AND                           , RULL(0x04011444), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM1_AND );
REG64( PEC_2_STACK0_NFIRMASK_REG_OR                            , RULL(0x04011445), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM2_OR  );
REG64( PEC_2_STACK1_NFIRMASK_REG                               , RULL(0x04011483), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK1_NFIRMASK_REG_AND                           , RULL(0x04011484), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM1_AND );
REG64( PEC_2_STACK1_NFIRMASK_REG_OR                            , RULL(0x04011485), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM2_OR  );
REG64( PEC_2_STACK2_NFIRMASK_REG                               , RULL(0x040114C3), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK2_NFIRMASK_REG_AND                           , RULL(0x040114C4), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM1_AND );
REG64( PEC_2_STACK2_NFIRMASK_REG_OR                            , RULL(0x040114C5), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM2_OR  );
REG64( PEC_STACK0_NFIRMASK_REG                                 , RULL(0x04010C43), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_NFIRMASK_REG_AND                             , RULL(0x04010C44), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM1_AND );
REG64( PEC_STACK0_NFIRMASK_REG_OR                              , RULL(0x04010C45), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM2_OR  );
REG64( PEC_STACK1_NFIRMASK_REG                                 , RULL(0x04010C83), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK1_NFIRMASK_REG_AND                             , RULL(0x04010C84), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM1_AND );
REG64( PEC_STACK1_NFIRMASK_REG_OR                              , RULL(0x04010C85), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM2_OR  );
REG64( PEC_STACK2_NFIRMASK_REG                                 , RULL(0x04010CC3), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK2_NFIRMASK_REG_AND                             , RULL(0x04010CC4), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM1_AND );
REG64( PEC_STACK2_NFIRMASK_REG_OR                              , RULL(0x04010CC5), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM2_OR  );

REG64( PEC_0_STACK0_NFIRWOF_REG                                , RULL(0x04010C48), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_0_STACK1_NFIRWOF_REG                                , RULL(0x04010C88), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_0_STACK2_NFIRWOF_REG                                , RULL(0x04010CC8), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_1_STACK0_NFIRWOF_REG                                , RULL(0x04011048), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_1_STACK1_NFIRWOF_REG                                , RULL(0x04011088), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_1_STACK2_NFIRWOF_REG                                , RULL(0x040110C8), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_2_STACK0_NFIRWOF_REG                                , RULL(0x04011448), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_2_STACK1_NFIRWOF_REG                                , RULL(0x04011488), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_2_STACK2_NFIRWOF_REG                                , RULL(0x040114C8), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_STACK0_NFIRWOF_REG                                  , RULL(0x04010C48), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_STACK1_NFIRWOF_REG                                  , RULL(0x04010C88), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_WCLRREG );
REG64( PEC_STACK2_NFIRWOF_REG                                  , RULL(0x04010CC8), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_WCLRREG );

REG64( PEC_0_STACK0_NFIR_REG                                   , RULL(0x04010C40), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK0_NFIR_REG_AND                               , RULL(0x04010C41), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM1_AND );
REG64( PEC_0_STACK0_NFIR_REG_OR                                , RULL(0x04010C42), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM2_OR  );
REG64( PEC_0_STACK1_NFIR_REG                                   , RULL(0x04010C80), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK1_NFIR_REG_AND                               , RULL(0x04010C81), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM1_AND );
REG64( PEC_0_STACK1_NFIR_REG_OR                                , RULL(0x04010C82), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM2_OR  );
REG64( PEC_0_STACK2_NFIR_REG                                   , RULL(0x04010CC0), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK2_NFIR_REG_AND                               , RULL(0x04010CC1), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM1_AND );
REG64( PEC_0_STACK2_NFIR_REG_OR                                , RULL(0x04010CC2), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM2_OR  );
REG64( PEC_1_STACK0_NFIR_REG                                   , RULL(0x04011040), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_NFIR_REG_AND                               , RULL(0x04011041), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM1_AND );
REG64( PEC_1_STACK0_NFIR_REG_OR                                , RULL(0x04011042), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM2_OR  );
REG64( PEC_1_STACK1_NFIR_REG                                   , RULL(0x04011080), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK1_NFIR_REG_AND                               , RULL(0x04011081), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM1_AND );
REG64( PEC_1_STACK1_NFIR_REG_OR                                , RULL(0x04011082), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM2_OR  );
REG64( PEC_1_STACK2_NFIR_REG                                   , RULL(0x040110C0), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK2_NFIR_REG_AND                               , RULL(0x040110C1), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM1_AND );
REG64( PEC_1_STACK2_NFIR_REG_OR                                , RULL(0x040110C2), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM2_OR  );
REG64( PEC_2_STACK0_NFIR_REG                                   , RULL(0x04011440), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_NFIR_REG_AND                               , RULL(0x04011441), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM1_AND );
REG64( PEC_2_STACK0_NFIR_REG_OR                                , RULL(0x04011442), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM2_OR  );
REG64( PEC_2_STACK1_NFIR_REG                                   , RULL(0x04011480), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK1_NFIR_REG_AND                               , RULL(0x04011481), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM1_AND );
REG64( PEC_2_STACK1_NFIR_REG_OR                                , RULL(0x04011482), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM2_OR  );
REG64( PEC_2_STACK2_NFIR_REG                                   , RULL(0x040114C0), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK2_NFIR_REG_AND                               , RULL(0x040114C1), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM1_AND );
REG64( PEC_2_STACK2_NFIR_REG_OR                                , RULL(0x040114C2), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM2_OR  );
REG64( PEC_STACK0_NFIR_REG                                     , RULL(0x04010C40), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_NFIR_REG_AND                                 , RULL(0x04010C41), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM1_AND );
REG64( PEC_STACK0_NFIR_REG_OR                                  , RULL(0x04010C42), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM2_OR  );
REG64( PEC_STACK1_NFIR_REG                                     , RULL(0x04010C80), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK1_NFIR_REG_AND                                 , RULL(0x04010C81), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM1_AND );
REG64( PEC_STACK1_NFIR_REG_OR                                  , RULL(0x04010C82), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM2_OR  );
REG64( PEC_STACK2_NFIR_REG                                     , RULL(0x04010CC0), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK2_NFIR_REG_AND                                 , RULL(0x04010CC1), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM1_AND );
REG64( PEC_STACK2_NFIR_REG_OR                                  , RULL(0x04010CC2), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM2_OR  );

REG64( C_OCC_SCOMC                                             , RULL(0x20010A82), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_OCC_SCOMC                                           , RULL(0x20010A82), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_OCC_SCOMC                                           , RULL(0x21010A82), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_OCC_SCOMC                                           , RULL(0x22010A82), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_OCC_SCOMC                                           , RULL(0x23010A82), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_OCC_SCOMC                                           , RULL(0x24010A82), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_OCC_SCOMC                                           , RULL(0x25010A82), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_OCC_SCOMC                                           , RULL(0x26010A82), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_OCC_SCOMC                                           , RULL(0x27010A82), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_OCC_SCOMC                                           , RULL(0x28010A82), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_OCC_SCOMC                                           , RULL(0x29010A82), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_OCC_SCOMC                                          , RULL(0x2A010A82), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_OCC_SCOMC                                          , RULL(0x2B010A82), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_OCC_SCOMC                                          , RULL(0x2C010A82), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_OCC_SCOMC                                          , RULL(0x2D010A82), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_OCC_SCOMC                                          , RULL(0x2E010A82), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_OCC_SCOMC                                          , RULL(0x2F010A82), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_OCC_SCOMC                                          , RULL(0x30010A82), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_OCC_SCOMC                                          , RULL(0x31010A82), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_OCC_SCOMC                                          , RULL(0x32010A82), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_OCC_SCOMC                                          , RULL(0x33010A82), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_OCC_SCOMC                                          , RULL(0x34010A82), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_OCC_SCOMC                                          , RULL(0x35010A82), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_OCC_SCOMC                                          , RULL(0x36010A82), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_OCC_SCOMC                                          , RULL(0x37010A82), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_OCC_SCOMC                                       , RULL(0x21010A82), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A82,
REG64( EX_10_L2_OCC_SCOMC                                      , RULL(0x35010A82), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010A82,
REG64( EX_11_L2_OCC_SCOMC                                      , RULL(0x37010A82), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010A82,
REG64( EX_1_L2_OCC_SCOMC                                       , RULL(0x23010A82), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010A82,
REG64( EX_2_L2_OCC_SCOMC                                       , RULL(0x25010A82), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010A82,
REG64( EX_3_L2_OCC_SCOMC                                       , RULL(0x27010A82), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010A82,
REG64( EX_4_L2_OCC_SCOMC                                       , RULL(0x29010A82), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010A82,
REG64( EX_5_L2_OCC_SCOMC                                       , RULL(0x2B010A82), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010A82,
REG64( EX_6_L2_OCC_SCOMC                                       , RULL(0x2D010A82), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010A82,
REG64( EX_7_L2_OCC_SCOMC                                       , RULL(0x2F010A82), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010A82,
REG64( EX_8_L2_OCC_SCOMC                                       , RULL(0x31010A82), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010A82,
REG64( EX_9_L2_OCC_SCOMC                                       , RULL(0x33010A82), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010A82,
REG64( EX_L2_OCC_SCOMC                                         , RULL(0x21010A82), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A82,

REG64( C_OPCG_ALIGN                                            , RULL(0x20030001), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_OPCG_ALIGN                                          , RULL(0x20030001), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_OPCG_ALIGN                                          , RULL(0x21030001), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_OPCG_ALIGN                                          , RULL(0x22030001), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_OPCG_ALIGN                                          , RULL(0x23030001), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_OPCG_ALIGN                                          , RULL(0x24030001), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_OPCG_ALIGN                                          , RULL(0x25030001), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_OPCG_ALIGN                                          , RULL(0x26030001), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_OPCG_ALIGN                                          , RULL(0x27030001), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_OPCG_ALIGN                                          , RULL(0x28030001), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_OPCG_ALIGN                                          , RULL(0x29030001), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_OPCG_ALIGN                                         , RULL(0x2A030001), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_OPCG_ALIGN                                         , RULL(0x2B030001), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_OPCG_ALIGN                                         , RULL(0x2C030001), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_OPCG_ALIGN                                         , RULL(0x2D030001), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_OPCG_ALIGN                                         , RULL(0x2E030001), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_OPCG_ALIGN                                         , RULL(0x2F030001), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_OPCG_ALIGN                                         , RULL(0x30030001), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_OPCG_ALIGN                                         , RULL(0x31030001), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_OPCG_ALIGN                                         , RULL(0x32030001), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_OPCG_ALIGN                                         , RULL(0x33030001), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_OPCG_ALIGN                                         , RULL(0x34030001), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_OPCG_ALIGN                                         , RULL(0x35030001), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_OPCG_ALIGN                                         , RULL(0x36030001), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_OPCG_ALIGN                                         , RULL(0x37030001), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_OPCG_ALIGN                                           , RULL(0x10030001), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_OPCG_ALIGN                                         , RULL(0x10030001), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_OPCG_ALIGN                                         , RULL(0x11030001), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_OPCG_ALIGN                                         , RULL(0x12030001), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_OPCG_ALIGN                                         , RULL(0x13030001), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_OPCG_ALIGN                                         , RULL(0x14030001), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_OPCG_ALIGN                                         , RULL(0x15030001), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_OPCG_ALIGN                                           , RULL(0x20030001), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030001,
REG64( EX_0_OPCG_ALIGN                                         , RULL(0x20030001), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030001,
REG64( EX_1_OPCG_ALIGN                                         , RULL(0x22030001), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030001,
REG64( EX_2_OPCG_ALIGN                                         , RULL(0x24030001), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030001,
REG64( EX_3_OPCG_ALIGN                                         , RULL(0x26030001), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030001,
REG64( EX_4_OPCG_ALIGN                                         , RULL(0x28030001), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030001,
REG64( EX_5_OPCG_ALIGN                                         , RULL(0x2A030001), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030001,
REG64( EX_6_OPCG_ALIGN                                         , RULL(0x2C030001), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030001,
REG64( EX_7_OPCG_ALIGN                                         , RULL(0x2E030001), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030001,
REG64( EX_8_OPCG_ALIGN                                         , RULL(0x30030001), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030001,
REG64( EX_9_OPCG_ALIGN                                         , RULL(0x32030001), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030001,
REG64( EX_10_OPCG_ALIGN                                        , RULL(0x34030001), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030001,
REG64( EX_11_OPCG_ALIGN                                        , RULL(0x36030001), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030001,

REG64( PEC_0_OPCG_ALIGN                                        , RULL(0x0D030001), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_OPCG_ALIGN                                        , RULL(0x0E030001), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_OPCG_ALIGN                                        , RULL(0x0F030001), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_OPCG_CAPT1                                            , RULL(0x20030010), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_OPCG_CAPT1                                          , RULL(0x20030010), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_OPCG_CAPT1                                          , RULL(0x21030010), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_OPCG_CAPT1                                          , RULL(0x22030010), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_OPCG_CAPT1                                          , RULL(0x23030010), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_OPCG_CAPT1                                          , RULL(0x24030010), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_OPCG_CAPT1                                          , RULL(0x25030010), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_OPCG_CAPT1                                          , RULL(0x26030010), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_OPCG_CAPT1                                          , RULL(0x27030010), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_OPCG_CAPT1                                          , RULL(0x28030010), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_OPCG_CAPT1                                          , RULL(0x29030010), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_OPCG_CAPT1                                         , RULL(0x2A030010), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_OPCG_CAPT1                                         , RULL(0x2B030010), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_OPCG_CAPT1                                         , RULL(0x2C030010), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_OPCG_CAPT1                                         , RULL(0x2D030010), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_OPCG_CAPT1                                         , RULL(0x2E030010), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_OPCG_CAPT1                                         , RULL(0x2F030010), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_OPCG_CAPT1                                         , RULL(0x30030010), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_OPCG_CAPT1                                         , RULL(0x31030010), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_OPCG_CAPT1                                         , RULL(0x32030010), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_OPCG_CAPT1                                         , RULL(0x33030010), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_OPCG_CAPT1                                         , RULL(0x34030010), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_OPCG_CAPT1                                         , RULL(0x35030010), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_OPCG_CAPT1                                         , RULL(0x36030010), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_OPCG_CAPT1                                         , RULL(0x37030010), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_OPCG_CAPT1                                           , RULL(0x10030010), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_OPCG_CAPT1                                         , RULL(0x10030010), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_OPCG_CAPT1                                         , RULL(0x11030010), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_OPCG_CAPT1                                         , RULL(0x12030010), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_OPCG_CAPT1                                         , RULL(0x13030010), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_OPCG_CAPT1                                         , RULL(0x14030010), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_OPCG_CAPT1                                         , RULL(0x15030010), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_OPCG_CAPT1                                           , RULL(0x20030010), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030010,
REG64( EX_0_OPCG_CAPT1                                         , RULL(0x20030010), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030010,
REG64( EX_1_OPCG_CAPT1                                         , RULL(0x22030010), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030010,
REG64( EX_2_OPCG_CAPT1                                         , RULL(0x24030010), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030010,
REG64( EX_3_OPCG_CAPT1                                         , RULL(0x26030010), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030010,
REG64( EX_4_OPCG_CAPT1                                         , RULL(0x28030010), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030010,
REG64( EX_5_OPCG_CAPT1                                         , RULL(0x2A030010), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030010,
REG64( EX_6_OPCG_CAPT1                                         , RULL(0x2C030010), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030010,
REG64( EX_7_OPCG_CAPT1                                         , RULL(0x2E030010), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030010,
REG64( EX_8_OPCG_CAPT1                                         , RULL(0x30030010), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030010,
REG64( EX_9_OPCG_CAPT1                                         , RULL(0x32030010), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030010,
REG64( EX_10_OPCG_CAPT1                                        , RULL(0x34030010), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030010,
REG64( EX_11_OPCG_CAPT1                                        , RULL(0x36030010), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030010,

REG64( PEC_0_OPCG_CAPT1                                        , RULL(0x0D030010), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_OPCG_CAPT1                                        , RULL(0x0E030010), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_OPCG_CAPT1                                        , RULL(0x0F030010), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_OPCG_CAPT2                                            , RULL(0x20030011), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_OPCG_CAPT2                                          , RULL(0x20030011), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_OPCG_CAPT2                                          , RULL(0x21030011), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_OPCG_CAPT2                                          , RULL(0x22030011), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_OPCG_CAPT2                                          , RULL(0x23030011), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_OPCG_CAPT2                                          , RULL(0x24030011), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_OPCG_CAPT2                                          , RULL(0x25030011), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_OPCG_CAPT2                                          , RULL(0x26030011), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_OPCG_CAPT2                                          , RULL(0x27030011), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_OPCG_CAPT2                                          , RULL(0x28030011), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_OPCG_CAPT2                                          , RULL(0x29030011), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_OPCG_CAPT2                                         , RULL(0x2A030011), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_OPCG_CAPT2                                         , RULL(0x2B030011), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_OPCG_CAPT2                                         , RULL(0x2C030011), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_OPCG_CAPT2                                         , RULL(0x2D030011), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_OPCG_CAPT2                                         , RULL(0x2E030011), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_OPCG_CAPT2                                         , RULL(0x2F030011), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_OPCG_CAPT2                                         , RULL(0x30030011), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_OPCG_CAPT2                                         , RULL(0x31030011), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_OPCG_CAPT2                                         , RULL(0x32030011), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_OPCG_CAPT2                                         , RULL(0x33030011), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_OPCG_CAPT2                                         , RULL(0x34030011), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_OPCG_CAPT2                                         , RULL(0x35030011), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_OPCG_CAPT2                                         , RULL(0x36030011), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_OPCG_CAPT2                                         , RULL(0x37030011), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_OPCG_CAPT2                                           , RULL(0x10030011), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_OPCG_CAPT2                                         , RULL(0x10030011), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_OPCG_CAPT2                                         , RULL(0x11030011), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_OPCG_CAPT2                                         , RULL(0x12030011), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_OPCG_CAPT2                                         , RULL(0x13030011), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_OPCG_CAPT2                                         , RULL(0x14030011), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_OPCG_CAPT2                                         , RULL(0x15030011), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_OPCG_CAPT2                                           , RULL(0x20030011), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030011,
REG64( EX_0_OPCG_CAPT2                                         , RULL(0x20030011), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030011,
REG64( EX_1_OPCG_CAPT2                                         , RULL(0x22030011), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030011,
REG64( EX_2_OPCG_CAPT2                                         , RULL(0x24030011), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030011,
REG64( EX_3_OPCG_CAPT2                                         , RULL(0x26030011), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030011,
REG64( EX_4_OPCG_CAPT2                                         , RULL(0x28030011), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030011,
REG64( EX_5_OPCG_CAPT2                                         , RULL(0x2A030011), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030011,
REG64( EX_6_OPCG_CAPT2                                         , RULL(0x2C030011), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030011,
REG64( EX_7_OPCG_CAPT2                                         , RULL(0x2E030011), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030011,
REG64( EX_8_OPCG_CAPT2                                         , RULL(0x30030011), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030011,
REG64( EX_9_OPCG_CAPT2                                         , RULL(0x32030011), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030011,
REG64( EX_10_OPCG_CAPT2                                        , RULL(0x34030011), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030011,
REG64( EX_11_OPCG_CAPT2                                        , RULL(0x36030011), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030011,

REG64( PEC_0_OPCG_CAPT2                                        , RULL(0x0D030011), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_OPCG_CAPT2                                        , RULL(0x0E030011), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_OPCG_CAPT2                                        , RULL(0x0F030011), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_OPCG_CAPT3                                            , RULL(0x20030012), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_OPCG_CAPT3                                          , RULL(0x20030012), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_OPCG_CAPT3                                          , RULL(0x21030012), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_OPCG_CAPT3                                          , RULL(0x22030012), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_OPCG_CAPT3                                          , RULL(0x23030012), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_OPCG_CAPT3                                          , RULL(0x24030012), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_OPCG_CAPT3                                          , RULL(0x25030012), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_OPCG_CAPT3                                          , RULL(0x26030012), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_OPCG_CAPT3                                          , RULL(0x27030012), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_OPCG_CAPT3                                          , RULL(0x28030012), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_OPCG_CAPT3                                          , RULL(0x29030012), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_OPCG_CAPT3                                         , RULL(0x2A030012), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_OPCG_CAPT3                                         , RULL(0x2B030012), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_OPCG_CAPT3                                         , RULL(0x2C030012), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_OPCG_CAPT3                                         , RULL(0x2D030012), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_OPCG_CAPT3                                         , RULL(0x2E030012), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_OPCG_CAPT3                                         , RULL(0x2F030012), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_OPCG_CAPT3                                         , RULL(0x30030012), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_OPCG_CAPT3                                         , RULL(0x31030012), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_OPCG_CAPT3                                         , RULL(0x32030012), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_OPCG_CAPT3                                         , RULL(0x33030012), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_OPCG_CAPT3                                         , RULL(0x34030012), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_OPCG_CAPT3                                         , RULL(0x35030012), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_OPCG_CAPT3                                         , RULL(0x36030012), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_OPCG_CAPT3                                         , RULL(0x37030012), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_OPCG_CAPT3                                           , RULL(0x10030012), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_OPCG_CAPT3                                         , RULL(0x10030012), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_OPCG_CAPT3                                         , RULL(0x11030012), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_OPCG_CAPT3                                         , RULL(0x12030012), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_OPCG_CAPT3                                         , RULL(0x13030012), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_OPCG_CAPT3                                         , RULL(0x14030012), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_OPCG_CAPT3                                         , RULL(0x15030012), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_OPCG_CAPT3                                           , RULL(0x20030012), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030012,
REG64( EX_0_OPCG_CAPT3                                         , RULL(0x20030012), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030012,
REG64( EX_1_OPCG_CAPT3                                         , RULL(0x22030012), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030012,
REG64( EX_2_OPCG_CAPT3                                         , RULL(0x24030012), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030012,
REG64( EX_3_OPCG_CAPT3                                         , RULL(0x26030012), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030012,
REG64( EX_4_OPCG_CAPT3                                         , RULL(0x28030012), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030012,
REG64( EX_5_OPCG_CAPT3                                         , RULL(0x2A030012), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030012,
REG64( EX_6_OPCG_CAPT3                                         , RULL(0x2C030012), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030012,
REG64( EX_7_OPCG_CAPT3                                         , RULL(0x2E030012), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030012,
REG64( EX_8_OPCG_CAPT3                                         , RULL(0x30030012), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030012,
REG64( EX_9_OPCG_CAPT3                                         , RULL(0x32030012), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030012,
REG64( EX_10_OPCG_CAPT3                                        , RULL(0x34030012), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030012,
REG64( EX_11_OPCG_CAPT3                                        , RULL(0x36030012), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030012,

REG64( PEC_0_OPCG_CAPT3                                        , RULL(0x0D030012), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_OPCG_CAPT3                                        , RULL(0x0E030012), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_OPCG_CAPT3                                        , RULL(0x0F030012), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_OPCG_REG0                                             , RULL(0x20030002), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_OPCG_REG0                                           , RULL(0x20030002), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_OPCG_REG0                                           , RULL(0x21030002), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_OPCG_REG0                                           , RULL(0x22030002), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_OPCG_REG0                                           , RULL(0x23030002), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_OPCG_REG0                                           , RULL(0x24030002), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_OPCG_REG0                                           , RULL(0x25030002), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_OPCG_REG0                                           , RULL(0x26030002), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_OPCG_REG0                                           , RULL(0x27030002), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_OPCG_REG0                                           , RULL(0x28030002), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_OPCG_REG0                                           , RULL(0x29030002), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_OPCG_REG0                                          , RULL(0x2A030002), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_OPCG_REG0                                          , RULL(0x2B030002), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_OPCG_REG0                                          , RULL(0x2C030002), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_OPCG_REG0                                          , RULL(0x2D030002), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_OPCG_REG0                                          , RULL(0x2E030002), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_OPCG_REG0                                          , RULL(0x2F030002), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_OPCG_REG0                                          , RULL(0x30030002), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_OPCG_REG0                                          , RULL(0x31030002), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_OPCG_REG0                                          , RULL(0x32030002), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_OPCG_REG0                                          , RULL(0x33030002), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_OPCG_REG0                                          , RULL(0x34030002), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_OPCG_REG0                                          , RULL(0x35030002), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_OPCG_REG0                                          , RULL(0x36030002), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_OPCG_REG0                                          , RULL(0x37030002), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_OPCG_REG0                                            , RULL(0x10030002), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_OPCG_REG0                                          , RULL(0x10030002), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_OPCG_REG0                                          , RULL(0x11030002), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_OPCG_REG0                                          , RULL(0x12030002), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_OPCG_REG0                                          , RULL(0x13030002), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_OPCG_REG0                                          , RULL(0x14030002), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_OPCG_REG0                                          , RULL(0x15030002), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_OPCG_REG0                                            , RULL(0x20030002), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030002,
REG64( EX_0_OPCG_REG0                                          , RULL(0x20030002), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030002,
REG64( EX_1_OPCG_REG0                                          , RULL(0x22030002), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030002,
REG64( EX_2_OPCG_REG0                                          , RULL(0x24030002), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030002,
REG64( EX_3_OPCG_REG0                                          , RULL(0x26030002), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030002,
REG64( EX_4_OPCG_REG0                                          , RULL(0x28030002), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030002,
REG64( EX_5_OPCG_REG0                                          , RULL(0x2A030002), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030002,
REG64( EX_6_OPCG_REG0                                          , RULL(0x2C030002), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030002,
REG64( EX_7_OPCG_REG0                                          , RULL(0x2E030002), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030002,
REG64( EX_8_OPCG_REG0                                          , RULL(0x30030002), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030002,
REG64( EX_9_OPCG_REG0                                          , RULL(0x32030002), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030002,
REG64( EX_10_OPCG_REG0                                         , RULL(0x34030002), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030002,
REG64( EX_11_OPCG_REG0                                         , RULL(0x36030002), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030002,

REG64( PEC_0_OPCG_REG0                                         , RULL(0x0D030002), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_OPCG_REG0                                         , RULL(0x0E030002), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_OPCG_REG0                                         , RULL(0x0F030002), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_OPCG_REG1                                             , RULL(0x20030003), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_OPCG_REG1                                           , RULL(0x20030003), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_OPCG_REG1                                           , RULL(0x21030003), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_OPCG_REG1                                           , RULL(0x22030003), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_OPCG_REG1                                           , RULL(0x23030003), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_OPCG_REG1                                           , RULL(0x24030003), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_OPCG_REG1                                           , RULL(0x25030003), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_OPCG_REG1                                           , RULL(0x26030003), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_OPCG_REG1                                           , RULL(0x27030003), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_OPCG_REG1                                           , RULL(0x28030003), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_OPCG_REG1                                           , RULL(0x29030003), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_OPCG_REG1                                          , RULL(0x2A030003), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_OPCG_REG1                                          , RULL(0x2B030003), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_OPCG_REG1                                          , RULL(0x2C030003), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_OPCG_REG1                                          , RULL(0x2D030003), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_OPCG_REG1                                          , RULL(0x2E030003), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_OPCG_REG1                                          , RULL(0x2F030003), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_OPCG_REG1                                          , RULL(0x30030003), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_OPCG_REG1                                          , RULL(0x31030003), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_OPCG_REG1                                          , RULL(0x32030003), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_OPCG_REG1                                          , RULL(0x33030003), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_OPCG_REG1                                          , RULL(0x34030003), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_OPCG_REG1                                          , RULL(0x35030003), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_OPCG_REG1                                          , RULL(0x36030003), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_OPCG_REG1                                          , RULL(0x37030003), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_OPCG_REG1                                            , RULL(0x10030003), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_OPCG_REG1                                          , RULL(0x10030003), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_OPCG_REG1                                          , RULL(0x11030003), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_OPCG_REG1                                          , RULL(0x12030003), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_OPCG_REG1                                          , RULL(0x13030003), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_OPCG_REG1                                          , RULL(0x14030003), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_OPCG_REG1                                          , RULL(0x15030003), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_OPCG_REG1                                            , RULL(0x20030003), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030003,
REG64( EX_0_OPCG_REG1                                          , RULL(0x20030003), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030003,
REG64( EX_1_OPCG_REG1                                          , RULL(0x22030003), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030003,
REG64( EX_2_OPCG_REG1                                          , RULL(0x24030003), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030003,
REG64( EX_3_OPCG_REG1                                          , RULL(0x26030003), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030003,
REG64( EX_4_OPCG_REG1                                          , RULL(0x28030003), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030003,
REG64( EX_5_OPCG_REG1                                          , RULL(0x2A030003), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030003,
REG64( EX_6_OPCG_REG1                                          , RULL(0x2C030003), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030003,
REG64( EX_7_OPCG_REG1                                          , RULL(0x2E030003), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030003,
REG64( EX_8_OPCG_REG1                                          , RULL(0x30030003), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030003,
REG64( EX_9_OPCG_REG1                                          , RULL(0x32030003), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030003,
REG64( EX_10_OPCG_REG1                                         , RULL(0x34030003), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030003,
REG64( EX_11_OPCG_REG1                                         , RULL(0x36030003), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030003,

REG64( PEC_0_OPCG_REG1                                         , RULL(0x0D030003), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_OPCG_REG1                                         , RULL(0x0E030003), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_OPCG_REG1                                         , RULL(0x0F030003), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_OPCG_REG2                                             , RULL(0x20030004), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_OPCG_REG2                                           , RULL(0x20030004), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_OPCG_REG2                                           , RULL(0x21030004), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_OPCG_REG2                                           , RULL(0x22030004), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_OPCG_REG2                                           , RULL(0x23030004), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_OPCG_REG2                                           , RULL(0x24030004), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_OPCG_REG2                                           , RULL(0x25030004), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_OPCG_REG2                                           , RULL(0x26030004), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_OPCG_REG2                                           , RULL(0x27030004), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_OPCG_REG2                                           , RULL(0x28030004), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_OPCG_REG2                                           , RULL(0x29030004), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_OPCG_REG2                                          , RULL(0x2A030004), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_OPCG_REG2                                          , RULL(0x2B030004), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_OPCG_REG2                                          , RULL(0x2C030004), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_OPCG_REG2                                          , RULL(0x2D030004), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_OPCG_REG2                                          , RULL(0x2E030004), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_OPCG_REG2                                          , RULL(0x2F030004), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_OPCG_REG2                                          , RULL(0x30030004), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_OPCG_REG2                                          , RULL(0x31030004), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_OPCG_REG2                                          , RULL(0x32030004), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_OPCG_REG2                                          , RULL(0x33030004), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_OPCG_REG2                                          , RULL(0x34030004), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_OPCG_REG2                                          , RULL(0x35030004), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_OPCG_REG2                                          , RULL(0x36030004), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_OPCG_REG2                                          , RULL(0x37030004), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_OPCG_REG2                                            , RULL(0x10030004), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_OPCG_REG2                                          , RULL(0x10030004), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_OPCG_REG2                                          , RULL(0x11030004), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_OPCG_REG2                                          , RULL(0x12030004), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_OPCG_REG2                                          , RULL(0x13030004), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_OPCG_REG2                                          , RULL(0x14030004), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_OPCG_REG2                                          , RULL(0x15030004), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_OPCG_REG2                                            , RULL(0x20030004), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030004,
REG64( EX_0_OPCG_REG2                                          , RULL(0x20030004), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030004,
REG64( EX_1_OPCG_REG2                                          , RULL(0x22030004), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030004,
REG64( EX_2_OPCG_REG2                                          , RULL(0x24030004), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030004,
REG64( EX_3_OPCG_REG2                                          , RULL(0x26030004), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030004,
REG64( EX_4_OPCG_REG2                                          , RULL(0x28030004), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030004,
REG64( EX_5_OPCG_REG2                                          , RULL(0x2A030004), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030004,
REG64( EX_6_OPCG_REG2                                          , RULL(0x2C030004), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030004,
REG64( EX_7_OPCG_REG2                                          , RULL(0x2E030004), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030004,
REG64( EX_8_OPCG_REG2                                          , RULL(0x30030004), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030004,
REG64( EX_9_OPCG_REG2                                          , RULL(0x32030004), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030004,
REG64( EX_10_OPCG_REG2                                         , RULL(0x34030004), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030004,
REG64( EX_11_OPCG_REG2                                         , RULL(0x36030004), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030004,

REG64( PEC_0_OPCG_REG2                                         , RULL(0x0D030004), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_OPCG_REG2                                         , RULL(0x0E030004), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_OPCG_REG2                                         , RULL(0x0F030004), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_0_PBAIBHWCFG_REG                                    , RULL(0x0D010800), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_PBAIBHWCFG_REG                                    , RULL(0x0E010800), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_PBAIBHWCFG_REG                                    , RULL(0x0F010800), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( PEC_0_PBCQEINJ_REG                                      , RULL(0x04010C02), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_PBCQEINJ_REG                                      , RULL(0x04011002), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_PBCQEINJ_REG                                      , RULL(0x04011402), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( PEC_0_PBCQHWCFG_REG                                     , RULL(0x04010C00), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_PBCQHWCFG_REG                                     , RULL(0x04011000), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_PBCQHWCFG_REG                                     , RULL(0x04011400), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( PEC_0_STACK0_PBCQMODE_REG                               , RULL(0x04010C4D), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK1_PBCQMODE_REG                               , RULL(0x04010C8D), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK2_PBCQMODE_REG                               , RULL(0x04010CCD), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_PBCQMODE_REG                               , RULL(0x0401104D), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK1_PBCQMODE_REG                               , RULL(0x0401108D), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK2_PBCQMODE_REG                               , RULL(0x040110CD), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_PBCQMODE_REG                               , RULL(0x0401144D), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK1_PBCQMODE_REG                               , RULL(0x0401148D), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK2_PBCQMODE_REG                               , RULL(0x040114CD), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_PBCQMODE_REG                                 , RULL(0x04010C4D), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK1_PBCQMODE_REG                                 , RULL(0x04010C8D), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK2_PBCQMODE_REG                                 , RULL(0x04010CCD), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RW   );

REG64( C_PB_PSAVE_TDM_HIST                                     , RULL(0x2000041F), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_PB_PSAVE_TDM_HIST                                   , RULL(0x2000041F), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( EX_PB_PSAVE_TDM_HIST                                    , RULL(0x2000041F), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_PB_PSAVE_TDM_HIST                                  , RULL(0x2000041F), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );

REG64( EQ_PB_PSAVE_X1_HIST                                     , RULL(0x1000041D), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_PB_PSAVE_X1_HIST                                   , RULL(0x1000041D), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );

REG64( C_PB_PSAVE_X2_HIST                                      , RULL(0x2000041E), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_PB_PSAVE_X2_HIST                                    , RULL(0x2000041E), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( EX_PB_PSAVE_X2_HIST                                     , RULL(0x2000041E), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_PB_PSAVE_X2_HIST                                   , RULL(0x2000041E), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );

REG64( PEC_0_PCS_M1_CONTROL_REG                                , RULL(0x80000C010D010C3F), SH_UNT_PEC_0    ,
       SH_ACS_SCOM      );
REG64( PEC_1_PCS_M1_CONTROL_REG                                , RULL(0x80000C010E010C3F), SH_UNT_PEC_1    ,
       SH_ACS_SCOM      );
REG64( PEC_2_PCS_M1_CONTROL_REG                                , RULL(0x80000C010F010C3F), SH_UNT_PEC_2    ,
       SH_ACS_SCOM      );

REG64( PEC_0_PCS_M2_CONTROL_REG                                , RULL(0x80000C020D010C3F), SH_UNT_PEC_0    ,
       SH_ACS_SCOM      );
REG64( PEC_1_PCS_M2_CONTROL_REG                                , RULL(0x80000C020E010C3F), SH_UNT_PEC_1    ,
       SH_ACS_SCOM      );
REG64( PEC_2_PCS_M2_CONTROL_REG                                , RULL(0x80000C020F010C3F), SH_UNT_PEC_2    ,
       SH_ACS_SCOM      );

REG64( PEC_0_PCS_M3_CONTROL_REG                                , RULL(0x80000C030D010C3F), SH_UNT_PEC_0    ,
       SH_ACS_SCOM      );
REG64( PEC_1_PCS_M3_CONTROL_REG                                , RULL(0x80000C030E010C3F), SH_UNT_PEC_1    ,
       SH_ACS_SCOM      );
REG64( PEC_2_PCS_M3_CONTROL_REG                                , RULL(0x80000C030F010C3F), SH_UNT_PEC_2    ,
       SH_ACS_SCOM      );

REG64( PEC_0_PCS_M4_CONTROL_REG                                , RULL(0x80000C040D010C3F), SH_UNT_PEC_0    ,
       SH_ACS_SCOM      );
REG64( PEC_1_PCS_M4_CONTROL_REG                                , RULL(0x80000C040E010C3F), SH_UNT_PEC_1    ,
       SH_ACS_SCOM      );
REG64( PEC_2_PCS_M4_CONTROL_REG                                , RULL(0x80000C040F010C3F), SH_UNT_PEC_2    ,
       SH_ACS_SCOM      );

REG64( PEC_0_PCS_SYS_CONTROL_REG                               , RULL(0x80000C000D010C3F), SH_UNT_PEC_0    ,
       SH_ACS_SCOM      );
REG64( PEC_1_PCS_SYS_CONTROL_REG                               , RULL(0x80000C000E010C3F), SH_UNT_PEC_1    ,
       SH_ACS_SCOM      );
REG64( PEC_2_PCS_SYS_CONTROL_REG                               , RULL(0x80000C000F010C3F), SH_UNT_PEC_2    ,
       SH_ACS_SCOM      );

REG64( PEC_0_PECAPP_CNTL_REG                                   , RULL(0x04010C07), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_PECAPP_CNTL_REG                                   , RULL(0x04011007), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_PECAPP_CNTL_REG                                   , RULL(0x04011407), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( PEC_0_PECAPP_SEC_BAR                                    , RULL(0x0D010801), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_PECAPP_SEC_BAR                                    , RULL(0x0E010801), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_PECAPP_SEC_BAR                                    , RULL(0x0F010801), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_0_STACK0_PE_DFREEZE_REG                             , RULL(0x04010C55), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK1_PE_DFREEZE_REG                             , RULL(0x04010C95), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_0_STACK2_PE_DFREEZE_REG                             , RULL(0x04010CD5), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK0_PE_DFREEZE_REG                             , RULL(0x04011055), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK1_PE_DFREEZE_REG                             , RULL(0x04011095), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_1_STACK2_PE_DFREEZE_REG                             , RULL(0x040110D5), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK0_PE_DFREEZE_REG                             , RULL(0x04011455), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK1_PE_DFREEZE_REG                             , RULL(0x04011495), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_2_STACK2_PE_DFREEZE_REG                             , RULL(0x040114D5), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK0_PE_DFREEZE_REG                               , RULL(0x04010C55), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK1_PE_DFREEZE_REG                               , RULL(0x04010C95), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM_RW   );
REG64( PEC_STACK2_PE_DFREEZE_REG                               , RULL(0x04010CD5), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM_RW   );

REG64( PEC_0_STACK0_PHBBAR_REG                                 , RULL(0x04010C52), SH_UNT_PEC_0_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK1_PHBBAR_REG                                 , RULL(0x04010C92), SH_UNT_PEC_0_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_0_STACK2_PHBBAR_REG                                 , RULL(0x04010CD2), SH_UNT_PEC_0_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK0_PHBBAR_REG                                 , RULL(0x04011052), SH_UNT_PEC_1_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK1_PHBBAR_REG                                 , RULL(0x04011092), SH_UNT_PEC_1_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_1_STACK2_PHBBAR_REG                                 , RULL(0x040110D2), SH_UNT_PEC_1_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK0_PHBBAR_REG                                 , RULL(0x04011452), SH_UNT_PEC_2_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK1_PHBBAR_REG                                 , RULL(0x04011492), SH_UNT_PEC_2_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_2_STACK2_PHBBAR_REG                                 , RULL(0x040114D2), SH_UNT_PEC_2_STACK2,
       SH_ACS_SCOM      );
REG64( PEC_STACK0_PHBBAR_REG                                   , RULL(0x04010C52), SH_UNT_PEC_STACK0,
       SH_ACS_SCOM      );
REG64( PEC_STACK1_PHBBAR_REG                                   , RULL(0x04010C92), SH_UNT_PEC_STACK1,
       SH_ACS_SCOM      );
REG64( PEC_STACK2_PHBBAR_REG                                   , RULL(0x04010CD2), SH_UNT_PEC_STACK2,
       SH_ACS_SCOM      );

REG64( EQ_PHYP_PURGE_CMD_REG                                   , RULL(0x1001080F), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10010C0F,
REG64( EQ_0_PHYP_PURGE_CMD_REG                                 , RULL(0x1001080F), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10010C0F,
REG64( EQ_1_PHYP_PURGE_CMD_REG                                 , RULL(0x1101080F), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11010C0F,
REG64( EQ_2_PHYP_PURGE_CMD_REG                                 , RULL(0x1201080F), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12010C0F,
REG64( EQ_3_PHYP_PURGE_CMD_REG                                 , RULL(0x1301080F), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13010C0F,
REG64( EQ_4_PHYP_PURGE_CMD_REG                                 , RULL(0x1401080F), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14010C0F,
REG64( EQ_5_PHYP_PURGE_CMD_REG                                 , RULL(0x1501080F), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15010C0F,
REG64( EX_PHYP_PURGE_CMD_REG                                   , RULL(0x1001080F), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_PHYP_PURGE_CMD_REG                                 , RULL(0x1001080F), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_PHYP_PURGE_CMD_REG                                 , RULL(0x10010C0F), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_PHYP_PURGE_CMD_REG                                 , RULL(0x1101080F), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_PHYP_PURGE_CMD_REG                                 , RULL(0x11010C0F), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_PHYP_PURGE_CMD_REG                                 , RULL(0x1201080F), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_PHYP_PURGE_CMD_REG                                 , RULL(0x12010C0F), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_PHYP_PURGE_CMD_REG                                 , RULL(0x1301080F), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_PHYP_PURGE_CMD_REG                                 , RULL(0x13010C0F), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_PHYP_PURGE_CMD_REG                                 , RULL(0x1401080F), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_PHYP_PURGE_CMD_REG                                 , RULL(0x14010C0F), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_PHYP_PURGE_CMD_REG                                , RULL(0x1501080F), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_PHYP_PURGE_CMD_REG                                , RULL(0x15010C0F), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_PHYP_PURGE_REG                                       , RULL(0x10011814), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C14,
REG64( EQ_0_PHYP_PURGE_REG                                     , RULL(0x10011814), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C14,
REG64( EQ_1_PHYP_PURGE_REG                                     , RULL(0x11011814), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C14,
REG64( EQ_2_PHYP_PURGE_REG                                     , RULL(0x12011814), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C14,
REG64( EQ_3_PHYP_PURGE_REG                                     , RULL(0x13011814), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C14,
REG64( EQ_4_PHYP_PURGE_REG                                     , RULL(0x14011814), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C14,
REG64( EQ_5_PHYP_PURGE_REG                                     , RULL(0x15011814), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C14,
REG64( EX_0_L3_PHYP_PURGE_REG                                  , RULL(0x10011814), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_PHYP_PURGE_REG                                 , RULL(0x15011814), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_PHYP_PURGE_REG                                 , RULL(0x15011C14), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_PHYP_PURGE_REG                                  , RULL(0x10011C14), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_PHYP_PURGE_REG                                  , RULL(0x11011814), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_PHYP_PURGE_REG                                  , RULL(0x11011C14), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_PHYP_PURGE_REG                                  , RULL(0x12011814), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_PHYP_PURGE_REG                                  , RULL(0x12011C14), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_PHYP_PURGE_REG                                  , RULL(0x13011814), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_PHYP_PURGE_REG                                  , RULL(0x13011C14), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_PHYP_PURGE_REG                                  , RULL(0x14011814), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_PHYP_PURGE_REG                                  , RULL(0x14011C14), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_PHYP_PURGE_REG                                    , RULL(0x10011814), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( C_PLL_LOCK_REG                                          , RULL(0x200F0019), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PLL_LOCK_REG                                        , RULL(0x200F0019), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PLL_LOCK_REG                                        , RULL(0x210F0019), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PLL_LOCK_REG                                        , RULL(0x220F0019), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PLL_LOCK_REG                                        , RULL(0x230F0019), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PLL_LOCK_REG                                        , RULL(0x240F0019), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PLL_LOCK_REG                                        , RULL(0x250F0019), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PLL_LOCK_REG                                        , RULL(0x260F0019), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PLL_LOCK_REG                                        , RULL(0x270F0019), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PLL_LOCK_REG                                        , RULL(0x280F0019), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PLL_LOCK_REG                                        , RULL(0x290F0019), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PLL_LOCK_REG                                       , RULL(0x2A0F0019), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PLL_LOCK_REG                                       , RULL(0x2B0F0019), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PLL_LOCK_REG                                       , RULL(0x2C0F0019), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PLL_LOCK_REG                                       , RULL(0x2D0F0019), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PLL_LOCK_REG                                       , RULL(0x2E0F0019), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PLL_LOCK_REG                                       , RULL(0x2F0F0019), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PLL_LOCK_REG                                       , RULL(0x300F0019), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PLL_LOCK_REG                                       , RULL(0x310F0019), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PLL_LOCK_REG                                       , RULL(0x320F0019), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PLL_LOCK_REG                                       , RULL(0x330F0019), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PLL_LOCK_REG                                       , RULL(0x340F0019), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PLL_LOCK_REG                                       , RULL(0x350F0019), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PLL_LOCK_REG                                       , RULL(0x360F0019), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PLL_LOCK_REG                                       , RULL(0x370F0019), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PLL_LOCK_REG                                         , RULL(0x100F0019), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PLL_LOCK_REG                                       , RULL(0x100F0019), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PLL_LOCK_REG                                       , RULL(0x110F0019), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PLL_LOCK_REG                                       , RULL(0x120F0019), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PLL_LOCK_REG                                       , RULL(0x130F0019), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PLL_LOCK_REG                                       , RULL(0x140F0019), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PLL_LOCK_REG                                       , RULL(0x150F0019), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PLL_LOCK_REG                                         , RULL(0x200F0019), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0019,
REG64( EX_0_PLL_LOCK_REG                                       , RULL(0x200F0019), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0019,
REG64( EX_1_PLL_LOCK_REG                                       , RULL(0x230F0019), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0019,
REG64( EX_2_PLL_LOCK_REG                                       , RULL(0x240F0019), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0019,
REG64( EX_3_PLL_LOCK_REG                                       , RULL(0x260F0019), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0019,
REG64( EX_4_PLL_LOCK_REG                                       , RULL(0x280F0019), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0019,
REG64( EX_5_PLL_LOCK_REG                                       , RULL(0x2A0F0019), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0019,
REG64( EX_6_PLL_LOCK_REG                                       , RULL(0x2C0F0019), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0019,
REG64( EX_7_PLL_LOCK_REG                                       , RULL(0x2E0F0019), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0019,
REG64( EX_8_PLL_LOCK_REG                                       , RULL(0x300F0019), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0019,
REG64( EX_9_PLL_LOCK_REG                                       , RULL(0x320F0019), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0019,
REG64( EX_10_PLL_LOCK_REG                                      , RULL(0x340F0019), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0019,
REG64( EX_11_PLL_LOCK_REG                                      , RULL(0x360F0019), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0019,

REG64( PEC_0_PLL_LOCK_REG                                      , RULL(0x0D0F0019), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_PLL_LOCK_REG                                      , RULL(0x0E0F0019), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_PLL_LOCK_REG                                      , RULL(0x0F0F0019), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_0_PMONCTL_REG                                       , RULL(0x04010C04), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_PMONCTL_REG                                       , RULL(0x04011004), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_PMONCTL_REG                                       , RULL(0x04011404), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_PMU_HOLD_OUT                                          , RULL(0x20010ABC), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PMU_HOLD_OUT                                        , RULL(0x20010ABC), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PMU_HOLD_OUT                                        , RULL(0x21010ABC), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PMU_HOLD_OUT                                        , RULL(0x22010ABC), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PMU_HOLD_OUT                                        , RULL(0x23010ABC), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PMU_HOLD_OUT                                        , RULL(0x24010ABC), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PMU_HOLD_OUT                                        , RULL(0x25010ABC), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PMU_HOLD_OUT                                        , RULL(0x26010ABC), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PMU_HOLD_OUT                                        , RULL(0x27010ABC), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PMU_HOLD_OUT                                        , RULL(0x28010ABC), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PMU_HOLD_OUT                                        , RULL(0x29010ABC), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PMU_HOLD_OUT                                       , RULL(0x2A010ABC), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PMU_HOLD_OUT                                       , RULL(0x2B010ABC), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PMU_HOLD_OUT                                       , RULL(0x2C010ABC), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PMU_HOLD_OUT                                       , RULL(0x2D010ABC), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PMU_HOLD_OUT                                       , RULL(0x2E010ABC), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PMU_HOLD_OUT                                       , RULL(0x2F010ABC), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PMU_HOLD_OUT                                       , RULL(0x30010ABC), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PMU_HOLD_OUT                                       , RULL(0x31010ABC), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PMU_HOLD_OUT                                       , RULL(0x32010ABC), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PMU_HOLD_OUT                                       , RULL(0x33010ABC), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PMU_HOLD_OUT                                       , RULL(0x34010ABC), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PMU_HOLD_OUT                                       , RULL(0x35010ABC), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PMU_HOLD_OUT                                       , RULL(0x36010ABC), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PMU_HOLD_OUT                                       , RULL(0x37010ABC), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_PMU_HOLD_OUT                                    , RULL(0x20010ABC), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010ABC,
REG64( EX_10_L2_PMU_HOLD_OUT                                   , RULL(0x34010ABC), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010ABC,
REG64( EX_11_L2_PMU_HOLD_OUT                                   , RULL(0x36010ABC), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010ABC,
REG64( EX_1_L2_PMU_HOLD_OUT                                    , RULL(0x22010ABC), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010ABC,
REG64( EX_2_L2_PMU_HOLD_OUT                                    , RULL(0x24010ABC), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010ABC,
REG64( EX_3_L2_PMU_HOLD_OUT                                    , RULL(0x26010ABC), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010ABC,
REG64( EX_4_L2_PMU_HOLD_OUT                                    , RULL(0x28010ABC), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010ABC,
REG64( EX_5_L2_PMU_HOLD_OUT                                    , RULL(0x2A010ABC), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010ABC,
REG64( EX_6_L2_PMU_HOLD_OUT                                    , RULL(0x2C010ABC), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010ABC,
REG64( EX_7_L2_PMU_HOLD_OUT                                    , RULL(0x2E010ABC), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010ABC,
REG64( EX_8_L2_PMU_HOLD_OUT                                    , RULL(0x30010ABC), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010ABC,
REG64( EX_9_L2_PMU_HOLD_OUT                                    , RULL(0x32010ABC), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010ABC,
REG64( EX_L2_PMU_HOLD_OUT                                      , RULL(0x20010ABC), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010ABC,

REG64( C_PMU_SCOMC                                             , RULL(0x20010AB0), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PMU_SCOMC                                           , RULL(0x20010AB0), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PMU_SCOMC                                           , RULL(0x21010AB0), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PMU_SCOMC                                           , RULL(0x22010AB0), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PMU_SCOMC                                           , RULL(0x23010AB0), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PMU_SCOMC                                           , RULL(0x24010AB0), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PMU_SCOMC                                           , RULL(0x25010AB0), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PMU_SCOMC                                           , RULL(0x26010AB0), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PMU_SCOMC                                           , RULL(0x27010AB0), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PMU_SCOMC                                           , RULL(0x28010AB0), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PMU_SCOMC                                           , RULL(0x29010AB0), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PMU_SCOMC                                          , RULL(0x2A010AB0), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PMU_SCOMC                                          , RULL(0x2B010AB0), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PMU_SCOMC                                          , RULL(0x2C010AB0), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PMU_SCOMC                                          , RULL(0x2D010AB0), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PMU_SCOMC                                          , RULL(0x2E010AB0), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PMU_SCOMC                                          , RULL(0x2F010AB0), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PMU_SCOMC                                          , RULL(0x30010AB0), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PMU_SCOMC                                          , RULL(0x31010AB0), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PMU_SCOMC                                          , RULL(0x32010AB0), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PMU_SCOMC                                          , RULL(0x33010AB0), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PMU_SCOMC                                          , RULL(0x34010AB0), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PMU_SCOMC                                          , RULL(0x35010AB0), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PMU_SCOMC                                          , RULL(0x36010AB0), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PMU_SCOMC                                          , RULL(0x37010AB0), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_PMU_SCOMC                                       , RULL(0x20010AB0), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AB0,
REG64( EX_10_L2_PMU_SCOMC                                      , RULL(0x34010AB0), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010AB0,
REG64( EX_11_L2_PMU_SCOMC                                      , RULL(0x36010AB0), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010AB0,
REG64( EX_1_L2_PMU_SCOMC                                       , RULL(0x22010AB0), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010AB0,
REG64( EX_2_L2_PMU_SCOMC                                       , RULL(0x24010AB0), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010AB0,
REG64( EX_3_L2_PMU_SCOMC                                       , RULL(0x26010AB0), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010AB0,
REG64( EX_4_L2_PMU_SCOMC                                       , RULL(0x28010AB0), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010AB0,
REG64( EX_5_L2_PMU_SCOMC                                       , RULL(0x2A010AB0), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010AB0,
REG64( EX_6_L2_PMU_SCOMC                                       , RULL(0x2C010AB0), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010AB0,
REG64( EX_7_L2_PMU_SCOMC                                       , RULL(0x2E010AB0), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010AB0,
REG64( EX_8_L2_PMU_SCOMC                                       , RULL(0x30010AB0), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010AB0,
REG64( EX_9_L2_PMU_SCOMC                                       , RULL(0x32010AB0), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010AB0,
REG64( EX_L2_PMU_SCOMC                                         , RULL(0x20010AB0), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AB0,

REG64( C_PMU_SCOMC_EN                                          , RULL(0x20010AB2), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PMU_SCOMC_EN                                        , RULL(0x20010AB2), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PMU_SCOMC_EN                                        , RULL(0x21010AB2), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PMU_SCOMC_EN                                        , RULL(0x22010AB2), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PMU_SCOMC_EN                                        , RULL(0x23010AB2), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PMU_SCOMC_EN                                        , RULL(0x24010AB2), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PMU_SCOMC_EN                                        , RULL(0x25010AB2), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PMU_SCOMC_EN                                        , RULL(0x26010AB2), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PMU_SCOMC_EN                                        , RULL(0x27010AB2), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PMU_SCOMC_EN                                        , RULL(0x28010AB2), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PMU_SCOMC_EN                                        , RULL(0x29010AB2), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PMU_SCOMC_EN                                       , RULL(0x2A010AB2), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PMU_SCOMC_EN                                       , RULL(0x2B010AB2), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PMU_SCOMC_EN                                       , RULL(0x2C010AB2), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PMU_SCOMC_EN                                       , RULL(0x2D010AB2), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PMU_SCOMC_EN                                       , RULL(0x2E010AB2), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PMU_SCOMC_EN                                       , RULL(0x2F010AB2), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PMU_SCOMC_EN                                       , RULL(0x30010AB2), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PMU_SCOMC_EN                                       , RULL(0x31010AB2), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PMU_SCOMC_EN                                       , RULL(0x32010AB2), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PMU_SCOMC_EN                                       , RULL(0x33010AB2), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PMU_SCOMC_EN                                       , RULL(0x34010AB2), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PMU_SCOMC_EN                                       , RULL(0x35010AB2), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PMU_SCOMC_EN                                       , RULL(0x36010AB2), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PMU_SCOMC_EN                                       , RULL(0x37010AB2), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_PMU_SCOMC_EN                                    , RULL(0x20010AB2), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AB2,
REG64( EX_10_L2_PMU_SCOMC_EN                                   , RULL(0x34010AB2), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010AB2,
REG64( EX_11_L2_PMU_SCOMC_EN                                   , RULL(0x36010AB2), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010AB2,
REG64( EX_1_L2_PMU_SCOMC_EN                                    , RULL(0x22010AB2), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010AB2,
REG64( EX_2_L2_PMU_SCOMC_EN                                    , RULL(0x24010AB2), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010AB2,
REG64( EX_3_L2_PMU_SCOMC_EN                                    , RULL(0x26010AB2), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010AB2,
REG64( EX_4_L2_PMU_SCOMC_EN                                    , RULL(0x28010AB2), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010AB2,
REG64( EX_5_L2_PMU_SCOMC_EN                                    , RULL(0x2A010AB2), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010AB2,
REG64( EX_6_L2_PMU_SCOMC_EN                                    , RULL(0x2C010AB2), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010AB2,
REG64( EX_7_L2_PMU_SCOMC_EN                                    , RULL(0x2E010AB2), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010AB2,
REG64( EX_8_L2_PMU_SCOMC_EN                                    , RULL(0x30010AB2), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010AB2,
REG64( EX_9_L2_PMU_SCOMC_EN                                    , RULL(0x32010AB2), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010AB2,
REG64( EX_L2_PMU_SCOMC_EN                                      , RULL(0x20010AB2), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AB2,

REG64( EQ_PM_L2_RCMD_DIS_REG                                   , RULL(0x10011818), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C18,
REG64( EQ_0_PM_L2_RCMD_DIS_REG                                 , RULL(0x10011818), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C18,
REG64( EQ_1_PM_L2_RCMD_DIS_REG                                 , RULL(0x11011818), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C18,
REG64( EQ_2_PM_L2_RCMD_DIS_REG                                 , RULL(0x12011818), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C18,
REG64( EQ_3_PM_L2_RCMD_DIS_REG                                 , RULL(0x13011818), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C18,
REG64( EQ_4_PM_L2_RCMD_DIS_REG                                 , RULL(0x14011818), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C18,
REG64( EQ_5_PM_L2_RCMD_DIS_REG                                 , RULL(0x15011818), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C18,
REG64( EX_PM_L2_RCMD_DIS_REG                                   , RULL(0x10011818), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_PM_L2_RCMD_DIS_REG                                 , RULL(0x10011818), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_PM_L2_RCMD_DIS_REG                                 , RULL(0x10011C18), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_PM_L2_RCMD_DIS_REG                                 , RULL(0x11011818), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_PM_L2_RCMD_DIS_REG                                 , RULL(0x11011C18), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_PM_L2_RCMD_DIS_REG                                 , RULL(0x12011818), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_PM_L2_RCMD_DIS_REG                                 , RULL(0x12011C18), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_PM_L2_RCMD_DIS_REG                                 , RULL(0x13011818), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_PM_L2_RCMD_DIS_REG                                 , RULL(0x13011C18), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_PM_L2_RCMD_DIS_REG                                 , RULL(0x14011818), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_PM_L2_RCMD_DIS_REG                                 , RULL(0x14011C18), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_PM_L2_RCMD_DIS_REG                                , RULL(0x15011818), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_PM_L2_RCMD_DIS_REG                                , RULL(0x15011C18), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_PM_LCO_DIS_REG                                       , RULL(0x10011816), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C16,
REG64( EQ_0_PM_LCO_DIS_REG                                     , RULL(0x10011816), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C16,
REG64( EQ_1_PM_LCO_DIS_REG                                     , RULL(0x11011816), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C16,
REG64( EQ_2_PM_LCO_DIS_REG                                     , RULL(0x12011816), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C16,
REG64( EQ_3_PM_LCO_DIS_REG                                     , RULL(0x13011816), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C16,
REG64( EQ_4_PM_LCO_DIS_REG                                     , RULL(0x14011816), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C16,
REG64( EQ_5_PM_LCO_DIS_REG                                     , RULL(0x15011816), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C16,
REG64( EX_0_L3_PM_LCO_DIS_REG                                  , RULL(0x10011816), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_PM_LCO_DIS_REG                                 , RULL(0x15011816), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_PM_LCO_DIS_REG                                 , RULL(0x15011C16), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_PM_LCO_DIS_REG                                  , RULL(0x10011C16), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_PM_LCO_DIS_REG                                  , RULL(0x11011816), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_PM_LCO_DIS_REG                                  , RULL(0x11011C16), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_PM_LCO_DIS_REG                                  , RULL(0x12011816), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_PM_LCO_DIS_REG                                  , RULL(0x12011C16), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_PM_LCO_DIS_REG                                  , RULL(0x13011816), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_PM_LCO_DIS_REG                                  , RULL(0x13011C16), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_PM_LCO_DIS_REG                                  , RULL(0x14011816), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_PM_LCO_DIS_REG                                  , RULL(0x14011C16), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_PM_LCO_DIS_REG                                    , RULL(0x10011816), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_PM_PURGE_REG                                         , RULL(0x10011813), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C13,
REG64( EQ_0_PM_PURGE_REG                                       , RULL(0x10011813), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C13,
REG64( EQ_1_PM_PURGE_REG                                       , RULL(0x11011813), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C13,
REG64( EQ_2_PM_PURGE_REG                                       , RULL(0x12011813), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C13,
REG64( EQ_3_PM_PURGE_REG                                       , RULL(0x13011813), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C13,
REG64( EQ_4_PM_PURGE_REG                                       , RULL(0x14011813), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C13,
REG64( EQ_5_PM_PURGE_REG                                       , RULL(0x15011813), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C13,
REG64( EX_0_L3_PM_PURGE_REG                                    , RULL(0x10011813), SH_UNT_EX_0_L3  , SH_ACS_SCOM      );
REG64( EX_10_L3_PM_PURGE_REG                                   , RULL(0x15011813), SH_UNT_EX_10_L3 , SH_ACS_SCOM      );
REG64( EX_11_L3_PM_PURGE_REG                                   , RULL(0x15011C13), SH_UNT_EX_11_L3 , SH_ACS_SCOM      );
REG64( EX_1_L3_PM_PURGE_REG                                    , RULL(0x10011C13), SH_UNT_EX_1_L3  , SH_ACS_SCOM      );
REG64( EX_2_L3_PM_PURGE_REG                                    , RULL(0x11011813), SH_UNT_EX_2_L3  , SH_ACS_SCOM      );
REG64( EX_3_L3_PM_PURGE_REG                                    , RULL(0x11011C13), SH_UNT_EX_3_L3  , SH_ACS_SCOM      );
REG64( EX_4_L3_PM_PURGE_REG                                    , RULL(0x12011813), SH_UNT_EX_4_L3  , SH_ACS_SCOM      );
REG64( EX_5_L3_PM_PURGE_REG                                    , RULL(0x12011C13), SH_UNT_EX_5_L3  , SH_ACS_SCOM      );
REG64( EX_6_L3_PM_PURGE_REG                                    , RULL(0x13011813), SH_UNT_EX_6_L3  , SH_ACS_SCOM      );
REG64( EX_7_L3_PM_PURGE_REG                                    , RULL(0x13011C13), SH_UNT_EX_7_L3  , SH_ACS_SCOM      );
REG64( EX_8_L3_PM_PURGE_REG                                    , RULL(0x14011813), SH_UNT_EX_8_L3  , SH_ACS_SCOM      );
REG64( EX_9_L3_PM_PURGE_REG                                    , RULL(0x14011C13), SH_UNT_EX_9_L3  , SH_ACS_SCOM      );
REG64( EX_L3_PM_PURGE_REG                                      , RULL(0x10011813), SH_UNT_EX_L3    , SH_ACS_SCOM      );

REG64( EQ_PPE_XIDBGPRO                                         , RULL(0x10012835), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10012435,
REG64( EQ_0_PPE_XIDBGPRO                                       , RULL(0x10012835), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10012435,
REG64( EQ_1_PPE_XIDBGPRO                                       , RULL(0x11012835), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11012435,
REG64( EQ_2_PPE_XIDBGPRO                                       , RULL(0x12012835), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12012435,
REG64( EQ_3_PPE_XIDBGPRO                                       , RULL(0x13012835), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13012435,
REG64( EQ_4_PPE_XIDBGPRO                                       , RULL(0x14012835), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14012435,
REG64( EQ_5_PPE_XIDBGPRO                                       , RULL(0x15012835), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15012435,
REG64( EX_PPE_XIDBGPRO                                         , RULL(0x10012435), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_PPE_XIDBGPRO                                       , RULL(0x10012435), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_PPE_XIDBGPRO                                       , RULL(0x10012835), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_PPE_XIDBGPRO                                       , RULL(0x11012435), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_PPE_XIDBGPRO                                       , RULL(0x11012835), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_PPE_XIDBGPRO                                       , RULL(0x12012435), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_PPE_XIDBGPRO                                       , RULL(0x12012835), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_PPE_XIDBGPRO                                       , RULL(0x13012435), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_PPE_XIDBGPRO                                       , RULL(0x13012835), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_PPE_XIDBGPRO                                       , RULL(0x14012435), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_PPE_XIDBGPRO                                       , RULL(0x14012835), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_PPE_XIDBGPRO                                      , RULL(0x15012435), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_PPE_XIDBGPRO                                      , RULL(0x15012835), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_PPE_XIRAMDBG                                         , RULL(0x10012833), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10012433,
REG64( EQ_0_PPE_XIRAMDBG                                       , RULL(0x10012833), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10012433,
REG64( EQ_1_PPE_XIRAMDBG                                       , RULL(0x11012833), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11012433,
REG64( EQ_2_PPE_XIRAMDBG                                       , RULL(0x12012833), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12012433,
REG64( EQ_3_PPE_XIRAMDBG                                       , RULL(0x13012833), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13012433,
REG64( EQ_4_PPE_XIRAMDBG                                       , RULL(0x14012833), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14012433,
REG64( EQ_5_PPE_XIRAMDBG                                       , RULL(0x15012833), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15012433,
REG64( EX_PPE_XIRAMDBG                                         , RULL(0x10012433), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_PPE_XIRAMDBG                                       , RULL(0x10012433), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_PPE_XIRAMDBG                                       , RULL(0x10012833), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_PPE_XIRAMDBG                                       , RULL(0x11012433), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_PPE_XIRAMDBG                                       , RULL(0x11012833), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_PPE_XIRAMDBG                                       , RULL(0x12012433), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_PPE_XIRAMDBG                                       , RULL(0x12012833), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_PPE_XIRAMDBG                                       , RULL(0x13012433), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_PPE_XIRAMDBG                                       , RULL(0x13012833), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_PPE_XIRAMDBG                                       , RULL(0x14012433), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_PPE_XIRAMDBG                                       , RULL(0x14012833), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_PPE_XIRAMDBG                                      , RULL(0x15012433), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_PPE_XIRAMDBG                                      , RULL(0x15012833), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_PPE_XIRAMEDR                                         , RULL(0x10012834), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10012434,
REG64( EQ_0_PPE_XIRAMEDR                                       , RULL(0x10012834), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10012434,
REG64( EQ_1_PPE_XIRAMEDR                                       , RULL(0x11012834), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11012434,
REG64( EQ_2_PPE_XIRAMEDR                                       , RULL(0x12012834), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12012434,
REG64( EQ_3_PPE_XIRAMEDR                                       , RULL(0x13012834), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13012434,
REG64( EQ_4_PPE_XIRAMEDR                                       , RULL(0x14012834), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14012434,
REG64( EQ_5_PPE_XIRAMEDR                                       , RULL(0x15012834), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15012434,
REG64( EX_PPE_XIRAMEDR                                         , RULL(0x10012434), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_PPE_XIRAMEDR                                       , RULL(0x10012434), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_PPE_XIRAMEDR                                       , RULL(0x10012834), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_PPE_XIRAMEDR                                       , RULL(0x11012434), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_PPE_XIRAMEDR                                       , RULL(0x11012834), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_PPE_XIRAMEDR                                       , RULL(0x12012434), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_PPE_XIRAMEDR                                       , RULL(0x12012834), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_PPE_XIRAMEDR                                       , RULL(0x13012434), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_PPE_XIRAMEDR                                       , RULL(0x13012834), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_PPE_XIRAMEDR                                       , RULL(0x14012434), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_PPE_XIRAMEDR                                       , RULL(0x14012834), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_PPE_XIRAMEDR                                      , RULL(0x15012434), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_PPE_XIRAMEDR                                      , RULL(0x15012834), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_PPE_XIRAMGA                                          , RULL(0x10012832), SH_UNT_EQ       ,
       SH_ACS_SCOM_WO   ); //DUPS: 10012432,
REG64( EQ_0_PPE_XIRAMGA                                        , RULL(0x10012832), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_WO   ); //DUPS: 10012432,
REG64( EQ_1_PPE_XIRAMGA                                        , RULL(0x11012832), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_WO   ); //DUPS: 11012432,
REG64( EQ_2_PPE_XIRAMGA                                        , RULL(0x12012832), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_WO   ); //DUPS: 12012432,
REG64( EQ_3_PPE_XIRAMGA                                        , RULL(0x13012832), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_WO   ); //DUPS: 13012432,
REG64( EQ_4_PPE_XIRAMGA                                        , RULL(0x14012832), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_WO   ); //DUPS: 14012432,
REG64( EQ_5_PPE_XIRAMGA                                        , RULL(0x15012832), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_WO   ); //DUPS: 15012432,
REG64( EX_PPE_XIRAMGA                                          , RULL(0x10012432), SH_UNT_EX       , SH_ACS_SCOM_WO   );
REG64( EX_0_PPE_XIRAMGA                                        , RULL(0x10012432), SH_UNT_EX_0     , SH_ACS_SCOM_WO   );
REG64( EX_1_PPE_XIRAMGA                                        , RULL(0x10012832), SH_UNT_EX_1     , SH_ACS_SCOM_WO   );
REG64( EX_2_PPE_XIRAMGA                                        , RULL(0x11012432), SH_UNT_EX_2     , SH_ACS_SCOM_WO   );
REG64( EX_3_PPE_XIRAMGA                                        , RULL(0x11012832), SH_UNT_EX_3     , SH_ACS_SCOM_WO   );
REG64( EX_4_PPE_XIRAMGA                                        , RULL(0x12012432), SH_UNT_EX_4     , SH_ACS_SCOM_WO   );
REG64( EX_5_PPE_XIRAMGA                                        , RULL(0x12012832), SH_UNT_EX_5     , SH_ACS_SCOM_WO   );
REG64( EX_6_PPE_XIRAMGA                                        , RULL(0x13012432), SH_UNT_EX_6     , SH_ACS_SCOM_WO   );
REG64( EX_7_PPE_XIRAMGA                                        , RULL(0x13012832), SH_UNT_EX_7     , SH_ACS_SCOM_WO   );
REG64( EX_8_PPE_XIRAMGA                                        , RULL(0x14012432), SH_UNT_EX_8     , SH_ACS_SCOM_WO   );
REG64( EX_9_PPE_XIRAMGA                                        , RULL(0x14012832), SH_UNT_EX_9     , SH_ACS_SCOM_WO   );
REG64( EX_10_PPE_XIRAMGA                                       , RULL(0x15012432), SH_UNT_EX_10    , SH_ACS_SCOM_WO   );
REG64( EX_11_PPE_XIRAMGA                                       , RULL(0x15012832), SH_UNT_EX_11    , SH_ACS_SCOM_WO   );

REG64( EQ_PPE_XIRAMRA                                          , RULL(0x10012831), SH_UNT_EQ       ,
       SH_ACS_SCOM_WO   ); //DUPS: 10012431,
REG64( EQ_0_PPE_XIRAMRA                                        , RULL(0x10012831), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_WO   ); //DUPS: 10012431,
REG64( EQ_1_PPE_XIRAMRA                                        , RULL(0x11012831), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_WO   ); //DUPS: 11012431,
REG64( EQ_2_PPE_XIRAMRA                                        , RULL(0x12012831), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_WO   ); //DUPS: 12012431,
REG64( EQ_3_PPE_XIRAMRA                                        , RULL(0x13012831), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_WO   ); //DUPS: 13012431,
REG64( EQ_4_PPE_XIRAMRA                                        , RULL(0x14012831), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_WO   ); //DUPS: 14012431,
REG64( EQ_5_PPE_XIRAMRA                                        , RULL(0x15012831), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_WO   ); //DUPS: 15012431,
REG64( EX_PPE_XIRAMRA                                          , RULL(0x10012431), SH_UNT_EX       , SH_ACS_SCOM_WO   );
REG64( EX_0_PPE_XIRAMRA                                        , RULL(0x10012431), SH_UNT_EX_0     , SH_ACS_SCOM_WO   );
REG64( EX_1_PPE_XIRAMRA                                        , RULL(0x10012831), SH_UNT_EX_1     , SH_ACS_SCOM_WO   );
REG64( EX_2_PPE_XIRAMRA                                        , RULL(0x11012431), SH_UNT_EX_2     , SH_ACS_SCOM_WO   );
REG64( EX_3_PPE_XIRAMRA                                        , RULL(0x11012831), SH_UNT_EX_3     , SH_ACS_SCOM_WO   );
REG64( EX_4_PPE_XIRAMRA                                        , RULL(0x12012431), SH_UNT_EX_4     , SH_ACS_SCOM_WO   );
REG64( EX_5_PPE_XIRAMRA                                        , RULL(0x12012831), SH_UNT_EX_5     , SH_ACS_SCOM_WO   );
REG64( EX_6_PPE_XIRAMRA                                        , RULL(0x13012431), SH_UNT_EX_6     , SH_ACS_SCOM_WO   );
REG64( EX_7_PPE_XIRAMRA                                        , RULL(0x13012831), SH_UNT_EX_7     , SH_ACS_SCOM_WO   );
REG64( EX_8_PPE_XIRAMRA                                        , RULL(0x14012431), SH_UNT_EX_8     , SH_ACS_SCOM_WO   );
REG64( EX_9_PPE_XIRAMRA                                        , RULL(0x14012831), SH_UNT_EX_9     , SH_ACS_SCOM_WO   );
REG64( EX_10_PPE_XIRAMRA                                       , RULL(0x15012431), SH_UNT_EX_10    , SH_ACS_SCOM_WO   );
REG64( EX_11_PPE_XIRAMRA                                       , RULL(0x15012831), SH_UNT_EX_11    , SH_ACS_SCOM_WO   );

REG64( EQ_PPE_XIXCR                                            , RULL(0x10012830), SH_UNT_EQ       ,
       SH_ACS_SCOM_WO   ); //DUPS: 10012430,
REG64( EQ_0_PPE_XIXCR                                          , RULL(0x10012830), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_WO   ); //DUPS: 10012430,
REG64( EQ_1_PPE_XIXCR                                          , RULL(0x11012830), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_WO   ); //DUPS: 11012430,
REG64( EQ_2_PPE_XIXCR                                          , RULL(0x12012830), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_WO   ); //DUPS: 12012430,
REG64( EQ_3_PPE_XIXCR                                          , RULL(0x13012830), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_WO   ); //DUPS: 13012430,
REG64( EQ_4_PPE_XIXCR                                          , RULL(0x14012830), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_WO   ); //DUPS: 14012430,
REG64( EQ_5_PPE_XIXCR                                          , RULL(0x15012830), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_WO   ); //DUPS: 15012430,
REG64( EX_PPE_XIXCR                                            , RULL(0x10012430), SH_UNT_EX       , SH_ACS_SCOM_WO   );
REG64( EX_0_PPE_XIXCR                                          , RULL(0x10012430), SH_UNT_EX_0     , SH_ACS_SCOM_WO   );
REG64( EX_1_PPE_XIXCR                                          , RULL(0x10012830), SH_UNT_EX_1     , SH_ACS_SCOM_WO   );
REG64( EX_2_PPE_XIXCR                                          , RULL(0x11012430), SH_UNT_EX_2     , SH_ACS_SCOM_WO   );
REG64( EX_3_PPE_XIXCR                                          , RULL(0x11012830), SH_UNT_EX_3     , SH_ACS_SCOM_WO   );
REG64( EX_4_PPE_XIXCR                                          , RULL(0x12012430), SH_UNT_EX_4     , SH_ACS_SCOM_WO   );
REG64( EX_5_PPE_XIXCR                                          , RULL(0x12012830), SH_UNT_EX_5     , SH_ACS_SCOM_WO   );
REG64( EX_6_PPE_XIXCR                                          , RULL(0x13012430), SH_UNT_EX_6     , SH_ACS_SCOM_WO   );
REG64( EX_7_PPE_XIXCR                                          , RULL(0x13012830), SH_UNT_EX_7     , SH_ACS_SCOM_WO   );
REG64( EX_8_PPE_XIXCR                                          , RULL(0x14012430), SH_UNT_EX_8     , SH_ACS_SCOM_WO   );
REG64( EX_9_PPE_XIXCR                                          , RULL(0x14012830), SH_UNT_EX_9     , SH_ACS_SCOM_WO   );
REG64( EX_10_PPE_XIXCR                                         , RULL(0x15012430), SH_UNT_EX_10    , SH_ACS_SCOM_WO   );
REG64( EX_11_PPE_XIXCR                                         , RULL(0x15012830), SH_UNT_EX_11    , SH_ACS_SCOM_WO   );

REG64( C_PPM_CGCR                                              , RULL(0x200F0164), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_CGCR                                            , RULL(0x200F0164), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_CGCR                                            , RULL(0x210F0164), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_CGCR                                            , RULL(0x220F0164), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_CGCR                                            , RULL(0x230F0164), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_CGCR                                            , RULL(0x240F0164), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_CGCR                                            , RULL(0x250F0164), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_CGCR                                            , RULL(0x260F0164), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_CGCR                                            , RULL(0x270F0164), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_CGCR                                            , RULL(0x280F0164), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_CGCR                                            , RULL(0x290F0164), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_CGCR                                           , RULL(0x2A0F0164), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_CGCR                                           , RULL(0x2B0F0164), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_CGCR                                           , RULL(0x2C0F0164), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_CGCR                                           , RULL(0x2D0F0164), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_CGCR                                           , RULL(0x2E0F0164), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_CGCR                                           , RULL(0x2F0F0164), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_CGCR                                           , RULL(0x300F0164), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_CGCR                                           , RULL(0x310F0164), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_CGCR                                           , RULL(0x320F0164), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_CGCR                                           , RULL(0x330F0164), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_CGCR                                           , RULL(0x340F0164), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_CGCR                                           , RULL(0x350F0164), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_CGCR                                           , RULL(0x360F0164), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_CGCR                                           , RULL(0x370F0164), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_CGCR                                             , RULL(0x100F0164), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_CGCR                                           , RULL(0x100F0164), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_CGCR                                           , RULL(0x110F0164), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_CGCR                                           , RULL(0x120F0164), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_CGCR                                           , RULL(0x130F0164), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_CGCR                                           , RULL(0x140F0164), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_CGCR                                           , RULL(0x150F0164), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_CGCR                                             , RULL(0x200F0164), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0164,
REG64( EX_0_PPM_CGCR                                           , RULL(0x200F0164), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F0164,
REG64( EX_1_PPM_CGCR                                           , RULL(0x230F0164), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F0164,
REG64( EX_2_PPM_CGCR                                           , RULL(0x240F0164), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F0164,
REG64( EX_3_PPM_CGCR                                           , RULL(0x260F0164), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F0164,
REG64( EX_4_PPM_CGCR                                           , RULL(0x280F0164), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F0164,
REG64( EX_5_PPM_CGCR                                           , RULL(0x2A0F0164), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F0164,
REG64( EX_6_PPM_CGCR                                           , RULL(0x2C0F0164), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F0164,
REG64( EX_7_PPM_CGCR                                           , RULL(0x2E0F0164), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F0164,
REG64( EX_8_PPM_CGCR                                           , RULL(0x300F0164), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F0164,
REG64( EX_9_PPM_CGCR                                           , RULL(0x320F0164), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F0164,
REG64( EX_10_PPM_CGCR                                          , RULL(0x340F0164), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F0164,
REG64( EX_11_PPM_CGCR                                          , RULL(0x360F0164), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F0164,

REG64( C_PPM_GPMMR_SCOM                                        , RULL(0x200F0100), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_PPM_GPMMR_SCOM1                                       , RULL(0x200F0101), SH_UNT_C        , SH_ACS_SCOM1     );
REG64( C_PPM_GPMMR_SCOM2                                       , RULL(0x200F0102), SH_UNT_C        , SH_ACS_SCOM2     );
REG64( C_0_PPM_GPMMR_SCOM                                      , RULL(0x200F0100), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_0_PPM_GPMMR_SCOM1                                     , RULL(0x200F0101), SH_UNT_C_0      , SH_ACS_SCOM1     );
REG64( C_0_PPM_GPMMR_SCOM2                                     , RULL(0x200F0102), SH_UNT_C_0      , SH_ACS_SCOM2     );
REG64( C_1_PPM_GPMMR_SCOM                                      , RULL(0x210F0100), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_1_PPM_GPMMR_SCOM1                                     , RULL(0x210F0101), SH_UNT_C_1      , SH_ACS_SCOM1     );
REG64( C_1_PPM_GPMMR_SCOM2                                     , RULL(0x210F0102), SH_UNT_C_1      , SH_ACS_SCOM2     );
REG64( C_2_PPM_GPMMR_SCOM                                      , RULL(0x220F0100), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_2_PPM_GPMMR_SCOM1                                     , RULL(0x220F0101), SH_UNT_C_2      , SH_ACS_SCOM1     );
REG64( C_2_PPM_GPMMR_SCOM2                                     , RULL(0x220F0102), SH_UNT_C_2      , SH_ACS_SCOM2     );
REG64( C_3_PPM_GPMMR_SCOM                                      , RULL(0x230F0100), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_3_PPM_GPMMR_SCOM1                                     , RULL(0x230F0101), SH_UNT_C_3      , SH_ACS_SCOM1     );
REG64( C_3_PPM_GPMMR_SCOM2                                     , RULL(0x230F0102), SH_UNT_C_3      , SH_ACS_SCOM2     );
REG64( C_4_PPM_GPMMR_SCOM                                      , RULL(0x240F0100), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_4_PPM_GPMMR_SCOM1                                     , RULL(0x240F0101), SH_UNT_C_4      , SH_ACS_SCOM1     );
REG64( C_4_PPM_GPMMR_SCOM2                                     , RULL(0x240F0102), SH_UNT_C_4      , SH_ACS_SCOM2     );
REG64( C_5_PPM_GPMMR_SCOM                                      , RULL(0x250F0100), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_5_PPM_GPMMR_SCOM1                                     , RULL(0x250F0101), SH_UNT_C_5      , SH_ACS_SCOM1     );
REG64( C_5_PPM_GPMMR_SCOM2                                     , RULL(0x250F0102), SH_UNT_C_5      , SH_ACS_SCOM2     );
REG64( C_6_PPM_GPMMR_SCOM                                      , RULL(0x260F0100), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_6_PPM_GPMMR_SCOM1                                     , RULL(0x260F0101), SH_UNT_C_6      , SH_ACS_SCOM1     );
REG64( C_6_PPM_GPMMR_SCOM2                                     , RULL(0x260F0102), SH_UNT_C_6      , SH_ACS_SCOM2     );
REG64( C_7_PPM_GPMMR_SCOM                                      , RULL(0x270F0100), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_7_PPM_GPMMR_SCOM1                                     , RULL(0x270F0101), SH_UNT_C_7      , SH_ACS_SCOM1     );
REG64( C_7_PPM_GPMMR_SCOM2                                     , RULL(0x270F0102), SH_UNT_C_7      , SH_ACS_SCOM2     );
REG64( C_8_PPM_GPMMR_SCOM                                      , RULL(0x280F0100), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_8_PPM_GPMMR_SCOM1                                     , RULL(0x280F0101), SH_UNT_C_8      , SH_ACS_SCOM1     );
REG64( C_8_PPM_GPMMR_SCOM2                                     , RULL(0x280F0102), SH_UNT_C_8      , SH_ACS_SCOM2     );
REG64( C_9_PPM_GPMMR_SCOM                                      , RULL(0x290F0100), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_9_PPM_GPMMR_SCOM1                                     , RULL(0x290F0101), SH_UNT_C_9      , SH_ACS_SCOM1     );
REG64( C_9_PPM_GPMMR_SCOM2                                     , RULL(0x290F0102), SH_UNT_C_9      , SH_ACS_SCOM2     );
REG64( C_10_PPM_GPMMR_SCOM                                     , RULL(0x2A0F0100), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_10_PPM_GPMMR_SCOM1                                    , RULL(0x2A0F0101), SH_UNT_C_10     , SH_ACS_SCOM1     );
REG64( C_10_PPM_GPMMR_SCOM2                                    , RULL(0x2A0F0102), SH_UNT_C_10     , SH_ACS_SCOM2     );
REG64( C_11_PPM_GPMMR_SCOM                                     , RULL(0x2B0F0100), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_11_PPM_GPMMR_SCOM1                                    , RULL(0x2B0F0101), SH_UNT_C_11     , SH_ACS_SCOM1     );
REG64( C_11_PPM_GPMMR_SCOM2                                    , RULL(0x2B0F0102), SH_UNT_C_11     , SH_ACS_SCOM2     );
REG64( C_12_PPM_GPMMR_SCOM                                     , RULL(0x2C0F0100), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_12_PPM_GPMMR_SCOM1                                    , RULL(0x2C0F0101), SH_UNT_C_12     , SH_ACS_SCOM1     );
REG64( C_12_PPM_GPMMR_SCOM2                                    , RULL(0x2C0F0102), SH_UNT_C_12     , SH_ACS_SCOM2     );
REG64( C_13_PPM_GPMMR_SCOM                                     , RULL(0x2D0F0100), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_13_PPM_GPMMR_SCOM1                                    , RULL(0x2D0F0101), SH_UNT_C_13     , SH_ACS_SCOM1     );
REG64( C_13_PPM_GPMMR_SCOM2                                    , RULL(0x2D0F0102), SH_UNT_C_13     , SH_ACS_SCOM2     );
REG64( C_14_PPM_GPMMR_SCOM                                     , RULL(0x2E0F0100), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_14_PPM_GPMMR_SCOM1                                    , RULL(0x2E0F0101), SH_UNT_C_14     , SH_ACS_SCOM1     );
REG64( C_14_PPM_GPMMR_SCOM2                                    , RULL(0x2E0F0102), SH_UNT_C_14     , SH_ACS_SCOM2     );
REG64( C_15_PPM_GPMMR_SCOM                                     , RULL(0x2F0F0100), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_15_PPM_GPMMR_SCOM1                                    , RULL(0x2F0F0101), SH_UNT_C_15     , SH_ACS_SCOM1     );
REG64( C_15_PPM_GPMMR_SCOM2                                    , RULL(0x2F0F0102), SH_UNT_C_15     , SH_ACS_SCOM2     );
REG64( C_16_PPM_GPMMR_SCOM                                     , RULL(0x300F0100), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_16_PPM_GPMMR_SCOM1                                    , RULL(0x300F0101), SH_UNT_C_16     , SH_ACS_SCOM1     );
REG64( C_16_PPM_GPMMR_SCOM2                                    , RULL(0x300F0102), SH_UNT_C_16     , SH_ACS_SCOM2     );
REG64( C_17_PPM_GPMMR_SCOM                                     , RULL(0x310F0100), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_17_PPM_GPMMR_SCOM1                                    , RULL(0x310F0101), SH_UNT_C_17     , SH_ACS_SCOM1     );
REG64( C_17_PPM_GPMMR_SCOM2                                    , RULL(0x310F0102), SH_UNT_C_17     , SH_ACS_SCOM2     );
REG64( C_18_PPM_GPMMR_SCOM                                     , RULL(0x320F0100), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_18_PPM_GPMMR_SCOM1                                    , RULL(0x320F0101), SH_UNT_C_18     , SH_ACS_SCOM1     );
REG64( C_18_PPM_GPMMR_SCOM2                                    , RULL(0x320F0102), SH_UNT_C_18     , SH_ACS_SCOM2     );
REG64( C_19_PPM_GPMMR_SCOM                                     , RULL(0x330F0100), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_19_PPM_GPMMR_SCOM1                                    , RULL(0x330F0101), SH_UNT_C_19     , SH_ACS_SCOM1     );
REG64( C_19_PPM_GPMMR_SCOM2                                    , RULL(0x330F0102), SH_UNT_C_19     , SH_ACS_SCOM2     );
REG64( C_20_PPM_GPMMR_SCOM                                     , RULL(0x340F0100), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_20_PPM_GPMMR_SCOM1                                    , RULL(0x340F0101), SH_UNT_C_20     , SH_ACS_SCOM1     );
REG64( C_20_PPM_GPMMR_SCOM2                                    , RULL(0x340F0102), SH_UNT_C_20     , SH_ACS_SCOM2     );
REG64( C_21_PPM_GPMMR_SCOM                                     , RULL(0x350F0100), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_21_PPM_GPMMR_SCOM1                                    , RULL(0x350F0101), SH_UNT_C_21     , SH_ACS_SCOM1     );
REG64( C_21_PPM_GPMMR_SCOM2                                    , RULL(0x350F0102), SH_UNT_C_21     , SH_ACS_SCOM2     );
REG64( C_22_PPM_GPMMR_SCOM                                     , RULL(0x360F0100), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_22_PPM_GPMMR_SCOM1                                    , RULL(0x360F0101), SH_UNT_C_22     , SH_ACS_SCOM1     );
REG64( C_22_PPM_GPMMR_SCOM2                                    , RULL(0x360F0102), SH_UNT_C_22     , SH_ACS_SCOM2     );
REG64( C_23_PPM_GPMMR_SCOM                                     , RULL(0x370F0100), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( C_23_PPM_GPMMR_SCOM1                                    , RULL(0x370F0101), SH_UNT_C_23     , SH_ACS_SCOM1     );
REG64( C_23_PPM_GPMMR_SCOM2                                    , RULL(0x370F0102), SH_UNT_C_23     , SH_ACS_SCOM2     );
REG64( EQ_PPM_GPMMR_SCOM                                       , RULL(0x100F0100), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_PPM_GPMMR_SCOM1                                      , RULL(0x100F0101), SH_UNT_EQ       , SH_ACS_SCOM1     );
REG64( EQ_PPM_GPMMR_SCOM2                                      , RULL(0x100F0102), SH_UNT_EQ       , SH_ACS_SCOM2     );
REG64( EQ_0_PPM_GPMMR_SCOM                                     , RULL(0x100F0100), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_0_PPM_GPMMR_SCOM1                                    , RULL(0x100F0101), SH_UNT_EQ_0     , SH_ACS_SCOM1     );
REG64( EQ_0_PPM_GPMMR_SCOM2                                    , RULL(0x100F0102), SH_UNT_EQ_0     , SH_ACS_SCOM2     );
REG64( EQ_1_PPM_GPMMR_SCOM                                     , RULL(0x110F0100), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_1_PPM_GPMMR_SCOM1                                    , RULL(0x110F0101), SH_UNT_EQ_1     , SH_ACS_SCOM1     );
REG64( EQ_1_PPM_GPMMR_SCOM2                                    , RULL(0x110F0102), SH_UNT_EQ_1     , SH_ACS_SCOM2     );
REG64( EQ_2_PPM_GPMMR_SCOM                                     , RULL(0x120F0100), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_2_PPM_GPMMR_SCOM1                                    , RULL(0x120F0101), SH_UNT_EQ_2     , SH_ACS_SCOM1     );
REG64( EQ_2_PPM_GPMMR_SCOM2                                    , RULL(0x120F0102), SH_UNT_EQ_2     , SH_ACS_SCOM2     );
REG64( EQ_3_PPM_GPMMR_SCOM                                     , RULL(0x130F0100), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_3_PPM_GPMMR_SCOM1                                    , RULL(0x130F0101), SH_UNT_EQ_3     , SH_ACS_SCOM1     );
REG64( EQ_3_PPM_GPMMR_SCOM2                                    , RULL(0x130F0102), SH_UNT_EQ_3     , SH_ACS_SCOM2     );
REG64( EQ_4_PPM_GPMMR_SCOM                                     , RULL(0x140F0100), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_4_PPM_GPMMR_SCOM1                                    , RULL(0x140F0101), SH_UNT_EQ_4     , SH_ACS_SCOM1     );
REG64( EQ_4_PPM_GPMMR_SCOM2                                    , RULL(0x140F0102), SH_UNT_EQ_4     , SH_ACS_SCOM2     );
REG64( EQ_5_PPM_GPMMR_SCOM                                     , RULL(0x150F0100), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EQ_5_PPM_GPMMR_SCOM1                                    , RULL(0x150F0101), SH_UNT_EQ_5     , SH_ACS_SCOM1     );
REG64( EQ_5_PPM_GPMMR_SCOM2                                    , RULL(0x150F0102), SH_UNT_EQ_5     , SH_ACS_SCOM2     );
REG64( EX_PPM_GPMMR_SCOM                                       , RULL(0x200F0100), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0100,
REG64( EX_PPM_GPMMR_SCOM1                                      , RULL(0x200F0101), SH_UNT_EX       ,
       SH_ACS_SCOM1     ); //DUPS: 210F0101,
REG64( EX_PPM_GPMMR_SCOM2                                      , RULL(0x200F0102), SH_UNT_EX       ,
       SH_ACS_SCOM2     ); //DUPS: 210F0102,
REG64( EX_0_PPM_GPMMR_SCOM                                     , RULL(0x200F0100), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0100,
REG64( EX_0_PPM_GPMMR_SCOM1                                    , RULL(0x200F0101), SH_UNT_EX_0     ,
       SH_ACS_SCOM1     ); //DUPS: 210F0101,
REG64( EX_0_PPM_GPMMR_SCOM2                                    , RULL(0x200F0102), SH_UNT_EX_0     ,
       SH_ACS_SCOM2     ); //DUPS: 210F0102,
REG64( EX_1_PPM_GPMMR_SCOM                                     , RULL(0x230F0100), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0100,
REG64( EX_1_PPM_GPMMR_SCOM1                                    , RULL(0x230F0101), SH_UNT_EX_1     ,
       SH_ACS_SCOM1     ); //DUPS: 220F0101,
REG64( EX_1_PPM_GPMMR_SCOM2                                    , RULL(0x230F0102), SH_UNT_EX_1     ,
       SH_ACS_SCOM2     ); //DUPS: 220F0102,
REG64( EX_2_PPM_GPMMR_SCOM                                     , RULL(0x240F0100), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0100,
REG64( EX_2_PPM_GPMMR_SCOM1                                    , RULL(0x240F0101), SH_UNT_EX_2     ,
       SH_ACS_SCOM1     ); //DUPS: 250F0101,
REG64( EX_2_PPM_GPMMR_SCOM2                                    , RULL(0x240F0102), SH_UNT_EX_2     ,
       SH_ACS_SCOM2     ); //DUPS: 250F0102,
REG64( EX_3_PPM_GPMMR_SCOM                                     , RULL(0x260F0100), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0100,
REG64( EX_3_PPM_GPMMR_SCOM1                                    , RULL(0x260F0101), SH_UNT_EX_3     ,
       SH_ACS_SCOM1     ); //DUPS: 270F0101,
REG64( EX_3_PPM_GPMMR_SCOM2                                    , RULL(0x260F0102), SH_UNT_EX_3     ,
       SH_ACS_SCOM2     ); //DUPS: 270F0102,
REG64( EX_4_PPM_GPMMR_SCOM                                     , RULL(0x280F0100), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0100,
REG64( EX_4_PPM_GPMMR_SCOM1                                    , RULL(0x280F0101), SH_UNT_EX_4     ,
       SH_ACS_SCOM1     ); //DUPS: 290F0101,
REG64( EX_4_PPM_GPMMR_SCOM2                                    , RULL(0x280F0102), SH_UNT_EX_4     ,
       SH_ACS_SCOM2     ); //DUPS: 290F0102,
REG64( EX_5_PPM_GPMMR_SCOM                                     , RULL(0x2A0F0100), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0100,
REG64( EX_5_PPM_GPMMR_SCOM1                                    , RULL(0x2A0F0101), SH_UNT_EX_5     ,
       SH_ACS_SCOM1     ); //DUPS: 2B0F0101,
REG64( EX_5_PPM_GPMMR_SCOM2                                    , RULL(0x2A0F0102), SH_UNT_EX_5     ,
       SH_ACS_SCOM2     ); //DUPS: 2B0F0102,
REG64( EX_6_PPM_GPMMR_SCOM                                     , RULL(0x2C0F0100), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0100,
REG64( EX_6_PPM_GPMMR_SCOM1                                    , RULL(0x2C0F0101), SH_UNT_EX_6     ,
       SH_ACS_SCOM1     ); //DUPS: 2D0F0101,
REG64( EX_6_PPM_GPMMR_SCOM2                                    , RULL(0x2C0F0102), SH_UNT_EX_6     ,
       SH_ACS_SCOM2     ); //DUPS: 2D0F0102,
REG64( EX_7_PPM_GPMMR_SCOM                                     , RULL(0x2E0F0100), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0100,
REG64( EX_7_PPM_GPMMR_SCOM1                                    , RULL(0x2E0F0101), SH_UNT_EX_7     ,
       SH_ACS_SCOM1     ); //DUPS: 2F0F0101,
REG64( EX_7_PPM_GPMMR_SCOM2                                    , RULL(0x2E0F0102), SH_UNT_EX_7     ,
       SH_ACS_SCOM2     ); //DUPS: 2F0F0102,
REG64( EX_8_PPM_GPMMR_SCOM                                     , RULL(0x300F0100), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0100,
REG64( EX_8_PPM_GPMMR_SCOM1                                    , RULL(0x300F0101), SH_UNT_EX_8     ,
       SH_ACS_SCOM1     ); //DUPS: 310F0101,
REG64( EX_8_PPM_GPMMR_SCOM2                                    , RULL(0x300F0102), SH_UNT_EX_8     ,
       SH_ACS_SCOM2     ); //DUPS: 310F0102,
REG64( EX_9_PPM_GPMMR_SCOM                                     , RULL(0x320F0100), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0100,
REG64( EX_9_PPM_GPMMR_SCOM1                                    , RULL(0x320F0101), SH_UNT_EX_9     ,
       SH_ACS_SCOM1     ); //DUPS: 330F0101,
REG64( EX_9_PPM_GPMMR_SCOM2                                    , RULL(0x320F0102), SH_UNT_EX_9     ,
       SH_ACS_SCOM2     ); //DUPS: 330F0102,
REG64( EX_10_PPM_GPMMR_SCOM                                    , RULL(0x340F0100), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0100,
REG64( EX_10_PPM_GPMMR_SCOM1                                   , RULL(0x340F0101), SH_UNT_EX_10    ,
       SH_ACS_SCOM1     ); //DUPS: 350F0101,
REG64( EX_10_PPM_GPMMR_SCOM2                                   , RULL(0x340F0102), SH_UNT_EX_10    ,
       SH_ACS_SCOM2     ); //DUPS: 350F0102,
REG64( EX_11_PPM_GPMMR_SCOM                                    , RULL(0x360F0100), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0100,
REG64( EX_11_PPM_GPMMR_SCOM1                                   , RULL(0x360F0101), SH_UNT_EX_11    ,
       SH_ACS_SCOM1     ); //DUPS: 370F0101,
REG64( EX_11_PPM_GPMMR_SCOM2                                   , RULL(0x360F0102), SH_UNT_EX_11    ,
       SH_ACS_SCOM2     ); //DUPS: 370F0102,

REG64( C_PPM_IVRMAVR                                           , RULL(0x200F01B5), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_PPM_IVRMAVR                                         , RULL(0x200F01B5), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_PPM_IVRMAVR                                         , RULL(0x210F01B5), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_PPM_IVRMAVR                                         , RULL(0x220F01B5), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_PPM_IVRMAVR                                         , RULL(0x230F01B5), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_PPM_IVRMAVR                                         , RULL(0x240F01B5), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_PPM_IVRMAVR                                         , RULL(0x250F01B5), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_PPM_IVRMAVR                                         , RULL(0x260F01B5), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_PPM_IVRMAVR                                         , RULL(0x270F01B5), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_PPM_IVRMAVR                                         , RULL(0x280F01B5), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_PPM_IVRMAVR                                         , RULL(0x290F01B5), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_PPM_IVRMAVR                                        , RULL(0x2A0F01B5), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_PPM_IVRMAVR                                        , RULL(0x2B0F01B5), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_PPM_IVRMAVR                                        , RULL(0x2C0F01B5), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_PPM_IVRMAVR                                        , RULL(0x2D0F01B5), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_PPM_IVRMAVR                                        , RULL(0x2E0F01B5), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_PPM_IVRMAVR                                        , RULL(0x2F0F01B5), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_PPM_IVRMAVR                                        , RULL(0x300F01B5), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_PPM_IVRMAVR                                        , RULL(0x310F01B5), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_PPM_IVRMAVR                                        , RULL(0x320F01B5), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_PPM_IVRMAVR                                        , RULL(0x330F01B5), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_PPM_IVRMAVR                                        , RULL(0x340F01B5), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_PPM_IVRMAVR                                        , RULL(0x350F01B5), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_PPM_IVRMAVR                                        , RULL(0x360F01B5), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_PPM_IVRMAVR                                        , RULL(0x370F01B5), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_PPM_IVRMAVR                                          , RULL(0x100F01B5), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_PPM_IVRMAVR                                        , RULL(0x100F01B5), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_PPM_IVRMAVR                                        , RULL(0x110F01B5), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_PPM_IVRMAVR                                        , RULL(0x120F01B5), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_PPM_IVRMAVR                                        , RULL(0x130F01B5), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_PPM_IVRMAVR                                        , RULL(0x140F01B5), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_PPM_IVRMAVR                                        , RULL(0x150F01B5), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_PPM_IVRMAVR                                          , RULL(0x200F01B5), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F01B5,
REG64( EX_0_PPM_IVRMAVR                                        , RULL(0x200F01B5), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F01B5,
REG64( EX_1_PPM_IVRMAVR                                        , RULL(0x230F01B5), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F01B5,
REG64( EX_2_PPM_IVRMAVR                                        , RULL(0x240F01B5), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F01B5,
REG64( EX_3_PPM_IVRMAVR                                        , RULL(0x260F01B5), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F01B5,
REG64( EX_4_PPM_IVRMAVR                                        , RULL(0x280F01B5), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F01B5,
REG64( EX_5_PPM_IVRMAVR                                        , RULL(0x2A0F01B5), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F01B5,
REG64( EX_6_PPM_IVRMAVR                                        , RULL(0x2C0F01B5), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F01B5,
REG64( EX_7_PPM_IVRMAVR                                        , RULL(0x2E0F01B5), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F01B5,
REG64( EX_8_PPM_IVRMAVR                                        , RULL(0x300F01B5), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F01B5,
REG64( EX_9_PPM_IVRMAVR                                        , RULL(0x320F01B5), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F01B5,
REG64( EX_10_PPM_IVRMAVR                                       , RULL(0x340F01B5), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F01B5,
REG64( EX_11_PPM_IVRMAVR                                       , RULL(0x360F01B5), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F01B5,

REG64( C_PPM_IVRMCR                                            , RULL(0x200F01B0), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_PPM_IVRMCR_CLEAR                                      , RULL(0x200F01B1), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_PPM_IVRMCR_OR                                         , RULL(0x200F01B2), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_PPM_IVRMCR                                          , RULL(0x200F01B0), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_IVRMCR_CLEAR                                    , RULL(0x200F01B1), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_PPM_IVRMCR_OR                                       , RULL(0x200F01B2), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_PPM_IVRMCR                                          , RULL(0x210F01B0), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_IVRMCR_CLEAR                                    , RULL(0x210F01B1), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_PPM_IVRMCR_OR                                       , RULL(0x210F01B2), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_PPM_IVRMCR                                          , RULL(0x220F01B0), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_IVRMCR_CLEAR                                    , RULL(0x220F01B1), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_PPM_IVRMCR_OR                                       , RULL(0x220F01B2), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_PPM_IVRMCR                                          , RULL(0x230F01B0), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_IVRMCR_CLEAR                                    , RULL(0x230F01B1), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_PPM_IVRMCR_OR                                       , RULL(0x230F01B2), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_PPM_IVRMCR                                          , RULL(0x240F01B0), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_IVRMCR_CLEAR                                    , RULL(0x240F01B1), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_PPM_IVRMCR_OR                                       , RULL(0x240F01B2), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_PPM_IVRMCR                                          , RULL(0x250F01B0), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_IVRMCR_CLEAR                                    , RULL(0x250F01B1), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_PPM_IVRMCR_OR                                       , RULL(0x250F01B2), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_PPM_IVRMCR                                          , RULL(0x260F01B0), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_IVRMCR_CLEAR                                    , RULL(0x260F01B1), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_PPM_IVRMCR_OR                                       , RULL(0x260F01B2), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_PPM_IVRMCR                                          , RULL(0x270F01B0), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_IVRMCR_CLEAR                                    , RULL(0x270F01B1), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_PPM_IVRMCR_OR                                       , RULL(0x270F01B2), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_PPM_IVRMCR                                          , RULL(0x280F01B0), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_IVRMCR_CLEAR                                    , RULL(0x280F01B1), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_PPM_IVRMCR_OR                                       , RULL(0x280F01B2), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_PPM_IVRMCR                                          , RULL(0x290F01B0), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_IVRMCR_CLEAR                                    , RULL(0x290F01B1), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_PPM_IVRMCR_OR                                       , RULL(0x290F01B2), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_PPM_IVRMCR                                         , RULL(0x2A0F01B0), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_IVRMCR_CLEAR                                   , RULL(0x2A0F01B1), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_PPM_IVRMCR_OR                                      , RULL(0x2A0F01B2), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_PPM_IVRMCR                                         , RULL(0x2B0F01B0), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_IVRMCR_CLEAR                                   , RULL(0x2B0F01B1), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_PPM_IVRMCR_OR                                      , RULL(0x2B0F01B2), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_PPM_IVRMCR                                         , RULL(0x2C0F01B0), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_IVRMCR_CLEAR                                   , RULL(0x2C0F01B1), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_PPM_IVRMCR_OR                                      , RULL(0x2C0F01B2), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_PPM_IVRMCR                                         , RULL(0x2D0F01B0), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_IVRMCR_CLEAR                                   , RULL(0x2D0F01B1), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_PPM_IVRMCR_OR                                      , RULL(0x2D0F01B2), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_PPM_IVRMCR                                         , RULL(0x2E0F01B0), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_IVRMCR_CLEAR                                   , RULL(0x2E0F01B1), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_PPM_IVRMCR_OR                                      , RULL(0x2E0F01B2), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_PPM_IVRMCR                                         , RULL(0x2F0F01B0), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_IVRMCR_CLEAR                                   , RULL(0x2F0F01B1), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_PPM_IVRMCR_OR                                      , RULL(0x2F0F01B2), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_PPM_IVRMCR                                         , RULL(0x300F01B0), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_IVRMCR_CLEAR                                   , RULL(0x300F01B1), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_PPM_IVRMCR_OR                                      , RULL(0x300F01B2), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_PPM_IVRMCR                                         , RULL(0x310F01B0), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_IVRMCR_CLEAR                                   , RULL(0x310F01B1), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_PPM_IVRMCR_OR                                      , RULL(0x310F01B2), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_PPM_IVRMCR                                         , RULL(0x320F01B0), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_IVRMCR_CLEAR                                   , RULL(0x320F01B1), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_PPM_IVRMCR_OR                                      , RULL(0x320F01B2), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_PPM_IVRMCR                                         , RULL(0x330F01B0), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_IVRMCR_CLEAR                                   , RULL(0x330F01B1), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_PPM_IVRMCR_OR                                      , RULL(0x330F01B2), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_PPM_IVRMCR                                         , RULL(0x340F01B0), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_IVRMCR_CLEAR                                   , RULL(0x340F01B1), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_PPM_IVRMCR_OR                                      , RULL(0x340F01B2), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_PPM_IVRMCR                                         , RULL(0x350F01B0), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_IVRMCR_CLEAR                                   , RULL(0x350F01B1), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_PPM_IVRMCR_OR                                      , RULL(0x350F01B2), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_PPM_IVRMCR                                         , RULL(0x360F01B0), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_IVRMCR_CLEAR                                   , RULL(0x360F01B1), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_PPM_IVRMCR_OR                                      , RULL(0x360F01B2), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_PPM_IVRMCR                                         , RULL(0x370F01B0), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_IVRMCR_CLEAR                                   , RULL(0x370F01B1), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_PPM_IVRMCR_OR                                      , RULL(0x370F01B2), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EQ_PPM_IVRMCR                                           , RULL(0x100F01B0), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_IVRMCR_CLEAR                                     , RULL(0x100F01B1), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_PPM_IVRMCR_OR                                        , RULL(0x100F01B2), SH_UNT_EQ       , SH_ACS_SCOM2_OR  );
REG64( EQ_0_PPM_IVRMCR                                         , RULL(0x100F01B0), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_IVRMCR_CLEAR                                   , RULL(0x100F01B1), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_0_PPM_IVRMCR_OR                                      , RULL(0x100F01B2), SH_UNT_EQ_0     , SH_ACS_SCOM2_OR  );
REG64( EQ_1_PPM_IVRMCR                                         , RULL(0x110F01B0), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_IVRMCR_CLEAR                                   , RULL(0x110F01B1), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_1_PPM_IVRMCR_OR                                      , RULL(0x110F01B2), SH_UNT_EQ_1     , SH_ACS_SCOM2_OR  );
REG64( EQ_2_PPM_IVRMCR                                         , RULL(0x120F01B0), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_IVRMCR_CLEAR                                   , RULL(0x120F01B1), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_2_PPM_IVRMCR_OR                                      , RULL(0x120F01B2), SH_UNT_EQ_2     , SH_ACS_SCOM2_OR  );
REG64( EQ_3_PPM_IVRMCR                                         , RULL(0x130F01B0), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_IVRMCR_CLEAR                                   , RULL(0x130F01B1), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_3_PPM_IVRMCR_OR                                      , RULL(0x130F01B2), SH_UNT_EQ_3     , SH_ACS_SCOM2_OR  );
REG64( EQ_4_PPM_IVRMCR                                         , RULL(0x140F01B0), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_IVRMCR_CLEAR                                   , RULL(0x140F01B1), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_4_PPM_IVRMCR_OR                                      , RULL(0x140F01B2), SH_UNT_EQ_4     , SH_ACS_SCOM2_OR  );
REG64( EQ_5_PPM_IVRMCR                                         , RULL(0x150F01B0), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_IVRMCR_CLEAR                                   , RULL(0x150F01B1), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_5_PPM_IVRMCR_OR                                      , RULL(0x150F01B2), SH_UNT_EQ_5     , SH_ACS_SCOM2_OR  );
REG64( EX_PPM_IVRMCR                                           , RULL(0x200F01B0), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01B0,
REG64( EX_PPM_IVRMCR_CLEAR                                     , RULL(0x200F01B1), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F01B1,
REG64( EX_PPM_IVRMCR_OR                                        , RULL(0x200F01B2), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F01B2,
REG64( EX_0_PPM_IVRMCR                                         , RULL(0x200F01B0), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01B0,
REG64( EX_0_PPM_IVRMCR_CLEAR                                   , RULL(0x200F01B1), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F01B1,
REG64( EX_0_PPM_IVRMCR_OR                                      , RULL(0x200F01B2), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F01B2,
REG64( EX_1_PPM_IVRMCR                                         , RULL(0x230F01B0), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01B0,
REG64( EX_1_PPM_IVRMCR_CLEAR                                   , RULL(0x230F01B1), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F01B1,
REG64( EX_1_PPM_IVRMCR_OR                                      , RULL(0x230F01B2), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F01B2,
REG64( EX_2_PPM_IVRMCR                                         , RULL(0x240F01B0), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01B0,
REG64( EX_2_PPM_IVRMCR_CLEAR                                   , RULL(0x240F01B1), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F01B1,
REG64( EX_2_PPM_IVRMCR_OR                                      , RULL(0x240F01B2), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F01B2,
REG64( EX_3_PPM_IVRMCR                                         , RULL(0x260F01B0), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01B0,
REG64( EX_3_PPM_IVRMCR_CLEAR                                   , RULL(0x260F01B1), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F01B1,
REG64( EX_3_PPM_IVRMCR_OR                                      , RULL(0x260F01B2), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F01B2,
REG64( EX_4_PPM_IVRMCR                                         , RULL(0x280F01B0), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01B0,
REG64( EX_4_PPM_IVRMCR_CLEAR                                   , RULL(0x280F01B1), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F01B1,
REG64( EX_4_PPM_IVRMCR_OR                                      , RULL(0x280F01B2), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F01B2,
REG64( EX_5_PPM_IVRMCR                                         , RULL(0x2A0F01B0), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01B0,
REG64( EX_5_PPM_IVRMCR_CLEAR                                   , RULL(0x2A0F01B1), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F01B1,
REG64( EX_5_PPM_IVRMCR_OR                                      , RULL(0x2A0F01B2), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F01B2,
REG64( EX_6_PPM_IVRMCR                                         , RULL(0x2C0F01B0), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01B0,
REG64( EX_6_PPM_IVRMCR_CLEAR                                   , RULL(0x2C0F01B1), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F01B1,
REG64( EX_6_PPM_IVRMCR_OR                                      , RULL(0x2C0F01B2), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F01B2,
REG64( EX_7_PPM_IVRMCR                                         , RULL(0x2E0F01B0), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01B0,
REG64( EX_7_PPM_IVRMCR_CLEAR                                   , RULL(0x2E0F01B1), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F01B1,
REG64( EX_7_PPM_IVRMCR_OR                                      , RULL(0x2E0F01B2), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F01B2,
REG64( EX_8_PPM_IVRMCR                                         , RULL(0x300F01B0), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01B0,
REG64( EX_8_PPM_IVRMCR_CLEAR                                   , RULL(0x300F01B1), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F01B1,
REG64( EX_8_PPM_IVRMCR_OR                                      , RULL(0x300F01B2), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F01B2,
REG64( EX_9_PPM_IVRMCR                                         , RULL(0x320F01B0), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01B0,
REG64( EX_9_PPM_IVRMCR_CLEAR                                   , RULL(0x320F01B1), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F01B1,
REG64( EX_9_PPM_IVRMCR_OR                                      , RULL(0x320F01B2), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F01B2,
REG64( EX_10_PPM_IVRMCR                                        , RULL(0x340F01B0), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01B0,
REG64( EX_10_PPM_IVRMCR_CLEAR                                  , RULL(0x340F01B1), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F01B1,
REG64( EX_10_PPM_IVRMCR_OR                                     , RULL(0x340F01B2), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F01B2,
REG64( EX_11_PPM_IVRMCR                                        , RULL(0x360F01B0), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01B0,
REG64( EX_11_PPM_IVRMCR_CLEAR                                  , RULL(0x360F01B1), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F01B1,
REG64( EX_11_PPM_IVRMCR_OR                                     , RULL(0x360F01B2), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F01B2,

REG64( C_PPM_IVRMDVR                                           , RULL(0x200F01B4), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_IVRMDVR                                         , RULL(0x200F01B4), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_IVRMDVR                                         , RULL(0x210F01B4), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_IVRMDVR                                         , RULL(0x220F01B4), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_IVRMDVR                                         , RULL(0x230F01B4), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_IVRMDVR                                         , RULL(0x240F01B4), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_IVRMDVR                                         , RULL(0x250F01B4), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_IVRMDVR                                         , RULL(0x260F01B4), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_IVRMDVR                                         , RULL(0x270F01B4), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_IVRMDVR                                         , RULL(0x280F01B4), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_IVRMDVR                                         , RULL(0x290F01B4), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_IVRMDVR                                        , RULL(0x2A0F01B4), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_IVRMDVR                                        , RULL(0x2B0F01B4), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_IVRMDVR                                        , RULL(0x2C0F01B4), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_IVRMDVR                                        , RULL(0x2D0F01B4), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_IVRMDVR                                        , RULL(0x2E0F01B4), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_IVRMDVR                                        , RULL(0x2F0F01B4), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_IVRMDVR                                        , RULL(0x300F01B4), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_IVRMDVR                                        , RULL(0x310F01B4), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_IVRMDVR                                        , RULL(0x320F01B4), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_IVRMDVR                                        , RULL(0x330F01B4), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_IVRMDVR                                        , RULL(0x340F01B4), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_IVRMDVR                                        , RULL(0x350F01B4), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_IVRMDVR                                        , RULL(0x360F01B4), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_IVRMDVR                                        , RULL(0x370F01B4), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_IVRMDVR                                          , RULL(0x100F01B4), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_IVRMDVR                                        , RULL(0x100F01B4), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_IVRMDVR                                        , RULL(0x110F01B4), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_IVRMDVR                                        , RULL(0x120F01B4), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_IVRMDVR                                        , RULL(0x130F01B4), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_IVRMDVR                                        , RULL(0x140F01B4), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_IVRMDVR                                        , RULL(0x150F01B4), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_IVRMDVR                                          , RULL(0x200F01B4), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01B4,
REG64( EX_0_PPM_IVRMDVR                                        , RULL(0x200F01B4), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01B4,
REG64( EX_1_PPM_IVRMDVR                                        , RULL(0x230F01B4), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01B4,
REG64( EX_2_PPM_IVRMDVR                                        , RULL(0x240F01B4), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01B4,
REG64( EX_3_PPM_IVRMDVR                                        , RULL(0x260F01B4), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01B4,
REG64( EX_4_PPM_IVRMDVR                                        , RULL(0x280F01B4), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01B4,
REG64( EX_5_PPM_IVRMDVR                                        , RULL(0x2A0F01B4), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01B4,
REG64( EX_6_PPM_IVRMDVR                                        , RULL(0x2C0F01B4), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01B4,
REG64( EX_7_PPM_IVRMDVR                                        , RULL(0x2E0F01B4), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01B4,
REG64( EX_8_PPM_IVRMDVR                                        , RULL(0x300F01B4), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01B4,
REG64( EX_9_PPM_IVRMDVR                                        , RULL(0x320F01B4), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01B4,
REG64( EX_10_PPM_IVRMDVR                                       , RULL(0x340F01B4), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01B4,
REG64( EX_11_PPM_IVRMDVR                                       , RULL(0x360F01B4), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01B4,

REG64( C_PPM_IVRMST                                            , RULL(0x200F01B3), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_PPM_IVRMST                                          , RULL(0x200F01B3), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_PPM_IVRMST                                          , RULL(0x210F01B3), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_PPM_IVRMST                                          , RULL(0x220F01B3), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_PPM_IVRMST                                          , RULL(0x230F01B3), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_PPM_IVRMST                                          , RULL(0x240F01B3), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_PPM_IVRMST                                          , RULL(0x250F01B3), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_PPM_IVRMST                                          , RULL(0x260F01B3), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_PPM_IVRMST                                          , RULL(0x270F01B3), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_PPM_IVRMST                                          , RULL(0x280F01B3), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_PPM_IVRMST                                          , RULL(0x290F01B3), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_PPM_IVRMST                                         , RULL(0x2A0F01B3), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_PPM_IVRMST                                         , RULL(0x2B0F01B3), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_PPM_IVRMST                                         , RULL(0x2C0F01B3), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_PPM_IVRMST                                         , RULL(0x2D0F01B3), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_PPM_IVRMST                                         , RULL(0x2E0F01B3), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_PPM_IVRMST                                         , RULL(0x2F0F01B3), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_PPM_IVRMST                                         , RULL(0x300F01B3), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_PPM_IVRMST                                         , RULL(0x310F01B3), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_PPM_IVRMST                                         , RULL(0x320F01B3), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_PPM_IVRMST                                         , RULL(0x330F01B3), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_PPM_IVRMST                                         , RULL(0x340F01B3), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_PPM_IVRMST                                         , RULL(0x350F01B3), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_PPM_IVRMST                                         , RULL(0x360F01B3), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_PPM_IVRMST                                         , RULL(0x370F01B3), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_PPM_IVRMST                                           , RULL(0x100F01B3), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_PPM_IVRMST                                         , RULL(0x100F01B3), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_PPM_IVRMST                                         , RULL(0x110F01B3), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_PPM_IVRMST                                         , RULL(0x120F01B3), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_PPM_IVRMST                                         , RULL(0x130F01B3), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_PPM_IVRMST                                         , RULL(0x140F01B3), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_PPM_IVRMST                                         , RULL(0x150F01B3), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_PPM_IVRMST                                           , RULL(0x200F01B3), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F01B3,
REG64( EX_0_PPM_IVRMST                                         , RULL(0x200F01B3), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F01B3,
REG64( EX_1_PPM_IVRMST                                         , RULL(0x230F01B3), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F01B3,
REG64( EX_2_PPM_IVRMST                                         , RULL(0x240F01B3), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F01B3,
REG64( EX_3_PPM_IVRMST                                         , RULL(0x260F01B3), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F01B3,
REG64( EX_4_PPM_IVRMST                                         , RULL(0x280F01B3), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F01B3,
REG64( EX_5_PPM_IVRMST                                         , RULL(0x2A0F01B3), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F01B3,
REG64( EX_6_PPM_IVRMST                                         , RULL(0x2C0F01B3), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F01B3,
REG64( EX_7_PPM_IVRMST                                         , RULL(0x2E0F01B3), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F01B3,
REG64( EX_8_PPM_IVRMST                                         , RULL(0x300F01B3), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F01B3,
REG64( EX_9_PPM_IVRMST                                         , RULL(0x320F01B3), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F01B3,
REG64( EX_10_PPM_IVRMST                                        , RULL(0x340F01B3), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F01B3,
REG64( EX_11_PPM_IVRMST                                        , RULL(0x360F01B3), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F01B3,

REG64( C_PPM_PFCS_SCOM                                         , RULL(0x200F0118), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_PPM_PFCS_SCOM1                                        , RULL(0x200F0119), SH_UNT_C        , SH_ACS_SCOM1     );
REG64( C_PPM_PFCS_SCOM2                                        , RULL(0x200F011A), SH_UNT_C        , SH_ACS_SCOM2     );
REG64( C_0_PPM_PFCS_SCOM                                       , RULL(0x200F0118), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_0_PPM_PFCS_SCOM1                                      , RULL(0x200F0119), SH_UNT_C_0      , SH_ACS_SCOM1     );
REG64( C_0_PPM_PFCS_SCOM2                                      , RULL(0x200F011A), SH_UNT_C_0      , SH_ACS_SCOM2     );
REG64( C_1_PPM_PFCS_SCOM                                       , RULL(0x210F0118), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_1_PPM_PFCS_SCOM1                                      , RULL(0x210F0119), SH_UNT_C_1      , SH_ACS_SCOM1     );
REG64( C_1_PPM_PFCS_SCOM2                                      , RULL(0x210F011A), SH_UNT_C_1      , SH_ACS_SCOM2     );
REG64( C_2_PPM_PFCS_SCOM                                       , RULL(0x220F0118), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_2_PPM_PFCS_SCOM1                                      , RULL(0x220F0119), SH_UNT_C_2      , SH_ACS_SCOM1     );
REG64( C_2_PPM_PFCS_SCOM2                                      , RULL(0x220F011A), SH_UNT_C_2      , SH_ACS_SCOM2     );
REG64( C_3_PPM_PFCS_SCOM                                       , RULL(0x230F0118), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_3_PPM_PFCS_SCOM1                                      , RULL(0x230F0119), SH_UNT_C_3      , SH_ACS_SCOM1     );
REG64( C_3_PPM_PFCS_SCOM2                                      , RULL(0x230F011A), SH_UNT_C_3      , SH_ACS_SCOM2     );
REG64( C_4_PPM_PFCS_SCOM                                       , RULL(0x240F0118), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_4_PPM_PFCS_SCOM1                                      , RULL(0x240F0119), SH_UNT_C_4      , SH_ACS_SCOM1     );
REG64( C_4_PPM_PFCS_SCOM2                                      , RULL(0x240F011A), SH_UNT_C_4      , SH_ACS_SCOM2     );
REG64( C_5_PPM_PFCS_SCOM                                       , RULL(0x250F0118), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_5_PPM_PFCS_SCOM1                                      , RULL(0x250F0119), SH_UNT_C_5      , SH_ACS_SCOM1     );
REG64( C_5_PPM_PFCS_SCOM2                                      , RULL(0x250F011A), SH_UNT_C_5      , SH_ACS_SCOM2     );
REG64( C_6_PPM_PFCS_SCOM                                       , RULL(0x260F0118), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_6_PPM_PFCS_SCOM1                                      , RULL(0x260F0119), SH_UNT_C_6      , SH_ACS_SCOM1     );
REG64( C_6_PPM_PFCS_SCOM2                                      , RULL(0x260F011A), SH_UNT_C_6      , SH_ACS_SCOM2     );
REG64( C_7_PPM_PFCS_SCOM                                       , RULL(0x270F0118), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_7_PPM_PFCS_SCOM1                                      , RULL(0x270F0119), SH_UNT_C_7      , SH_ACS_SCOM1     );
REG64( C_7_PPM_PFCS_SCOM2                                      , RULL(0x270F011A), SH_UNT_C_7      , SH_ACS_SCOM2     );
REG64( C_8_PPM_PFCS_SCOM                                       , RULL(0x280F0118), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_8_PPM_PFCS_SCOM1                                      , RULL(0x280F0119), SH_UNT_C_8      , SH_ACS_SCOM1     );
REG64( C_8_PPM_PFCS_SCOM2                                      , RULL(0x280F011A), SH_UNT_C_8      , SH_ACS_SCOM2     );
REG64( C_9_PPM_PFCS_SCOM                                       , RULL(0x290F0118), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_9_PPM_PFCS_SCOM1                                      , RULL(0x290F0119), SH_UNT_C_9      , SH_ACS_SCOM1     );
REG64( C_9_PPM_PFCS_SCOM2                                      , RULL(0x290F011A), SH_UNT_C_9      , SH_ACS_SCOM2     );
REG64( C_10_PPM_PFCS_SCOM                                      , RULL(0x2A0F0118), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_10_PPM_PFCS_SCOM1                                     , RULL(0x2A0F0119), SH_UNT_C_10     , SH_ACS_SCOM1     );
REG64( C_10_PPM_PFCS_SCOM2                                     , RULL(0x2A0F011A), SH_UNT_C_10     , SH_ACS_SCOM2     );
REG64( C_11_PPM_PFCS_SCOM                                      , RULL(0x2B0F0118), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_11_PPM_PFCS_SCOM1                                     , RULL(0x2B0F0119), SH_UNT_C_11     , SH_ACS_SCOM1     );
REG64( C_11_PPM_PFCS_SCOM2                                     , RULL(0x2B0F011A), SH_UNT_C_11     , SH_ACS_SCOM2     );
REG64( C_12_PPM_PFCS_SCOM                                      , RULL(0x2C0F0118), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_12_PPM_PFCS_SCOM1                                     , RULL(0x2C0F0119), SH_UNT_C_12     , SH_ACS_SCOM1     );
REG64( C_12_PPM_PFCS_SCOM2                                     , RULL(0x2C0F011A), SH_UNT_C_12     , SH_ACS_SCOM2     );
REG64( C_13_PPM_PFCS_SCOM                                      , RULL(0x2D0F0118), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_13_PPM_PFCS_SCOM1                                     , RULL(0x2D0F0119), SH_UNT_C_13     , SH_ACS_SCOM1     );
REG64( C_13_PPM_PFCS_SCOM2                                     , RULL(0x2D0F011A), SH_UNT_C_13     , SH_ACS_SCOM2     );
REG64( C_14_PPM_PFCS_SCOM                                      , RULL(0x2E0F0118), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_14_PPM_PFCS_SCOM1                                     , RULL(0x2E0F0119), SH_UNT_C_14     , SH_ACS_SCOM1     );
REG64( C_14_PPM_PFCS_SCOM2                                     , RULL(0x2E0F011A), SH_UNT_C_14     , SH_ACS_SCOM2     );
REG64( C_15_PPM_PFCS_SCOM                                      , RULL(0x2F0F0118), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_15_PPM_PFCS_SCOM1                                     , RULL(0x2F0F0119), SH_UNT_C_15     , SH_ACS_SCOM1     );
REG64( C_15_PPM_PFCS_SCOM2                                     , RULL(0x2F0F011A), SH_UNT_C_15     , SH_ACS_SCOM2     );
REG64( C_16_PPM_PFCS_SCOM                                      , RULL(0x300F0118), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_16_PPM_PFCS_SCOM1                                     , RULL(0x300F0119), SH_UNT_C_16     , SH_ACS_SCOM1     );
REG64( C_16_PPM_PFCS_SCOM2                                     , RULL(0x300F011A), SH_UNT_C_16     , SH_ACS_SCOM2     );
REG64( C_17_PPM_PFCS_SCOM                                      , RULL(0x310F0118), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_17_PPM_PFCS_SCOM1                                     , RULL(0x310F0119), SH_UNT_C_17     , SH_ACS_SCOM1     );
REG64( C_17_PPM_PFCS_SCOM2                                     , RULL(0x310F011A), SH_UNT_C_17     , SH_ACS_SCOM2     );
REG64( C_18_PPM_PFCS_SCOM                                      , RULL(0x320F0118), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_18_PPM_PFCS_SCOM1                                     , RULL(0x320F0119), SH_UNT_C_18     , SH_ACS_SCOM1     );
REG64( C_18_PPM_PFCS_SCOM2                                     , RULL(0x320F011A), SH_UNT_C_18     , SH_ACS_SCOM2     );
REG64( C_19_PPM_PFCS_SCOM                                      , RULL(0x330F0118), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_19_PPM_PFCS_SCOM1                                     , RULL(0x330F0119), SH_UNT_C_19     , SH_ACS_SCOM1     );
REG64( C_19_PPM_PFCS_SCOM2                                     , RULL(0x330F011A), SH_UNT_C_19     , SH_ACS_SCOM2     );
REG64( C_20_PPM_PFCS_SCOM                                      , RULL(0x340F0118), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_20_PPM_PFCS_SCOM1                                     , RULL(0x340F0119), SH_UNT_C_20     , SH_ACS_SCOM1     );
REG64( C_20_PPM_PFCS_SCOM2                                     , RULL(0x340F011A), SH_UNT_C_20     , SH_ACS_SCOM2     );
REG64( C_21_PPM_PFCS_SCOM                                      , RULL(0x350F0118), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_21_PPM_PFCS_SCOM1                                     , RULL(0x350F0119), SH_UNT_C_21     , SH_ACS_SCOM1     );
REG64( C_21_PPM_PFCS_SCOM2                                     , RULL(0x350F011A), SH_UNT_C_21     , SH_ACS_SCOM2     );
REG64( C_22_PPM_PFCS_SCOM                                      , RULL(0x360F0118), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_22_PPM_PFCS_SCOM1                                     , RULL(0x360F0119), SH_UNT_C_22     , SH_ACS_SCOM1     );
REG64( C_22_PPM_PFCS_SCOM2                                     , RULL(0x360F011A), SH_UNT_C_22     , SH_ACS_SCOM2     );
REG64( C_23_PPM_PFCS_SCOM                                      , RULL(0x370F0118), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( C_23_PPM_PFCS_SCOM1                                     , RULL(0x370F0119), SH_UNT_C_23     , SH_ACS_SCOM1     );
REG64( C_23_PPM_PFCS_SCOM2                                     , RULL(0x370F011A), SH_UNT_C_23     , SH_ACS_SCOM2     );
REG64( EQ_PPM_PFCS_SCOM                                        , RULL(0x100F0118), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_PPM_PFCS_SCOM1                                       , RULL(0x100F0119), SH_UNT_EQ       , SH_ACS_SCOM1     );
REG64( EQ_PPM_PFCS_SCOM2                                       , RULL(0x100F011A), SH_UNT_EQ       , SH_ACS_SCOM2     );
REG64( EQ_0_PPM_PFCS_SCOM                                      , RULL(0x100F0118), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_0_PPM_PFCS_SCOM1                                     , RULL(0x100F0119), SH_UNT_EQ_0     , SH_ACS_SCOM1     );
REG64( EQ_0_PPM_PFCS_SCOM2                                     , RULL(0x100F011A), SH_UNT_EQ_0     , SH_ACS_SCOM2     );
REG64( EQ_1_PPM_PFCS_SCOM                                      , RULL(0x110F0118), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_1_PPM_PFCS_SCOM1                                     , RULL(0x110F0119), SH_UNT_EQ_1     , SH_ACS_SCOM1     );
REG64( EQ_1_PPM_PFCS_SCOM2                                     , RULL(0x110F011A), SH_UNT_EQ_1     , SH_ACS_SCOM2     );
REG64( EQ_2_PPM_PFCS_SCOM                                      , RULL(0x120F0118), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_2_PPM_PFCS_SCOM1                                     , RULL(0x120F0119), SH_UNT_EQ_2     , SH_ACS_SCOM1     );
REG64( EQ_2_PPM_PFCS_SCOM2                                     , RULL(0x120F011A), SH_UNT_EQ_2     , SH_ACS_SCOM2     );
REG64( EQ_3_PPM_PFCS_SCOM                                      , RULL(0x130F0118), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_3_PPM_PFCS_SCOM1                                     , RULL(0x130F0119), SH_UNT_EQ_3     , SH_ACS_SCOM1     );
REG64( EQ_3_PPM_PFCS_SCOM2                                     , RULL(0x130F011A), SH_UNT_EQ_3     , SH_ACS_SCOM2     );
REG64( EQ_4_PPM_PFCS_SCOM                                      , RULL(0x140F0118), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_4_PPM_PFCS_SCOM1                                     , RULL(0x140F0119), SH_UNT_EQ_4     , SH_ACS_SCOM1     );
REG64( EQ_4_PPM_PFCS_SCOM2                                     , RULL(0x140F011A), SH_UNT_EQ_4     , SH_ACS_SCOM2     );
REG64( EQ_5_PPM_PFCS_SCOM                                      , RULL(0x150F0118), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EQ_5_PPM_PFCS_SCOM1                                     , RULL(0x150F0119), SH_UNT_EQ_5     , SH_ACS_SCOM1     );
REG64( EQ_5_PPM_PFCS_SCOM2                                     , RULL(0x150F011A), SH_UNT_EQ_5     , SH_ACS_SCOM2     );
REG64( EX_PPM_PFCS_SCOM                                        , RULL(0x200F0118), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0118,
REG64( EX_PPM_PFCS_SCOM1                                       , RULL(0x200F0119), SH_UNT_EX       ,
       SH_ACS_SCOM1     ); //DUPS: 210F0119,
REG64( EX_PPM_PFCS_SCOM2                                       , RULL(0x200F011A), SH_UNT_EX       ,
       SH_ACS_SCOM2     ); //DUPS: 210F011A,
REG64( EX_0_PPM_PFCS_SCOM                                      , RULL(0x200F0118), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0118,
REG64( EX_0_PPM_PFCS_SCOM1                                     , RULL(0x200F0119), SH_UNT_EX_0     ,
       SH_ACS_SCOM1     ); //DUPS: 210F0119,
REG64( EX_0_PPM_PFCS_SCOM2                                     , RULL(0x200F011A), SH_UNT_EX_0     ,
       SH_ACS_SCOM2     ); //DUPS: 210F011A,
REG64( EX_1_PPM_PFCS_SCOM                                      , RULL(0x230F0118), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0118,
REG64( EX_1_PPM_PFCS_SCOM1                                     , RULL(0x230F0119), SH_UNT_EX_1     ,
       SH_ACS_SCOM1     ); //DUPS: 220F0119,
REG64( EX_1_PPM_PFCS_SCOM2                                     , RULL(0x230F011A), SH_UNT_EX_1     ,
       SH_ACS_SCOM2     ); //DUPS: 220F011A,
REG64( EX_2_PPM_PFCS_SCOM                                      , RULL(0x240F0118), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0118,
REG64( EX_2_PPM_PFCS_SCOM1                                     , RULL(0x240F0119), SH_UNT_EX_2     ,
       SH_ACS_SCOM1     ); //DUPS: 250F0119,
REG64( EX_2_PPM_PFCS_SCOM2                                     , RULL(0x240F011A), SH_UNT_EX_2     ,
       SH_ACS_SCOM2     ); //DUPS: 250F011A,
REG64( EX_3_PPM_PFCS_SCOM                                      , RULL(0x260F0118), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0118,
REG64( EX_3_PPM_PFCS_SCOM1                                     , RULL(0x260F0119), SH_UNT_EX_3     ,
       SH_ACS_SCOM1     ); //DUPS: 270F0119,
REG64( EX_3_PPM_PFCS_SCOM2                                     , RULL(0x260F011A), SH_UNT_EX_3     ,
       SH_ACS_SCOM2     ); //DUPS: 270F011A,
REG64( EX_4_PPM_PFCS_SCOM                                      , RULL(0x280F0118), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0118,
REG64( EX_4_PPM_PFCS_SCOM1                                     , RULL(0x280F0119), SH_UNT_EX_4     ,
       SH_ACS_SCOM1     ); //DUPS: 290F0119,
REG64( EX_4_PPM_PFCS_SCOM2                                     , RULL(0x280F011A), SH_UNT_EX_4     ,
       SH_ACS_SCOM2     ); //DUPS: 290F011A,
REG64( EX_5_PPM_PFCS_SCOM                                      , RULL(0x2A0F0118), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0118,
REG64( EX_5_PPM_PFCS_SCOM1                                     , RULL(0x2A0F0119), SH_UNT_EX_5     ,
       SH_ACS_SCOM1     ); //DUPS: 2B0F0119,
REG64( EX_5_PPM_PFCS_SCOM2                                     , RULL(0x2A0F011A), SH_UNT_EX_5     ,
       SH_ACS_SCOM2     ); //DUPS: 2B0F011A,
REG64( EX_6_PPM_PFCS_SCOM                                      , RULL(0x2C0F0118), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0118,
REG64( EX_6_PPM_PFCS_SCOM1                                     , RULL(0x2C0F0119), SH_UNT_EX_6     ,
       SH_ACS_SCOM1     ); //DUPS: 2D0F0119,
REG64( EX_6_PPM_PFCS_SCOM2                                     , RULL(0x2C0F011A), SH_UNT_EX_6     ,
       SH_ACS_SCOM2     ); //DUPS: 2D0F011A,
REG64( EX_7_PPM_PFCS_SCOM                                      , RULL(0x2E0F0118), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0118,
REG64( EX_7_PPM_PFCS_SCOM1                                     , RULL(0x2E0F0119), SH_UNT_EX_7     ,
       SH_ACS_SCOM1     ); //DUPS: 2F0F0119,
REG64( EX_7_PPM_PFCS_SCOM2                                     , RULL(0x2E0F011A), SH_UNT_EX_7     ,
       SH_ACS_SCOM2     ); //DUPS: 2F0F011A,
REG64( EX_8_PPM_PFCS_SCOM                                      , RULL(0x300F0118), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0118,
REG64( EX_8_PPM_PFCS_SCOM1                                     , RULL(0x300F0119), SH_UNT_EX_8     ,
       SH_ACS_SCOM1     ); //DUPS: 310F0119,
REG64( EX_8_PPM_PFCS_SCOM2                                     , RULL(0x300F011A), SH_UNT_EX_8     ,
       SH_ACS_SCOM2     ); //DUPS: 310F011A,
REG64( EX_9_PPM_PFCS_SCOM                                      , RULL(0x320F0118), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0118,
REG64( EX_9_PPM_PFCS_SCOM1                                     , RULL(0x320F0119), SH_UNT_EX_9     ,
       SH_ACS_SCOM1     ); //DUPS: 330F0119,
REG64( EX_9_PPM_PFCS_SCOM2                                     , RULL(0x320F011A), SH_UNT_EX_9     ,
       SH_ACS_SCOM2     ); //DUPS: 330F011A,
REG64( EX_10_PPM_PFCS_SCOM                                     , RULL(0x340F0118), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0118,
REG64( EX_10_PPM_PFCS_SCOM1                                    , RULL(0x340F0119), SH_UNT_EX_10    ,
       SH_ACS_SCOM1     ); //DUPS: 350F0119,
REG64( EX_10_PPM_PFCS_SCOM2                                    , RULL(0x340F011A), SH_UNT_EX_10    ,
       SH_ACS_SCOM2     ); //DUPS: 350F011A,
REG64( EX_11_PPM_PFCS_SCOM                                     , RULL(0x360F0118), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0118,
REG64( EX_11_PPM_PFCS_SCOM1                                    , RULL(0x360F0119), SH_UNT_EX_11    ,
       SH_ACS_SCOM1     ); //DUPS: 370F0119,
REG64( EX_11_PPM_PFCS_SCOM2                                    , RULL(0x360F011A), SH_UNT_EX_11    ,
       SH_ACS_SCOM2     ); //DUPS: 370F011A,

REG64( C_PPM_PFDLY                                             , RULL(0x200F011B), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_PFDLY                                           , RULL(0x200F011B), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_PFDLY                                           , RULL(0x210F011B), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_PFDLY                                           , RULL(0x220F011B), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_PFDLY                                           , RULL(0x230F011B), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_PFDLY                                           , RULL(0x240F011B), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_PFDLY                                           , RULL(0x250F011B), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_PFDLY                                           , RULL(0x260F011B), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_PFDLY                                           , RULL(0x270F011B), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_PFDLY                                           , RULL(0x280F011B), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_PFDLY                                           , RULL(0x290F011B), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_PFDLY                                          , RULL(0x2A0F011B), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_PFDLY                                          , RULL(0x2B0F011B), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_PFDLY                                          , RULL(0x2C0F011B), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_PFDLY                                          , RULL(0x2D0F011B), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_PFDLY                                          , RULL(0x2E0F011B), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_PFDLY                                          , RULL(0x2F0F011B), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_PFDLY                                          , RULL(0x300F011B), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_PFDLY                                          , RULL(0x310F011B), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_PFDLY                                          , RULL(0x320F011B), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_PFDLY                                          , RULL(0x330F011B), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_PFDLY                                          , RULL(0x340F011B), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_PFDLY                                          , RULL(0x350F011B), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_PFDLY                                          , RULL(0x360F011B), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_PFDLY                                          , RULL(0x370F011B), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_PFDLY                                            , RULL(0x100F011B), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_PFDLY                                          , RULL(0x100F011B), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_PFDLY                                          , RULL(0x110F011B), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_PFDLY                                          , RULL(0x120F011B), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_PFDLY                                          , RULL(0x130F011B), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_PFDLY                                          , RULL(0x140F011B), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_PFDLY                                          , RULL(0x150F011B), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_PFDLY                                            , RULL(0x200F011B), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F011B,
REG64( EX_0_PPM_PFDLY                                          , RULL(0x200F011B), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F011B,
REG64( EX_1_PPM_PFDLY                                          , RULL(0x230F011B), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F011B,
REG64( EX_2_PPM_PFDLY                                          , RULL(0x240F011B), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F011B,
REG64( EX_3_PPM_PFDLY                                          , RULL(0x260F011B), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F011B,
REG64( EX_4_PPM_PFDLY                                          , RULL(0x280F011B), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F011B,
REG64( EX_5_PPM_PFDLY                                          , RULL(0x2A0F011B), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F011B,
REG64( EX_6_PPM_PFDLY                                          , RULL(0x2C0F011B), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F011B,
REG64( EX_7_PPM_PFDLY                                          , RULL(0x2E0F011B), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F011B,
REG64( EX_8_PPM_PFDLY                                          , RULL(0x300F011B), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F011B,
REG64( EX_9_PPM_PFDLY                                          , RULL(0x320F011B), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F011B,
REG64( EX_10_PPM_PFDLY                                         , RULL(0x340F011B), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F011B,
REG64( EX_11_PPM_PFDLY                                         , RULL(0x360F011B), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F011B,

REG64( C_PPM_PFOFF                                             , RULL(0x200F011D), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_PFOFF                                           , RULL(0x200F011D), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_PFOFF                                           , RULL(0x210F011D), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_PFOFF                                           , RULL(0x220F011D), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_PFOFF                                           , RULL(0x230F011D), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_PFOFF                                           , RULL(0x240F011D), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_PFOFF                                           , RULL(0x250F011D), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_PFOFF                                           , RULL(0x260F011D), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_PFOFF                                           , RULL(0x270F011D), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_PFOFF                                           , RULL(0x280F011D), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_PFOFF                                           , RULL(0x290F011D), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_PFOFF                                          , RULL(0x2A0F011D), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_PFOFF                                          , RULL(0x2B0F011D), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_PFOFF                                          , RULL(0x2C0F011D), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_PFOFF                                          , RULL(0x2D0F011D), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_PFOFF                                          , RULL(0x2E0F011D), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_PFOFF                                          , RULL(0x2F0F011D), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_PFOFF                                          , RULL(0x300F011D), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_PFOFF                                          , RULL(0x310F011D), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_PFOFF                                          , RULL(0x320F011D), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_PFOFF                                          , RULL(0x330F011D), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_PFOFF                                          , RULL(0x340F011D), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_PFOFF                                          , RULL(0x350F011D), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_PFOFF                                          , RULL(0x360F011D), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_PFOFF                                          , RULL(0x370F011D), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_PFOFF                                            , RULL(0x100F011D), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_PFOFF                                          , RULL(0x100F011D), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_PFOFF                                          , RULL(0x110F011D), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_PFOFF                                          , RULL(0x120F011D), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_PFOFF                                          , RULL(0x130F011D), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_PFOFF                                          , RULL(0x140F011D), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_PFOFF                                          , RULL(0x150F011D), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_PFOFF                                            , RULL(0x200F011D), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F011D,
REG64( EX_0_PPM_PFOFF                                          , RULL(0x200F011D), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F011D,
REG64( EX_1_PPM_PFOFF                                          , RULL(0x230F011D), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F011D,
REG64( EX_2_PPM_PFOFF                                          , RULL(0x240F011D), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F011D,
REG64( EX_3_PPM_PFOFF                                          , RULL(0x260F011D), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F011D,
REG64( EX_4_PPM_PFOFF                                          , RULL(0x280F011D), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F011D,
REG64( EX_5_PPM_PFOFF                                          , RULL(0x2A0F011D), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F011D,
REG64( EX_6_PPM_PFOFF                                          , RULL(0x2C0F011D), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F011D,
REG64( EX_7_PPM_PFOFF                                          , RULL(0x2E0F011D), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F011D,
REG64( EX_8_PPM_PFOFF                                          , RULL(0x300F011D), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F011D,
REG64( EX_9_PPM_PFOFF                                          , RULL(0x320F011D), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F011D,
REG64( EX_10_PPM_PFOFF                                         , RULL(0x340F011D), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F011D,
REG64( EX_11_PPM_PFOFF                                         , RULL(0x360F011D), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F011D,

REG64( C_PPM_PFSNS                                             , RULL(0x200F011C), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_PPM_PFSNS                                           , RULL(0x200F011C), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_PPM_PFSNS                                           , RULL(0x210F011C), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_PPM_PFSNS                                           , RULL(0x220F011C), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_PPM_PFSNS                                           , RULL(0x230F011C), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_PPM_PFSNS                                           , RULL(0x240F011C), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_PPM_PFSNS                                           , RULL(0x250F011C), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_PPM_PFSNS                                           , RULL(0x260F011C), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_PPM_PFSNS                                           , RULL(0x270F011C), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_PPM_PFSNS                                           , RULL(0x280F011C), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_PPM_PFSNS                                           , RULL(0x290F011C), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_PPM_PFSNS                                          , RULL(0x2A0F011C), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_PPM_PFSNS                                          , RULL(0x2B0F011C), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_PPM_PFSNS                                          , RULL(0x2C0F011C), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_PPM_PFSNS                                          , RULL(0x2D0F011C), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_PPM_PFSNS                                          , RULL(0x2E0F011C), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_PPM_PFSNS                                          , RULL(0x2F0F011C), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_PPM_PFSNS                                          , RULL(0x300F011C), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_PPM_PFSNS                                          , RULL(0x310F011C), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_PPM_PFSNS                                          , RULL(0x320F011C), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_PPM_PFSNS                                          , RULL(0x330F011C), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_PPM_PFSNS                                          , RULL(0x340F011C), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_PPM_PFSNS                                          , RULL(0x350F011C), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_PPM_PFSNS                                          , RULL(0x360F011C), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_PPM_PFSNS                                          , RULL(0x370F011C), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_PPM_PFSNS                                            , RULL(0x100F011C), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_PPM_PFSNS                                          , RULL(0x100F011C), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_PPM_PFSNS                                          , RULL(0x110F011C), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_PPM_PFSNS                                          , RULL(0x120F011C), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_PPM_PFSNS                                          , RULL(0x130F011C), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_PPM_PFSNS                                          , RULL(0x140F011C), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_PPM_PFSNS                                          , RULL(0x150F011C), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_PPM_PFSNS                                            , RULL(0x200F011C), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F011C,
REG64( EX_0_PPM_PFSNS                                          , RULL(0x200F011C), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F011C,
REG64( EX_1_PPM_PFSNS                                          , RULL(0x230F011C), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F011C,
REG64( EX_2_PPM_PFSNS                                          , RULL(0x240F011C), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F011C,
REG64( EX_3_PPM_PFSNS                                          , RULL(0x260F011C), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F011C,
REG64( EX_4_PPM_PFSNS                                          , RULL(0x280F011C), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F011C,
REG64( EX_5_PPM_PFSNS                                          , RULL(0x2A0F011C), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F011C,
REG64( EX_6_PPM_PFSNS                                          , RULL(0x2C0F011C), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F011C,
REG64( EX_7_PPM_PFSNS                                          , RULL(0x2E0F011C), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F011C,
REG64( EX_8_PPM_PFSNS                                          , RULL(0x300F011C), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F011C,
REG64( EX_9_PPM_PFSNS                                          , RULL(0x320F011C), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F011C,
REG64( EX_10_PPM_PFSNS                                         , RULL(0x340F011C), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F011C,
REG64( EX_11_PPM_PFSNS                                         , RULL(0x360F011C), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F011C,

REG64( C_PPM_PIG                                               , RULL(0x200F0180), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PPM_PIG                                             , RULL(0x200F0180), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PPM_PIG                                             , RULL(0x210F0180), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PPM_PIG                                             , RULL(0x220F0180), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PPM_PIG                                             , RULL(0x230F0180), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PPM_PIG                                             , RULL(0x240F0180), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PPM_PIG                                             , RULL(0x250F0180), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PPM_PIG                                             , RULL(0x260F0180), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PPM_PIG                                             , RULL(0x270F0180), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PPM_PIG                                             , RULL(0x280F0180), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PPM_PIG                                             , RULL(0x290F0180), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PPM_PIG                                            , RULL(0x2A0F0180), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PPM_PIG                                            , RULL(0x2B0F0180), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PPM_PIG                                            , RULL(0x2C0F0180), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PPM_PIG                                            , RULL(0x2D0F0180), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PPM_PIG                                            , RULL(0x2E0F0180), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PPM_PIG                                            , RULL(0x2F0F0180), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PPM_PIG                                            , RULL(0x300F0180), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PPM_PIG                                            , RULL(0x310F0180), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PPM_PIG                                            , RULL(0x320F0180), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PPM_PIG                                            , RULL(0x330F0180), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PPM_PIG                                            , RULL(0x340F0180), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PPM_PIG                                            , RULL(0x350F0180), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PPM_PIG                                            , RULL(0x360F0180), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PPM_PIG                                            , RULL(0x370F0180), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PPM_PIG                                              , RULL(0x100F0180), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PPM_PIG                                            , RULL(0x100F0180), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PPM_PIG                                            , RULL(0x110F0180), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PPM_PIG                                            , RULL(0x120F0180), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PPM_PIG                                            , RULL(0x130F0180), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PPM_PIG                                            , RULL(0x140F0180), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PPM_PIG                                            , RULL(0x150F0180), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PPM_PIG                                              , RULL(0x200F0180), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0180,
REG64( EX_0_PPM_PIG                                            , RULL(0x200F0180), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0180,
REG64( EX_1_PPM_PIG                                            , RULL(0x230F0180), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0180,
REG64( EX_2_PPM_PIG                                            , RULL(0x240F0180), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0180,
REG64( EX_3_PPM_PIG                                            , RULL(0x260F0180), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0180,
REG64( EX_4_PPM_PIG                                            , RULL(0x280F0180), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0180,
REG64( EX_5_PPM_PIG                                            , RULL(0x2A0F0180), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0180,
REG64( EX_6_PPM_PIG                                            , RULL(0x2C0F0180), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0180,
REG64( EX_7_PPM_PIG                                            , RULL(0x2E0F0180), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0180,
REG64( EX_8_PPM_PIG                                            , RULL(0x300F0180), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0180,
REG64( EX_9_PPM_PIG                                            , RULL(0x320F0180), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0180,
REG64( EX_10_PPM_PIG                                           , RULL(0x340F0180), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0180,
REG64( EX_11_PPM_PIG                                           , RULL(0x360F0180), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0180,

REG64( C_PPM_SCRATCH0                                          , RULL(0x200F011E), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_SCRATCH0                                        , RULL(0x200F011E), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_SCRATCH0                                        , RULL(0x210F011E), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_SCRATCH0                                        , RULL(0x220F011E), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_SCRATCH0                                        , RULL(0x230F011E), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_SCRATCH0                                        , RULL(0x240F011E), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_SCRATCH0                                        , RULL(0x250F011E), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_SCRATCH0                                        , RULL(0x260F011E), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_SCRATCH0                                        , RULL(0x270F011E), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_SCRATCH0                                        , RULL(0x280F011E), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_SCRATCH0                                        , RULL(0x290F011E), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_SCRATCH0                                       , RULL(0x2A0F011E), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_SCRATCH0                                       , RULL(0x2B0F011E), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_SCRATCH0                                       , RULL(0x2C0F011E), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_SCRATCH0                                       , RULL(0x2D0F011E), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_SCRATCH0                                       , RULL(0x2E0F011E), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_SCRATCH0                                       , RULL(0x2F0F011E), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_SCRATCH0                                       , RULL(0x300F011E), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_SCRATCH0                                       , RULL(0x310F011E), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_SCRATCH0                                       , RULL(0x320F011E), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_SCRATCH0                                       , RULL(0x330F011E), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_SCRATCH0                                       , RULL(0x340F011E), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_SCRATCH0                                       , RULL(0x350F011E), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_SCRATCH0                                       , RULL(0x360F011E), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_SCRATCH0                                       , RULL(0x370F011E), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_SCRATCH0                                         , RULL(0x100F011E), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_SCRATCH0                                       , RULL(0x100F011E), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_SCRATCH0                                       , RULL(0x110F011E), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_SCRATCH0                                       , RULL(0x120F011E), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_SCRATCH0                                       , RULL(0x130F011E), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_SCRATCH0                                       , RULL(0x140F011E), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_SCRATCH0                                       , RULL(0x150F011E), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_SCRATCH0                                         , RULL(0x200F011E), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F011E,
REG64( EX_0_PPM_SCRATCH0                                       , RULL(0x200F011E), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F011E,
REG64( EX_1_PPM_SCRATCH0                                       , RULL(0x230F011E), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F011E,
REG64( EX_2_PPM_SCRATCH0                                       , RULL(0x240F011E), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F011E,
REG64( EX_3_PPM_SCRATCH0                                       , RULL(0x260F011E), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F011E,
REG64( EX_4_PPM_SCRATCH0                                       , RULL(0x280F011E), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F011E,
REG64( EX_5_PPM_SCRATCH0                                       , RULL(0x2A0F011E), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F011E,
REG64( EX_6_PPM_SCRATCH0                                       , RULL(0x2C0F011E), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F011E,
REG64( EX_7_PPM_SCRATCH0                                       , RULL(0x2E0F011E), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F011E,
REG64( EX_8_PPM_SCRATCH0                                       , RULL(0x300F011E), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F011E,
REG64( EX_9_PPM_SCRATCH0                                       , RULL(0x320F011E), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F011E,
REG64( EX_10_PPM_SCRATCH0                                      , RULL(0x340F011E), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F011E,
REG64( EX_11_PPM_SCRATCH0                                      , RULL(0x360F011E), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F011E,

REG64( C_PPM_SCRATCH1                                          , RULL(0x200F011F), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_SCRATCH1                                        , RULL(0x200F011F), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_SCRATCH1                                        , RULL(0x210F011F), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_SCRATCH1                                        , RULL(0x220F011F), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_SCRATCH1                                        , RULL(0x230F011F), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_SCRATCH1                                        , RULL(0x240F011F), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_SCRATCH1                                        , RULL(0x250F011F), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_SCRATCH1                                        , RULL(0x260F011F), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_SCRATCH1                                        , RULL(0x270F011F), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_SCRATCH1                                        , RULL(0x280F011F), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_SCRATCH1                                        , RULL(0x290F011F), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_SCRATCH1                                       , RULL(0x2A0F011F), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_SCRATCH1                                       , RULL(0x2B0F011F), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_SCRATCH1                                       , RULL(0x2C0F011F), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_SCRATCH1                                       , RULL(0x2D0F011F), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_SCRATCH1                                       , RULL(0x2E0F011F), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_SCRATCH1                                       , RULL(0x2F0F011F), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_SCRATCH1                                       , RULL(0x300F011F), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_SCRATCH1                                       , RULL(0x310F011F), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_SCRATCH1                                       , RULL(0x320F011F), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_SCRATCH1                                       , RULL(0x330F011F), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_SCRATCH1                                       , RULL(0x340F011F), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_SCRATCH1                                       , RULL(0x350F011F), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_SCRATCH1                                       , RULL(0x360F011F), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_SCRATCH1                                       , RULL(0x370F011F), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_SCRATCH1                                         , RULL(0x100F011F), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_SCRATCH1                                       , RULL(0x100F011F), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_SCRATCH1                                       , RULL(0x110F011F), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_SCRATCH1                                       , RULL(0x120F011F), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_SCRATCH1                                       , RULL(0x130F011F), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_SCRATCH1                                       , RULL(0x140F011F), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_SCRATCH1                                       , RULL(0x150F011F), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_SCRATCH1                                         , RULL(0x200F011F), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F011F,
REG64( EX_0_PPM_SCRATCH1                                       , RULL(0x200F011F), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F011F,
REG64( EX_1_PPM_SCRATCH1                                       , RULL(0x230F011F), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F011F,
REG64( EX_2_PPM_SCRATCH1                                       , RULL(0x240F011F), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F011F,
REG64( EX_3_PPM_SCRATCH1                                       , RULL(0x260F011F), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F011F,
REG64( EX_4_PPM_SCRATCH1                                       , RULL(0x280F011F), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F011F,
REG64( EX_5_PPM_SCRATCH1                                       , RULL(0x2A0F011F), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F011F,
REG64( EX_6_PPM_SCRATCH1                                       , RULL(0x2C0F011F), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F011F,
REG64( EX_7_PPM_SCRATCH1                                       , RULL(0x2E0F011F), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F011F,
REG64( EX_8_PPM_SCRATCH1                                       , RULL(0x300F011F), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F011F,
REG64( EX_9_PPM_SCRATCH1                                       , RULL(0x320F011F), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F011F,
REG64( EX_10_PPM_SCRATCH1                                      , RULL(0x340F011F), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F011F,
REG64( EX_11_PPM_SCRATCH1                                      , RULL(0x360F011F), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F011F,

REG64( C_PPM_SPWKUP_FSP                                        , RULL(0x200F010B), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_SPWKUP_FSP                                      , RULL(0x200F010B), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_SPWKUP_FSP                                      , RULL(0x210F010B), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_SPWKUP_FSP                                      , RULL(0x220F010B), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_SPWKUP_FSP                                      , RULL(0x230F010B), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_SPWKUP_FSP                                      , RULL(0x240F010B), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_SPWKUP_FSP                                      , RULL(0x250F010B), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_SPWKUP_FSP                                      , RULL(0x260F010B), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_SPWKUP_FSP                                      , RULL(0x270F010B), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_SPWKUP_FSP                                      , RULL(0x280F010B), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_SPWKUP_FSP                                      , RULL(0x290F010B), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_SPWKUP_FSP                                     , RULL(0x2A0F010B), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_SPWKUP_FSP                                     , RULL(0x2B0F010B), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_SPWKUP_FSP                                     , RULL(0x2C0F010B), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_SPWKUP_FSP                                     , RULL(0x2D0F010B), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_SPWKUP_FSP                                     , RULL(0x2E0F010B), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_SPWKUP_FSP                                     , RULL(0x2F0F010B), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_SPWKUP_FSP                                     , RULL(0x300F010B), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_SPWKUP_FSP                                     , RULL(0x310F010B), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_SPWKUP_FSP                                     , RULL(0x320F010B), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_SPWKUP_FSP                                     , RULL(0x330F010B), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_SPWKUP_FSP                                     , RULL(0x340F010B), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_SPWKUP_FSP                                     , RULL(0x350F010B), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_SPWKUP_FSP                                     , RULL(0x360F010B), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_SPWKUP_FSP                                     , RULL(0x370F010B), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_SPWKUP_FSP                                       , RULL(0x100F010B), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_SPWKUP_FSP                                     , RULL(0x100F010B), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_SPWKUP_FSP                                     , RULL(0x110F010B), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_SPWKUP_FSP                                     , RULL(0x120F010B), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_SPWKUP_FSP                                     , RULL(0x130F010B), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_SPWKUP_FSP                                     , RULL(0x140F010B), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_SPWKUP_FSP                                     , RULL(0x150F010B), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_SPWKUP_FSP                                       , RULL(0x200F010B), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F010B,
REG64( EX_0_PPM_SPWKUP_FSP                                     , RULL(0x200F010B), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F010B,
REG64( EX_1_PPM_SPWKUP_FSP                                     , RULL(0x230F010B), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F010B,
REG64( EX_2_PPM_SPWKUP_FSP                                     , RULL(0x240F010B), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F010B,
REG64( EX_3_PPM_SPWKUP_FSP                                     , RULL(0x260F010B), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F010B,
REG64( EX_4_PPM_SPWKUP_FSP                                     , RULL(0x280F010B), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F010B,
REG64( EX_5_PPM_SPWKUP_FSP                                     , RULL(0x2A0F010B), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F010B,
REG64( EX_6_PPM_SPWKUP_FSP                                     , RULL(0x2C0F010B), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F010B,
REG64( EX_7_PPM_SPWKUP_FSP                                     , RULL(0x2E0F010B), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F010B,
REG64( EX_8_PPM_SPWKUP_FSP                                     , RULL(0x300F010B), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F010B,
REG64( EX_9_PPM_SPWKUP_FSP                                     , RULL(0x320F010B), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F010B,
REG64( EX_10_PPM_SPWKUP_FSP                                    , RULL(0x340F010B), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F010B,
REG64( EX_11_PPM_SPWKUP_FSP                                    , RULL(0x360F010B), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F010B,

REG64( C_PPM_SPWKUP_HYP                                        , RULL(0x200F010D), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_SPWKUP_HYP                                      , RULL(0x200F010D), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_SPWKUP_HYP                                      , RULL(0x210F010D), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_SPWKUP_HYP                                      , RULL(0x220F010D), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_SPWKUP_HYP                                      , RULL(0x230F010D), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_SPWKUP_HYP                                      , RULL(0x240F010D), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_SPWKUP_HYP                                      , RULL(0x250F010D), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_SPWKUP_HYP                                      , RULL(0x260F010D), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_SPWKUP_HYP                                      , RULL(0x270F010D), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_SPWKUP_HYP                                      , RULL(0x280F010D), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_SPWKUP_HYP                                      , RULL(0x290F010D), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_SPWKUP_HYP                                     , RULL(0x2A0F010D), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_SPWKUP_HYP                                     , RULL(0x2B0F010D), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_SPWKUP_HYP                                     , RULL(0x2C0F010D), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_SPWKUP_HYP                                     , RULL(0x2D0F010D), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_SPWKUP_HYP                                     , RULL(0x2E0F010D), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_SPWKUP_HYP                                     , RULL(0x2F0F010D), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_SPWKUP_HYP                                     , RULL(0x300F010D), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_SPWKUP_HYP                                     , RULL(0x310F010D), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_SPWKUP_HYP                                     , RULL(0x320F010D), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_SPWKUP_HYP                                     , RULL(0x330F010D), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_SPWKUP_HYP                                     , RULL(0x340F010D), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_SPWKUP_HYP                                     , RULL(0x350F010D), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_SPWKUP_HYP                                     , RULL(0x360F010D), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_SPWKUP_HYP                                     , RULL(0x370F010D), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_SPWKUP_HYP                                       , RULL(0x100F010D), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_SPWKUP_HYP                                     , RULL(0x100F010D), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_SPWKUP_HYP                                     , RULL(0x110F010D), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_SPWKUP_HYP                                     , RULL(0x120F010D), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_SPWKUP_HYP                                     , RULL(0x130F010D), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_SPWKUP_HYP                                     , RULL(0x140F010D), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_SPWKUP_HYP                                     , RULL(0x150F010D), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_SPWKUP_HYP                                       , RULL(0x200F010D), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F010D,
REG64( EX_0_PPM_SPWKUP_HYP                                     , RULL(0x200F010D), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F010D,
REG64( EX_1_PPM_SPWKUP_HYP                                     , RULL(0x230F010D), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F010D,
REG64( EX_2_PPM_SPWKUP_HYP                                     , RULL(0x240F010D), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F010D,
REG64( EX_3_PPM_SPWKUP_HYP                                     , RULL(0x260F010D), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F010D,
REG64( EX_4_PPM_SPWKUP_HYP                                     , RULL(0x280F010D), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F010D,
REG64( EX_5_PPM_SPWKUP_HYP                                     , RULL(0x2A0F010D), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F010D,
REG64( EX_6_PPM_SPWKUP_HYP                                     , RULL(0x2C0F010D), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F010D,
REG64( EX_7_PPM_SPWKUP_HYP                                     , RULL(0x2E0F010D), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F010D,
REG64( EX_8_PPM_SPWKUP_HYP                                     , RULL(0x300F010D), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F010D,
REG64( EX_9_PPM_SPWKUP_HYP                                     , RULL(0x320F010D), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F010D,
REG64( EX_10_PPM_SPWKUP_HYP                                    , RULL(0x340F010D), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F010D,
REG64( EX_11_PPM_SPWKUP_HYP                                    , RULL(0x360F010D), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F010D,

REG64( C_PPM_SPWKUP_OCC                                        , RULL(0x200F010C), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_SPWKUP_OCC                                      , RULL(0x200F010C), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_SPWKUP_OCC                                      , RULL(0x210F010C), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_SPWKUP_OCC                                      , RULL(0x220F010C), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_SPWKUP_OCC                                      , RULL(0x230F010C), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_SPWKUP_OCC                                      , RULL(0x240F010C), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_SPWKUP_OCC                                      , RULL(0x250F010C), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_SPWKUP_OCC                                      , RULL(0x260F010C), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_SPWKUP_OCC                                      , RULL(0x270F010C), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_SPWKUP_OCC                                      , RULL(0x280F010C), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_SPWKUP_OCC                                      , RULL(0x290F010C), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_SPWKUP_OCC                                     , RULL(0x2A0F010C), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_SPWKUP_OCC                                     , RULL(0x2B0F010C), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_SPWKUP_OCC                                     , RULL(0x2C0F010C), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_SPWKUP_OCC                                     , RULL(0x2D0F010C), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_SPWKUP_OCC                                     , RULL(0x2E0F010C), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_SPWKUP_OCC                                     , RULL(0x2F0F010C), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_SPWKUP_OCC                                     , RULL(0x300F010C), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_SPWKUP_OCC                                     , RULL(0x310F010C), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_SPWKUP_OCC                                     , RULL(0x320F010C), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_SPWKUP_OCC                                     , RULL(0x330F010C), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_SPWKUP_OCC                                     , RULL(0x340F010C), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_SPWKUP_OCC                                     , RULL(0x350F010C), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_SPWKUP_OCC                                     , RULL(0x360F010C), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_SPWKUP_OCC                                     , RULL(0x370F010C), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_SPWKUP_OCC                                       , RULL(0x100F010C), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_SPWKUP_OCC                                     , RULL(0x100F010C), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_SPWKUP_OCC                                     , RULL(0x110F010C), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_SPWKUP_OCC                                     , RULL(0x120F010C), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_SPWKUP_OCC                                     , RULL(0x130F010C), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_SPWKUP_OCC                                     , RULL(0x140F010C), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_SPWKUP_OCC                                     , RULL(0x150F010C), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_SPWKUP_OCC                                       , RULL(0x200F010C), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F010C,
REG64( EX_0_PPM_SPWKUP_OCC                                     , RULL(0x200F010C), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F010C,
REG64( EX_1_PPM_SPWKUP_OCC                                     , RULL(0x230F010C), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F010C,
REG64( EX_2_PPM_SPWKUP_OCC                                     , RULL(0x240F010C), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F010C,
REG64( EX_3_PPM_SPWKUP_OCC                                     , RULL(0x260F010C), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F010C,
REG64( EX_4_PPM_SPWKUP_OCC                                     , RULL(0x280F010C), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F010C,
REG64( EX_5_PPM_SPWKUP_OCC                                     , RULL(0x2A0F010C), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F010C,
REG64( EX_6_PPM_SPWKUP_OCC                                     , RULL(0x2C0F010C), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F010C,
REG64( EX_7_PPM_SPWKUP_OCC                                     , RULL(0x2E0F010C), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F010C,
REG64( EX_8_PPM_SPWKUP_OCC                                     , RULL(0x300F010C), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F010C,
REG64( EX_9_PPM_SPWKUP_OCC                                     , RULL(0x320F010C), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F010C,
REG64( EX_10_PPM_SPWKUP_OCC                                    , RULL(0x340F010C), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F010C,
REG64( EX_11_PPM_SPWKUP_OCC                                    , RULL(0x360F010C), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F010C,

REG64( C_PPM_SPWKUP_OTR                                        , RULL(0x200F010A), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_SPWKUP_OTR                                      , RULL(0x200F010A), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_SPWKUP_OTR                                      , RULL(0x210F010A), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_SPWKUP_OTR                                      , RULL(0x220F010A), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_SPWKUP_OTR                                      , RULL(0x230F010A), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_SPWKUP_OTR                                      , RULL(0x240F010A), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_SPWKUP_OTR                                      , RULL(0x250F010A), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_SPWKUP_OTR                                      , RULL(0x260F010A), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_SPWKUP_OTR                                      , RULL(0x270F010A), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_SPWKUP_OTR                                      , RULL(0x280F010A), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_SPWKUP_OTR                                      , RULL(0x290F010A), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_SPWKUP_OTR                                     , RULL(0x2A0F010A), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_SPWKUP_OTR                                     , RULL(0x2B0F010A), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_SPWKUP_OTR                                     , RULL(0x2C0F010A), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_SPWKUP_OTR                                     , RULL(0x2D0F010A), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_SPWKUP_OTR                                     , RULL(0x2E0F010A), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_SPWKUP_OTR                                     , RULL(0x2F0F010A), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_SPWKUP_OTR                                     , RULL(0x300F010A), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_SPWKUP_OTR                                     , RULL(0x310F010A), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_SPWKUP_OTR                                     , RULL(0x320F010A), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_SPWKUP_OTR                                     , RULL(0x330F010A), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_SPWKUP_OTR                                     , RULL(0x340F010A), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_SPWKUP_OTR                                     , RULL(0x350F010A), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_SPWKUP_OTR                                     , RULL(0x360F010A), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_SPWKUP_OTR                                     , RULL(0x370F010A), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_SPWKUP_OTR                                       , RULL(0x100F010A), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_SPWKUP_OTR                                     , RULL(0x100F010A), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_SPWKUP_OTR                                     , RULL(0x110F010A), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_SPWKUP_OTR                                     , RULL(0x120F010A), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_SPWKUP_OTR                                     , RULL(0x130F010A), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_SPWKUP_OTR                                     , RULL(0x140F010A), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_SPWKUP_OTR                                     , RULL(0x150F010A), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EX_PPM_SPWKUP_OTR                                       , RULL(0x200F010A), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F010A,
REG64( EX_0_PPM_SPWKUP_OTR                                     , RULL(0x200F010A), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F010A,
REG64( EX_1_PPM_SPWKUP_OTR                                     , RULL(0x230F010A), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F010A,
REG64( EX_2_PPM_SPWKUP_OTR                                     , RULL(0x240F010A), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F010A,
REG64( EX_3_PPM_SPWKUP_OTR                                     , RULL(0x260F010A), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F010A,
REG64( EX_4_PPM_SPWKUP_OTR                                     , RULL(0x280F010A), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F010A,
REG64( EX_5_PPM_SPWKUP_OTR                                     , RULL(0x2A0F010A), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F010A,
REG64( EX_6_PPM_SPWKUP_OTR                                     , RULL(0x2C0F010A), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F010A,
REG64( EX_7_PPM_SPWKUP_OTR                                     , RULL(0x2E0F010A), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F010A,
REG64( EX_8_PPM_SPWKUP_OTR                                     , RULL(0x300F010A), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F010A,
REG64( EX_9_PPM_SPWKUP_OTR                                     , RULL(0x320F010A), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F010A,
REG64( EX_10_PPM_SPWKUP_OTR                                    , RULL(0x340F010A), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F010A,
REG64( EX_11_PPM_SPWKUP_OTR                                    , RULL(0x360F010A), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F010A,

REG64( C_PPM_SSHFSP                                            , RULL(0x200F0111), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PPM_SSHFSP                                          , RULL(0x200F0111), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PPM_SSHFSP                                          , RULL(0x210F0111), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PPM_SSHFSP                                          , RULL(0x220F0111), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PPM_SSHFSP                                          , RULL(0x230F0111), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PPM_SSHFSP                                          , RULL(0x240F0111), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PPM_SSHFSP                                          , RULL(0x250F0111), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PPM_SSHFSP                                          , RULL(0x260F0111), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PPM_SSHFSP                                          , RULL(0x270F0111), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PPM_SSHFSP                                          , RULL(0x280F0111), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PPM_SSHFSP                                          , RULL(0x290F0111), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PPM_SSHFSP                                         , RULL(0x2A0F0111), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PPM_SSHFSP                                         , RULL(0x2B0F0111), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PPM_SSHFSP                                         , RULL(0x2C0F0111), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PPM_SSHFSP                                         , RULL(0x2D0F0111), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PPM_SSHFSP                                         , RULL(0x2E0F0111), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PPM_SSHFSP                                         , RULL(0x2F0F0111), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PPM_SSHFSP                                         , RULL(0x300F0111), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PPM_SSHFSP                                         , RULL(0x310F0111), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PPM_SSHFSP                                         , RULL(0x320F0111), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PPM_SSHFSP                                         , RULL(0x330F0111), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PPM_SSHFSP                                         , RULL(0x340F0111), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PPM_SSHFSP                                         , RULL(0x350F0111), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PPM_SSHFSP                                         , RULL(0x360F0111), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PPM_SSHFSP                                         , RULL(0x370F0111), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PPM_SSHFSP                                           , RULL(0x100F0111), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PPM_SSHFSP                                         , RULL(0x100F0111), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PPM_SSHFSP                                         , RULL(0x110F0111), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PPM_SSHFSP                                         , RULL(0x120F0111), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PPM_SSHFSP                                         , RULL(0x130F0111), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PPM_SSHFSP                                         , RULL(0x140F0111), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PPM_SSHFSP                                         , RULL(0x150F0111), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PPM_SSHFSP                                           , RULL(0x200F0111), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0111,
REG64( EX_0_PPM_SSHFSP                                         , RULL(0x200F0111), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0111,
REG64( EX_1_PPM_SSHFSP                                         , RULL(0x230F0111), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0111,
REG64( EX_2_PPM_SSHFSP                                         , RULL(0x240F0111), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0111,
REG64( EX_3_PPM_SSHFSP                                         , RULL(0x260F0111), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0111,
REG64( EX_4_PPM_SSHFSP                                         , RULL(0x280F0111), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0111,
REG64( EX_5_PPM_SSHFSP                                         , RULL(0x2A0F0111), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0111,
REG64( EX_6_PPM_SSHFSP                                         , RULL(0x2C0F0111), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0111,
REG64( EX_7_PPM_SSHFSP                                         , RULL(0x2E0F0111), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0111,
REG64( EX_8_PPM_SSHFSP                                         , RULL(0x300F0111), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0111,
REG64( EX_9_PPM_SSHFSP                                         , RULL(0x320F0111), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0111,
REG64( EX_10_PPM_SSHFSP                                        , RULL(0x340F0111), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0111,
REG64( EX_11_PPM_SSHFSP                                        , RULL(0x360F0111), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0111,

REG64( C_PPM_SSHHYP                                            , RULL(0x200F0114), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PPM_SSHHYP                                          , RULL(0x200F0114), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PPM_SSHHYP                                          , RULL(0x210F0114), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PPM_SSHHYP                                          , RULL(0x220F0114), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PPM_SSHHYP                                          , RULL(0x230F0114), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PPM_SSHHYP                                          , RULL(0x240F0114), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PPM_SSHHYP                                          , RULL(0x250F0114), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PPM_SSHHYP                                          , RULL(0x260F0114), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PPM_SSHHYP                                          , RULL(0x270F0114), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PPM_SSHHYP                                          , RULL(0x280F0114), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PPM_SSHHYP                                          , RULL(0x290F0114), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PPM_SSHHYP                                         , RULL(0x2A0F0114), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PPM_SSHHYP                                         , RULL(0x2B0F0114), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PPM_SSHHYP                                         , RULL(0x2C0F0114), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PPM_SSHHYP                                         , RULL(0x2D0F0114), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PPM_SSHHYP                                         , RULL(0x2E0F0114), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PPM_SSHHYP                                         , RULL(0x2F0F0114), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PPM_SSHHYP                                         , RULL(0x300F0114), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PPM_SSHHYP                                         , RULL(0x310F0114), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PPM_SSHHYP                                         , RULL(0x320F0114), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PPM_SSHHYP                                         , RULL(0x330F0114), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PPM_SSHHYP                                         , RULL(0x340F0114), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PPM_SSHHYP                                         , RULL(0x350F0114), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PPM_SSHHYP                                         , RULL(0x360F0114), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PPM_SSHHYP                                         , RULL(0x370F0114), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PPM_SSHHYP                                           , RULL(0x100F0114), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PPM_SSHHYP                                         , RULL(0x100F0114), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PPM_SSHHYP                                         , RULL(0x110F0114), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PPM_SSHHYP                                         , RULL(0x120F0114), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PPM_SSHHYP                                         , RULL(0x130F0114), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PPM_SSHHYP                                         , RULL(0x140F0114), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PPM_SSHHYP                                         , RULL(0x150F0114), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PPM_SSHHYP                                           , RULL(0x200F0114), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0114,
REG64( EX_0_PPM_SSHHYP                                         , RULL(0x200F0114), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0114,
REG64( EX_1_PPM_SSHHYP                                         , RULL(0x230F0114), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0114,
REG64( EX_2_PPM_SSHHYP                                         , RULL(0x240F0114), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0114,
REG64( EX_3_PPM_SSHHYP                                         , RULL(0x260F0114), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0114,
REG64( EX_4_PPM_SSHHYP                                         , RULL(0x280F0114), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0114,
REG64( EX_5_PPM_SSHHYP                                         , RULL(0x2A0F0114), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0114,
REG64( EX_6_PPM_SSHHYP                                         , RULL(0x2C0F0114), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0114,
REG64( EX_7_PPM_SSHHYP                                         , RULL(0x2E0F0114), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0114,
REG64( EX_8_PPM_SSHHYP                                         , RULL(0x300F0114), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0114,
REG64( EX_9_PPM_SSHHYP                                         , RULL(0x320F0114), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0114,
REG64( EX_10_PPM_SSHHYP                                        , RULL(0x340F0114), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0114,
REG64( EX_11_PPM_SSHHYP                                        , RULL(0x360F0114), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0114,

REG64( C_PPM_SSHOCC                                            , RULL(0x200F0112), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PPM_SSHOCC                                          , RULL(0x200F0112), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PPM_SSHOCC                                          , RULL(0x210F0112), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PPM_SSHOCC                                          , RULL(0x220F0112), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PPM_SSHOCC                                          , RULL(0x230F0112), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PPM_SSHOCC                                          , RULL(0x240F0112), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PPM_SSHOCC                                          , RULL(0x250F0112), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PPM_SSHOCC                                          , RULL(0x260F0112), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PPM_SSHOCC                                          , RULL(0x270F0112), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PPM_SSHOCC                                          , RULL(0x280F0112), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PPM_SSHOCC                                          , RULL(0x290F0112), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PPM_SSHOCC                                         , RULL(0x2A0F0112), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PPM_SSHOCC                                         , RULL(0x2B0F0112), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PPM_SSHOCC                                         , RULL(0x2C0F0112), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PPM_SSHOCC                                         , RULL(0x2D0F0112), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PPM_SSHOCC                                         , RULL(0x2E0F0112), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PPM_SSHOCC                                         , RULL(0x2F0F0112), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PPM_SSHOCC                                         , RULL(0x300F0112), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PPM_SSHOCC                                         , RULL(0x310F0112), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PPM_SSHOCC                                         , RULL(0x320F0112), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PPM_SSHOCC                                         , RULL(0x330F0112), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PPM_SSHOCC                                         , RULL(0x340F0112), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PPM_SSHOCC                                         , RULL(0x350F0112), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PPM_SSHOCC                                         , RULL(0x360F0112), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PPM_SSHOCC                                         , RULL(0x370F0112), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PPM_SSHOCC                                           , RULL(0x100F0112), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PPM_SSHOCC                                         , RULL(0x100F0112), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PPM_SSHOCC                                         , RULL(0x110F0112), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PPM_SSHOCC                                         , RULL(0x120F0112), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PPM_SSHOCC                                         , RULL(0x130F0112), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PPM_SSHOCC                                         , RULL(0x140F0112), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PPM_SSHOCC                                         , RULL(0x150F0112), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PPM_SSHOCC                                           , RULL(0x200F0112), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0112,
REG64( EX_0_PPM_SSHOCC                                         , RULL(0x200F0112), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0112,
REG64( EX_1_PPM_SSHOCC                                         , RULL(0x230F0112), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0112,
REG64( EX_2_PPM_SSHOCC                                         , RULL(0x240F0112), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0112,
REG64( EX_3_PPM_SSHOCC                                         , RULL(0x260F0112), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0112,
REG64( EX_4_PPM_SSHOCC                                         , RULL(0x280F0112), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0112,
REG64( EX_5_PPM_SSHOCC                                         , RULL(0x2A0F0112), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0112,
REG64( EX_6_PPM_SSHOCC                                         , RULL(0x2C0F0112), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0112,
REG64( EX_7_PPM_SSHOCC                                         , RULL(0x2E0F0112), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0112,
REG64( EX_8_PPM_SSHOCC                                         , RULL(0x300F0112), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0112,
REG64( EX_9_PPM_SSHOCC                                         , RULL(0x320F0112), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0112,
REG64( EX_10_PPM_SSHOCC                                        , RULL(0x340F0112), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0112,
REG64( EX_11_PPM_SSHOCC                                        , RULL(0x360F0112), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0112,

REG64( C_PPM_SSHOTR                                            , RULL(0x200F0113), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PPM_SSHOTR                                          , RULL(0x200F0113), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PPM_SSHOTR                                          , RULL(0x210F0113), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PPM_SSHOTR                                          , RULL(0x220F0113), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PPM_SSHOTR                                          , RULL(0x230F0113), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PPM_SSHOTR                                          , RULL(0x240F0113), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PPM_SSHOTR                                          , RULL(0x250F0113), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PPM_SSHOTR                                          , RULL(0x260F0113), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PPM_SSHOTR                                          , RULL(0x270F0113), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PPM_SSHOTR                                          , RULL(0x280F0113), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PPM_SSHOTR                                          , RULL(0x290F0113), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PPM_SSHOTR                                         , RULL(0x2A0F0113), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PPM_SSHOTR                                         , RULL(0x2B0F0113), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PPM_SSHOTR                                         , RULL(0x2C0F0113), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PPM_SSHOTR                                         , RULL(0x2D0F0113), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PPM_SSHOTR                                         , RULL(0x2E0F0113), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PPM_SSHOTR                                         , RULL(0x2F0F0113), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PPM_SSHOTR                                         , RULL(0x300F0113), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PPM_SSHOTR                                         , RULL(0x310F0113), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PPM_SSHOTR                                         , RULL(0x320F0113), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PPM_SSHOTR                                         , RULL(0x330F0113), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PPM_SSHOTR                                         , RULL(0x340F0113), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PPM_SSHOTR                                         , RULL(0x350F0113), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PPM_SSHOTR                                         , RULL(0x360F0113), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PPM_SSHOTR                                         , RULL(0x370F0113), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PPM_SSHOTR                                           , RULL(0x100F0113), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PPM_SSHOTR                                         , RULL(0x100F0113), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PPM_SSHOTR                                         , RULL(0x110F0113), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PPM_SSHOTR                                         , RULL(0x120F0113), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PPM_SSHOTR                                         , RULL(0x130F0113), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PPM_SSHOTR                                         , RULL(0x140F0113), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PPM_SSHOTR                                         , RULL(0x150F0113), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PPM_SSHOTR                                           , RULL(0x200F0113), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0113,
REG64( EX_0_PPM_SSHOTR                                         , RULL(0x200F0113), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0113,
REG64( EX_1_PPM_SSHOTR                                         , RULL(0x230F0113), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0113,
REG64( EX_2_PPM_SSHOTR                                         , RULL(0x240F0113), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0113,
REG64( EX_3_PPM_SSHOTR                                         , RULL(0x260F0113), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0113,
REG64( EX_4_PPM_SSHOTR                                         , RULL(0x280F0113), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0113,
REG64( EX_5_PPM_SSHOTR                                         , RULL(0x2A0F0113), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0113,
REG64( EX_6_PPM_SSHOTR                                         , RULL(0x2C0F0113), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0113,
REG64( EX_7_PPM_SSHOTR                                         , RULL(0x2E0F0113), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0113,
REG64( EX_8_PPM_SSHOTR                                         , RULL(0x300F0113), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0113,
REG64( EX_9_PPM_SSHOTR                                         , RULL(0x320F0113), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0113,
REG64( EX_10_PPM_SSHOTR                                        , RULL(0x340F0113), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0113,
REG64( EX_11_PPM_SSHOTR                                        , RULL(0x360F0113), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0113,

REG64( C_PPM_SSHSRC                                            , RULL(0x200F0110), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PPM_SSHSRC                                          , RULL(0x200F0110), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PPM_SSHSRC                                          , RULL(0x210F0110), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PPM_SSHSRC                                          , RULL(0x220F0110), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PPM_SSHSRC                                          , RULL(0x230F0110), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PPM_SSHSRC                                          , RULL(0x240F0110), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PPM_SSHSRC                                          , RULL(0x250F0110), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PPM_SSHSRC                                          , RULL(0x260F0110), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PPM_SSHSRC                                          , RULL(0x270F0110), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PPM_SSHSRC                                          , RULL(0x280F0110), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PPM_SSHSRC                                          , RULL(0x290F0110), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PPM_SSHSRC                                         , RULL(0x2A0F0110), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PPM_SSHSRC                                         , RULL(0x2B0F0110), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PPM_SSHSRC                                         , RULL(0x2C0F0110), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PPM_SSHSRC                                         , RULL(0x2D0F0110), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PPM_SSHSRC                                         , RULL(0x2E0F0110), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PPM_SSHSRC                                         , RULL(0x2F0F0110), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PPM_SSHSRC                                         , RULL(0x300F0110), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PPM_SSHSRC                                         , RULL(0x310F0110), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PPM_SSHSRC                                         , RULL(0x320F0110), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PPM_SSHSRC                                         , RULL(0x330F0110), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PPM_SSHSRC                                         , RULL(0x340F0110), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PPM_SSHSRC                                         , RULL(0x350F0110), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PPM_SSHSRC                                         , RULL(0x360F0110), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PPM_SSHSRC                                         , RULL(0x370F0110), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PPM_SSHSRC                                           , RULL(0x100F0110), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PPM_SSHSRC                                         , RULL(0x100F0110), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PPM_SSHSRC                                         , RULL(0x110F0110), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PPM_SSHSRC                                         , RULL(0x120F0110), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PPM_SSHSRC                                         , RULL(0x130F0110), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PPM_SSHSRC                                         , RULL(0x140F0110), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PPM_SSHSRC                                         , RULL(0x150F0110), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PPM_SSHSRC                                           , RULL(0x200F0110), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0110,
REG64( EX_0_PPM_SSHSRC                                         , RULL(0x200F0110), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0110,
REG64( EX_1_PPM_SSHSRC                                         , RULL(0x230F0110), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0110,
REG64( EX_2_PPM_SSHSRC                                         , RULL(0x240F0110), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0110,
REG64( EX_3_PPM_SSHSRC                                         , RULL(0x260F0110), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0110,
REG64( EX_4_PPM_SSHSRC                                         , RULL(0x280F0110), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0110,
REG64( EX_5_PPM_SSHSRC                                         , RULL(0x2A0F0110), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0110,
REG64( EX_6_PPM_SSHSRC                                         , RULL(0x2C0F0110), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0110,
REG64( EX_7_PPM_SSHSRC                                         , RULL(0x2E0F0110), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0110,
REG64( EX_8_PPM_SSHSRC                                         , RULL(0x300F0110), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0110,
REG64( EX_9_PPM_SSHSRC                                         , RULL(0x320F0110), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0110,
REG64( EX_10_PPM_SSHSRC                                        , RULL(0x340F0110), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0110,
REG64( EX_11_PPM_SSHSRC                                        , RULL(0x360F0110), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0110,

REG64( C_PPM_VDMCR                                             , RULL(0x200F01B8), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_PPM_VDMCR_CLEAR                                       , RULL(0x200F01B9), SH_UNT_C        ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_PPM_VDMCR_OR                                          , RULL(0x200F01BA), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_PPM_VDMCR                                           , RULL(0x200F01B8), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_0_PPM_VDMCR_CLEAR                                     , RULL(0x200F01B9), SH_UNT_C_0      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_0_PPM_VDMCR_OR                                        , RULL(0x200F01BA), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_PPM_VDMCR                                           , RULL(0x210F01B8), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_1_PPM_VDMCR_CLEAR                                     , RULL(0x210F01B9), SH_UNT_C_1      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_1_PPM_VDMCR_OR                                        , RULL(0x210F01BA), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_PPM_VDMCR                                           , RULL(0x220F01B8), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_2_PPM_VDMCR_CLEAR                                     , RULL(0x220F01B9), SH_UNT_C_2      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_2_PPM_VDMCR_OR                                        , RULL(0x220F01BA), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_PPM_VDMCR                                           , RULL(0x230F01B8), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_3_PPM_VDMCR_CLEAR                                     , RULL(0x230F01B9), SH_UNT_C_3      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_3_PPM_VDMCR_OR                                        , RULL(0x230F01BA), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_PPM_VDMCR                                           , RULL(0x240F01B8), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_4_PPM_VDMCR_CLEAR                                     , RULL(0x240F01B9), SH_UNT_C_4      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_4_PPM_VDMCR_OR                                        , RULL(0x240F01BA), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_PPM_VDMCR                                           , RULL(0x250F01B8), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_5_PPM_VDMCR_CLEAR                                     , RULL(0x250F01B9), SH_UNT_C_5      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_5_PPM_VDMCR_OR                                        , RULL(0x250F01BA), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_PPM_VDMCR                                           , RULL(0x260F01B8), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_6_PPM_VDMCR_CLEAR                                     , RULL(0x260F01B9), SH_UNT_C_6      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_6_PPM_VDMCR_OR                                        , RULL(0x260F01BA), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_PPM_VDMCR                                           , RULL(0x270F01B8), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_7_PPM_VDMCR_CLEAR                                     , RULL(0x270F01B9), SH_UNT_C_7      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_7_PPM_VDMCR_OR                                        , RULL(0x270F01BA), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_PPM_VDMCR                                           , RULL(0x280F01B8), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_8_PPM_VDMCR_CLEAR                                     , RULL(0x280F01B9), SH_UNT_C_8      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_8_PPM_VDMCR_OR                                        , RULL(0x280F01BA), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_PPM_VDMCR                                           , RULL(0x290F01B8), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_9_PPM_VDMCR_CLEAR                                     , RULL(0x290F01B9), SH_UNT_C_9      ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_9_PPM_VDMCR_OR                                        , RULL(0x290F01BA), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_PPM_VDMCR                                          , RULL(0x2A0F01B8), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_10_PPM_VDMCR_CLEAR                                    , RULL(0x2A0F01B9), SH_UNT_C_10     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_10_PPM_VDMCR_OR                                       , RULL(0x2A0F01BA), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_PPM_VDMCR                                          , RULL(0x2B0F01B8), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_11_PPM_VDMCR_CLEAR                                    , RULL(0x2B0F01B9), SH_UNT_C_11     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_11_PPM_VDMCR_OR                                       , RULL(0x2B0F01BA), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_PPM_VDMCR                                          , RULL(0x2C0F01B8), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_12_PPM_VDMCR_CLEAR                                    , RULL(0x2C0F01B9), SH_UNT_C_12     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_12_PPM_VDMCR_OR                                       , RULL(0x2C0F01BA), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_PPM_VDMCR                                          , RULL(0x2D0F01B8), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_13_PPM_VDMCR_CLEAR                                    , RULL(0x2D0F01B9), SH_UNT_C_13     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_13_PPM_VDMCR_OR                                       , RULL(0x2D0F01BA), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_PPM_VDMCR                                          , RULL(0x2E0F01B8), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_14_PPM_VDMCR_CLEAR                                    , RULL(0x2E0F01B9), SH_UNT_C_14     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_14_PPM_VDMCR_OR                                       , RULL(0x2E0F01BA), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_PPM_VDMCR                                          , RULL(0x2F0F01B8), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_15_PPM_VDMCR_CLEAR                                    , RULL(0x2F0F01B9), SH_UNT_C_15     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_15_PPM_VDMCR_OR                                       , RULL(0x2F0F01BA), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_PPM_VDMCR                                          , RULL(0x300F01B8), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_16_PPM_VDMCR_CLEAR                                    , RULL(0x300F01B9), SH_UNT_C_16     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_16_PPM_VDMCR_OR                                       , RULL(0x300F01BA), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_PPM_VDMCR                                          , RULL(0x310F01B8), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_17_PPM_VDMCR_CLEAR                                    , RULL(0x310F01B9), SH_UNT_C_17     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_17_PPM_VDMCR_OR                                       , RULL(0x310F01BA), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_PPM_VDMCR                                          , RULL(0x320F01B8), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_18_PPM_VDMCR_CLEAR                                    , RULL(0x320F01B9), SH_UNT_C_18     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_18_PPM_VDMCR_OR                                       , RULL(0x320F01BA), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_PPM_VDMCR                                          , RULL(0x330F01B8), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_19_PPM_VDMCR_CLEAR                                    , RULL(0x330F01B9), SH_UNT_C_19     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_19_PPM_VDMCR_OR                                       , RULL(0x330F01BA), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_PPM_VDMCR                                          , RULL(0x340F01B8), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_20_PPM_VDMCR_CLEAR                                    , RULL(0x340F01B9), SH_UNT_C_20     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_20_PPM_VDMCR_OR                                       , RULL(0x340F01BA), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_PPM_VDMCR                                          , RULL(0x350F01B8), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_21_PPM_VDMCR_CLEAR                                    , RULL(0x350F01B9), SH_UNT_C_21     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_21_PPM_VDMCR_OR                                       , RULL(0x350F01BA), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_PPM_VDMCR                                          , RULL(0x360F01B8), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_22_PPM_VDMCR_CLEAR                                    , RULL(0x360F01B9), SH_UNT_C_22     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_22_PPM_VDMCR_OR                                       , RULL(0x360F01BA), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_PPM_VDMCR                                          , RULL(0x370F01B8), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( C_23_PPM_VDMCR_CLEAR                                    , RULL(0x370F01B9), SH_UNT_C_23     ,
       SH_ACS_SCOM1_CLEAR );
REG64( C_23_PPM_VDMCR_OR                                       , RULL(0x370F01BA), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EQ_PPM_VDMCR                                            , RULL(0x100F01B8), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_PPM_VDMCR_CLEAR                                      , RULL(0x100F01B9), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_PPM_VDMCR_OR                                         , RULL(0x100F01BA), SH_UNT_EQ       , SH_ACS_SCOM2_OR  );
REG64( EQ_0_PPM_VDMCR                                          , RULL(0x100F01B8), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_PPM_VDMCR_CLEAR                                    , RULL(0x100F01B9), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_0_PPM_VDMCR_OR                                       , RULL(0x100F01BA), SH_UNT_EQ_0     , SH_ACS_SCOM2_OR  );
REG64( EQ_1_PPM_VDMCR                                          , RULL(0x110F01B8), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_PPM_VDMCR_CLEAR                                    , RULL(0x110F01B9), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_1_PPM_VDMCR_OR                                       , RULL(0x110F01BA), SH_UNT_EQ_1     , SH_ACS_SCOM2_OR  );
REG64( EQ_2_PPM_VDMCR                                          , RULL(0x120F01B8), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_PPM_VDMCR_CLEAR                                    , RULL(0x120F01B9), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_2_PPM_VDMCR_OR                                       , RULL(0x120F01BA), SH_UNT_EQ_2     , SH_ACS_SCOM2_OR  );
REG64( EQ_3_PPM_VDMCR                                          , RULL(0x130F01B8), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_PPM_VDMCR_CLEAR                                    , RULL(0x130F01B9), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_3_PPM_VDMCR_OR                                       , RULL(0x130F01BA), SH_UNT_EQ_3     , SH_ACS_SCOM2_OR  );
REG64( EQ_4_PPM_VDMCR                                          , RULL(0x140F01B8), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_PPM_VDMCR_CLEAR                                    , RULL(0x140F01B9), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_4_PPM_VDMCR_OR                                       , RULL(0x140F01BA), SH_UNT_EQ_4     , SH_ACS_SCOM2_OR  );
REG64( EQ_5_PPM_VDMCR                                          , RULL(0x150F01B8), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_PPM_VDMCR_CLEAR                                    , RULL(0x150F01B9), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_5_PPM_VDMCR_OR                                       , RULL(0x150F01BA), SH_UNT_EQ_5     , SH_ACS_SCOM2_OR  );
REG64( EX_PPM_VDMCR                                            , RULL(0x200F01B8), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01B8,
REG64( EX_PPM_VDMCR_CLEAR                                      , RULL(0x200F01B9), SH_UNT_EX       ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F01B9,
REG64( EX_PPM_VDMCR_OR                                         , RULL(0x200F01BA), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F01BA,
REG64( EX_0_PPM_VDMCR                                          , RULL(0x200F01B8), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 210F01B8,
REG64( EX_0_PPM_VDMCR_CLEAR                                    , RULL(0x200F01B9), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 210F01B9,
REG64( EX_0_PPM_VDMCR_OR                                       , RULL(0x200F01BA), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 210F01BA,
REG64( EX_1_PPM_VDMCR                                          , RULL(0x230F01B8), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 220F01B8,
REG64( EX_1_PPM_VDMCR_CLEAR                                    , RULL(0x230F01B9), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 220F01B9,
REG64( EX_1_PPM_VDMCR_OR                                       , RULL(0x230F01BA), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 220F01BA,
REG64( EX_2_PPM_VDMCR                                          , RULL(0x240F01B8), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 250F01B8,
REG64( EX_2_PPM_VDMCR_CLEAR                                    , RULL(0x240F01B9), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 250F01B9,
REG64( EX_2_PPM_VDMCR_OR                                       , RULL(0x240F01BA), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 250F01BA,
REG64( EX_3_PPM_VDMCR                                          , RULL(0x260F01B8), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 270F01B8,
REG64( EX_3_PPM_VDMCR_CLEAR                                    , RULL(0x260F01B9), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 270F01B9,
REG64( EX_3_PPM_VDMCR_OR                                       , RULL(0x260F01BA), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 270F01BA,
REG64( EX_4_PPM_VDMCR                                          , RULL(0x280F01B8), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 290F01B8,
REG64( EX_4_PPM_VDMCR_CLEAR                                    , RULL(0x280F01B9), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 290F01B9,
REG64( EX_4_PPM_VDMCR_OR                                       , RULL(0x280F01BA), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 290F01BA,
REG64( EX_5_PPM_VDMCR                                          , RULL(0x2A0F01B8), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B0F01B8,
REG64( EX_5_PPM_VDMCR_CLEAR                                    , RULL(0x2A0F01B9), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2B0F01B9,
REG64( EX_5_PPM_VDMCR_OR                                       , RULL(0x2A0F01BA), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2B0F01BA,
REG64( EX_6_PPM_VDMCR                                          , RULL(0x2C0F01B8), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D0F01B8,
REG64( EX_6_PPM_VDMCR_CLEAR                                    , RULL(0x2C0F01B9), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2D0F01B9,
REG64( EX_6_PPM_VDMCR_OR                                       , RULL(0x2C0F01BA), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2D0F01BA,
REG64( EX_7_PPM_VDMCR                                          , RULL(0x2E0F01B8), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F0F01B8,
REG64( EX_7_PPM_VDMCR_CLEAR                                    , RULL(0x2E0F01B9), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 2F0F01B9,
REG64( EX_7_PPM_VDMCR_OR                                       , RULL(0x2E0F01BA), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2F0F01BA,
REG64( EX_8_PPM_VDMCR                                          , RULL(0x300F01B8), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 310F01B8,
REG64( EX_8_PPM_VDMCR_CLEAR                                    , RULL(0x300F01B9), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 310F01B9,
REG64( EX_8_PPM_VDMCR_OR                                       , RULL(0x300F01BA), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 310F01BA,
REG64( EX_9_PPM_VDMCR                                          , RULL(0x320F01B8), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 330F01B8,
REG64( EX_9_PPM_VDMCR_CLEAR                                    , RULL(0x320F01B9), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 330F01B9,
REG64( EX_9_PPM_VDMCR_OR                                       , RULL(0x320F01BA), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 330F01BA,
REG64( EX_10_PPM_VDMCR                                         , RULL(0x340F01B8), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 350F01B8,
REG64( EX_10_PPM_VDMCR_CLEAR                                   , RULL(0x340F01B9), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 350F01B9,
REG64( EX_10_PPM_VDMCR_OR                                      , RULL(0x340F01BA), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 350F01BA,
REG64( EX_11_PPM_VDMCR                                         , RULL(0x360F01B8), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 370F01B8,
REG64( EX_11_PPM_VDMCR_CLEAR                                   , RULL(0x360F01B9), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_CLEAR ); //DUPS: 370F01B9,
REG64( EX_11_PPM_VDMCR_OR                                      , RULL(0x360F01BA), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 370F01BA,

REG64( EQ_PRD_PURGE_CMD_REG                                    , RULL(0x1001080E), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10010C0E,
REG64( EQ_0_PRD_PURGE_CMD_REG                                  , RULL(0x1001080E), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10010C0E,
REG64( EQ_1_PRD_PURGE_CMD_REG                                  , RULL(0x1101080E), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11010C0E,
REG64( EQ_2_PRD_PURGE_CMD_REG                                  , RULL(0x1201080E), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12010C0E,
REG64( EQ_3_PRD_PURGE_CMD_REG                                  , RULL(0x1301080E), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13010C0E,
REG64( EQ_4_PRD_PURGE_CMD_REG                                  , RULL(0x1401080E), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14010C0E,
REG64( EQ_5_PRD_PURGE_CMD_REG                                  , RULL(0x1501080E), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15010C0E,
REG64( EX_PRD_PURGE_CMD_REG                                    , RULL(0x1001080E), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_PRD_PURGE_CMD_REG                                  , RULL(0x1001080E), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_PRD_PURGE_CMD_REG                                  , RULL(0x10010C0E), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_PRD_PURGE_CMD_REG                                  , RULL(0x1101080E), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_PRD_PURGE_CMD_REG                                  , RULL(0x11010C0E), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_PRD_PURGE_CMD_REG                                  , RULL(0x1201080E), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_PRD_PURGE_CMD_REG                                  , RULL(0x12010C0E), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_PRD_PURGE_CMD_REG                                  , RULL(0x1301080E), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_PRD_PURGE_CMD_REG                                  , RULL(0x13010C0E), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_PRD_PURGE_CMD_REG                                  , RULL(0x1401080E), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_PRD_PURGE_CMD_REG                                  , RULL(0x14010C0E), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_PRD_PURGE_CMD_REG                                 , RULL(0x1501080E), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_PRD_PURGE_CMD_REG                                 , RULL(0x15010C0E), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_PRD_PURGE_REG                                        , RULL(0x1001180E), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10011C0E,
REG64( EQ_0_PRD_PURGE_REG                                      , RULL(0x1001180E), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10011C0E,
REG64( EQ_1_PRD_PURGE_REG                                      , RULL(0x1101180E), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11011C0E,
REG64( EQ_2_PRD_PURGE_REG                                      , RULL(0x1201180E), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12011C0E,
REG64( EQ_3_PRD_PURGE_REG                                      , RULL(0x1301180E), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13011C0E,
REG64( EQ_4_PRD_PURGE_REG                                      , RULL(0x1401180E), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14011C0E,
REG64( EQ_5_PRD_PURGE_REG                                      , RULL(0x1501180E), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15011C0E,
REG64( EX_PRD_PURGE_REG                                        , RULL(0x1001180E), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_PRD_PURGE_REG                                      , RULL(0x1001180E), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_1_PRD_PURGE_REG                                      , RULL(0x10011C0E), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_2_PRD_PURGE_REG                                      , RULL(0x1101180E), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_3_PRD_PURGE_REG                                      , RULL(0x11011C0E), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_4_PRD_PURGE_REG                                      , RULL(0x1201180E), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_5_PRD_PURGE_REG                                      , RULL(0x12011C0E), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_6_PRD_PURGE_REG                                      , RULL(0x1301180E), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_7_PRD_PURGE_REG                                      , RULL(0x13011C0E), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_8_PRD_PURGE_REG                                      , RULL(0x1401180E), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_9_PRD_PURGE_REG                                      , RULL(0x14011C0E), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_10_PRD_PURGE_REG                                     , RULL(0x1501180E), SH_UNT_EX_10    , SH_ACS_SCOM      );
REG64( EX_11_PRD_PURGE_REG                                     , RULL(0x15011C0E), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( PEC_0_PREDV_REG                                         , RULL(0x04010C06), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_PREDV_REG                                         , RULL(0x04011006), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_PREDV_REG                                         , RULL(0x04011406), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_PRE_COUNTER_REG                                       , RULL(0x200F0028), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PRE_COUNTER_REG                                     , RULL(0x200F0028), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PRE_COUNTER_REG                                     , RULL(0x210F0028), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PRE_COUNTER_REG                                     , RULL(0x220F0028), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PRE_COUNTER_REG                                     , RULL(0x230F0028), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PRE_COUNTER_REG                                     , RULL(0x240F0028), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PRE_COUNTER_REG                                     , RULL(0x250F0028), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PRE_COUNTER_REG                                     , RULL(0x260F0028), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PRE_COUNTER_REG                                     , RULL(0x270F0028), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PRE_COUNTER_REG                                     , RULL(0x280F0028), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PRE_COUNTER_REG                                     , RULL(0x290F0028), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PRE_COUNTER_REG                                    , RULL(0x2A0F0028), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PRE_COUNTER_REG                                    , RULL(0x2B0F0028), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PRE_COUNTER_REG                                    , RULL(0x2C0F0028), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PRE_COUNTER_REG                                    , RULL(0x2D0F0028), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PRE_COUNTER_REG                                    , RULL(0x2E0F0028), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PRE_COUNTER_REG                                    , RULL(0x2F0F0028), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PRE_COUNTER_REG                                    , RULL(0x300F0028), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PRE_COUNTER_REG                                    , RULL(0x310F0028), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PRE_COUNTER_REG                                    , RULL(0x320F0028), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PRE_COUNTER_REG                                    , RULL(0x330F0028), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PRE_COUNTER_REG                                    , RULL(0x340F0028), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PRE_COUNTER_REG                                    , RULL(0x350F0028), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PRE_COUNTER_REG                                    , RULL(0x360F0028), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PRE_COUNTER_REG                                    , RULL(0x370F0028), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PRE_COUNTER_REG                                      , RULL(0x100F0028), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PRE_COUNTER_REG                                    , RULL(0x100F0028), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PRE_COUNTER_REG                                    , RULL(0x110F0028), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PRE_COUNTER_REG                                    , RULL(0x120F0028), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PRE_COUNTER_REG                                    , RULL(0x130F0028), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PRE_COUNTER_REG                                    , RULL(0x140F0028), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PRE_COUNTER_REG                                    , RULL(0x150F0028), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PRE_COUNTER_REG                                      , RULL(0x200F0028), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0028,
REG64( EX_0_PRE_COUNTER_REG                                    , RULL(0x200F0028), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0028,
REG64( EX_1_PRE_COUNTER_REG                                    , RULL(0x230F0028), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0028,
REG64( EX_2_PRE_COUNTER_REG                                    , RULL(0x240F0028), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0028,
REG64( EX_3_PRE_COUNTER_REG                                    , RULL(0x260F0028), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0028,
REG64( EX_4_PRE_COUNTER_REG                                    , RULL(0x280F0028), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0028,
REG64( EX_5_PRE_COUNTER_REG                                    , RULL(0x2A0F0028), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0028,
REG64( EX_6_PRE_COUNTER_REG                                    , RULL(0x2C0F0028), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0028,
REG64( EX_7_PRE_COUNTER_REG                                    , RULL(0x2E0F0028), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0028,
REG64( EX_8_PRE_COUNTER_REG                                    , RULL(0x300F0028), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0028,
REG64( EX_9_PRE_COUNTER_REG                                    , RULL(0x320F0028), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0028,
REG64( EX_10_PRE_COUNTER_REG                                   , RULL(0x340F0028), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0028,
REG64( EX_11_PRE_COUNTER_REG                                   , RULL(0x360F0028), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0028,

REG64( PEC_0_PRE_COUNTER_REG                                   , RULL(0x0D0F0028), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_PRE_COUNTER_REG                                   , RULL(0x0E0F0028), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_PRE_COUNTER_REG                                   , RULL(0x0F0F0028), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_PRIMARY_ADDRESS_REG                                   , RULL(0x200F0000), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PRIMARY_ADDRESS_REG                                 , RULL(0x200F0000), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PRIMARY_ADDRESS_REG                                 , RULL(0x210F0000), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PRIMARY_ADDRESS_REG                                 , RULL(0x220F0000), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PRIMARY_ADDRESS_REG                                 , RULL(0x230F0000), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PRIMARY_ADDRESS_REG                                 , RULL(0x240F0000), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PRIMARY_ADDRESS_REG                                 , RULL(0x250F0000), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PRIMARY_ADDRESS_REG                                 , RULL(0x260F0000), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PRIMARY_ADDRESS_REG                                 , RULL(0x270F0000), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PRIMARY_ADDRESS_REG                                 , RULL(0x280F0000), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PRIMARY_ADDRESS_REG                                 , RULL(0x290F0000), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PRIMARY_ADDRESS_REG                                , RULL(0x2A0F0000), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PRIMARY_ADDRESS_REG                                , RULL(0x2B0F0000), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PRIMARY_ADDRESS_REG                                , RULL(0x2C0F0000), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PRIMARY_ADDRESS_REG                                , RULL(0x2D0F0000), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PRIMARY_ADDRESS_REG                                , RULL(0x2E0F0000), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PRIMARY_ADDRESS_REG                                , RULL(0x2F0F0000), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PRIMARY_ADDRESS_REG                                , RULL(0x300F0000), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PRIMARY_ADDRESS_REG                                , RULL(0x310F0000), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PRIMARY_ADDRESS_REG                                , RULL(0x320F0000), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PRIMARY_ADDRESS_REG                                , RULL(0x330F0000), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PRIMARY_ADDRESS_REG                                , RULL(0x340F0000), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PRIMARY_ADDRESS_REG                                , RULL(0x350F0000), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PRIMARY_ADDRESS_REG                                , RULL(0x360F0000), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PRIMARY_ADDRESS_REG                                , RULL(0x370F0000), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PRIMARY_ADDRESS_REG                                  , RULL(0x100F0000), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PRIMARY_ADDRESS_REG                                , RULL(0x100F0000), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PRIMARY_ADDRESS_REG                                , RULL(0x110F0000), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PRIMARY_ADDRESS_REG                                , RULL(0x120F0000), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PRIMARY_ADDRESS_REG                                , RULL(0x130F0000), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PRIMARY_ADDRESS_REG                                , RULL(0x140F0000), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PRIMARY_ADDRESS_REG                                , RULL(0x150F0000), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PRIMARY_ADDRESS_REG                                  , RULL(0x200F0000), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0000,
REG64( EX_0_PRIMARY_ADDRESS_REG                                , RULL(0x200F0000), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0000,
REG64( EX_1_PRIMARY_ADDRESS_REG                                , RULL(0x230F0000), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0000,
REG64( EX_2_PRIMARY_ADDRESS_REG                                , RULL(0x240F0000), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0000,
REG64( EX_3_PRIMARY_ADDRESS_REG                                , RULL(0x260F0000), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0000,
REG64( EX_4_PRIMARY_ADDRESS_REG                                , RULL(0x280F0000), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0000,
REG64( EX_5_PRIMARY_ADDRESS_REG                                , RULL(0x2A0F0000), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0000,
REG64( EX_6_PRIMARY_ADDRESS_REG                                , RULL(0x2C0F0000), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0000,
REG64( EX_7_PRIMARY_ADDRESS_REG                                , RULL(0x2E0F0000), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0000,
REG64( EX_8_PRIMARY_ADDRESS_REG                                , RULL(0x300F0000), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0000,
REG64( EX_9_PRIMARY_ADDRESS_REG                                , RULL(0x320F0000), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0000,
REG64( EX_10_PRIMARY_ADDRESS_REG                               , RULL(0x340F0000), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0000,
REG64( EX_11_PRIMARY_ADDRESS_REG                               , RULL(0x360F0000), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0000,

REG64( PEC_0_PRIMARY_ADDRESS_REG                               , RULL(0x0D0F0000), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_PRIMARY_ADDRESS_REG                               , RULL(0x0E0F0000), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_PRIMARY_ADDRESS_REG                               , RULL(0x0F0F0000), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_PROTECT_MODE_REG                                      , RULL(0x200F03FE), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PROTECT_MODE_REG                                    , RULL(0x200F03FE), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PROTECT_MODE_REG                                    , RULL(0x210F03FE), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PROTECT_MODE_REG                                    , RULL(0x220F03FE), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PROTECT_MODE_REG                                    , RULL(0x230F03FE), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PROTECT_MODE_REG                                    , RULL(0x240F03FE), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PROTECT_MODE_REG                                    , RULL(0x250F03FE), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PROTECT_MODE_REG                                    , RULL(0x260F03FE), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PROTECT_MODE_REG                                    , RULL(0x270F03FE), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PROTECT_MODE_REG                                    , RULL(0x280F03FE), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PROTECT_MODE_REG                                    , RULL(0x290F03FE), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PROTECT_MODE_REG                                   , RULL(0x2A0F03FE), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PROTECT_MODE_REG                                   , RULL(0x2B0F03FE), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PROTECT_MODE_REG                                   , RULL(0x2C0F03FE), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PROTECT_MODE_REG                                   , RULL(0x2D0F03FE), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PROTECT_MODE_REG                                   , RULL(0x2E0F03FE), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PROTECT_MODE_REG                                   , RULL(0x2F0F03FE), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PROTECT_MODE_REG                                   , RULL(0x300F03FE), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PROTECT_MODE_REG                                   , RULL(0x310F03FE), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PROTECT_MODE_REG                                   , RULL(0x320F03FE), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PROTECT_MODE_REG                                   , RULL(0x330F03FE), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PROTECT_MODE_REG                                   , RULL(0x340F03FE), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PROTECT_MODE_REG                                   , RULL(0x350F03FE), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PROTECT_MODE_REG                                   , RULL(0x360F03FE), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PROTECT_MODE_REG                                   , RULL(0x370F03FE), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PROTECT_MODE_REG                                     , RULL(0x100F03FE), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PROTECT_MODE_REG                                   , RULL(0x100F03FE), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PROTECT_MODE_REG                                   , RULL(0x110F03FE), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PROTECT_MODE_REG                                   , RULL(0x120F03FE), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PROTECT_MODE_REG                                   , RULL(0x130F03FE), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PROTECT_MODE_REG                                   , RULL(0x140F03FE), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PROTECT_MODE_REG                                   , RULL(0x150F03FE), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PROTECT_MODE_REG                                     , RULL(0x200F03FE), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F03FE,
REG64( EX_0_PROTECT_MODE_REG                                   , RULL(0x200F03FE), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F03FE,
REG64( EX_1_PROTECT_MODE_REG                                   , RULL(0x230F03FE), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F03FE,
REG64( EX_2_PROTECT_MODE_REG                                   , RULL(0x240F03FE), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F03FE,
REG64( EX_3_PROTECT_MODE_REG                                   , RULL(0x260F03FE), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F03FE,
REG64( EX_4_PROTECT_MODE_REG                                   , RULL(0x280F03FE), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F03FE,
REG64( EX_5_PROTECT_MODE_REG                                   , RULL(0x2A0F03FE), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F03FE,
REG64( EX_6_PROTECT_MODE_REG                                   , RULL(0x2C0F03FE), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F03FE,
REG64( EX_7_PROTECT_MODE_REG                                   , RULL(0x2E0F03FE), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F03FE,
REG64( EX_8_PROTECT_MODE_REG                                   , RULL(0x300F03FE), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F03FE,
REG64( EX_9_PROTECT_MODE_REG                                   , RULL(0x320F03FE), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F03FE,
REG64( EX_10_PROTECT_MODE_REG                                  , RULL(0x340F03FE), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F03FE,
REG64( EX_11_PROTECT_MODE_REG                                  , RULL(0x360F03FE), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F03FE,

REG64( PEC_0_PROTECT_MODE_REG                                  , RULL(0x0D0F03FE), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_PROTECT_MODE_REG                                  , RULL(0x0E0F03FE), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_PROTECT_MODE_REG                                  , RULL(0x0F0F03FE), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_PSCOM_ERROR_MASK                                      , RULL(0x20010002), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PSCOM_ERROR_MASK                                    , RULL(0x20010002), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PSCOM_ERROR_MASK                                    , RULL(0x21010002), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PSCOM_ERROR_MASK                                    , RULL(0x22010002), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PSCOM_ERROR_MASK                                    , RULL(0x23010002), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PSCOM_ERROR_MASK                                    , RULL(0x24010002), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PSCOM_ERROR_MASK                                    , RULL(0x25010002), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PSCOM_ERROR_MASK                                    , RULL(0x26010002), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PSCOM_ERROR_MASK                                    , RULL(0x27010002), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PSCOM_ERROR_MASK                                    , RULL(0x28010002), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PSCOM_ERROR_MASK                                    , RULL(0x29010002), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PSCOM_ERROR_MASK                                   , RULL(0x2A010002), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PSCOM_ERROR_MASK                                   , RULL(0x2B010002), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PSCOM_ERROR_MASK                                   , RULL(0x2C010002), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PSCOM_ERROR_MASK                                   , RULL(0x2D010002), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PSCOM_ERROR_MASK                                   , RULL(0x2E010002), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PSCOM_ERROR_MASK                                   , RULL(0x2F010002), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PSCOM_ERROR_MASK                                   , RULL(0x30010002), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PSCOM_ERROR_MASK                                   , RULL(0x31010002), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PSCOM_ERROR_MASK                                   , RULL(0x32010002), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PSCOM_ERROR_MASK                                   , RULL(0x33010002), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PSCOM_ERROR_MASK                                   , RULL(0x34010002), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PSCOM_ERROR_MASK                                   , RULL(0x35010002), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PSCOM_ERROR_MASK                                   , RULL(0x36010002), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PSCOM_ERROR_MASK                                   , RULL(0x37010002), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PSCOM_ERROR_MASK                                     , RULL(0x10010002), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PSCOM_ERROR_MASK                                   , RULL(0x10010002), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PSCOM_ERROR_MASK                                   , RULL(0x11010002), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PSCOM_ERROR_MASK                                   , RULL(0x12010002), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PSCOM_ERROR_MASK                                   , RULL(0x13010002), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PSCOM_ERROR_MASK                                   , RULL(0x14010002), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PSCOM_ERROR_MASK                                   , RULL(0x15010002), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PSCOM_ERROR_MASK                                     , RULL(0x20010002), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010002,
REG64( EX_0_PSCOM_ERROR_MASK                                   , RULL(0x20010002), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010002,
REG64( EX_1_PSCOM_ERROR_MASK                                   , RULL(0x22010002), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010002,
REG64( EX_2_PSCOM_ERROR_MASK                                   , RULL(0x24010002), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010002,
REG64( EX_3_PSCOM_ERROR_MASK                                   , RULL(0x26010002), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010002,
REG64( EX_4_PSCOM_ERROR_MASK                                   , RULL(0x28010002), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010002,
REG64( EX_5_PSCOM_ERROR_MASK                                   , RULL(0x2A010002), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010002,
REG64( EX_6_PSCOM_ERROR_MASK                                   , RULL(0x2C010002), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010002,
REG64( EX_7_PSCOM_ERROR_MASK                                   , RULL(0x2E010002), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010002,
REG64( EX_8_PSCOM_ERROR_MASK                                   , RULL(0x30010002), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010002,
REG64( EX_9_PSCOM_ERROR_MASK                                   , RULL(0x32010002), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010002,
REG64( EX_10_PSCOM_ERROR_MASK                                  , RULL(0x34010002), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010002,
REG64( EX_11_PSCOM_ERROR_MASK                                  , RULL(0x36010002), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010002,

REG64( PEC_0_PSCOM_ERROR_MASK                                  , RULL(0x0D010002), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_PSCOM_ERROR_MASK                                  , RULL(0x0E010002), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_PSCOM_ERROR_MASK                                  , RULL(0x0F010002), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_PSCOM_MODE_REG                                        , RULL(0x20010000), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PSCOM_MODE_REG                                      , RULL(0x20010000), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PSCOM_MODE_REG                                      , RULL(0x21010000), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PSCOM_MODE_REG                                      , RULL(0x22010000), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PSCOM_MODE_REG                                      , RULL(0x23010000), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PSCOM_MODE_REG                                      , RULL(0x24010000), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PSCOM_MODE_REG                                      , RULL(0x25010000), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PSCOM_MODE_REG                                      , RULL(0x26010000), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PSCOM_MODE_REG                                      , RULL(0x27010000), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PSCOM_MODE_REG                                      , RULL(0x28010000), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PSCOM_MODE_REG                                      , RULL(0x29010000), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PSCOM_MODE_REG                                     , RULL(0x2A010000), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PSCOM_MODE_REG                                     , RULL(0x2B010000), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PSCOM_MODE_REG                                     , RULL(0x2C010000), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PSCOM_MODE_REG                                     , RULL(0x2D010000), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PSCOM_MODE_REG                                     , RULL(0x2E010000), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PSCOM_MODE_REG                                     , RULL(0x2F010000), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PSCOM_MODE_REG                                     , RULL(0x30010000), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PSCOM_MODE_REG                                     , RULL(0x31010000), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PSCOM_MODE_REG                                     , RULL(0x32010000), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PSCOM_MODE_REG                                     , RULL(0x33010000), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PSCOM_MODE_REG                                     , RULL(0x34010000), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PSCOM_MODE_REG                                     , RULL(0x35010000), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PSCOM_MODE_REG                                     , RULL(0x36010000), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PSCOM_MODE_REG                                     , RULL(0x37010000), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PSCOM_MODE_REG                                       , RULL(0x10010000), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PSCOM_MODE_REG                                     , RULL(0x10010000), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PSCOM_MODE_REG                                     , RULL(0x11010000), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PSCOM_MODE_REG                                     , RULL(0x12010000), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PSCOM_MODE_REG                                     , RULL(0x13010000), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PSCOM_MODE_REG                                     , RULL(0x14010000), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PSCOM_MODE_REG                                     , RULL(0x15010000), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PSCOM_MODE_REG                                       , RULL(0x20010000), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010000,
REG64( EX_0_PSCOM_MODE_REG                                     , RULL(0x20010000), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010000,
REG64( EX_1_PSCOM_MODE_REG                                     , RULL(0x22010000), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010000,
REG64( EX_2_PSCOM_MODE_REG                                     , RULL(0x24010000), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010000,
REG64( EX_3_PSCOM_MODE_REG                                     , RULL(0x26010000), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010000,
REG64( EX_4_PSCOM_MODE_REG                                     , RULL(0x28010000), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010000,
REG64( EX_5_PSCOM_MODE_REG                                     , RULL(0x2A010000), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010000,
REG64( EX_6_PSCOM_MODE_REG                                     , RULL(0x2C010000), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010000,
REG64( EX_7_PSCOM_MODE_REG                                     , RULL(0x2E010000), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010000,
REG64( EX_8_PSCOM_MODE_REG                                     , RULL(0x30010000), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010000,
REG64( EX_9_PSCOM_MODE_REG                                     , RULL(0x32010000), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010000,
REG64( EX_10_PSCOM_MODE_REG                                    , RULL(0x34010000), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010000,
REG64( EX_11_PSCOM_MODE_REG                                    , RULL(0x36010000), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010000,

REG64( PEC_0_PSCOM_MODE_REG                                    , RULL(0x0D010000), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_PSCOM_MODE_REG                                    , RULL(0x0E010000), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_PSCOM_MODE_REG                                    , RULL(0x0F010000), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_PSCOM_STATUS_ERROR_REG                                , RULL(0x20010001), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_PSCOM_STATUS_ERROR_REG                              , RULL(0x20010001), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_PSCOM_STATUS_ERROR_REG                              , RULL(0x21010001), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_PSCOM_STATUS_ERROR_REG                              , RULL(0x22010001), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_PSCOM_STATUS_ERROR_REG                              , RULL(0x23010001), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_PSCOM_STATUS_ERROR_REG                              , RULL(0x24010001), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_PSCOM_STATUS_ERROR_REG                              , RULL(0x25010001), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_PSCOM_STATUS_ERROR_REG                              , RULL(0x26010001), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_PSCOM_STATUS_ERROR_REG                              , RULL(0x27010001), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_PSCOM_STATUS_ERROR_REG                              , RULL(0x28010001), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_PSCOM_STATUS_ERROR_REG                              , RULL(0x29010001), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_PSCOM_STATUS_ERROR_REG                             , RULL(0x2A010001), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_PSCOM_STATUS_ERROR_REG                             , RULL(0x2B010001), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_PSCOM_STATUS_ERROR_REG                             , RULL(0x2C010001), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_PSCOM_STATUS_ERROR_REG                             , RULL(0x2D010001), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_PSCOM_STATUS_ERROR_REG                             , RULL(0x2E010001), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_PSCOM_STATUS_ERROR_REG                             , RULL(0x2F010001), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_PSCOM_STATUS_ERROR_REG                             , RULL(0x30010001), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_PSCOM_STATUS_ERROR_REG                             , RULL(0x31010001), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_PSCOM_STATUS_ERROR_REG                             , RULL(0x32010001), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_PSCOM_STATUS_ERROR_REG                             , RULL(0x33010001), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_PSCOM_STATUS_ERROR_REG                             , RULL(0x34010001), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_PSCOM_STATUS_ERROR_REG                             , RULL(0x35010001), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_PSCOM_STATUS_ERROR_REG                             , RULL(0x36010001), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_PSCOM_STATUS_ERROR_REG                             , RULL(0x37010001), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_PSCOM_STATUS_ERROR_REG                               , RULL(0x10010001), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_PSCOM_STATUS_ERROR_REG                             , RULL(0x10010001), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_PSCOM_STATUS_ERROR_REG                             , RULL(0x11010001), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_PSCOM_STATUS_ERROR_REG                             , RULL(0x12010001), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_PSCOM_STATUS_ERROR_REG                             , RULL(0x13010001), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_PSCOM_STATUS_ERROR_REG                             , RULL(0x14010001), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_PSCOM_STATUS_ERROR_REG                             , RULL(0x15010001), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_PSCOM_STATUS_ERROR_REG                               , RULL(0x20010001), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010001,
REG64( EX_0_PSCOM_STATUS_ERROR_REG                             , RULL(0x20010001), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010001,
REG64( EX_1_PSCOM_STATUS_ERROR_REG                             , RULL(0x22010001), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010001,
REG64( EX_2_PSCOM_STATUS_ERROR_REG                             , RULL(0x24010001), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010001,
REG64( EX_3_PSCOM_STATUS_ERROR_REG                             , RULL(0x26010001), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010001,
REG64( EX_4_PSCOM_STATUS_ERROR_REG                             , RULL(0x28010001), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010001,
REG64( EX_5_PSCOM_STATUS_ERROR_REG                             , RULL(0x2A010001), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010001,
REG64( EX_6_PSCOM_STATUS_ERROR_REG                             , RULL(0x2C010001), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010001,
REG64( EX_7_PSCOM_STATUS_ERROR_REG                             , RULL(0x2E010001), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010001,
REG64( EX_8_PSCOM_STATUS_ERROR_REG                             , RULL(0x30010001), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010001,
REG64( EX_9_PSCOM_STATUS_ERROR_REG                             , RULL(0x32010001), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010001,
REG64( EX_10_PSCOM_STATUS_ERROR_REG                            , RULL(0x34010001), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010001,
REG64( EX_11_PSCOM_STATUS_ERROR_REG                            , RULL(0x36010001), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010001,

REG64( PEC_0_PSCOM_STATUS_ERROR_REG                            , RULL(0x0D010001), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_PSCOM_STATUS_ERROR_REG                            , RULL(0x0E010001), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_PSCOM_STATUS_ERROR_REG                            , RULL(0x0F010001), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_PWM_EVENTS                                            , RULL(0x20010AA2), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_PWM_EVENTS                                          , RULL(0x20010AA2), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_PWM_EVENTS                                          , RULL(0x21010AA2), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_PWM_EVENTS                                          , RULL(0x22010AA2), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_PWM_EVENTS                                          , RULL(0x23010AA2), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_PWM_EVENTS                                          , RULL(0x24010AA2), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_PWM_EVENTS                                          , RULL(0x25010AA2), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_PWM_EVENTS                                          , RULL(0x26010AA2), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_PWM_EVENTS                                          , RULL(0x27010AA2), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_PWM_EVENTS                                          , RULL(0x28010AA2), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_PWM_EVENTS                                          , RULL(0x29010AA2), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_PWM_EVENTS                                         , RULL(0x2A010AA2), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_PWM_EVENTS                                         , RULL(0x2B010AA2), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_PWM_EVENTS                                         , RULL(0x2C010AA2), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_PWM_EVENTS                                         , RULL(0x2D010AA2), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_PWM_EVENTS                                         , RULL(0x2E010AA2), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_PWM_EVENTS                                         , RULL(0x2F010AA2), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_PWM_EVENTS                                         , RULL(0x30010AA2), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_PWM_EVENTS                                         , RULL(0x31010AA2), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_PWM_EVENTS                                         , RULL(0x32010AA2), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_PWM_EVENTS                                         , RULL(0x33010AA2), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_PWM_EVENTS                                         , RULL(0x34010AA2), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_PWM_EVENTS                                         , RULL(0x35010AA2), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_PWM_EVENTS                                         , RULL(0x36010AA2), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_PWM_EVENTS                                         , RULL(0x37010AA2), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_PWM_EVENTS                                      , RULL(0x21010AA2), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010AA2,
REG64( EX_10_L2_PWM_EVENTS                                     , RULL(0x35010AA2), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010AA2,
REG64( EX_11_L2_PWM_EVENTS                                     , RULL(0x37010AA2), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010AA2,
REG64( EX_1_L2_PWM_EVENTS                                      , RULL(0x23010AA2), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010AA2,
REG64( EX_2_L2_PWM_EVENTS                                      , RULL(0x25010AA2), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010AA2,
REG64( EX_3_L2_PWM_EVENTS                                      , RULL(0x27010AA2), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010AA2,
REG64( EX_4_L2_PWM_EVENTS                                      , RULL(0x29010AA2), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010AA2,
REG64( EX_5_L2_PWM_EVENTS                                      , RULL(0x2B010AA2), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010AA2,
REG64( EX_6_L2_PWM_EVENTS                                      , RULL(0x2D010AA2), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010AA2,
REG64( EX_7_L2_PWM_EVENTS                                      , RULL(0x2F010AA2), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010AA2,
REG64( EX_8_L2_PWM_EVENTS                                      , RULL(0x31010AA2), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010AA2,
REG64( EX_9_L2_PWM_EVENTS                                      , RULL(0x33010AA2), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010AA2,
REG64( EX_L2_PWM_EVENTS                                        , RULL(0x21010AA2), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010AA2,

REG64( EQ_QPPM_DPLL_CTRL                                       , RULL(0x100F0152), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_QPPM_DPLL_CTRL_CLEAR                                 , RULL(0x100F0153), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_QPPM_DPLL_CTRL_OR                                    , RULL(0x100F0154), SH_UNT_EQ       , SH_ACS_SCOM2_OR  );
REG64( EQ_0_QPPM_DPLL_CTRL                                     , RULL(0x100F0152), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_QPPM_DPLL_CTRL_CLEAR                               , RULL(0x100F0153), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_0_QPPM_DPLL_CTRL_OR                                  , RULL(0x100F0154), SH_UNT_EQ_0     , SH_ACS_SCOM2_OR  );
REG64( EQ_1_QPPM_DPLL_CTRL                                     , RULL(0x110F0152), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_QPPM_DPLL_CTRL_CLEAR                               , RULL(0x110F0153), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_1_QPPM_DPLL_CTRL_OR                                  , RULL(0x110F0154), SH_UNT_EQ_1     , SH_ACS_SCOM2_OR  );
REG64( EQ_2_QPPM_DPLL_CTRL                                     , RULL(0x120F0152), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_QPPM_DPLL_CTRL_CLEAR                               , RULL(0x120F0153), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_2_QPPM_DPLL_CTRL_OR                                  , RULL(0x120F0154), SH_UNT_EQ_2     , SH_ACS_SCOM2_OR  );
REG64( EQ_3_QPPM_DPLL_CTRL                                     , RULL(0x130F0152), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_QPPM_DPLL_CTRL_CLEAR                               , RULL(0x130F0153), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_3_QPPM_DPLL_CTRL_OR                                  , RULL(0x130F0154), SH_UNT_EQ_3     , SH_ACS_SCOM2_OR  );
REG64( EQ_4_QPPM_DPLL_CTRL                                     , RULL(0x140F0152), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_QPPM_DPLL_CTRL_CLEAR                               , RULL(0x140F0153), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_4_QPPM_DPLL_CTRL_OR                                  , RULL(0x140F0154), SH_UNT_EQ_4     , SH_ACS_SCOM2_OR  );
REG64( EQ_5_QPPM_DPLL_CTRL                                     , RULL(0x150F0152), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_QPPM_DPLL_CTRL_CLEAR                               , RULL(0x150F0153), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_5_QPPM_DPLL_CTRL_OR                                  , RULL(0x150F0154), SH_UNT_EQ_5     , SH_ACS_SCOM2_OR  );

REG64( EQ_QPPM_DPLL_FREQ                                       , RULL(0x100F0151), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_QPPM_DPLL_FREQ                                     , RULL(0x100F0151), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_QPPM_DPLL_FREQ                                     , RULL(0x110F0151), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_QPPM_DPLL_FREQ                                     , RULL(0x120F0151), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_QPPM_DPLL_FREQ                                     , RULL(0x130F0151), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_QPPM_DPLL_FREQ                                     , RULL(0x140F0151), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_QPPM_DPLL_FREQ                                     , RULL(0x150F0151), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );

REG64( EQ_QPPM_DPLL_ICHAR                                      , RULL(0x100F0157), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_QPPM_DPLL_ICHAR                                    , RULL(0x100F0157), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_QPPM_DPLL_ICHAR                                    , RULL(0x110F0157), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_QPPM_DPLL_ICHAR                                    , RULL(0x120F0157), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_QPPM_DPLL_ICHAR                                    , RULL(0x130F0157), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_QPPM_DPLL_ICHAR                                    , RULL(0x140F0157), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_QPPM_DPLL_ICHAR                                    , RULL(0x150F0157), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_QPPM_DPLL_OCHAR                                      , RULL(0x100F0156), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_QPPM_DPLL_OCHAR                                    , RULL(0x100F0156), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_QPPM_DPLL_OCHAR                                    , RULL(0x110F0156), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_QPPM_DPLL_OCHAR                                    , RULL(0x120F0156), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_QPPM_DPLL_OCHAR                                    , RULL(0x130F0156), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_QPPM_DPLL_OCHAR                                    , RULL(0x140F0156), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_QPPM_DPLL_OCHAR                                    , RULL(0x150F0156), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_QPPM_DPLL_STAT                                       , RULL(0x100F0155), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_QPPM_DPLL_STAT                                     , RULL(0x100F0155), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_QPPM_DPLL_STAT                                     , RULL(0x110F0155), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_QPPM_DPLL_STAT                                     , RULL(0x120F0155), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_QPPM_DPLL_STAT                                     , RULL(0x130F0155), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_QPPM_DPLL_STAT                                     , RULL(0x140F0155), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_QPPM_DPLL_STAT                                     , RULL(0x150F0155), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_QPPM_ERR                                             , RULL(0x100F0121), SH_UNT_EQ       ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_0_QPPM_ERR                                           , RULL(0x100F0121), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_1_QPPM_ERR                                           , RULL(0x110F0121), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_2_QPPM_ERR                                           , RULL(0x120F0121), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_3_QPPM_ERR                                           , RULL(0x130F0121), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_4_QPPM_ERR                                           , RULL(0x140F0121), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_5_QPPM_ERR                                           , RULL(0x150F0121), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_WCLEAR );

REG64( EQ_QPPM_ERRMSK                                          , RULL(0x100F0122), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_QPPM_ERRMSK                                        , RULL(0x100F0122), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_QPPM_ERRMSK                                        , RULL(0x110F0122), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_QPPM_ERRMSK                                        , RULL(0x120F0122), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_QPPM_ERRMSK                                        , RULL(0x130F0122), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_QPPM_ERRMSK                                        , RULL(0x140F0122), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_QPPM_ERRMSK                                        , RULL(0x150F0122), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );

REG64( EQ_QPPM_ERRSUM                                          , RULL(0x100F0120), SH_UNT_EQ       ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_0_QPPM_ERRSUM                                        , RULL(0x100F0120), SH_UNT_EQ_0     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_1_QPPM_ERRSUM                                        , RULL(0x110F0120), SH_UNT_EQ_1     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_2_QPPM_ERRSUM                                        , RULL(0x120F0120), SH_UNT_EQ_2     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_3_QPPM_ERRSUM                                        , RULL(0x130F0120), SH_UNT_EQ_3     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_4_QPPM_ERRSUM                                        , RULL(0x140F0120), SH_UNT_EQ_4     ,
       SH_ACS_SCOM_WCLEAR );
REG64( EQ_5_QPPM_ERRSUM                                        , RULL(0x150F0120), SH_UNT_EQ_5     ,
       SH_ACS_SCOM_WCLEAR );

REG64( EQ_QPPM_EXCGCR                                          , RULL(0x100F0165), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_QPPM_EXCGCR_CLEAR                                    , RULL(0x100F0166), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_QPPM_EXCGCR_OR                                       , RULL(0x100F0167), SH_UNT_EQ       , SH_ACS_SCOM2_OR  );
REG64( EQ_0_QPPM_EXCGCR                                        , RULL(0x100F0165), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_QPPM_EXCGCR_CLEAR                                  , RULL(0x100F0166), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_0_QPPM_EXCGCR_OR                                     , RULL(0x100F0167), SH_UNT_EQ_0     , SH_ACS_SCOM2_OR  );
REG64( EQ_1_QPPM_EXCGCR                                        , RULL(0x110F0165), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_QPPM_EXCGCR_CLEAR                                  , RULL(0x110F0166), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_1_QPPM_EXCGCR_OR                                     , RULL(0x110F0167), SH_UNT_EQ_1     , SH_ACS_SCOM2_OR  );
REG64( EQ_2_QPPM_EXCGCR                                        , RULL(0x120F0165), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_QPPM_EXCGCR_CLEAR                                  , RULL(0x120F0166), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_2_QPPM_EXCGCR_OR                                     , RULL(0x120F0167), SH_UNT_EQ_2     , SH_ACS_SCOM2_OR  );
REG64( EQ_3_QPPM_EXCGCR                                        , RULL(0x130F0165), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_QPPM_EXCGCR_CLEAR                                  , RULL(0x130F0166), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_3_QPPM_EXCGCR_OR                                     , RULL(0x130F0167), SH_UNT_EQ_3     , SH_ACS_SCOM2_OR  );
REG64( EQ_4_QPPM_EXCGCR                                        , RULL(0x140F0165), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_QPPM_EXCGCR_CLEAR                                  , RULL(0x140F0166), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_4_QPPM_EXCGCR_OR                                     , RULL(0x140F0167), SH_UNT_EQ_4     , SH_ACS_SCOM2_OR  );
REG64( EQ_5_QPPM_EXCGCR                                        , RULL(0x150F0165), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_QPPM_EXCGCR_CLEAR                                  , RULL(0x150F0166), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_5_QPPM_EXCGCR_OR                                     , RULL(0x150F0167), SH_UNT_EQ_5     , SH_ACS_SCOM2_OR  );

REG64( EQ_QPPM_OCCHB                                           , RULL(0x100F015F), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_QPPM_OCCHB                                         , RULL(0x100F015F), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_QPPM_OCCHB                                         , RULL(0x110F015F), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_QPPM_OCCHB                                         , RULL(0x120F015F), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_QPPM_OCCHB                                         , RULL(0x130F015F), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_QPPM_OCCHB                                         , RULL(0x140F015F), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_QPPM_OCCHB                                         , RULL(0x150F015F), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );

REG64( EQ_QPPM_QACCR                                           , RULL(0x100F0160), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_QPPM_QACCR_CLEAR                                     , RULL(0x100F0161), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_QPPM_QACCR_OR                                        , RULL(0x100F0162), SH_UNT_EQ       , SH_ACS_SCOM2_OR  );
REG64( EQ_0_QPPM_QACCR                                         , RULL(0x100F0160), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_QPPM_QACCR_CLEAR                                   , RULL(0x100F0161), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_0_QPPM_QACCR_OR                                      , RULL(0x100F0162), SH_UNT_EQ_0     , SH_ACS_SCOM2_OR  );
REG64( EQ_1_QPPM_QACCR                                         , RULL(0x110F0160), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_QPPM_QACCR_CLEAR                                   , RULL(0x110F0161), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_1_QPPM_QACCR_OR                                      , RULL(0x110F0162), SH_UNT_EQ_1     , SH_ACS_SCOM2_OR  );
REG64( EQ_2_QPPM_QACCR                                         , RULL(0x120F0160), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_QPPM_QACCR_CLEAR                                   , RULL(0x120F0161), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_2_QPPM_QACCR_OR                                      , RULL(0x120F0162), SH_UNT_EQ_2     , SH_ACS_SCOM2_OR  );
REG64( EQ_3_QPPM_QACCR                                         , RULL(0x130F0160), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_QPPM_QACCR_CLEAR                                   , RULL(0x130F0161), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_3_QPPM_QACCR_OR                                      , RULL(0x130F0162), SH_UNT_EQ_3     , SH_ACS_SCOM2_OR  );
REG64( EQ_4_QPPM_QACCR                                         , RULL(0x140F0160), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_QPPM_QACCR_CLEAR                                   , RULL(0x140F0161), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_4_QPPM_QACCR_OR                                      , RULL(0x140F0162), SH_UNT_EQ_4     , SH_ACS_SCOM2_OR  );
REG64( EQ_5_QPPM_QACCR                                         , RULL(0x150F0160), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_QPPM_QACCR_CLEAR                                   , RULL(0x150F0161), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_5_QPPM_QACCR_OR                                      , RULL(0x150F0162), SH_UNT_EQ_5     , SH_ACS_SCOM2_OR  );

REG64( EQ_QPPM_QACSR                                           , RULL(0x100F0163), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_QPPM_QACSR                                         , RULL(0x100F0163), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_QPPM_QACSR                                         , RULL(0x110F0163), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_QPPM_QACSR                                         , RULL(0x120F0163), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_QPPM_QACSR                                         , RULL(0x130F0163), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_QPPM_QACSR                                         , RULL(0x140F0163), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_QPPM_QACSR                                         , RULL(0x150F0163), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( EQ_QPPM_QCCR_SCOM                                       , RULL(0x100F01BD), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_QPPM_QCCR_SCOM1                                      , RULL(0x100F01BE), SH_UNT_EQ       , SH_ACS_SCOM1     );
REG64( EQ_QPPM_QCCR_SCOM2                                      , RULL(0x100F01BF), SH_UNT_EQ       , SH_ACS_SCOM2     );
REG64( EQ_0_QPPM_QCCR_SCOM                                     , RULL(0x100F01BD), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_0_QPPM_QCCR_SCOM1                                    , RULL(0x100F01BE), SH_UNT_EQ_0     , SH_ACS_SCOM1     );
REG64( EQ_0_QPPM_QCCR_SCOM2                                    , RULL(0x100F01BF), SH_UNT_EQ_0     , SH_ACS_SCOM2     );
REG64( EQ_1_QPPM_QCCR_SCOM                                     , RULL(0x110F01BD), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_1_QPPM_QCCR_SCOM1                                    , RULL(0x110F01BE), SH_UNT_EQ_1     , SH_ACS_SCOM1     );
REG64( EQ_1_QPPM_QCCR_SCOM2                                    , RULL(0x110F01BF), SH_UNT_EQ_1     , SH_ACS_SCOM2     );
REG64( EQ_2_QPPM_QCCR_SCOM                                     , RULL(0x120F01BD), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_2_QPPM_QCCR_SCOM1                                    , RULL(0x120F01BE), SH_UNT_EQ_2     , SH_ACS_SCOM1     );
REG64( EQ_2_QPPM_QCCR_SCOM2                                    , RULL(0x120F01BF), SH_UNT_EQ_2     , SH_ACS_SCOM2     );
REG64( EQ_3_QPPM_QCCR_SCOM                                     , RULL(0x130F01BD), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_3_QPPM_QCCR_SCOM1                                    , RULL(0x130F01BE), SH_UNT_EQ_3     , SH_ACS_SCOM1     );
REG64( EQ_3_QPPM_QCCR_SCOM2                                    , RULL(0x130F01BF), SH_UNT_EQ_3     , SH_ACS_SCOM2     );
REG64( EQ_4_QPPM_QCCR_SCOM                                     , RULL(0x140F01BD), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_4_QPPM_QCCR_SCOM1                                    , RULL(0x140F01BE), SH_UNT_EQ_4     , SH_ACS_SCOM1     );
REG64( EQ_4_QPPM_QCCR_SCOM2                                    , RULL(0x140F01BF), SH_UNT_EQ_4     , SH_ACS_SCOM2     );
REG64( EQ_5_QPPM_QCCR_SCOM                                     , RULL(0x150F01BD), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EQ_5_QPPM_QCCR_SCOM1                                    , RULL(0x150F01BE), SH_UNT_EQ_5     , SH_ACS_SCOM1     );
REG64( EQ_5_QPPM_QCCR_SCOM2                                    , RULL(0x150F01BF), SH_UNT_EQ_5     , SH_ACS_SCOM2     );

REG64( EQ_QPPM_QPMMR                                           , RULL(0x100F0103), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_QPPM_QPMMR_CLEAR                                     , RULL(0x100F0104), SH_UNT_EQ       ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_QPPM_QPMMR_OR                                        , RULL(0x100F0105), SH_UNT_EQ       , SH_ACS_SCOM2_OR  );
REG64( EQ_0_QPPM_QPMMR                                         , RULL(0x100F0103), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_0_QPPM_QPMMR_CLEAR                                   , RULL(0x100F0104), SH_UNT_EQ_0     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_0_QPPM_QPMMR_OR                                      , RULL(0x100F0105), SH_UNT_EQ_0     , SH_ACS_SCOM2_OR  );
REG64( EQ_1_QPPM_QPMMR                                         , RULL(0x110F0103), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_1_QPPM_QPMMR_CLEAR                                   , RULL(0x110F0104), SH_UNT_EQ_1     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_1_QPPM_QPMMR_OR                                      , RULL(0x110F0105), SH_UNT_EQ_1     , SH_ACS_SCOM2_OR  );
REG64( EQ_2_QPPM_QPMMR                                         , RULL(0x120F0103), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_2_QPPM_QPMMR_CLEAR                                   , RULL(0x120F0104), SH_UNT_EQ_2     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_2_QPPM_QPMMR_OR                                      , RULL(0x120F0105), SH_UNT_EQ_2     , SH_ACS_SCOM2_OR  );
REG64( EQ_3_QPPM_QPMMR                                         , RULL(0x130F0103), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_3_QPPM_QPMMR_CLEAR                                   , RULL(0x130F0104), SH_UNT_EQ_3     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_3_QPPM_QPMMR_OR                                      , RULL(0x130F0105), SH_UNT_EQ_3     , SH_ACS_SCOM2_OR  );
REG64( EQ_4_QPPM_QPMMR                                         , RULL(0x140F0103), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_4_QPPM_QPMMR_CLEAR                                   , RULL(0x140F0104), SH_UNT_EQ_4     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_4_QPPM_QPMMR_OR                                      , RULL(0x140F0105), SH_UNT_EQ_4     , SH_ACS_SCOM2_OR  );
REG64( EQ_5_QPPM_QPMMR                                         , RULL(0x150F0103), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );
REG64( EQ_5_QPPM_QPMMR_CLEAR                                   , RULL(0x150F0104), SH_UNT_EQ_5     ,
       SH_ACS_SCOM1_CLEAR );
REG64( EQ_5_QPPM_QPMMR_OR                                      , RULL(0x150F0105), SH_UNT_EQ_5     , SH_ACS_SCOM2_OR  );

REG64( EQ_QPPM_VDMCFGR                                         , RULL(0x100F01B6), SH_UNT_EQ       , SH_ACS_SCOM_RW   );
REG64( EQ_0_QPPM_VDMCFGR                                       , RULL(0x100F01B6), SH_UNT_EQ_0     , SH_ACS_SCOM_RW   );
REG64( EQ_1_QPPM_VDMCFGR                                       , RULL(0x110F01B6), SH_UNT_EQ_1     , SH_ACS_SCOM_RW   );
REG64( EQ_2_QPPM_VDMCFGR                                       , RULL(0x120F01B6), SH_UNT_EQ_2     , SH_ACS_SCOM_RW   );
REG64( EQ_3_QPPM_VDMCFGR                                       , RULL(0x130F01B6), SH_UNT_EQ_3     , SH_ACS_SCOM_RW   );
REG64( EQ_4_QPPM_VDMCFGR                                       , RULL(0x140F01B6), SH_UNT_EQ_4     , SH_ACS_SCOM_RW   );
REG64( EQ_5_QPPM_VDMCFGR                                       , RULL(0x150F01B6), SH_UNT_EQ_5     , SH_ACS_SCOM_RW   );

REG64( EQ_QPPM_VOLT_CHAR                                       , RULL(0x100F01BB), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_QPPM_VOLT_CHAR                                     , RULL(0x100F01BB), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_QPPM_VOLT_CHAR                                     , RULL(0x110F01BB), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_QPPM_VOLT_CHAR                                     , RULL(0x120F01BB), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_QPPM_VOLT_CHAR                                     , RULL(0x130F01BB), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_QPPM_VOLT_CHAR                                     , RULL(0x140F01BB), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_QPPM_VOLT_CHAR                                     , RULL(0x150F01BB), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );

REG64( C_RAM_CTRL                                              , RULL(0x20010A51), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_RAM_CTRL                                            , RULL(0x20010A51), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_RAM_CTRL                                            , RULL(0x21010A51), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_RAM_CTRL                                            , RULL(0x22010A51), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_RAM_CTRL                                            , RULL(0x23010A51), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_RAM_CTRL                                            , RULL(0x24010A51), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_RAM_CTRL                                            , RULL(0x25010A51), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_RAM_CTRL                                            , RULL(0x26010A51), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_RAM_CTRL                                            , RULL(0x27010A51), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_RAM_CTRL                                            , RULL(0x28010A51), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_RAM_CTRL                                            , RULL(0x29010A51), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_RAM_CTRL                                           , RULL(0x2A010A51), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_RAM_CTRL                                           , RULL(0x2B010A51), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_RAM_CTRL                                           , RULL(0x2C010A51), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_RAM_CTRL                                           , RULL(0x2D010A51), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_RAM_CTRL                                           , RULL(0x2E010A51), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_RAM_CTRL                                           , RULL(0x2F010A51), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_RAM_CTRL                                           , RULL(0x30010A51), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_RAM_CTRL                                           , RULL(0x31010A51), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_RAM_CTRL                                           , RULL(0x32010A51), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_RAM_CTRL                                           , RULL(0x33010A51), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_RAM_CTRL                                           , RULL(0x34010A51), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_RAM_CTRL                                           , RULL(0x35010A51), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_RAM_CTRL                                           , RULL(0x36010A51), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_RAM_CTRL                                           , RULL(0x37010A51), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_RAM_CTRL                                        , RULL(0x20010A51), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A51,
REG64( EX_10_L2_RAM_CTRL                                       , RULL(0x34010A51), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A51,
REG64( EX_11_L2_RAM_CTRL                                       , RULL(0x36010A51), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A51,
REG64( EX_1_L2_RAM_CTRL                                        , RULL(0x22010A51), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A51,
REG64( EX_2_L2_RAM_CTRL                                        , RULL(0x24010A51), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A51,
REG64( EX_3_L2_RAM_CTRL                                        , RULL(0x26010A51), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A51,
REG64( EX_4_L2_RAM_CTRL                                        , RULL(0x28010A51), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A51,
REG64( EX_5_L2_RAM_CTRL                                        , RULL(0x2A010A51), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A51,
REG64( EX_6_L2_RAM_CTRL                                        , RULL(0x2C010A51), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A51,
REG64( EX_7_L2_RAM_CTRL                                        , RULL(0x2E010A51), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A51,
REG64( EX_8_L2_RAM_CTRL                                        , RULL(0x30010A51), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A51,
REG64( EX_9_L2_RAM_CTRL                                        , RULL(0x32010A51), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A51,
REG64( EX_L2_RAM_CTRL                                          , RULL(0x20010A51), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A51,

REG64( C_RAM_MODEREG                                           , RULL(0x20010A50), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_RAM_MODEREG                                         , RULL(0x20010A50), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_RAM_MODEREG                                         , RULL(0x21010A50), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_RAM_MODEREG                                         , RULL(0x22010A50), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_RAM_MODEREG                                         , RULL(0x23010A50), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_RAM_MODEREG                                         , RULL(0x24010A50), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_RAM_MODEREG                                         , RULL(0x25010A50), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_RAM_MODEREG                                         , RULL(0x26010A50), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_RAM_MODEREG                                         , RULL(0x27010A50), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_RAM_MODEREG                                         , RULL(0x28010A50), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_RAM_MODEREG                                         , RULL(0x29010A50), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_RAM_MODEREG                                        , RULL(0x2A010A50), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_RAM_MODEREG                                        , RULL(0x2B010A50), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_RAM_MODEREG                                        , RULL(0x2C010A50), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_RAM_MODEREG                                        , RULL(0x2D010A50), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_RAM_MODEREG                                        , RULL(0x2E010A50), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_RAM_MODEREG                                        , RULL(0x2F010A50), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_RAM_MODEREG                                        , RULL(0x30010A50), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_RAM_MODEREG                                        , RULL(0x31010A50), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_RAM_MODEREG                                        , RULL(0x32010A50), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_RAM_MODEREG                                        , RULL(0x33010A50), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_RAM_MODEREG                                        , RULL(0x34010A50), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_RAM_MODEREG                                        , RULL(0x35010A50), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_RAM_MODEREG                                        , RULL(0x36010A50), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_RAM_MODEREG                                        , RULL(0x37010A50), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_RAM_MODEREG                                     , RULL(0x20010A50), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A50,
REG64( EX_10_L2_RAM_MODEREG                                    , RULL(0x34010A50), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A50,
REG64( EX_11_L2_RAM_MODEREG                                    , RULL(0x36010A50), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A50,
REG64( EX_1_L2_RAM_MODEREG                                     , RULL(0x22010A50), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A50,
REG64( EX_2_L2_RAM_MODEREG                                     , RULL(0x24010A50), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A50,
REG64( EX_3_L2_RAM_MODEREG                                     , RULL(0x26010A50), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A50,
REG64( EX_4_L2_RAM_MODEREG                                     , RULL(0x28010A50), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A50,
REG64( EX_5_L2_RAM_MODEREG                                     , RULL(0x2A010A50), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A50,
REG64( EX_6_L2_RAM_MODEREG                                     , RULL(0x2C010A50), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A50,
REG64( EX_7_L2_RAM_MODEREG                                     , RULL(0x2E010A50), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A50,
REG64( EX_8_L2_RAM_MODEREG                                     , RULL(0x30010A50), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A50,
REG64( EX_9_L2_RAM_MODEREG                                     , RULL(0x32010A50), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A50,
REG64( EX_L2_RAM_MODEREG                                       , RULL(0x20010A50), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A50,

REG64( C_RAM_STATUS                                            , RULL(0x20010A52), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_RAM_STATUS                                          , RULL(0x20010A52), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_RAM_STATUS                                          , RULL(0x21010A52), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_RAM_STATUS                                          , RULL(0x22010A52), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_RAM_STATUS                                          , RULL(0x23010A52), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_RAM_STATUS                                          , RULL(0x24010A52), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_RAM_STATUS                                          , RULL(0x25010A52), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_RAM_STATUS                                          , RULL(0x26010A52), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_RAM_STATUS                                          , RULL(0x27010A52), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_RAM_STATUS                                          , RULL(0x28010A52), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_RAM_STATUS                                          , RULL(0x29010A52), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_RAM_STATUS                                         , RULL(0x2A010A52), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_RAM_STATUS                                         , RULL(0x2B010A52), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_RAM_STATUS                                         , RULL(0x2C010A52), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_RAM_STATUS                                         , RULL(0x2D010A52), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_RAM_STATUS                                         , RULL(0x2E010A52), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_RAM_STATUS                                         , RULL(0x2F010A52), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_RAM_STATUS                                         , RULL(0x30010A52), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_RAM_STATUS                                         , RULL(0x31010A52), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_RAM_STATUS                                         , RULL(0x32010A52), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_RAM_STATUS                                         , RULL(0x33010A52), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_RAM_STATUS                                         , RULL(0x34010A52), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_RAM_STATUS                                         , RULL(0x35010A52), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_RAM_STATUS                                         , RULL(0x36010A52), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_RAM_STATUS                                         , RULL(0x37010A52), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_RAM_STATUS                                      , RULL(0x20010A52), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010A52,
REG64( EX_10_L2_RAM_STATUS                                     , RULL(0x34010A52), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010A52,
REG64( EX_11_L2_RAM_STATUS                                     , RULL(0x36010A52), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010A52,
REG64( EX_1_L2_RAM_STATUS                                      , RULL(0x22010A52), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010A52,
REG64( EX_2_L2_RAM_STATUS                                      , RULL(0x24010A52), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010A52,
REG64( EX_3_L2_RAM_STATUS                                      , RULL(0x26010A52), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010A52,
REG64( EX_4_L2_RAM_STATUS                                      , RULL(0x28010A52), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010A52,
REG64( EX_5_L2_RAM_STATUS                                      , RULL(0x2A010A52), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010A52,
REG64( EX_6_L2_RAM_STATUS                                      , RULL(0x2C010A52), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010A52,
REG64( EX_7_L2_RAM_STATUS                                      , RULL(0x2E010A52), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010A52,
REG64( EX_8_L2_RAM_STATUS                                      , RULL(0x30010A52), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010A52,
REG64( EX_9_L2_RAM_STATUS                                      , RULL(0x32010A52), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010A52,
REG64( EX_L2_RAM_STATUS                                        , RULL(0x20010A52), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010A52,

REG64( C_RANDOM_CTRL                                           , RULL(0x20010A4E), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_RANDOM_CTRL                                         , RULL(0x20010A4E), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_RANDOM_CTRL                                         , RULL(0x21010A4E), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_RANDOM_CTRL                                         , RULL(0x22010A4E), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_RANDOM_CTRL                                         , RULL(0x23010A4E), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_RANDOM_CTRL                                         , RULL(0x24010A4E), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_RANDOM_CTRL                                         , RULL(0x25010A4E), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_RANDOM_CTRL                                         , RULL(0x26010A4E), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_RANDOM_CTRL                                         , RULL(0x27010A4E), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_RANDOM_CTRL                                         , RULL(0x28010A4E), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_RANDOM_CTRL                                         , RULL(0x29010A4E), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_RANDOM_CTRL                                        , RULL(0x2A010A4E), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_RANDOM_CTRL                                        , RULL(0x2B010A4E), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_RANDOM_CTRL                                        , RULL(0x2C010A4E), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_RANDOM_CTRL                                        , RULL(0x2D010A4E), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_RANDOM_CTRL                                        , RULL(0x2E010A4E), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_RANDOM_CTRL                                        , RULL(0x2F010A4E), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_RANDOM_CTRL                                        , RULL(0x30010A4E), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_RANDOM_CTRL                                        , RULL(0x31010A4E), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_RANDOM_CTRL                                        , RULL(0x32010A4E), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_RANDOM_CTRL                                        , RULL(0x33010A4E), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_RANDOM_CTRL                                        , RULL(0x34010A4E), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_RANDOM_CTRL                                        , RULL(0x35010A4E), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_RANDOM_CTRL                                        , RULL(0x36010A4E), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_RANDOM_CTRL                                        , RULL(0x37010A4E), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_RANDOM_CTRL                                          , RULL(0x20010A4E), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A4E,
REG64( EX_0_RANDOM_CTRL                                        , RULL(0x20010A4E), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A4E,
REG64( EX_1_RANDOM_CTRL                                        , RULL(0x22010A4E), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A4E,
REG64( EX_2_RANDOM_CTRL                                        , RULL(0x24010A4E), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A4E,
REG64( EX_3_RANDOM_CTRL                                        , RULL(0x26010A4E), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A4E,
REG64( EX_4_RANDOM_CTRL                                        , RULL(0x28010A4E), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A4E,
REG64( EX_5_RANDOM_CTRL                                        , RULL(0x2A010A4E), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A4E,
REG64( EX_6_RANDOM_CTRL                                        , RULL(0x2C010A4E), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A4E,
REG64( EX_7_RANDOM_CTRL                                        , RULL(0x2E010A4E), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A4E,
REG64( EX_8_RANDOM_CTRL                                        , RULL(0x30010A4E), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A4E,
REG64( EX_9_RANDOM_CTRL                                        , RULL(0x32010A4E), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A4E,
REG64( EX_10_RANDOM_CTRL                                       , RULL(0x34010A4E), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A4E,
REG64( EX_11_RANDOM_CTRL                                       , RULL(0x36010A4E), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A4E,

REG64( C_RAS_MODEREG                                           , RULL(0x20010A9D), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_RAS_MODEREG                                         , RULL(0x20010A9D), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_RAS_MODEREG                                         , RULL(0x21010A9D), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_RAS_MODEREG                                         , RULL(0x22010A9D), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_RAS_MODEREG                                         , RULL(0x23010A9D), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_RAS_MODEREG                                         , RULL(0x24010A9D), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_RAS_MODEREG                                         , RULL(0x25010A9D), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_RAS_MODEREG                                         , RULL(0x26010A9D), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_RAS_MODEREG                                         , RULL(0x27010A9D), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_RAS_MODEREG                                         , RULL(0x28010A9D), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_RAS_MODEREG                                         , RULL(0x29010A9D), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_RAS_MODEREG                                        , RULL(0x2A010A9D), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_RAS_MODEREG                                        , RULL(0x2B010A9D), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_RAS_MODEREG                                        , RULL(0x2C010A9D), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_RAS_MODEREG                                        , RULL(0x2D010A9D), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_RAS_MODEREG                                        , RULL(0x2E010A9D), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_RAS_MODEREG                                        , RULL(0x2F010A9D), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_RAS_MODEREG                                        , RULL(0x30010A9D), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_RAS_MODEREG                                        , RULL(0x31010A9D), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_RAS_MODEREG                                        , RULL(0x32010A9D), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_RAS_MODEREG                                        , RULL(0x33010A9D), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_RAS_MODEREG                                        , RULL(0x34010A9D), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_RAS_MODEREG                                        , RULL(0x35010A9D), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_RAS_MODEREG                                        , RULL(0x36010A9D), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_RAS_MODEREG                                        , RULL(0x37010A9D), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_RAS_MODEREG                                     , RULL(0x20010A9D), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010A9D,
REG64( EX_10_L2_RAS_MODEREG                                    , RULL(0x34010A9D), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010A9D,
REG64( EX_11_L2_RAS_MODEREG                                    , RULL(0x36010A9D), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010A9D,
REG64( EX_1_L2_RAS_MODEREG                                     , RULL(0x22010A9D), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010A9D,
REG64( EX_2_L2_RAS_MODEREG                                     , RULL(0x24010A9D), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010A9D,
REG64( EX_3_L2_RAS_MODEREG                                     , RULL(0x26010A9D), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010A9D,
REG64( EX_4_L2_RAS_MODEREG                                     , RULL(0x28010A9D), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010A9D,
REG64( EX_5_L2_RAS_MODEREG                                     , RULL(0x2A010A9D), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010A9D,
REG64( EX_6_L2_RAS_MODEREG                                     , RULL(0x2C010A9D), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010A9D,
REG64( EX_7_L2_RAS_MODEREG                                     , RULL(0x2E010A9D), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010A9D,
REG64( EX_8_L2_RAS_MODEREG                                     , RULL(0x30010A9D), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010A9D,
REG64( EX_9_L2_RAS_MODEREG                                     , RULL(0x32010A9D), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010A9D,
REG64( EX_L2_RAS_MODEREG                                       , RULL(0x20010A9D), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010A9D,

REG64( C_RAS_STATUS                                            , RULL(0x20010A02), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_RAS_STATUS                                          , RULL(0x20010A02), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_RAS_STATUS                                          , RULL(0x21010A02), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_RAS_STATUS                                          , RULL(0x22010A02), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_RAS_STATUS                                          , RULL(0x23010A02), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_RAS_STATUS                                          , RULL(0x24010A02), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_RAS_STATUS                                          , RULL(0x25010A02), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_RAS_STATUS                                          , RULL(0x26010A02), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_RAS_STATUS                                          , RULL(0x27010A02), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_RAS_STATUS                                          , RULL(0x28010A02), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_RAS_STATUS                                          , RULL(0x29010A02), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_RAS_STATUS                                         , RULL(0x2A010A02), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_RAS_STATUS                                         , RULL(0x2B010A02), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_RAS_STATUS                                         , RULL(0x2C010A02), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_RAS_STATUS                                         , RULL(0x2D010A02), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_RAS_STATUS                                         , RULL(0x2E010A02), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_RAS_STATUS                                         , RULL(0x2F010A02), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_RAS_STATUS                                         , RULL(0x30010A02), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_RAS_STATUS                                         , RULL(0x31010A02), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_RAS_STATUS                                         , RULL(0x32010A02), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_RAS_STATUS                                         , RULL(0x33010A02), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_RAS_STATUS                                         , RULL(0x34010A02), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_RAS_STATUS                                         , RULL(0x35010A02), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_RAS_STATUS                                         , RULL(0x36010A02), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_RAS_STATUS                                         , RULL(0x37010A02), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_RAS_STATUS                                      , RULL(0x20010A02), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010A02,
REG64( EX_10_L2_RAS_STATUS                                     , RULL(0x34010A02), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010A02,
REG64( EX_11_L2_RAS_STATUS                                     , RULL(0x36010A02), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010A02,
REG64( EX_1_L2_RAS_STATUS                                      , RULL(0x22010A02), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010A02,
REG64( EX_2_L2_RAS_STATUS                                      , RULL(0x24010A02), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010A02,
REG64( EX_3_L2_RAS_STATUS                                      , RULL(0x26010A02), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010A02,
REG64( EX_4_L2_RAS_STATUS                                      , RULL(0x28010A02), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010A02,
REG64( EX_5_L2_RAS_STATUS                                      , RULL(0x2A010A02), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010A02,
REG64( EX_6_L2_RAS_STATUS                                      , RULL(0x2C010A02), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010A02,
REG64( EX_7_L2_RAS_STATUS                                      , RULL(0x2E010A02), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010A02,
REG64( EX_8_L2_RAS_STATUS                                      , RULL(0x30010A02), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010A02,
REG64( EX_9_L2_RAS_STATUS                                      , RULL(0x32010A02), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010A02,
REG64( EX_L2_RAS_STATUS                                        , RULL(0x20010A02), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010A02,

REG64( EQ_RD_EPS_REG                                           , RULL(0x10010810), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10010C10,
REG64( EQ_0_RD_EPS_REG                                         , RULL(0x10010810), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10010C10,
REG64( EQ_1_RD_EPS_REG                                         , RULL(0x11010810), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11010C10,
REG64( EQ_2_RD_EPS_REG                                         , RULL(0x12010810), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12010C10,
REG64( EQ_3_RD_EPS_REG                                         , RULL(0x13010810), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13010C10,
REG64( EQ_4_RD_EPS_REG                                         , RULL(0x14010810), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14010C10,
REG64( EQ_5_RD_EPS_REG                                         , RULL(0x15010810), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15010C10,
REG64( EX_0_L2_RD_EPS_REG                                      , RULL(0x10010810), SH_UNT_EX_0_L2  , SH_ACS_SCOM      );
REG64( EX_10_L2_RD_EPS_REG                                     , RULL(0x15010810), SH_UNT_EX_10_L2 , SH_ACS_SCOM      );
REG64( EX_11_L2_RD_EPS_REG                                     , RULL(0x15010C10), SH_UNT_EX_11_L2 , SH_ACS_SCOM      );
REG64( EX_1_L2_RD_EPS_REG                                      , RULL(0x10010C10), SH_UNT_EX_1_L2  , SH_ACS_SCOM      );
REG64( EX_2_L2_RD_EPS_REG                                      , RULL(0x11010810), SH_UNT_EX_2_L2  , SH_ACS_SCOM      );
REG64( EX_3_L2_RD_EPS_REG                                      , RULL(0x11010C10), SH_UNT_EX_3_L2  , SH_ACS_SCOM      );
REG64( EX_4_L2_RD_EPS_REG                                      , RULL(0x12010810), SH_UNT_EX_4_L2  , SH_ACS_SCOM      );
REG64( EX_5_L2_RD_EPS_REG                                      , RULL(0x12010C10), SH_UNT_EX_5_L2  , SH_ACS_SCOM      );
REG64( EX_6_L2_RD_EPS_REG                                      , RULL(0x13010810), SH_UNT_EX_6_L2  , SH_ACS_SCOM      );
REG64( EX_7_L2_RD_EPS_REG                                      , RULL(0x13010C10), SH_UNT_EX_7_L2  , SH_ACS_SCOM      );
REG64( EX_8_L2_RD_EPS_REG                                      , RULL(0x14010810), SH_UNT_EX_8_L2  , SH_ACS_SCOM      );
REG64( EX_9_L2_RD_EPS_REG                                      , RULL(0x14010C10), SH_UNT_EX_9_L2  , SH_ACS_SCOM      );
REG64( EX_L2_RD_EPS_REG                                        , RULL(0x10010810), SH_UNT_EX_L2    , SH_ACS_SCOM      );

REG64( C_RECOV_FWD_PROG_CTRL                                   , RULL(0x20010A4B), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_RECOV_FWD_PROG_CTRL                                 , RULL(0x20010A4B), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_RECOV_FWD_PROG_CTRL                                 , RULL(0x21010A4B), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_RECOV_FWD_PROG_CTRL                                 , RULL(0x22010A4B), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_RECOV_FWD_PROG_CTRL                                 , RULL(0x23010A4B), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_RECOV_FWD_PROG_CTRL                                 , RULL(0x24010A4B), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_RECOV_FWD_PROG_CTRL                                 , RULL(0x25010A4B), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_RECOV_FWD_PROG_CTRL                                 , RULL(0x26010A4B), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_RECOV_FWD_PROG_CTRL                                 , RULL(0x27010A4B), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_RECOV_FWD_PROG_CTRL                                 , RULL(0x28010A4B), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_RECOV_FWD_PROG_CTRL                                 , RULL(0x29010A4B), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_RECOV_FWD_PROG_CTRL                                , RULL(0x2A010A4B), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_RECOV_FWD_PROG_CTRL                                , RULL(0x2B010A4B), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_RECOV_FWD_PROG_CTRL                                , RULL(0x2C010A4B), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_RECOV_FWD_PROG_CTRL                                , RULL(0x2D010A4B), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_RECOV_FWD_PROG_CTRL                                , RULL(0x2E010A4B), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_RECOV_FWD_PROG_CTRL                                , RULL(0x2F010A4B), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_RECOV_FWD_PROG_CTRL                                , RULL(0x30010A4B), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_RECOV_FWD_PROG_CTRL                                , RULL(0x31010A4B), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_RECOV_FWD_PROG_CTRL                                , RULL(0x32010A4B), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_RECOV_FWD_PROG_CTRL                                , RULL(0x33010A4B), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_RECOV_FWD_PROG_CTRL                                , RULL(0x34010A4B), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_RECOV_FWD_PROG_CTRL                                , RULL(0x35010A4B), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_RECOV_FWD_PROG_CTRL                                , RULL(0x36010A4B), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_RECOV_FWD_PROG_CTRL                                , RULL(0x37010A4B), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x20010A4B), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010A4B,
REG64( EX_10_L2_RECOV_FWD_PROG_CTRL                            , RULL(0x34010A4B), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010A4B,
REG64( EX_11_L2_RECOV_FWD_PROG_CTRL                            , RULL(0x36010A4B), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010A4B,
REG64( EX_1_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x22010A4B), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010A4B,
REG64( EX_2_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x24010A4B), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010A4B,
REG64( EX_3_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x26010A4B), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010A4B,
REG64( EX_4_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x28010A4B), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010A4B,
REG64( EX_5_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x2A010A4B), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010A4B,
REG64( EX_6_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x2C010A4B), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010A4B,
REG64( EX_7_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x2E010A4B), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010A4B,
REG64( EX_8_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x30010A4B), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010A4B,
REG64( EX_9_L2_RECOV_FWD_PROG_CTRL                             , RULL(0x32010A4B), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010A4B,
REG64( EX_L2_RECOV_FWD_PROG_CTRL                               , RULL(0x20010A4B), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010A4B,

REG64( C_RECOV_INTERRUPT_REG                                   , RULL(0x200F001B), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_RECOV_INTERRUPT_REG                                 , RULL(0x200F001B), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_RECOV_INTERRUPT_REG                                 , RULL(0x210F001B), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_RECOV_INTERRUPT_REG                                 , RULL(0x220F001B), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_RECOV_INTERRUPT_REG                                 , RULL(0x230F001B), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_RECOV_INTERRUPT_REG                                 , RULL(0x240F001B), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_RECOV_INTERRUPT_REG                                 , RULL(0x250F001B), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_RECOV_INTERRUPT_REG                                 , RULL(0x260F001B), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_RECOV_INTERRUPT_REG                                 , RULL(0x270F001B), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_RECOV_INTERRUPT_REG                                 , RULL(0x280F001B), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_RECOV_INTERRUPT_REG                                 , RULL(0x290F001B), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_RECOV_INTERRUPT_REG                                , RULL(0x2A0F001B), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_RECOV_INTERRUPT_REG                                , RULL(0x2B0F001B), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_RECOV_INTERRUPT_REG                                , RULL(0x2C0F001B), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_RECOV_INTERRUPT_REG                                , RULL(0x2D0F001B), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_RECOV_INTERRUPT_REG                                , RULL(0x2E0F001B), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_RECOV_INTERRUPT_REG                                , RULL(0x2F0F001B), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_RECOV_INTERRUPT_REG                                , RULL(0x300F001B), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_RECOV_INTERRUPT_REG                                , RULL(0x310F001B), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_RECOV_INTERRUPT_REG                                , RULL(0x320F001B), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_RECOV_INTERRUPT_REG                                , RULL(0x330F001B), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_RECOV_INTERRUPT_REG                                , RULL(0x340F001B), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_RECOV_INTERRUPT_REG                                , RULL(0x350F001B), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_RECOV_INTERRUPT_REG                                , RULL(0x360F001B), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_RECOV_INTERRUPT_REG                                , RULL(0x370F001B), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_RECOV_INTERRUPT_REG                                  , RULL(0x100F001B), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_RECOV_INTERRUPT_REG                                , RULL(0x100F001B), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_RECOV_INTERRUPT_REG                                , RULL(0x110F001B), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_RECOV_INTERRUPT_REG                                , RULL(0x120F001B), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_RECOV_INTERRUPT_REG                                , RULL(0x130F001B), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_RECOV_INTERRUPT_REG                                , RULL(0x140F001B), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_RECOV_INTERRUPT_REG                                , RULL(0x150F001B), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_RECOV_INTERRUPT_REG                                  , RULL(0x200F001B), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F001B,
REG64( EX_0_RECOV_INTERRUPT_REG                                , RULL(0x200F001B), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F001B,
REG64( EX_1_RECOV_INTERRUPT_REG                                , RULL(0x230F001B), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F001B,
REG64( EX_2_RECOV_INTERRUPT_REG                                , RULL(0x240F001B), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F001B,
REG64( EX_3_RECOV_INTERRUPT_REG                                , RULL(0x260F001B), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F001B,
REG64( EX_4_RECOV_INTERRUPT_REG                                , RULL(0x280F001B), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F001B,
REG64( EX_5_RECOV_INTERRUPT_REG                                , RULL(0x2A0F001B), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F001B,
REG64( EX_6_RECOV_INTERRUPT_REG                                , RULL(0x2C0F001B), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F001B,
REG64( EX_7_RECOV_INTERRUPT_REG                                , RULL(0x2E0F001B), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F001B,
REG64( EX_8_RECOV_INTERRUPT_REG                                , RULL(0x300F001B), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F001B,
REG64( EX_9_RECOV_INTERRUPT_REG                                , RULL(0x320F001B), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F001B,
REG64( EX_10_RECOV_INTERRUPT_REG                               , RULL(0x340F001B), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F001B,
REG64( EX_11_RECOV_INTERRUPT_REG                               , RULL(0x360F001B), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F001B,

REG64( PEC_0_RECOV_INTERRUPT_REG                               , RULL(0x0D0F001B), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_RECOV_INTERRUPT_REG                               , RULL(0x0E0F001B), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_RECOV_INTERRUPT_REG                               , RULL(0x0F0F001B), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_RECOV_THOLD                                           , RULL(0x20010A4C), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_RECOV_THOLD                                         , RULL(0x20010A4C), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_RECOV_THOLD                                         , RULL(0x21010A4C), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_RECOV_THOLD                                         , RULL(0x22010A4C), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_RECOV_THOLD                                         , RULL(0x23010A4C), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_RECOV_THOLD                                         , RULL(0x24010A4C), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_RECOV_THOLD                                         , RULL(0x25010A4C), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_RECOV_THOLD                                         , RULL(0x26010A4C), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_RECOV_THOLD                                         , RULL(0x27010A4C), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_RECOV_THOLD                                         , RULL(0x28010A4C), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_RECOV_THOLD                                         , RULL(0x29010A4C), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_RECOV_THOLD                                        , RULL(0x2A010A4C), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_RECOV_THOLD                                        , RULL(0x2B010A4C), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_RECOV_THOLD                                        , RULL(0x2C010A4C), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_RECOV_THOLD                                        , RULL(0x2D010A4C), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_RECOV_THOLD                                        , RULL(0x2E010A4C), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_RECOV_THOLD                                        , RULL(0x2F010A4C), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_RECOV_THOLD                                        , RULL(0x30010A4C), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_RECOV_THOLD                                        , RULL(0x31010A4C), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_RECOV_THOLD                                        , RULL(0x32010A4C), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_RECOV_THOLD                                        , RULL(0x33010A4C), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_RECOV_THOLD                                        , RULL(0x34010A4C), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_RECOV_THOLD                                        , RULL(0x35010A4C), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_RECOV_THOLD                                        , RULL(0x36010A4C), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_RECOV_THOLD                                        , RULL(0x37010A4C), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_RECOV_THOLD                                     , RULL(0x20010A4C), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A4C,
REG64( EX_10_L2_RECOV_THOLD                                    , RULL(0x34010A4C), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010A4C,
REG64( EX_11_L2_RECOV_THOLD                                    , RULL(0x36010A4C), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010A4C,
REG64( EX_1_L2_RECOV_THOLD                                     , RULL(0x22010A4C), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010A4C,
REG64( EX_2_L2_RECOV_THOLD                                     , RULL(0x24010A4C), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010A4C,
REG64( EX_3_L2_RECOV_THOLD                                     , RULL(0x26010A4C), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010A4C,
REG64( EX_4_L2_RECOV_THOLD                                     , RULL(0x28010A4C), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010A4C,
REG64( EX_5_L2_RECOV_THOLD                                     , RULL(0x2A010A4C), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010A4C,
REG64( EX_6_L2_RECOV_THOLD                                     , RULL(0x2C010A4C), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010A4C,
REG64( EX_7_L2_RECOV_THOLD                                     , RULL(0x2E010A4C), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010A4C,
REG64( EX_8_L2_RECOV_THOLD                                     , RULL(0x30010A4C), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010A4C,
REG64( EX_9_L2_RECOV_THOLD                                     , RULL(0x32010A4C), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010A4C,
REG64( EX_L2_RECOV_THOLD                                       , RULL(0x20010A4C), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010A4C,

REG64( C_RESET_KEEPER                                          , RULL(0x20010A4A), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_RESET_KEEPER                                        , RULL(0x20010A4A), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_RESET_KEEPER                                        , RULL(0x21010A4A), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_RESET_KEEPER                                        , RULL(0x22010A4A), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_RESET_KEEPER                                        , RULL(0x23010A4A), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_RESET_KEEPER                                        , RULL(0x24010A4A), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_RESET_KEEPER                                        , RULL(0x25010A4A), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_RESET_KEEPER                                        , RULL(0x26010A4A), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_RESET_KEEPER                                        , RULL(0x27010A4A), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_RESET_KEEPER                                        , RULL(0x28010A4A), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_RESET_KEEPER                                        , RULL(0x29010A4A), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_RESET_KEEPER                                       , RULL(0x2A010A4A), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_RESET_KEEPER                                       , RULL(0x2B010A4A), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_RESET_KEEPER                                       , RULL(0x2C010A4A), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_RESET_KEEPER                                       , RULL(0x2D010A4A), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_RESET_KEEPER                                       , RULL(0x2E010A4A), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_RESET_KEEPER                                       , RULL(0x2F010A4A), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_RESET_KEEPER                                       , RULL(0x30010A4A), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_RESET_KEEPER                                       , RULL(0x31010A4A), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_RESET_KEEPER                                       , RULL(0x32010A4A), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_RESET_KEEPER                                       , RULL(0x33010A4A), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_RESET_KEEPER                                       , RULL(0x34010A4A), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_RESET_KEEPER                                       , RULL(0x35010A4A), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_RESET_KEEPER                                       , RULL(0x36010A4A), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_RESET_KEEPER                                       , RULL(0x37010A4A), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_RESET_KEEPER                                    , RULL(0x20010A4A), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010A4A,
REG64( EX_10_L2_RESET_KEEPER                                   , RULL(0x34010A4A), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010A4A,
REG64( EX_11_L2_RESET_KEEPER                                   , RULL(0x36010A4A), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010A4A,
REG64( EX_1_L2_RESET_KEEPER                                    , RULL(0x22010A4A), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010A4A,
REG64( EX_2_L2_RESET_KEEPER                                    , RULL(0x24010A4A), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010A4A,
REG64( EX_3_L2_RESET_KEEPER                                    , RULL(0x26010A4A), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010A4A,
REG64( EX_4_L2_RESET_KEEPER                                    , RULL(0x28010A4A), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010A4A,
REG64( EX_5_L2_RESET_KEEPER                                    , RULL(0x2A010A4A), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010A4A,
REG64( EX_6_L2_RESET_KEEPER                                    , RULL(0x2C010A4A), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010A4A,
REG64( EX_7_L2_RESET_KEEPER                                    , RULL(0x2E010A4A), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010A4A,
REG64( EX_8_L2_RESET_KEEPER                                    , RULL(0x30010A4A), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010A4A,
REG64( EX_9_L2_RESET_KEEPER                                    , RULL(0x32010A4A), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010A4A,
REG64( EX_L2_RESET_KEEPER                                      , RULL(0x20010A4A), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010A4A,

REG64( C_RFIR                                                  , RULL(0x20040001), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_RFIR                                                , RULL(0x20040001), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_RFIR                                                , RULL(0x21040001), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_RFIR                                                , RULL(0x22040001), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_RFIR                                                , RULL(0x23040001), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_RFIR                                                , RULL(0x24040001), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_RFIR                                                , RULL(0x25040001), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_RFIR                                                , RULL(0x26040001), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_RFIR                                                , RULL(0x27040001), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_RFIR                                                , RULL(0x28040001), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_RFIR                                                , RULL(0x29040001), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_RFIR                                               , RULL(0x2A040001), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_RFIR                                               , RULL(0x2B040001), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_RFIR                                               , RULL(0x2C040001), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_RFIR                                               , RULL(0x2D040001), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_RFIR                                               , RULL(0x2E040001), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_RFIR                                               , RULL(0x2F040001), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_RFIR                                               , RULL(0x30040001), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_RFIR                                               , RULL(0x31040001), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_RFIR                                               , RULL(0x32040001), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_RFIR                                               , RULL(0x33040001), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_RFIR                                               , RULL(0x34040001), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_RFIR                                               , RULL(0x35040001), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_RFIR                                               , RULL(0x36040001), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_RFIR                                               , RULL(0x37040001), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_RFIR                                                 , RULL(0x10040001), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_RFIR                                               , RULL(0x10040001), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_RFIR                                               , RULL(0x11040001), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_RFIR                                               , RULL(0x12040001), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_RFIR                                               , RULL(0x13040001), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_RFIR                                               , RULL(0x14040001), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_RFIR                                               , RULL(0x15040001), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_RFIR                                                 , RULL(0x20040001), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040001,
REG64( EX_0_RFIR                                               , RULL(0x20040001), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040001,
REG64( EX_1_RFIR                                               , RULL(0x22040001), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040001,
REG64( EX_2_RFIR                                               , RULL(0x24040001), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040001,
REG64( EX_3_RFIR                                               , RULL(0x26040001), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040001,
REG64( EX_4_RFIR                                               , RULL(0x28040001), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040001,
REG64( EX_5_RFIR                                               , RULL(0x2A040001), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040001,
REG64( EX_6_RFIR                                               , RULL(0x2C040001), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040001,
REG64( EX_7_RFIR                                               , RULL(0x2E040001), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040001,
REG64( EX_8_RFIR                                               , RULL(0x30040001), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040001,
REG64( EX_9_RFIR                                               , RULL(0x32040001), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040001,
REG64( EX_10_RFIR                                              , RULL(0x34040001), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040001,
REG64( EX_11_RFIR                                              , RULL(0x36040001), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040001,

REG64( PEC_0_RFIR                                              , RULL(0x0D040001), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_RFIR                                              , RULL(0x0E040001), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_RFIR                                              , RULL(0x0F040001), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_RING_FENCE_MASK_LATCH_REG                             , RULL(0x20010008), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_RING_FENCE_MASK_LATCH_REG                           , RULL(0x20010008), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_RING_FENCE_MASK_LATCH_REG                           , RULL(0x21010008), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_RING_FENCE_MASK_LATCH_REG                           , RULL(0x22010008), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_RING_FENCE_MASK_LATCH_REG                           , RULL(0x23010008), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_RING_FENCE_MASK_LATCH_REG                           , RULL(0x24010008), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_RING_FENCE_MASK_LATCH_REG                           , RULL(0x25010008), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_RING_FENCE_MASK_LATCH_REG                           , RULL(0x26010008), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_RING_FENCE_MASK_LATCH_REG                           , RULL(0x27010008), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_RING_FENCE_MASK_LATCH_REG                           , RULL(0x28010008), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_RING_FENCE_MASK_LATCH_REG                           , RULL(0x29010008), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2A010008), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2B010008), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2C010008), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2D010008), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2E010008), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2F010008), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_RING_FENCE_MASK_LATCH_REG                          , RULL(0x30010008), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_RING_FENCE_MASK_LATCH_REG                          , RULL(0x31010008), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_RING_FENCE_MASK_LATCH_REG                          , RULL(0x32010008), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_RING_FENCE_MASK_LATCH_REG                          , RULL(0x33010008), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_RING_FENCE_MASK_LATCH_REG                          , RULL(0x34010008), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_RING_FENCE_MASK_LATCH_REG                          , RULL(0x35010008), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_RING_FENCE_MASK_LATCH_REG                          , RULL(0x36010008), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_RING_FENCE_MASK_LATCH_REG                          , RULL(0x37010008), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_RING_FENCE_MASK_LATCH_REG                            , RULL(0x10010008), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_RING_FENCE_MASK_LATCH_REG                          , RULL(0x10010008), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_RING_FENCE_MASK_LATCH_REG                          , RULL(0x11010008), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_RING_FENCE_MASK_LATCH_REG                          , RULL(0x12010008), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_RING_FENCE_MASK_LATCH_REG                          , RULL(0x13010008), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_RING_FENCE_MASK_LATCH_REG                          , RULL(0x14010008), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_RING_FENCE_MASK_LATCH_REG                          , RULL(0x15010008), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_RING_FENCE_MASK_LATCH_REG                            , RULL(0x20010008), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010008,
REG64( EX_0_RING_FENCE_MASK_LATCH_REG                          , RULL(0x20010008), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010008,
REG64( EX_1_RING_FENCE_MASK_LATCH_REG                          , RULL(0x22010008), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010008,
REG64( EX_2_RING_FENCE_MASK_LATCH_REG                          , RULL(0x24010008), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010008,
REG64( EX_3_RING_FENCE_MASK_LATCH_REG                          , RULL(0x26010008), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010008,
REG64( EX_4_RING_FENCE_MASK_LATCH_REG                          , RULL(0x28010008), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010008,
REG64( EX_5_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2A010008), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010008,
REG64( EX_6_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2C010008), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010008,
REG64( EX_7_RING_FENCE_MASK_LATCH_REG                          , RULL(0x2E010008), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010008,
REG64( EX_8_RING_FENCE_MASK_LATCH_REG                          , RULL(0x30010008), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010008,
REG64( EX_9_RING_FENCE_MASK_LATCH_REG                          , RULL(0x32010008), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010008,
REG64( EX_10_RING_FENCE_MASK_LATCH_REG                         , RULL(0x34010008), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010008,
REG64( EX_11_RING_FENCE_MASK_LATCH_REG                         , RULL(0x36010008), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010008,

REG64( PEC_0_RING_FENCE_MASK_LATCH_REG                         , RULL(0x0D010008), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_RING_FENCE_MASK_LATCH_REG                         , RULL(0x0E010008), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_RING_FENCE_MASK_LATCH_REG                         , RULL(0x0F010008), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SCAN_REGION_TYPE                                      , RULL(0x20030005), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SCAN_REGION_TYPE                                    , RULL(0x20030005), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SCAN_REGION_TYPE                                    , RULL(0x21030005), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SCAN_REGION_TYPE                                    , RULL(0x22030005), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SCAN_REGION_TYPE                                    , RULL(0x23030005), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SCAN_REGION_TYPE                                    , RULL(0x24030005), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SCAN_REGION_TYPE                                    , RULL(0x25030005), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SCAN_REGION_TYPE                                    , RULL(0x26030005), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SCAN_REGION_TYPE                                    , RULL(0x27030005), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SCAN_REGION_TYPE                                    , RULL(0x28030005), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SCAN_REGION_TYPE                                    , RULL(0x29030005), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SCAN_REGION_TYPE                                   , RULL(0x2A030005), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SCAN_REGION_TYPE                                   , RULL(0x2B030005), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SCAN_REGION_TYPE                                   , RULL(0x2C030005), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SCAN_REGION_TYPE                                   , RULL(0x2D030005), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SCAN_REGION_TYPE                                   , RULL(0x2E030005), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SCAN_REGION_TYPE                                   , RULL(0x2F030005), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SCAN_REGION_TYPE                                   , RULL(0x30030005), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SCAN_REGION_TYPE                                   , RULL(0x31030005), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SCAN_REGION_TYPE                                   , RULL(0x32030005), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SCAN_REGION_TYPE                                   , RULL(0x33030005), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SCAN_REGION_TYPE                                   , RULL(0x34030005), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SCAN_REGION_TYPE                                   , RULL(0x35030005), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SCAN_REGION_TYPE                                   , RULL(0x36030005), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SCAN_REGION_TYPE                                   , RULL(0x37030005), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SCAN_REGION_TYPE                                     , RULL(0x10030005), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SCAN_REGION_TYPE                                   , RULL(0x10030005), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SCAN_REGION_TYPE                                   , RULL(0x11030005), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SCAN_REGION_TYPE                                   , RULL(0x12030005), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SCAN_REGION_TYPE                                   , RULL(0x13030005), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SCAN_REGION_TYPE                                   , RULL(0x14030005), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SCAN_REGION_TYPE                                   , RULL(0x15030005), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SCAN_REGION_TYPE                                     , RULL(0x20030005), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030005,
REG64( EX_0_SCAN_REGION_TYPE                                   , RULL(0x20030005), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030005,
REG64( EX_1_SCAN_REGION_TYPE                                   , RULL(0x22030005), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030005,
REG64( EX_2_SCAN_REGION_TYPE                                   , RULL(0x24030005), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030005,
REG64( EX_3_SCAN_REGION_TYPE                                   , RULL(0x26030005), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030005,
REG64( EX_4_SCAN_REGION_TYPE                                   , RULL(0x28030005), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030005,
REG64( EX_5_SCAN_REGION_TYPE                                   , RULL(0x2A030005), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030005,
REG64( EX_6_SCAN_REGION_TYPE                                   , RULL(0x2C030005), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030005,
REG64( EX_7_SCAN_REGION_TYPE                                   , RULL(0x2E030005), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030005,
REG64( EX_8_SCAN_REGION_TYPE                                   , RULL(0x30030005), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030005,
REG64( EX_9_SCAN_REGION_TYPE                                   , RULL(0x32030005), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030005,
REG64( EX_10_SCAN_REGION_TYPE                                  , RULL(0x34030005), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030005,
REG64( EX_11_SCAN_REGION_TYPE                                  , RULL(0x36030005), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030005,

REG64( PEC_0_SCAN_REGION_TYPE                                  , RULL(0x0D030005), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SCAN_REGION_TYPE                                  , RULL(0x0E030005), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SCAN_REGION_TYPE                                  , RULL(0x0F030005), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SCOMC                                                 , RULL(0x20010A80), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_SCOMC                                               , RULL(0x20010A80), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_SCOMC                                               , RULL(0x21010A80), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_SCOMC                                               , RULL(0x22010A80), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_SCOMC                                               , RULL(0x23010A80), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_SCOMC                                               , RULL(0x24010A80), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_SCOMC                                               , RULL(0x25010A80), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_SCOMC                                               , RULL(0x26010A80), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_SCOMC                                               , RULL(0x27010A80), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_SCOMC                                               , RULL(0x28010A80), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_SCOMC                                               , RULL(0x29010A80), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_SCOMC                                              , RULL(0x2A010A80), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_SCOMC                                              , RULL(0x2B010A80), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_SCOMC                                              , RULL(0x2C010A80), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_SCOMC                                              , RULL(0x2D010A80), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_SCOMC                                              , RULL(0x2E010A80), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_SCOMC                                              , RULL(0x2F010A80), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_SCOMC                                              , RULL(0x30010A80), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_SCOMC                                              , RULL(0x31010A80), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_SCOMC                                              , RULL(0x32010A80), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_SCOMC                                              , RULL(0x33010A80), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_SCOMC                                              , RULL(0x34010A80), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_SCOMC                                              , RULL(0x35010A80), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_SCOMC                                              , RULL(0x36010A80), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_SCOMC                                              , RULL(0x37010A80), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_SCOMC                                           , RULL(0x21010A80), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A80,
REG64( EX_10_L2_SCOMC                                          , RULL(0x35010A80), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010A80,
REG64( EX_11_L2_SCOMC                                          , RULL(0x37010A80), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010A80,
REG64( EX_1_L2_SCOMC                                           , RULL(0x23010A80), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010A80,
REG64( EX_2_L2_SCOMC                                           , RULL(0x25010A80), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010A80,
REG64( EX_3_L2_SCOMC                                           , RULL(0x27010A80), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010A80,
REG64( EX_4_L2_SCOMC                                           , RULL(0x29010A80), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010A80,
REG64( EX_5_L2_SCOMC                                           , RULL(0x2B010A80), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010A80,
REG64( EX_6_L2_SCOMC                                           , RULL(0x2D010A80), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010A80,
REG64( EX_7_L2_SCOMC                                           , RULL(0x2F010A80), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010A80,
REG64( EX_8_L2_SCOMC                                           , RULL(0x31010A80), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010A80,
REG64( EX_9_L2_SCOMC                                           , RULL(0x33010A80), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010A80,
REG64( EX_L2_SCOMC                                             , RULL(0x21010A80), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A80,

REG64( C_SCR0                                                  , RULL(0x20010A86), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_SCR0                                                , RULL(0x20010A86), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_SCR0                                                , RULL(0x21010A86), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_SCR0                                                , RULL(0x22010A86), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_SCR0                                                , RULL(0x23010A86), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_SCR0                                                , RULL(0x24010A86), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_SCR0                                                , RULL(0x25010A86), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_SCR0                                                , RULL(0x26010A86), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_SCR0                                                , RULL(0x27010A86), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_SCR0                                                , RULL(0x28010A86), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_SCR0                                                , RULL(0x29010A86), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_SCR0                                               , RULL(0x2A010A86), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_SCR0                                               , RULL(0x2B010A86), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_SCR0                                               , RULL(0x2C010A86), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_SCR0                                               , RULL(0x2D010A86), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_SCR0                                               , RULL(0x2E010A86), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_SCR0                                               , RULL(0x2F010A86), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_SCR0                                               , RULL(0x30010A86), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_SCR0                                               , RULL(0x31010A86), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_SCR0                                               , RULL(0x32010A86), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_SCR0                                               , RULL(0x33010A86), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_SCR0                                               , RULL(0x34010A86), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_SCR0                                               , RULL(0x35010A86), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_SCR0                                               , RULL(0x36010A86), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_SCR0                                               , RULL(0x37010A86), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_SCR0                                            , RULL(0x21010A86), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A86,
REG64( EX_10_L2_SCR0                                           , RULL(0x35010A86), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010A86,
REG64( EX_11_L2_SCR0                                           , RULL(0x37010A86), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010A86,
REG64( EX_1_L2_SCR0                                            , RULL(0x23010A86), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010A86,
REG64( EX_2_L2_SCR0                                            , RULL(0x25010A86), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010A86,
REG64( EX_3_L2_SCR0                                            , RULL(0x27010A86), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010A86,
REG64( EX_4_L2_SCR0                                            , RULL(0x29010A86), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010A86,
REG64( EX_5_L2_SCR0                                            , RULL(0x2B010A86), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010A86,
REG64( EX_6_L2_SCR0                                            , RULL(0x2D010A86), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010A86,
REG64( EX_7_L2_SCR0                                            , RULL(0x2F010A86), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010A86,
REG64( EX_8_L2_SCR0                                            , RULL(0x31010A86), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010A86,
REG64( EX_9_L2_SCR0                                            , RULL(0x33010A86), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010A86,
REG64( EX_L2_SCR0                                              , RULL(0x21010A86), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A86,

REG64( C_SCR1                                                  , RULL(0x20010A87), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_SCR1                                                , RULL(0x20010A87), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_SCR1                                                , RULL(0x21010A87), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_SCR1                                                , RULL(0x22010A87), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_SCR1                                                , RULL(0x23010A87), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_SCR1                                                , RULL(0x24010A87), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_SCR1                                                , RULL(0x25010A87), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_SCR1                                                , RULL(0x26010A87), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_SCR1                                                , RULL(0x27010A87), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_SCR1                                                , RULL(0x28010A87), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_SCR1                                                , RULL(0x29010A87), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_SCR1                                               , RULL(0x2A010A87), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_SCR1                                               , RULL(0x2B010A87), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_SCR1                                               , RULL(0x2C010A87), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_SCR1                                               , RULL(0x2D010A87), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_SCR1                                               , RULL(0x2E010A87), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_SCR1                                               , RULL(0x2F010A87), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_SCR1                                               , RULL(0x30010A87), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_SCR1                                               , RULL(0x31010A87), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_SCR1                                               , RULL(0x32010A87), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_SCR1                                               , RULL(0x33010A87), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_SCR1                                               , RULL(0x34010A87), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_SCR1                                               , RULL(0x35010A87), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_SCR1                                               , RULL(0x36010A87), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_SCR1                                               , RULL(0x37010A87), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_SCR1                                            , RULL(0x21010A87), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A87,
REG64( EX_10_L2_SCR1                                           , RULL(0x35010A87), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010A87,
REG64( EX_11_L2_SCR1                                           , RULL(0x37010A87), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010A87,
REG64( EX_1_L2_SCR1                                            , RULL(0x23010A87), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010A87,
REG64( EX_2_L2_SCR1                                            , RULL(0x25010A87), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010A87,
REG64( EX_3_L2_SCR1                                            , RULL(0x27010A87), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010A87,
REG64( EX_4_L2_SCR1                                            , RULL(0x29010A87), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010A87,
REG64( EX_5_L2_SCR1                                            , RULL(0x2B010A87), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010A87,
REG64( EX_6_L2_SCR1                                            , RULL(0x2D010A87), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010A87,
REG64( EX_7_L2_SCR1                                            , RULL(0x2F010A87), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010A87,
REG64( EX_8_L2_SCR1                                            , RULL(0x31010A87), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010A87,
REG64( EX_9_L2_SCR1                                            , RULL(0x33010A87), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010A87,
REG64( EX_L2_SCR1                                              , RULL(0x21010A87), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A87,

REG64( C_SCR2                                                  , RULL(0x20010A88), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_SCR2                                                , RULL(0x20010A88), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_SCR2                                                , RULL(0x21010A88), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_SCR2                                                , RULL(0x22010A88), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_SCR2                                                , RULL(0x23010A88), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_SCR2                                                , RULL(0x24010A88), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_SCR2                                                , RULL(0x25010A88), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_SCR2                                                , RULL(0x26010A88), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_SCR2                                                , RULL(0x27010A88), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_SCR2                                                , RULL(0x28010A88), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_SCR2                                                , RULL(0x29010A88), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_SCR2                                               , RULL(0x2A010A88), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_SCR2                                               , RULL(0x2B010A88), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_SCR2                                               , RULL(0x2C010A88), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_SCR2                                               , RULL(0x2D010A88), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_SCR2                                               , RULL(0x2E010A88), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_SCR2                                               , RULL(0x2F010A88), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_SCR2                                               , RULL(0x30010A88), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_SCR2                                               , RULL(0x31010A88), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_SCR2                                               , RULL(0x32010A88), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_SCR2                                               , RULL(0x33010A88), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_SCR2                                               , RULL(0x34010A88), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_SCR2                                               , RULL(0x35010A88), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_SCR2                                               , RULL(0x36010A88), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_SCR2                                               , RULL(0x37010A88), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_SCR2                                                 , RULL(0x21010A88), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A88,
REG64( EX_0_SCR2                                               , RULL(0x21010A88), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A88,
REG64( EX_1_SCR2                                               , RULL(0x23010A88), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010A88,
REG64( EX_2_SCR2                                               , RULL(0x25010A88), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010A88,
REG64( EX_3_SCR2                                               , RULL(0x27010A88), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010A88,
REG64( EX_4_SCR2                                               , RULL(0x29010A88), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010A88,
REG64( EX_5_SCR2                                               , RULL(0x2B010A88), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010A88,
REG64( EX_6_SCR2                                               , RULL(0x2D010A88), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010A88,
REG64( EX_7_SCR2                                               , RULL(0x2F010A88), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010A88,
REG64( EX_8_SCR2                                               , RULL(0x31010A88), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010A88,
REG64( EX_9_SCR2                                               , RULL(0x33010A88), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010A88,
REG64( EX_10_SCR2                                              , RULL(0x35010A88), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010A88,
REG64( EX_11_SCR2                                              , RULL(0x37010A88), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010A88,

REG64( C_SCR3                                                  , RULL(0x20010A89), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_SCR3                                                , RULL(0x20010A89), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_SCR3                                                , RULL(0x21010A89), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_SCR3                                                , RULL(0x22010A89), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_SCR3                                                , RULL(0x23010A89), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_SCR3                                                , RULL(0x24010A89), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_SCR3                                                , RULL(0x25010A89), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_SCR3                                                , RULL(0x26010A89), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_SCR3                                                , RULL(0x27010A89), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_SCR3                                                , RULL(0x28010A89), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_SCR3                                                , RULL(0x29010A89), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_SCR3                                               , RULL(0x2A010A89), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_SCR3                                               , RULL(0x2B010A89), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_SCR3                                               , RULL(0x2C010A89), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_SCR3                                               , RULL(0x2D010A89), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_SCR3                                               , RULL(0x2E010A89), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_SCR3                                               , RULL(0x2F010A89), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_SCR3                                               , RULL(0x30010A89), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_SCR3                                               , RULL(0x31010A89), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_SCR3                                               , RULL(0x32010A89), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_SCR3                                               , RULL(0x33010A89), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_SCR3                                               , RULL(0x34010A89), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_SCR3                                               , RULL(0x35010A89), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_SCR3                                               , RULL(0x36010A89), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_SCR3                                               , RULL(0x37010A89), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_SCR3                                                 , RULL(0x21010A89), SH_UNT_EX       ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A89,
REG64( EX_0_SCR3                                               , RULL(0x21010A89), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010A89,
REG64( EX_1_SCR3                                               , RULL(0x23010A89), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010A89,
REG64( EX_2_SCR3                                               , RULL(0x25010A89), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010A89,
REG64( EX_3_SCR3                                               , RULL(0x27010A89), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010A89,
REG64( EX_4_SCR3                                               , RULL(0x29010A89), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010A89,
REG64( EX_5_SCR3                                               , RULL(0x2B010A89), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010A89,
REG64( EX_6_SCR3                                               , RULL(0x2D010A89), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010A89,
REG64( EX_7_SCR3                                               , RULL(0x2F010A89), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010A89,
REG64( EX_8_SCR3                                               , RULL(0x31010A89), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010A89,
REG64( EX_9_SCR3                                               , RULL(0x33010A89), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010A89,
REG64( EX_10_SCR3                                              , RULL(0x35010A89), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010A89,
REG64( EX_11_SCR3                                              , RULL(0x37010A89), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010A89,

REG64( C_SECURE_PIB_MASTER_ID_REG                              , RULL(0x20010009), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SECURE_PIB_MASTER_ID_REG                            , RULL(0x20010009), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SECURE_PIB_MASTER_ID_REG                            , RULL(0x21010009), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SECURE_PIB_MASTER_ID_REG                            , RULL(0x22010009), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SECURE_PIB_MASTER_ID_REG                            , RULL(0x23010009), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SECURE_PIB_MASTER_ID_REG                            , RULL(0x24010009), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SECURE_PIB_MASTER_ID_REG                            , RULL(0x25010009), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SECURE_PIB_MASTER_ID_REG                            , RULL(0x26010009), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SECURE_PIB_MASTER_ID_REG                            , RULL(0x27010009), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SECURE_PIB_MASTER_ID_REG                            , RULL(0x28010009), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SECURE_PIB_MASTER_ID_REG                            , RULL(0x29010009), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2A010009), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2B010009), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2C010009), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2D010009), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2E010009), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2F010009), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SECURE_PIB_MASTER_ID_REG                           , RULL(0x30010009), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SECURE_PIB_MASTER_ID_REG                           , RULL(0x31010009), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SECURE_PIB_MASTER_ID_REG                           , RULL(0x32010009), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SECURE_PIB_MASTER_ID_REG                           , RULL(0x33010009), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SECURE_PIB_MASTER_ID_REG                           , RULL(0x34010009), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SECURE_PIB_MASTER_ID_REG                           , RULL(0x35010009), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SECURE_PIB_MASTER_ID_REG                           , RULL(0x36010009), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SECURE_PIB_MASTER_ID_REG                           , RULL(0x37010009), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SECURE_PIB_MASTER_ID_REG                             , RULL(0x10010009), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SECURE_PIB_MASTER_ID_REG                           , RULL(0x10010009), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SECURE_PIB_MASTER_ID_REG                           , RULL(0x11010009), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SECURE_PIB_MASTER_ID_REG                           , RULL(0x12010009), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SECURE_PIB_MASTER_ID_REG                           , RULL(0x13010009), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SECURE_PIB_MASTER_ID_REG                           , RULL(0x14010009), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SECURE_PIB_MASTER_ID_REG                           , RULL(0x15010009), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SECURE_PIB_MASTER_ID_REG                             , RULL(0x20010009), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010009,
REG64( EX_0_SECURE_PIB_MASTER_ID_REG                           , RULL(0x20010009), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010009,
REG64( EX_1_SECURE_PIB_MASTER_ID_REG                           , RULL(0x22010009), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010009,
REG64( EX_2_SECURE_PIB_MASTER_ID_REG                           , RULL(0x24010009), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010009,
REG64( EX_3_SECURE_PIB_MASTER_ID_REG                           , RULL(0x26010009), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010009,
REG64( EX_4_SECURE_PIB_MASTER_ID_REG                           , RULL(0x28010009), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010009,
REG64( EX_5_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2A010009), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010009,
REG64( EX_6_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2C010009), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010009,
REG64( EX_7_SECURE_PIB_MASTER_ID_REG                           , RULL(0x2E010009), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010009,
REG64( EX_8_SECURE_PIB_MASTER_ID_REG                           , RULL(0x30010009), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010009,
REG64( EX_9_SECURE_PIB_MASTER_ID_REG                           , RULL(0x32010009), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010009,
REG64( EX_10_SECURE_PIB_MASTER_ID_REG                          , RULL(0x34010009), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010009,
REG64( EX_11_SECURE_PIB_MASTER_ID_REG                          , RULL(0x36010009), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010009,

REG64( PEC_0_SECURE_PIB_MASTER_ID_REG                          , RULL(0x0D010009), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SECURE_PIB_MASTER_ID_REG                          , RULL(0x0E010009), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SECURE_PIB_MASTER_ID_REG                          , RULL(0x0F010009), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SHID0                                                 , RULL(0x20010AA5), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_SHID0                                               , RULL(0x20010AA5), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_SHID0                                               , RULL(0x21010AA5), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_SHID0                                               , RULL(0x22010AA5), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_SHID0                                               , RULL(0x23010AA5), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_SHID0                                               , RULL(0x24010AA5), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_SHID0                                               , RULL(0x25010AA5), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_SHID0                                               , RULL(0x26010AA5), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_SHID0                                               , RULL(0x27010AA5), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_SHID0                                               , RULL(0x28010AA5), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_SHID0                                               , RULL(0x29010AA5), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_SHID0                                              , RULL(0x2A010AA5), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_SHID0                                              , RULL(0x2B010AA5), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_SHID0                                              , RULL(0x2C010AA5), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_SHID0                                              , RULL(0x2D010AA5), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_SHID0                                              , RULL(0x2E010AA5), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_SHID0                                              , RULL(0x2F010AA5), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_SHID0                                              , RULL(0x30010AA5), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_SHID0                                              , RULL(0x31010AA5), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_SHID0                                              , RULL(0x32010AA5), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_SHID0                                              , RULL(0x33010AA5), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_SHID0                                              , RULL(0x34010AA5), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_SHID0                                              , RULL(0x35010AA5), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_SHID0                                              , RULL(0x36010AA5), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_SHID0                                              , RULL(0x37010AA5), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_SHID0                                           , RULL(0x20010AA5), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AA5,
REG64( EX_10_L2_SHID0                                          , RULL(0x34010AA5), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 35010AA5,
REG64( EX_11_L2_SHID0                                          , RULL(0x36010AA5), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 37010AA5,
REG64( EX_1_L2_SHID0                                           , RULL(0x22010AA5), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 23010AA5,
REG64( EX_2_L2_SHID0                                           , RULL(0x24010AA5), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 25010AA5,
REG64( EX_3_L2_SHID0                                           , RULL(0x26010AA5), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 27010AA5,
REG64( EX_4_L2_SHID0                                           , RULL(0x28010AA5), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 29010AA5,
REG64( EX_5_L2_SHID0                                           , RULL(0x2A010AA5), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2B010AA5,
REG64( EX_6_L2_SHID0                                           , RULL(0x2C010AA5), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2D010AA5,
REG64( EX_7_L2_SHID0                                           , RULL(0x2E010AA5), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2F010AA5,
REG64( EX_8_L2_SHID0                                           , RULL(0x30010AA5), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 31010AA5,
REG64( EX_9_L2_SHID0                                           , RULL(0x32010AA5), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 33010AA5,
REG64( EX_L2_SHID0                                             , RULL(0x20010AA5), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 21010AA5,

REG64( C_SIER_MASK                                             , RULL(0x20010AAE), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SIER_MASK                                           , RULL(0x20010AAE), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SIER_MASK                                           , RULL(0x21010AAE), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SIER_MASK                                           , RULL(0x22010AAE), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SIER_MASK                                           , RULL(0x23010AAE), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SIER_MASK                                           , RULL(0x24010AAE), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SIER_MASK                                           , RULL(0x25010AAE), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SIER_MASK                                           , RULL(0x26010AAE), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SIER_MASK                                           , RULL(0x27010AAE), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SIER_MASK                                           , RULL(0x28010AAE), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SIER_MASK                                           , RULL(0x29010AAE), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SIER_MASK                                          , RULL(0x2A010AAE), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SIER_MASK                                          , RULL(0x2B010AAE), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SIER_MASK                                          , RULL(0x2C010AAE), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SIER_MASK                                          , RULL(0x2D010AAE), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SIER_MASK                                          , RULL(0x2E010AAE), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SIER_MASK                                          , RULL(0x2F010AAE), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SIER_MASK                                          , RULL(0x30010AAE), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SIER_MASK                                          , RULL(0x31010AAE), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SIER_MASK                                          , RULL(0x32010AAE), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SIER_MASK                                          , RULL(0x33010AAE), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SIER_MASK                                          , RULL(0x34010AAE), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SIER_MASK                                          , RULL(0x35010AAE), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SIER_MASK                                          , RULL(0x36010AAE), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SIER_MASK                                          , RULL(0x37010AAE), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_SIER_MASK                                            , RULL(0x20010AAE), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010AAE,
REG64( EX_0_SIER_MASK                                          , RULL(0x20010AAE), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010AAE,
REG64( EX_1_SIER_MASK                                          , RULL(0x22010AAE), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010AAE,
REG64( EX_2_SIER_MASK                                          , RULL(0x24010AAE), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010AAE,
REG64( EX_3_SIER_MASK                                          , RULL(0x26010AAE), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010AAE,
REG64( EX_4_SIER_MASK                                          , RULL(0x28010AAE), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010AAE,
REG64( EX_5_SIER_MASK                                          , RULL(0x2A010AAE), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010AAE,
REG64( EX_6_SIER_MASK                                          , RULL(0x2C010AAE), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010AAE,
REG64( EX_7_SIER_MASK                                          , RULL(0x2E010AAE), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010AAE,
REG64( EX_8_SIER_MASK                                          , RULL(0x30010AAE), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010AAE,
REG64( EX_9_SIER_MASK                                          , RULL(0x32010AAE), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010AAE,
REG64( EX_10_SIER_MASK                                         , RULL(0x34010AAE), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010AAE,
REG64( EX_11_SIER_MASK                                         , RULL(0x36010AAE), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010AAE,

REG64( C_SKITTER_CLKSRC_REG                                    , RULL(0x20050016), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SKITTER_CLKSRC_REG                                  , RULL(0x20050016), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SKITTER_CLKSRC_REG                                  , RULL(0x21050016), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SKITTER_CLKSRC_REG                                  , RULL(0x22050016), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SKITTER_CLKSRC_REG                                  , RULL(0x23050016), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SKITTER_CLKSRC_REG                                  , RULL(0x24050016), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SKITTER_CLKSRC_REG                                  , RULL(0x25050016), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SKITTER_CLKSRC_REG                                  , RULL(0x26050016), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SKITTER_CLKSRC_REG                                  , RULL(0x27050016), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SKITTER_CLKSRC_REG                                  , RULL(0x28050016), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SKITTER_CLKSRC_REG                                  , RULL(0x29050016), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SKITTER_CLKSRC_REG                                 , RULL(0x2A050016), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SKITTER_CLKSRC_REG                                 , RULL(0x2B050016), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SKITTER_CLKSRC_REG                                 , RULL(0x2C050016), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SKITTER_CLKSRC_REG                                 , RULL(0x2D050016), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SKITTER_CLKSRC_REG                                 , RULL(0x2E050016), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SKITTER_CLKSRC_REG                                 , RULL(0x2F050016), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SKITTER_CLKSRC_REG                                 , RULL(0x30050016), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SKITTER_CLKSRC_REG                                 , RULL(0x31050016), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SKITTER_CLKSRC_REG                                 , RULL(0x32050016), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SKITTER_CLKSRC_REG                                 , RULL(0x33050016), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SKITTER_CLKSRC_REG                                 , RULL(0x34050016), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SKITTER_CLKSRC_REG                                 , RULL(0x35050016), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SKITTER_CLKSRC_REG                                 , RULL(0x36050016), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SKITTER_CLKSRC_REG                                 , RULL(0x37050016), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SKITTER_CLKSRC_REG                                   , RULL(0x10050016), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SKITTER_CLKSRC_REG                                 , RULL(0x10050016), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SKITTER_CLKSRC_REG                                 , RULL(0x11050016), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SKITTER_CLKSRC_REG                                 , RULL(0x12050016), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SKITTER_CLKSRC_REG                                 , RULL(0x13050016), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SKITTER_CLKSRC_REG                                 , RULL(0x14050016), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SKITTER_CLKSRC_REG                                 , RULL(0x15050016), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SKITTER_CLKSRC_REG                                   , RULL(0x20050016), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21050016,
REG64( EX_0_SKITTER_CLKSRC_REG                                 , RULL(0x20050016), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21050016,
REG64( EX_1_SKITTER_CLKSRC_REG                                 , RULL(0x22050016), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23050016,
REG64( EX_2_SKITTER_CLKSRC_REG                                 , RULL(0x24050016), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25050016,
REG64( EX_3_SKITTER_CLKSRC_REG                                 , RULL(0x26050016), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27050016,
REG64( EX_4_SKITTER_CLKSRC_REG                                 , RULL(0x28050016), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29050016,
REG64( EX_5_SKITTER_CLKSRC_REG                                 , RULL(0x2A050016), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B050016,
REG64( EX_6_SKITTER_CLKSRC_REG                                 , RULL(0x2C050016), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D050016,
REG64( EX_7_SKITTER_CLKSRC_REG                                 , RULL(0x2E050016), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F050016,
REG64( EX_8_SKITTER_CLKSRC_REG                                 , RULL(0x30050016), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31050016,
REG64( EX_9_SKITTER_CLKSRC_REG                                 , RULL(0x32050016), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33050016,
REG64( EX_10_SKITTER_CLKSRC_REG                                , RULL(0x34050016), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35050016,
REG64( EX_11_SKITTER_CLKSRC_REG                                , RULL(0x36050016), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37050016,

REG64( PEC_0_SKITTER_CLKSRC_REG                                , RULL(0x0D050016), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SKITTER_CLKSRC_REG                                , RULL(0x0E050016), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SKITTER_CLKSRC_REG                                , RULL(0x0F050016), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SKITTER_DATA0                                         , RULL(0x20050019), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_SKITTER_DATA0                                       , RULL(0x20050019), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_SKITTER_DATA0                                       , RULL(0x21050019), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_SKITTER_DATA0                                       , RULL(0x22050019), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_SKITTER_DATA0                                       , RULL(0x23050019), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_SKITTER_DATA0                                       , RULL(0x24050019), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_SKITTER_DATA0                                       , RULL(0x25050019), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_SKITTER_DATA0                                       , RULL(0x26050019), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_SKITTER_DATA0                                       , RULL(0x27050019), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_SKITTER_DATA0                                       , RULL(0x28050019), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_SKITTER_DATA0                                       , RULL(0x29050019), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_SKITTER_DATA0                                      , RULL(0x2A050019), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_SKITTER_DATA0                                      , RULL(0x2B050019), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_SKITTER_DATA0                                      , RULL(0x2C050019), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_SKITTER_DATA0                                      , RULL(0x2D050019), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_SKITTER_DATA0                                      , RULL(0x2E050019), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_SKITTER_DATA0                                      , RULL(0x2F050019), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_SKITTER_DATA0                                      , RULL(0x30050019), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_SKITTER_DATA0                                      , RULL(0x31050019), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_SKITTER_DATA0                                      , RULL(0x32050019), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_SKITTER_DATA0                                      , RULL(0x33050019), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_SKITTER_DATA0                                      , RULL(0x34050019), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_SKITTER_DATA0                                      , RULL(0x35050019), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_SKITTER_DATA0                                      , RULL(0x36050019), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_SKITTER_DATA0                                      , RULL(0x37050019), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_SKITTER_DATA0                                        , RULL(0x10050019), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_SKITTER_DATA0                                      , RULL(0x10050019), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_SKITTER_DATA0                                      , RULL(0x11050019), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_SKITTER_DATA0                                      , RULL(0x12050019), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_SKITTER_DATA0                                      , RULL(0x13050019), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_SKITTER_DATA0                                      , RULL(0x14050019), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_SKITTER_DATA0                                      , RULL(0x15050019), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_SKITTER_DATA0                                        , RULL(0x20050019), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 21050019,
REG64( EX_0_SKITTER_DATA0                                      , RULL(0x20050019), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 21050019,
REG64( EX_1_SKITTER_DATA0                                      , RULL(0x22050019), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 23050019,
REG64( EX_2_SKITTER_DATA0                                      , RULL(0x24050019), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 25050019,
REG64( EX_3_SKITTER_DATA0                                      , RULL(0x26050019), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 27050019,
REG64( EX_4_SKITTER_DATA0                                      , RULL(0x28050019), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 29050019,
REG64( EX_5_SKITTER_DATA0                                      , RULL(0x2A050019), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B050019,
REG64( EX_6_SKITTER_DATA0                                      , RULL(0x2C050019), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D050019,
REG64( EX_7_SKITTER_DATA0                                      , RULL(0x2E050019), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F050019,
REG64( EX_8_SKITTER_DATA0                                      , RULL(0x30050019), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 31050019,
REG64( EX_9_SKITTER_DATA0                                      , RULL(0x32050019), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 33050019,
REG64( EX_10_SKITTER_DATA0                                     , RULL(0x34050019), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 35050019,
REG64( EX_11_SKITTER_DATA0                                     , RULL(0x36050019), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 37050019,

REG64( PEC_0_SKITTER_DATA0                                     , RULL(0x0D050019), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_SKITTER_DATA0                                     , RULL(0x0E050019), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_SKITTER_DATA0                                     , RULL(0x0F050019), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_SKITTER_DATA1                                         , RULL(0x2005001A), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_SKITTER_DATA1                                       , RULL(0x2005001A), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_SKITTER_DATA1                                       , RULL(0x2105001A), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_SKITTER_DATA1                                       , RULL(0x2205001A), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_SKITTER_DATA1                                       , RULL(0x2305001A), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_SKITTER_DATA1                                       , RULL(0x2405001A), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_SKITTER_DATA1                                       , RULL(0x2505001A), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_SKITTER_DATA1                                       , RULL(0x2605001A), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_SKITTER_DATA1                                       , RULL(0x2705001A), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_SKITTER_DATA1                                       , RULL(0x2805001A), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_SKITTER_DATA1                                       , RULL(0x2905001A), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_SKITTER_DATA1                                      , RULL(0x2A05001A), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_SKITTER_DATA1                                      , RULL(0x2B05001A), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_SKITTER_DATA1                                      , RULL(0x2C05001A), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_SKITTER_DATA1                                      , RULL(0x2D05001A), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_SKITTER_DATA1                                      , RULL(0x2E05001A), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_SKITTER_DATA1                                      , RULL(0x2F05001A), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_SKITTER_DATA1                                      , RULL(0x3005001A), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_SKITTER_DATA1                                      , RULL(0x3105001A), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_SKITTER_DATA1                                      , RULL(0x3205001A), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_SKITTER_DATA1                                      , RULL(0x3305001A), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_SKITTER_DATA1                                      , RULL(0x3405001A), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_SKITTER_DATA1                                      , RULL(0x3505001A), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_SKITTER_DATA1                                      , RULL(0x3605001A), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_SKITTER_DATA1                                      , RULL(0x3705001A), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_SKITTER_DATA1                                        , RULL(0x1005001A), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_SKITTER_DATA1                                      , RULL(0x1005001A), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_SKITTER_DATA1                                      , RULL(0x1105001A), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_SKITTER_DATA1                                      , RULL(0x1205001A), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_SKITTER_DATA1                                      , RULL(0x1305001A), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_SKITTER_DATA1                                      , RULL(0x1405001A), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_SKITTER_DATA1                                      , RULL(0x1505001A), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_SKITTER_DATA1                                        , RULL(0x2005001A), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 2105001A,
REG64( EX_0_SKITTER_DATA1                                      , RULL(0x2005001A), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2105001A,
REG64( EX_1_SKITTER_DATA1                                      , RULL(0x2205001A), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2305001A,
REG64( EX_2_SKITTER_DATA1                                      , RULL(0x2405001A), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2505001A,
REG64( EX_3_SKITTER_DATA1                                      , RULL(0x2605001A), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2705001A,
REG64( EX_4_SKITTER_DATA1                                      , RULL(0x2805001A), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2905001A,
REG64( EX_5_SKITTER_DATA1                                      , RULL(0x2A05001A), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B05001A,
REG64( EX_6_SKITTER_DATA1                                      , RULL(0x2C05001A), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D05001A,
REG64( EX_7_SKITTER_DATA1                                      , RULL(0x2E05001A), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F05001A,
REG64( EX_8_SKITTER_DATA1                                      , RULL(0x3005001A), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 3105001A,
REG64( EX_9_SKITTER_DATA1                                      , RULL(0x3205001A), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 3305001A,
REG64( EX_10_SKITTER_DATA1                                     , RULL(0x3405001A), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 3505001A,
REG64( EX_11_SKITTER_DATA1                                     , RULL(0x3605001A), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 3705001A,

REG64( PEC_0_SKITTER_DATA1                                     , RULL(0x0D05001A), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_SKITTER_DATA1                                     , RULL(0x0E05001A), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_SKITTER_DATA1                                     , RULL(0x0F05001A), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_SKITTER_DATA2                                         , RULL(0x2005001B), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_SKITTER_DATA2                                       , RULL(0x2005001B), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_SKITTER_DATA2                                       , RULL(0x2105001B), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_SKITTER_DATA2                                       , RULL(0x2205001B), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_SKITTER_DATA2                                       , RULL(0x2305001B), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_SKITTER_DATA2                                       , RULL(0x2405001B), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_SKITTER_DATA2                                       , RULL(0x2505001B), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_SKITTER_DATA2                                       , RULL(0x2605001B), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_SKITTER_DATA2                                       , RULL(0x2705001B), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_SKITTER_DATA2                                       , RULL(0x2805001B), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_SKITTER_DATA2                                       , RULL(0x2905001B), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_SKITTER_DATA2                                      , RULL(0x2A05001B), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_SKITTER_DATA2                                      , RULL(0x2B05001B), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_SKITTER_DATA2                                      , RULL(0x2C05001B), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_SKITTER_DATA2                                      , RULL(0x2D05001B), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_SKITTER_DATA2                                      , RULL(0x2E05001B), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_SKITTER_DATA2                                      , RULL(0x2F05001B), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_SKITTER_DATA2                                      , RULL(0x3005001B), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_SKITTER_DATA2                                      , RULL(0x3105001B), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_SKITTER_DATA2                                      , RULL(0x3205001B), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_SKITTER_DATA2                                      , RULL(0x3305001B), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_SKITTER_DATA2                                      , RULL(0x3405001B), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_SKITTER_DATA2                                      , RULL(0x3505001B), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_SKITTER_DATA2                                      , RULL(0x3605001B), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_SKITTER_DATA2                                      , RULL(0x3705001B), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_SKITTER_DATA2                                        , RULL(0x1005001B), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_SKITTER_DATA2                                      , RULL(0x1005001B), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_SKITTER_DATA2                                      , RULL(0x1105001B), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_SKITTER_DATA2                                      , RULL(0x1205001B), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_SKITTER_DATA2                                      , RULL(0x1305001B), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_SKITTER_DATA2                                      , RULL(0x1405001B), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_SKITTER_DATA2                                      , RULL(0x1505001B), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_SKITTER_DATA2                                        , RULL(0x2005001B), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 2105001B,
REG64( EX_0_SKITTER_DATA2                                      , RULL(0x2005001B), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2105001B,
REG64( EX_1_SKITTER_DATA2                                      , RULL(0x2205001B), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2305001B,
REG64( EX_2_SKITTER_DATA2                                      , RULL(0x2405001B), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2505001B,
REG64( EX_3_SKITTER_DATA2                                      , RULL(0x2605001B), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2705001B,
REG64( EX_4_SKITTER_DATA2                                      , RULL(0x2805001B), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2905001B,
REG64( EX_5_SKITTER_DATA2                                      , RULL(0x2A05001B), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B05001B,
REG64( EX_6_SKITTER_DATA2                                      , RULL(0x2C05001B), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D05001B,
REG64( EX_7_SKITTER_DATA2                                      , RULL(0x2E05001B), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F05001B,
REG64( EX_8_SKITTER_DATA2                                      , RULL(0x3005001B), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 3105001B,
REG64( EX_9_SKITTER_DATA2                                      , RULL(0x3205001B), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 3305001B,
REG64( EX_10_SKITTER_DATA2                                     , RULL(0x3405001B), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 3505001B,
REG64( EX_11_SKITTER_DATA2                                     , RULL(0x3605001B), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 3705001B,

REG64( PEC_0_SKITTER_DATA2                                     , RULL(0x0D05001B), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_SKITTER_DATA2                                     , RULL(0x0E05001B), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_SKITTER_DATA2                                     , RULL(0x0F05001B), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_SKITTER_FORCE_REG                                     , RULL(0x20050014), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SKITTER_FORCE_REG                                   , RULL(0x20050014), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SKITTER_FORCE_REG                                   , RULL(0x21050014), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SKITTER_FORCE_REG                                   , RULL(0x22050014), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SKITTER_FORCE_REG                                   , RULL(0x23050014), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SKITTER_FORCE_REG                                   , RULL(0x24050014), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SKITTER_FORCE_REG                                   , RULL(0x25050014), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SKITTER_FORCE_REG                                   , RULL(0x26050014), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SKITTER_FORCE_REG                                   , RULL(0x27050014), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SKITTER_FORCE_REG                                   , RULL(0x28050014), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SKITTER_FORCE_REG                                   , RULL(0x29050014), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SKITTER_FORCE_REG                                  , RULL(0x2A050014), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SKITTER_FORCE_REG                                  , RULL(0x2B050014), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SKITTER_FORCE_REG                                  , RULL(0x2C050014), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SKITTER_FORCE_REG                                  , RULL(0x2D050014), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SKITTER_FORCE_REG                                  , RULL(0x2E050014), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SKITTER_FORCE_REG                                  , RULL(0x2F050014), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SKITTER_FORCE_REG                                  , RULL(0x30050014), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SKITTER_FORCE_REG                                  , RULL(0x31050014), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SKITTER_FORCE_REG                                  , RULL(0x32050014), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SKITTER_FORCE_REG                                  , RULL(0x33050014), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SKITTER_FORCE_REG                                  , RULL(0x34050014), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SKITTER_FORCE_REG                                  , RULL(0x35050014), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SKITTER_FORCE_REG                                  , RULL(0x36050014), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SKITTER_FORCE_REG                                  , RULL(0x37050014), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SKITTER_FORCE_REG                                    , RULL(0x10050014), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SKITTER_FORCE_REG                                  , RULL(0x10050014), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SKITTER_FORCE_REG                                  , RULL(0x11050014), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SKITTER_FORCE_REG                                  , RULL(0x12050014), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SKITTER_FORCE_REG                                  , RULL(0x13050014), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SKITTER_FORCE_REG                                  , RULL(0x14050014), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SKITTER_FORCE_REG                                  , RULL(0x15050014), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SKITTER_FORCE_REG                                    , RULL(0x20050014), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21050014,
REG64( EX_0_SKITTER_FORCE_REG                                  , RULL(0x20050014), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21050014,
REG64( EX_1_SKITTER_FORCE_REG                                  , RULL(0x22050014), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23050014,
REG64( EX_2_SKITTER_FORCE_REG                                  , RULL(0x24050014), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25050014,
REG64( EX_3_SKITTER_FORCE_REG                                  , RULL(0x26050014), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27050014,
REG64( EX_4_SKITTER_FORCE_REG                                  , RULL(0x28050014), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29050014,
REG64( EX_5_SKITTER_FORCE_REG                                  , RULL(0x2A050014), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B050014,
REG64( EX_6_SKITTER_FORCE_REG                                  , RULL(0x2C050014), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D050014,
REG64( EX_7_SKITTER_FORCE_REG                                  , RULL(0x2E050014), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F050014,
REG64( EX_8_SKITTER_FORCE_REG                                  , RULL(0x30050014), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31050014,
REG64( EX_9_SKITTER_FORCE_REG                                  , RULL(0x32050014), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33050014,
REG64( EX_10_SKITTER_FORCE_REG                                 , RULL(0x34050014), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35050014,
REG64( EX_11_SKITTER_FORCE_REG                                 , RULL(0x36050014), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37050014,

REG64( PEC_0_SKITTER_FORCE_REG                                 , RULL(0x0D050014), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SKITTER_FORCE_REG                                 , RULL(0x0E050014), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SKITTER_FORCE_REG                                 , RULL(0x0F050014), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SKITTER_MODE_REG                                      , RULL(0x20050010), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SKITTER_MODE_REG                                    , RULL(0x20050010), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SKITTER_MODE_REG                                    , RULL(0x21050010), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SKITTER_MODE_REG                                    , RULL(0x22050010), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SKITTER_MODE_REG                                    , RULL(0x23050010), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SKITTER_MODE_REG                                    , RULL(0x24050010), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SKITTER_MODE_REG                                    , RULL(0x25050010), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SKITTER_MODE_REG                                    , RULL(0x26050010), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SKITTER_MODE_REG                                    , RULL(0x27050010), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SKITTER_MODE_REG                                    , RULL(0x28050010), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SKITTER_MODE_REG                                    , RULL(0x29050010), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SKITTER_MODE_REG                                   , RULL(0x2A050010), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SKITTER_MODE_REG                                   , RULL(0x2B050010), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SKITTER_MODE_REG                                   , RULL(0x2C050010), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SKITTER_MODE_REG                                   , RULL(0x2D050010), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SKITTER_MODE_REG                                   , RULL(0x2E050010), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SKITTER_MODE_REG                                   , RULL(0x2F050010), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SKITTER_MODE_REG                                   , RULL(0x30050010), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SKITTER_MODE_REG                                   , RULL(0x31050010), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SKITTER_MODE_REG                                   , RULL(0x32050010), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SKITTER_MODE_REG                                   , RULL(0x33050010), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SKITTER_MODE_REG                                   , RULL(0x34050010), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SKITTER_MODE_REG                                   , RULL(0x35050010), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SKITTER_MODE_REG                                   , RULL(0x36050010), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SKITTER_MODE_REG                                   , RULL(0x37050010), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SKITTER_MODE_REG                                     , RULL(0x10050010), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SKITTER_MODE_REG                                   , RULL(0x10050010), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SKITTER_MODE_REG                                   , RULL(0x11050010), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SKITTER_MODE_REG                                   , RULL(0x12050010), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SKITTER_MODE_REG                                   , RULL(0x13050010), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SKITTER_MODE_REG                                   , RULL(0x14050010), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SKITTER_MODE_REG                                   , RULL(0x15050010), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SKITTER_MODE_REG                                     , RULL(0x20050010), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21050010,
REG64( EX_0_SKITTER_MODE_REG                                   , RULL(0x20050010), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21050010,
REG64( EX_1_SKITTER_MODE_REG                                   , RULL(0x22050010), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23050010,
REG64( EX_2_SKITTER_MODE_REG                                   , RULL(0x24050010), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25050010,
REG64( EX_3_SKITTER_MODE_REG                                   , RULL(0x26050010), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27050010,
REG64( EX_4_SKITTER_MODE_REG                                   , RULL(0x28050010), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29050010,
REG64( EX_5_SKITTER_MODE_REG                                   , RULL(0x2A050010), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B050010,
REG64( EX_6_SKITTER_MODE_REG                                   , RULL(0x2C050010), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D050010,
REG64( EX_7_SKITTER_MODE_REG                                   , RULL(0x2E050010), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F050010,
REG64( EX_8_SKITTER_MODE_REG                                   , RULL(0x30050010), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31050010,
REG64( EX_9_SKITTER_MODE_REG                                   , RULL(0x32050010), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33050010,
REG64( EX_10_SKITTER_MODE_REG                                  , RULL(0x34050010), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35050010,
REG64( EX_11_SKITTER_MODE_REG                                  , RULL(0x36050010), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37050010,

REG64( PEC_0_SKITTER_MODE_REG                                  , RULL(0x0D050010), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SKITTER_MODE_REG                                  , RULL(0x0E050010), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SKITTER_MODE_REG                                  , RULL(0x0F050010), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SLAVE_CONFIG_REG                                      , RULL(0x200F001E), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SLAVE_CONFIG_REG                                    , RULL(0x200F001E), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SLAVE_CONFIG_REG                                    , RULL(0x210F001E), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SLAVE_CONFIG_REG                                    , RULL(0x220F001E), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SLAVE_CONFIG_REG                                    , RULL(0x230F001E), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SLAVE_CONFIG_REG                                    , RULL(0x240F001E), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SLAVE_CONFIG_REG                                    , RULL(0x250F001E), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SLAVE_CONFIG_REG                                    , RULL(0x260F001E), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SLAVE_CONFIG_REG                                    , RULL(0x270F001E), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SLAVE_CONFIG_REG                                    , RULL(0x280F001E), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SLAVE_CONFIG_REG                                    , RULL(0x290F001E), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SLAVE_CONFIG_REG                                   , RULL(0x2A0F001E), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SLAVE_CONFIG_REG                                   , RULL(0x2B0F001E), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SLAVE_CONFIG_REG                                   , RULL(0x2C0F001E), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SLAVE_CONFIG_REG                                   , RULL(0x2D0F001E), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SLAVE_CONFIG_REG                                   , RULL(0x2E0F001E), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SLAVE_CONFIG_REG                                   , RULL(0x2F0F001E), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SLAVE_CONFIG_REG                                   , RULL(0x300F001E), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SLAVE_CONFIG_REG                                   , RULL(0x310F001E), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SLAVE_CONFIG_REG                                   , RULL(0x320F001E), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SLAVE_CONFIG_REG                                   , RULL(0x330F001E), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SLAVE_CONFIG_REG                                   , RULL(0x340F001E), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SLAVE_CONFIG_REG                                   , RULL(0x350F001E), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SLAVE_CONFIG_REG                                   , RULL(0x360F001E), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SLAVE_CONFIG_REG                                   , RULL(0x370F001E), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SLAVE_CONFIG_REG                                     , RULL(0x100F001E), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SLAVE_CONFIG_REG                                   , RULL(0x100F001E), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SLAVE_CONFIG_REG                                   , RULL(0x110F001E), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SLAVE_CONFIG_REG                                   , RULL(0x120F001E), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SLAVE_CONFIG_REG                                   , RULL(0x130F001E), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SLAVE_CONFIG_REG                                   , RULL(0x140F001E), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SLAVE_CONFIG_REG                                   , RULL(0x150F001E), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SLAVE_CONFIG_REG                                     , RULL(0x200F001E), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F001E,
REG64( EX_0_SLAVE_CONFIG_REG                                   , RULL(0x200F001E), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F001E,
REG64( EX_1_SLAVE_CONFIG_REG                                   , RULL(0x230F001E), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F001E,
REG64( EX_2_SLAVE_CONFIG_REG                                   , RULL(0x240F001E), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F001E,
REG64( EX_3_SLAVE_CONFIG_REG                                   , RULL(0x260F001E), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F001E,
REG64( EX_4_SLAVE_CONFIG_REG                                   , RULL(0x280F001E), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F001E,
REG64( EX_5_SLAVE_CONFIG_REG                                   , RULL(0x2A0F001E), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F001E,
REG64( EX_6_SLAVE_CONFIG_REG                                   , RULL(0x2C0F001E), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F001E,
REG64( EX_7_SLAVE_CONFIG_REG                                   , RULL(0x2E0F001E), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F001E,
REG64( EX_8_SLAVE_CONFIG_REG                                   , RULL(0x300F001E), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F001E,
REG64( EX_9_SLAVE_CONFIG_REG                                   , RULL(0x320F001E), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F001E,
REG64( EX_10_SLAVE_CONFIG_REG                                  , RULL(0x340F001E), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F001E,
REG64( EX_11_SLAVE_CONFIG_REG                                  , RULL(0x360F001E), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F001E,

REG64( PEC_0_SLAVE_CONFIG_REG                                  , RULL(0x0D0F001E), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SLAVE_CONFIG_REG                                  , RULL(0x0E0F001E), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SLAVE_CONFIG_REG                                  , RULL(0x0F0F001E), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SPATTN_SCOM                                           , RULL(0x20040004), SH_UNT_C        ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010A99,
REG64( C_SPATTN_SCOM1                                          , RULL(0x20040005), SH_UNT_C        ,
       SH_ACS_SCOM1_NC  ); //DUPS: 20010A98,
REG64( C_SPATTN_SCOM2                                          , RULL(0x20040006), SH_UNT_C        ,
       SH_ACS_SCOM2_NC  ); //DUPS: 20010A97,
REG64( C_0_SPATTN_SCOM                                         , RULL(0x20040004), SH_UNT_C_0      ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010A99,
REG64( C_0_SPATTN_SCOM1                                        , RULL(0x20040005), SH_UNT_C_0      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 20010A98,
REG64( C_0_SPATTN_SCOM2                                        , RULL(0x20040006), SH_UNT_C_0      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 20010A97,
REG64( C_1_SPATTN_SCOM                                         , RULL(0x21040004), SH_UNT_C_1      ,
       SH_ACS_SCOM_RO   ); //DUPS: 21010A99,
REG64( C_1_SPATTN_SCOM1                                        , RULL(0x21040005), SH_UNT_C_1      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 21010A98,
REG64( C_1_SPATTN_SCOM2                                        , RULL(0x21040006), SH_UNT_C_1      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 21010A97,
REG64( C_2_SPATTN_SCOM                                         , RULL(0x22040004), SH_UNT_C_2      ,
       SH_ACS_SCOM_RO   ); //DUPS: 22010A99,
REG64( C_2_SPATTN_SCOM1                                        , RULL(0x22040005), SH_UNT_C_2      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 22010A98,
REG64( C_2_SPATTN_SCOM2                                        , RULL(0x22040006), SH_UNT_C_2      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 22010A97,
REG64( C_3_SPATTN_SCOM                                         , RULL(0x23040004), SH_UNT_C_3      ,
       SH_ACS_SCOM_RO   ); //DUPS: 23010A99,
REG64( C_3_SPATTN_SCOM1                                        , RULL(0x23040005), SH_UNT_C_3      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 23010A98,
REG64( C_3_SPATTN_SCOM2                                        , RULL(0x23040006), SH_UNT_C_3      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 23010A97,
REG64( C_4_SPATTN_SCOM                                         , RULL(0x24040004), SH_UNT_C_4      ,
       SH_ACS_SCOM_RO   ); //DUPS: 24010A99,
REG64( C_4_SPATTN_SCOM1                                        , RULL(0x24040005), SH_UNT_C_4      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 24010A98,
REG64( C_4_SPATTN_SCOM2                                        , RULL(0x24040006), SH_UNT_C_4      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 24010A97,
REG64( C_5_SPATTN_SCOM                                         , RULL(0x25040004), SH_UNT_C_5      ,
       SH_ACS_SCOM_RO   ); //DUPS: 25010A99,
REG64( C_5_SPATTN_SCOM1                                        , RULL(0x25040005), SH_UNT_C_5      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 25010A98,
REG64( C_5_SPATTN_SCOM2                                        , RULL(0x25040006), SH_UNT_C_5      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 25010A97,
REG64( C_6_SPATTN_SCOM                                         , RULL(0x26040004), SH_UNT_C_6      ,
       SH_ACS_SCOM_RO   ); //DUPS: 26010A99,
REG64( C_6_SPATTN_SCOM1                                        , RULL(0x26040005), SH_UNT_C_6      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 26010A98,
REG64( C_6_SPATTN_SCOM2                                        , RULL(0x26040006), SH_UNT_C_6      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 26010A97,
REG64( C_7_SPATTN_SCOM                                         , RULL(0x27040004), SH_UNT_C_7      ,
       SH_ACS_SCOM_RO   ); //DUPS: 27010A99,
REG64( C_7_SPATTN_SCOM1                                        , RULL(0x27040005), SH_UNT_C_7      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 27010A98,
REG64( C_7_SPATTN_SCOM2                                        , RULL(0x27040006), SH_UNT_C_7      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 27010A97,
REG64( C_8_SPATTN_SCOM                                         , RULL(0x28040004), SH_UNT_C_8      ,
       SH_ACS_SCOM_RO   ); //DUPS: 28010A99,
REG64( C_8_SPATTN_SCOM1                                        , RULL(0x28040005), SH_UNT_C_8      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 28010A98,
REG64( C_8_SPATTN_SCOM2                                        , RULL(0x28040006), SH_UNT_C_8      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 28010A97,
REG64( C_9_SPATTN_SCOM                                         , RULL(0x29040004), SH_UNT_C_9      ,
       SH_ACS_SCOM_RO   ); //DUPS: 29010A99,
REG64( C_9_SPATTN_SCOM1                                        , RULL(0x29040005), SH_UNT_C_9      ,
       SH_ACS_SCOM1_NC  ); //DUPS: 29010A98,
REG64( C_9_SPATTN_SCOM2                                        , RULL(0x29040006), SH_UNT_C_9      ,
       SH_ACS_SCOM2_NC  ); //DUPS: 29010A97,
REG64( C_10_SPATTN_SCOM                                        , RULL(0x2A040004), SH_UNT_C_10     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2A010A99,
REG64( C_10_SPATTN_SCOM1                                       , RULL(0x2A040005), SH_UNT_C_10     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2A010A98,
REG64( C_10_SPATTN_SCOM2                                       , RULL(0x2A040006), SH_UNT_C_10     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2A010A97,
REG64( C_11_SPATTN_SCOM                                        , RULL(0x2B040004), SH_UNT_C_11     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B010A99,
REG64( C_11_SPATTN_SCOM1                                       , RULL(0x2B040005), SH_UNT_C_11     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2B010A98,
REG64( C_11_SPATTN_SCOM2                                       , RULL(0x2B040006), SH_UNT_C_11     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2B010A97,
REG64( C_12_SPATTN_SCOM                                        , RULL(0x2C040004), SH_UNT_C_12     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2C010A99,
REG64( C_12_SPATTN_SCOM1                                       , RULL(0x2C040005), SH_UNT_C_12     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2C010A98,
REG64( C_12_SPATTN_SCOM2                                       , RULL(0x2C040006), SH_UNT_C_12     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2C010A97,
REG64( C_13_SPATTN_SCOM                                        , RULL(0x2D040004), SH_UNT_C_13     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D010A99,
REG64( C_13_SPATTN_SCOM1                                       , RULL(0x2D040005), SH_UNT_C_13     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2D010A98,
REG64( C_13_SPATTN_SCOM2                                       , RULL(0x2D040006), SH_UNT_C_13     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2D010A97,
REG64( C_14_SPATTN_SCOM                                        , RULL(0x2E040004), SH_UNT_C_14     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2E010A99,
REG64( C_14_SPATTN_SCOM1                                       , RULL(0x2E040005), SH_UNT_C_14     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2E010A98,
REG64( C_14_SPATTN_SCOM2                                       , RULL(0x2E040006), SH_UNT_C_14     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2E010A97,
REG64( C_15_SPATTN_SCOM                                        , RULL(0x2F040004), SH_UNT_C_15     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F010A99,
REG64( C_15_SPATTN_SCOM1                                       , RULL(0x2F040005), SH_UNT_C_15     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2F010A98,
REG64( C_15_SPATTN_SCOM2                                       , RULL(0x2F040006), SH_UNT_C_15     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2F010A97,
REG64( C_16_SPATTN_SCOM                                        , RULL(0x30040004), SH_UNT_C_16     ,
       SH_ACS_SCOM_RO   ); //DUPS: 30010A99,
REG64( C_16_SPATTN_SCOM1                                       , RULL(0x30040005), SH_UNT_C_16     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 30010A98,
REG64( C_16_SPATTN_SCOM2                                       , RULL(0x30040006), SH_UNT_C_16     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 30010A97,
REG64( C_17_SPATTN_SCOM                                        , RULL(0x31040004), SH_UNT_C_17     ,
       SH_ACS_SCOM_RO   ); //DUPS: 31010A99,
REG64( C_17_SPATTN_SCOM1                                       , RULL(0x31040005), SH_UNT_C_17     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 31010A98,
REG64( C_17_SPATTN_SCOM2                                       , RULL(0x31040006), SH_UNT_C_17     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 31010A97,
REG64( C_18_SPATTN_SCOM                                        , RULL(0x32040004), SH_UNT_C_18     ,
       SH_ACS_SCOM_RO   ); //DUPS: 32010A99,
REG64( C_18_SPATTN_SCOM1                                       , RULL(0x32040005), SH_UNT_C_18     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 32010A98,
REG64( C_18_SPATTN_SCOM2                                       , RULL(0x32040006), SH_UNT_C_18     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 32010A97,
REG64( C_19_SPATTN_SCOM                                        , RULL(0x33040004), SH_UNT_C_19     ,
       SH_ACS_SCOM_RO   ); //DUPS: 33010A99,
REG64( C_19_SPATTN_SCOM1                                       , RULL(0x33040005), SH_UNT_C_19     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 33010A98,
REG64( C_19_SPATTN_SCOM2                                       , RULL(0x33040006), SH_UNT_C_19     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 33010A97,
REG64( C_20_SPATTN_SCOM                                        , RULL(0x34040004), SH_UNT_C_20     ,
       SH_ACS_SCOM_RO   ); //DUPS: 34010A99,
REG64( C_20_SPATTN_SCOM1                                       , RULL(0x34040005), SH_UNT_C_20     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 34010A98,
REG64( C_20_SPATTN_SCOM2                                       , RULL(0x34040006), SH_UNT_C_20     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 34010A97,
REG64( C_21_SPATTN_SCOM                                        , RULL(0x35040004), SH_UNT_C_21     ,
       SH_ACS_SCOM_RO   ); //DUPS: 35010A99,
REG64( C_21_SPATTN_SCOM1                                       , RULL(0x35040005), SH_UNT_C_21     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 35010A98,
REG64( C_21_SPATTN_SCOM2                                       , RULL(0x35040006), SH_UNT_C_21     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 35010A97,
REG64( C_22_SPATTN_SCOM                                        , RULL(0x36040004), SH_UNT_C_22     ,
       SH_ACS_SCOM_RO   ); //DUPS: 36010A99,
REG64( C_22_SPATTN_SCOM1                                       , RULL(0x36040005), SH_UNT_C_22     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 36010A98,
REG64( C_22_SPATTN_SCOM2                                       , RULL(0x36040006), SH_UNT_C_22     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 36010A97,
REG64( C_23_SPATTN_SCOM                                        , RULL(0x37040004), SH_UNT_C_23     ,
       SH_ACS_SCOM_RO   ); //DUPS: 37010A99,
REG64( C_23_SPATTN_SCOM1                                       , RULL(0x37040005), SH_UNT_C_23     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 37010A98,
REG64( C_23_SPATTN_SCOM2                                       , RULL(0x37040006), SH_UNT_C_23     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 37010A97,
REG64( EQ_SPATTN_SCOM                                          , RULL(0x10040004), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_SPATTN_SCOM1                                         , RULL(0x10040005), SH_UNT_EQ       , SH_ACS_SCOM1_NC  );
REG64( EQ_SPATTN_SCOM2                                         , RULL(0x10040006), SH_UNT_EQ       , SH_ACS_SCOM2_NC  );
REG64( EQ_0_SPATTN_SCOM                                        , RULL(0x10040004), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_0_SPATTN_SCOM1                                       , RULL(0x10040005), SH_UNT_EQ_0     , SH_ACS_SCOM1_NC  );
REG64( EQ_0_SPATTN_SCOM2                                       , RULL(0x10040006), SH_UNT_EQ_0     , SH_ACS_SCOM2_NC  );
REG64( EQ_1_SPATTN_SCOM                                        , RULL(0x11040004), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_1_SPATTN_SCOM1                                       , RULL(0x11040005), SH_UNT_EQ_1     , SH_ACS_SCOM1_NC  );
REG64( EQ_1_SPATTN_SCOM2                                       , RULL(0x11040006), SH_UNT_EQ_1     , SH_ACS_SCOM2_NC  );
REG64( EQ_2_SPATTN_SCOM                                        , RULL(0x12040004), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_2_SPATTN_SCOM1                                       , RULL(0x12040005), SH_UNT_EQ_2     , SH_ACS_SCOM1_NC  );
REG64( EQ_2_SPATTN_SCOM2                                       , RULL(0x12040006), SH_UNT_EQ_2     , SH_ACS_SCOM2_NC  );
REG64( EQ_3_SPATTN_SCOM                                        , RULL(0x13040004), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_3_SPATTN_SCOM1                                       , RULL(0x13040005), SH_UNT_EQ_3     , SH_ACS_SCOM1_NC  );
REG64( EQ_3_SPATTN_SCOM2                                       , RULL(0x13040006), SH_UNT_EQ_3     , SH_ACS_SCOM2_NC  );
REG64( EQ_4_SPATTN_SCOM                                        , RULL(0x14040004), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_4_SPATTN_SCOM1                                       , RULL(0x14040005), SH_UNT_EQ_4     , SH_ACS_SCOM1_NC  );
REG64( EQ_4_SPATTN_SCOM2                                       , RULL(0x14040006), SH_UNT_EQ_4     , SH_ACS_SCOM2_NC  );
REG64( EQ_5_SPATTN_SCOM                                        , RULL(0x15040004), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EQ_5_SPATTN_SCOM1                                       , RULL(0x15040005), SH_UNT_EQ_5     , SH_ACS_SCOM1_NC  );
REG64( EQ_5_SPATTN_SCOM2                                       , RULL(0x15040006), SH_UNT_EQ_5     , SH_ACS_SCOM2_NC  );
REG64( EX_SPATTN_SCOM                                          , RULL(0x20040004), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 21040004, 21010A99, 20010A99,
REG64( EX_SPATTN_SCOM1                                         , RULL(0x20040005), SH_UNT_EX       ,
       SH_ACS_SCOM1_NC  ); //DUPS: 21040005, 21010A98, 20010A98,
REG64( EX_SPATTN_SCOM2                                         , RULL(0x20040006), SH_UNT_EX       ,
       SH_ACS_SCOM2_NC  ); //DUPS: 21040006,
REG64( EX_0_SPATTN_SCOM                                        , RULL(0x20040004), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 21040004, 21010A99, 20010A99,
REG64( EX_0_SPATTN_SCOM1                                       , RULL(0x20040005), SH_UNT_EX_0     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 21040005, 21010A98, 20010A98,
REG64( EX_0_SPATTN_SCOM2                                       , RULL(0x20040006), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 21040006,
REG64( EX_1_SPATTN_SCOM                                        , RULL(0x22040004), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 23040004, 23010A99, 22010A99,
REG64( EX_1_SPATTN_SCOM1                                       , RULL(0x22040005), SH_UNT_EX_1     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 23040005, 23010A98, 22010A98,
REG64( EX_1_SPATTN_SCOM2                                       , RULL(0x22040006), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 23040006,
REG64( EX_2_SPATTN_SCOM                                        , RULL(0x24040004), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 25040004, 25010A99, 24010A99,
REG64( EX_2_SPATTN_SCOM1                                       , RULL(0x24040005), SH_UNT_EX_2     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 25040005, 25010A98, 24010A98,
REG64( EX_2_SPATTN_SCOM2                                       , RULL(0x24040006), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 25040006,
REG64( EX_3_SPATTN_SCOM                                        , RULL(0x26040004), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 27040004, 27010A99, 26010A99,
REG64( EX_3_SPATTN_SCOM1                                       , RULL(0x26040005), SH_UNT_EX_3     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 27040005, 27010A98, 26010A98,
REG64( EX_3_SPATTN_SCOM2                                       , RULL(0x26040006), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 27040006,
REG64( EX_4_SPATTN_SCOM                                        , RULL(0x28040004), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 29040004, 29010A99, 28010A99,
REG64( EX_4_SPATTN_SCOM1                                       , RULL(0x28040005), SH_UNT_EX_4     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 29040005, 29010A98, 28010A98,
REG64( EX_4_SPATTN_SCOM2                                       , RULL(0x28040006), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 29040006,
REG64( EX_5_SPATTN_SCOM                                        , RULL(0x2A040004), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B040004, 2B010A99, 2A010A99,
REG64( EX_5_SPATTN_SCOM1                                       , RULL(0x2A040005), SH_UNT_EX_5     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2B040005, 2B010A98, 2A010A98,
REG64( EX_5_SPATTN_SCOM2                                       , RULL(0x2A040006), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2B040006,
REG64( EX_6_SPATTN_SCOM                                        , RULL(0x2C040004), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D040004, 2D010A99, 2C010A99,
REG64( EX_6_SPATTN_SCOM1                                       , RULL(0x2C040005), SH_UNT_EX_6     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2D040005, 2D010A98, 2C010A98,
REG64( EX_6_SPATTN_SCOM2                                       , RULL(0x2C040006), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2D040006,
REG64( EX_7_SPATTN_SCOM                                        , RULL(0x2E040004), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F040004, 2F010A99, 2E010A99,
REG64( EX_7_SPATTN_SCOM1                                       , RULL(0x2E040005), SH_UNT_EX_7     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 2F040005, 2F010A98, 2E010A98,
REG64( EX_7_SPATTN_SCOM2                                       , RULL(0x2E040006), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 2F040006,
REG64( EX_8_SPATTN_SCOM                                        , RULL(0x30040004), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 31040004, 31010A99, 30010A99,
REG64( EX_8_SPATTN_SCOM1                                       , RULL(0x30040005), SH_UNT_EX_8     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 31040005, 31010A98, 30010A98,
REG64( EX_8_SPATTN_SCOM2                                       , RULL(0x30040006), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 31040006,
REG64( EX_9_SPATTN_SCOM                                        , RULL(0x32040004), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 33040004, 33010A99, 32010A99,
REG64( EX_9_SPATTN_SCOM1                                       , RULL(0x32040005), SH_UNT_EX_9     ,
       SH_ACS_SCOM1_NC  ); //DUPS: 33040005, 33010A98, 32010A98,
REG64( EX_9_SPATTN_SCOM2                                       , RULL(0x32040006), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_NC  ); //DUPS: 33040006,
REG64( EX_0_L2_SPATTN                                          , RULL(0x21010A97), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A97,
REG64( EX_10_SPATTN_SCOM                                       , RULL(0x34040004), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 35040004, 35010A99, 34010A99,
REG64( EX_10_SPATTN_SCOM1                                      , RULL(0x34040005), SH_UNT_EX_10    ,
       SH_ACS_SCOM1_NC  ); //DUPS: 35040005, 35010A98, 34010A98,
REG64( EX_10_SPATTN_SCOM2                                      , RULL(0x34040006), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_NC  ); //DUPS: 35040006,
REG64( EX_11_SPATTN_SCOM                                       , RULL(0x36040004), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 37040004, 37010A99, 36010A99,
REG64( EX_11_SPATTN_SCOM1                                      , RULL(0x36040005), SH_UNT_EX_11    ,
       SH_ACS_SCOM1_NC  ); //DUPS: 37040005, 37010A98, 36010A98,
REG64( EX_11_SPATTN_SCOM2                                      , RULL(0x36040006), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_NC  ); //DUPS: 37040006,
REG64( EX_10_L2_SPATTN                                         , RULL(0x35010A97), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 34010A97,
REG64( EX_11_L2_SPATTN                                         , RULL(0x37010A97), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 36010A97,
REG64( EX_1_L2_SPATTN                                          , RULL(0x23010A97), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 22010A97,
REG64( EX_2_L2_SPATTN                                          , RULL(0x25010A97), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 24010A97,
REG64( EX_3_L2_SPATTN                                          , RULL(0x27010A97), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 26010A97,
REG64( EX_4_L2_SPATTN                                          , RULL(0x29010A97), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 28010A97,
REG64( EX_5_L2_SPATTN                                          , RULL(0x2B010A97), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2A010A97,
REG64( EX_6_L2_SPATTN                                          , RULL(0x2D010A97), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2C010A97,
REG64( EX_7_L2_SPATTN                                          , RULL(0x2F010A97), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2E010A97,
REG64( EX_8_L2_SPATTN                                          , RULL(0x31010A97), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 30010A97,
REG64( EX_9_L2_SPATTN                                          , RULL(0x33010A97), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 32010A97,
REG64( EX_L2_SPATTN                                            , RULL(0x21010A97), SH_UNT_EX_L2    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A97,

REG64( PEC_0_SPATTN_SCOM                                       , RULL(0x0D040004), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_0_SPATTN_SCOM1                                      , RULL(0x0D040005), SH_UNT_PEC_0    , SH_ACS_SCOM1_NC  );
REG64( PEC_0_SPATTN_SCOM2                                      , RULL(0x0D040006), SH_UNT_PEC_0    , SH_ACS_SCOM2_NC  );
REG64( PEC_1_SPATTN_SCOM                                       , RULL(0x0E040004), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_1_SPATTN_SCOM1                                      , RULL(0x0E040005), SH_UNT_PEC_1    , SH_ACS_SCOM1_NC  );
REG64( PEC_1_SPATTN_SCOM2                                      , RULL(0x0E040006), SH_UNT_PEC_1    , SH_ACS_SCOM2_NC  );
REG64( PEC_2_SPATTN_SCOM                                       , RULL(0x0F040004), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );
REG64( PEC_2_SPATTN_SCOM1                                      , RULL(0x0F040005), SH_UNT_PEC_2    , SH_ACS_SCOM1_NC  );
REG64( PEC_2_SPATTN_SCOM2                                      , RULL(0x0F040006), SH_UNT_PEC_2    , SH_ACS_SCOM2_NC  );

REG64( C_SPATTN_MASK                                           , RULL(0x20010A9A), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SPATTN_MASK                                         , RULL(0x20010A9A), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SPATTN_MASK                                         , RULL(0x21010A9A), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SPATTN_MASK                                         , RULL(0x22010A9A), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SPATTN_MASK                                         , RULL(0x23010A9A), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SPATTN_MASK                                         , RULL(0x24010A9A), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SPATTN_MASK                                         , RULL(0x25010A9A), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SPATTN_MASK                                         , RULL(0x26010A9A), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SPATTN_MASK                                         , RULL(0x27010A9A), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SPATTN_MASK                                         , RULL(0x28010A9A), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SPATTN_MASK                                         , RULL(0x29010A9A), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SPATTN_MASK                                        , RULL(0x2A010A9A), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SPATTN_MASK                                        , RULL(0x2B010A9A), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SPATTN_MASK                                        , RULL(0x2C010A9A), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SPATTN_MASK                                        , RULL(0x2D010A9A), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SPATTN_MASK                                        , RULL(0x2E010A9A), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SPATTN_MASK                                        , RULL(0x2F010A9A), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SPATTN_MASK                                        , RULL(0x30010A9A), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SPATTN_MASK                                        , RULL(0x31010A9A), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SPATTN_MASK                                        , RULL(0x32010A9A), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SPATTN_MASK                                        , RULL(0x33010A9A), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SPATTN_MASK                                        , RULL(0x34010A9A), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SPATTN_MASK                                        , RULL(0x35010A9A), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SPATTN_MASK                                        , RULL(0x36010A9A), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SPATTN_MASK                                        , RULL(0x37010A9A), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_SPATTN_MASK                                     , RULL(0x21010A9A), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 20010A9A,
REG64( EX_10_L2_SPATTN_MASK                                    , RULL(0x35010A9A), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 34010A9A,
REG64( EX_11_L2_SPATTN_MASK                                    , RULL(0x37010A9A), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 36010A9A,
REG64( EX_1_L2_SPATTN_MASK                                     , RULL(0x23010A9A), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 22010A9A,
REG64( EX_2_L2_SPATTN_MASK                                     , RULL(0x25010A9A), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 24010A9A,
REG64( EX_3_L2_SPATTN_MASK                                     , RULL(0x27010A9A), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 26010A9A,
REG64( EX_4_L2_SPATTN_MASK                                     , RULL(0x29010A9A), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 28010A9A,
REG64( EX_5_L2_SPATTN_MASK                                     , RULL(0x2B010A9A), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2A010A9A,
REG64( EX_6_L2_SPATTN_MASK                                     , RULL(0x2D010A9A), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2C010A9A,
REG64( EX_7_L2_SPATTN_MASK                                     , RULL(0x2F010A9A), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2E010A9A,
REG64( EX_8_L2_SPATTN_MASK                                     , RULL(0x31010A9A), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 30010A9A,
REG64( EX_9_L2_SPATTN_MASK                                     , RULL(0x33010A9A), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 32010A9A,
REG64( EX_L2_SPATTN_MASK                                       , RULL(0x21010A9A), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 20010A9A,

REG64( C_SPA_MASK                                              , RULL(0x20040007), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SPA_MASK                                            , RULL(0x20040007), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SPA_MASK                                            , RULL(0x21040007), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SPA_MASK                                            , RULL(0x22040007), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SPA_MASK                                            , RULL(0x23040007), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SPA_MASK                                            , RULL(0x24040007), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SPA_MASK                                            , RULL(0x25040007), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SPA_MASK                                            , RULL(0x26040007), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SPA_MASK                                            , RULL(0x27040007), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SPA_MASK                                            , RULL(0x28040007), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SPA_MASK                                            , RULL(0x29040007), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SPA_MASK                                           , RULL(0x2A040007), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SPA_MASK                                           , RULL(0x2B040007), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SPA_MASK                                           , RULL(0x2C040007), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SPA_MASK                                           , RULL(0x2D040007), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SPA_MASK                                           , RULL(0x2E040007), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SPA_MASK                                           , RULL(0x2F040007), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SPA_MASK                                           , RULL(0x30040007), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SPA_MASK                                           , RULL(0x31040007), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SPA_MASK                                           , RULL(0x32040007), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SPA_MASK                                           , RULL(0x33040007), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SPA_MASK                                           , RULL(0x34040007), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SPA_MASK                                           , RULL(0x35040007), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SPA_MASK                                           , RULL(0x36040007), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SPA_MASK                                           , RULL(0x37040007), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SPA_MASK                                             , RULL(0x10040007), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SPA_MASK                                           , RULL(0x10040007), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SPA_MASK                                           , RULL(0x11040007), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SPA_MASK                                           , RULL(0x12040007), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SPA_MASK                                           , RULL(0x13040007), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SPA_MASK                                           , RULL(0x14040007), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SPA_MASK                                           , RULL(0x15040007), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SPA_MASK                                             , RULL(0x20040007), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040007,
REG64( EX_0_SPA_MASK                                           , RULL(0x20040007), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040007,
REG64( EX_1_SPA_MASK                                           , RULL(0x22040007), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040007,
REG64( EX_2_SPA_MASK                                           , RULL(0x24040007), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040007,
REG64( EX_3_SPA_MASK                                           , RULL(0x26040007), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040007,
REG64( EX_4_SPA_MASK                                           , RULL(0x28040007), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040007,
REG64( EX_5_SPA_MASK                                           , RULL(0x2A040007), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040007,
REG64( EX_6_SPA_MASK                                           , RULL(0x2C040007), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040007,
REG64( EX_7_SPA_MASK                                           , RULL(0x2E040007), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040007,
REG64( EX_8_SPA_MASK                                           , RULL(0x30040007), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040007,
REG64( EX_9_SPA_MASK                                           , RULL(0x32040007), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040007,
REG64( EX_10_SPA_MASK                                          , RULL(0x34040007), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040007,
REG64( EX_11_SPA_MASK                                          , RULL(0x36040007), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040007,

REG64( PEC_0_SPA_MASK                                          , RULL(0x0D040007), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SPA_MASK                                          , RULL(0x0E040007), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SPA_MASK                                          , RULL(0x0F040007), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SPR_COMMON_HOLD_OUT                                   , RULL(0x20010ABE), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_SPR_COMMON_HOLD_OUT                                 , RULL(0x20010ABE), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_SPR_COMMON_HOLD_OUT                                 , RULL(0x21010ABE), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_SPR_COMMON_HOLD_OUT                                 , RULL(0x22010ABE), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_SPR_COMMON_HOLD_OUT                                 , RULL(0x23010ABE), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_SPR_COMMON_HOLD_OUT                                 , RULL(0x24010ABE), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_SPR_COMMON_HOLD_OUT                                 , RULL(0x25010ABE), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_SPR_COMMON_HOLD_OUT                                 , RULL(0x26010ABE), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_SPR_COMMON_HOLD_OUT                                 , RULL(0x27010ABE), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_SPR_COMMON_HOLD_OUT                                 , RULL(0x28010ABE), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_SPR_COMMON_HOLD_OUT                                 , RULL(0x29010ABE), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_SPR_COMMON_HOLD_OUT                                , RULL(0x2A010ABE), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_SPR_COMMON_HOLD_OUT                                , RULL(0x2B010ABE), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_SPR_COMMON_HOLD_OUT                                , RULL(0x2C010ABE), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_SPR_COMMON_HOLD_OUT                                , RULL(0x2D010ABE), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_SPR_COMMON_HOLD_OUT                                , RULL(0x2E010ABE), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_SPR_COMMON_HOLD_OUT                                , RULL(0x2F010ABE), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_SPR_COMMON_HOLD_OUT                                , RULL(0x30010ABE), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_SPR_COMMON_HOLD_OUT                                , RULL(0x31010ABE), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_SPR_COMMON_HOLD_OUT                                , RULL(0x32010ABE), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_SPR_COMMON_HOLD_OUT                                , RULL(0x33010ABE), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_SPR_COMMON_HOLD_OUT                                , RULL(0x34010ABE), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_SPR_COMMON_HOLD_OUT                                , RULL(0x35010ABE), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_SPR_COMMON_HOLD_OUT                                , RULL(0x36010ABE), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_SPR_COMMON_HOLD_OUT                                , RULL(0x37010ABE), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_SPR_COMMON_HOLD_OUT                                  , RULL(0x21010ABE), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010ABE,
REG64( EX_0_SPR_COMMON_HOLD_OUT                                , RULL(0x21010ABE), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010ABE,
REG64( EX_1_SPR_COMMON_HOLD_OUT                                , RULL(0x23010ABE), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 22010ABE,
REG64( EX_2_SPR_COMMON_HOLD_OUT                                , RULL(0x25010ABE), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 24010ABE,
REG64( EX_3_SPR_COMMON_HOLD_OUT                                , RULL(0x27010ABE), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 26010ABE,
REG64( EX_4_SPR_COMMON_HOLD_OUT                                , RULL(0x29010ABE), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 28010ABE,
REG64( EX_5_SPR_COMMON_HOLD_OUT                                , RULL(0x2B010ABE), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2A010ABE,
REG64( EX_6_SPR_COMMON_HOLD_OUT                                , RULL(0x2D010ABE), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2C010ABE,
REG64( EX_7_SPR_COMMON_HOLD_OUT                                , RULL(0x2F010ABE), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2E010ABE,
REG64( EX_8_SPR_COMMON_HOLD_OUT                                , RULL(0x31010ABE), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 30010ABE,
REG64( EX_9_SPR_COMMON_HOLD_OUT                                , RULL(0x33010ABE), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 32010ABE,
REG64( EX_10_SPR_COMMON_HOLD_OUT                               , RULL(0x35010ABE), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 34010ABE,
REG64( EX_11_SPR_COMMON_HOLD_OUT                               , RULL(0x37010ABE), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 36010ABE,

REG64( C_SPR_CORE_HOLD_OUT                                     , RULL(0x20010ABB), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_SPR_CORE_HOLD_OUT                                   , RULL(0x20010ABB), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_SPR_CORE_HOLD_OUT                                   , RULL(0x21010ABB), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_SPR_CORE_HOLD_OUT                                   , RULL(0x22010ABB), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_SPR_CORE_HOLD_OUT                                   , RULL(0x23010ABB), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_SPR_CORE_HOLD_OUT                                   , RULL(0x24010ABB), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_SPR_CORE_HOLD_OUT                                   , RULL(0x25010ABB), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_SPR_CORE_HOLD_OUT                                   , RULL(0x26010ABB), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_SPR_CORE_HOLD_OUT                                   , RULL(0x27010ABB), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_SPR_CORE_HOLD_OUT                                   , RULL(0x28010ABB), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_SPR_CORE_HOLD_OUT                                   , RULL(0x29010ABB), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_SPR_CORE_HOLD_OUT                                  , RULL(0x2A010ABB), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_SPR_CORE_HOLD_OUT                                  , RULL(0x2B010ABB), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_SPR_CORE_HOLD_OUT                                  , RULL(0x2C010ABB), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_SPR_CORE_HOLD_OUT                                  , RULL(0x2D010ABB), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_SPR_CORE_HOLD_OUT                                  , RULL(0x2E010ABB), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_SPR_CORE_HOLD_OUT                                  , RULL(0x2F010ABB), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_SPR_CORE_HOLD_OUT                                  , RULL(0x30010ABB), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_SPR_CORE_HOLD_OUT                                  , RULL(0x31010ABB), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_SPR_CORE_HOLD_OUT                                  , RULL(0x32010ABB), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_SPR_CORE_HOLD_OUT                                  , RULL(0x33010ABB), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_SPR_CORE_HOLD_OUT                                  , RULL(0x34010ABB), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_SPR_CORE_HOLD_OUT                                  , RULL(0x35010ABB), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_SPR_CORE_HOLD_OUT                                  , RULL(0x36010ABB), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_SPR_CORE_HOLD_OUT                                  , RULL(0x37010ABB), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_0_L2_SPR_CORE_HOLD_OUT                               , RULL(0x20010ABB), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 21010ABB,
REG64( EX_10_L2_SPR_CORE_HOLD_OUT                              , RULL(0x34010ABB), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 35010ABB,
REG64( EX_11_L2_SPR_CORE_HOLD_OUT                              , RULL(0x36010ABB), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 37010ABB,
REG64( EX_1_L2_SPR_CORE_HOLD_OUT                               , RULL(0x22010ABB), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 23010ABB,
REG64( EX_2_L2_SPR_CORE_HOLD_OUT                               , RULL(0x24010ABB), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 25010ABB,
REG64( EX_3_L2_SPR_CORE_HOLD_OUT                               , RULL(0x26010ABB), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 27010ABB,
REG64( EX_4_L2_SPR_CORE_HOLD_OUT                               , RULL(0x28010ABB), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 29010ABB,
REG64( EX_5_L2_SPR_CORE_HOLD_OUT                               , RULL(0x2A010ABB), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B010ABB,
REG64( EX_6_L2_SPR_CORE_HOLD_OUT                               , RULL(0x2C010ABB), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D010ABB,
REG64( EX_7_L2_SPR_CORE_HOLD_OUT                               , RULL(0x2E010ABB), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F010ABB,
REG64( EX_8_L2_SPR_CORE_HOLD_OUT                               , RULL(0x30010ABB), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 31010ABB,
REG64( EX_9_L2_SPR_CORE_HOLD_OUT                               , RULL(0x32010ABB), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 33010ABB,
REG64( EX_L2_SPR_CORE_HOLD_OUT                                 , RULL(0x20010ABB), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RO   ); //DUPS: 21010ABB,

REG64( C_SPR_MODE                                              , RULL(0x20010A84), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SPR_MODE                                            , RULL(0x20010A84), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SPR_MODE                                            , RULL(0x21010A84), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SPR_MODE                                            , RULL(0x22010A84), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SPR_MODE                                            , RULL(0x23010A84), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SPR_MODE                                            , RULL(0x24010A84), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SPR_MODE                                            , RULL(0x25010A84), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SPR_MODE                                            , RULL(0x26010A84), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SPR_MODE                                            , RULL(0x27010A84), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SPR_MODE                                            , RULL(0x28010A84), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SPR_MODE                                            , RULL(0x29010A84), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SPR_MODE                                           , RULL(0x2A010A84), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SPR_MODE                                           , RULL(0x2B010A84), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SPR_MODE                                           , RULL(0x2C010A84), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SPR_MODE                                           , RULL(0x2D010A84), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SPR_MODE                                           , RULL(0x2E010A84), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SPR_MODE                                           , RULL(0x2F010A84), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SPR_MODE                                           , RULL(0x30010A84), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SPR_MODE                                           , RULL(0x31010A84), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SPR_MODE                                           , RULL(0x32010A84), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SPR_MODE                                           , RULL(0x33010A84), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SPR_MODE                                           , RULL(0x34010A84), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SPR_MODE                                           , RULL(0x35010A84), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SPR_MODE                                           , RULL(0x36010A84), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SPR_MODE                                           , RULL(0x37010A84), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_SPR_MODE                                        , RULL(0x21010A84), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 20010A84,
REG64( EX_10_L2_SPR_MODE                                       , RULL(0x35010A84), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 34010A84,
REG64( EX_11_L2_SPR_MODE                                       , RULL(0x37010A84), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 36010A84,
REG64( EX_1_L2_SPR_MODE                                        , RULL(0x23010A84), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 22010A84,
REG64( EX_2_L2_SPR_MODE                                        , RULL(0x25010A84), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 24010A84,
REG64( EX_3_L2_SPR_MODE                                        , RULL(0x27010A84), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 26010A84,
REG64( EX_4_L2_SPR_MODE                                        , RULL(0x29010A84), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 28010A84,
REG64( EX_5_L2_SPR_MODE                                        , RULL(0x2B010A84), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2A010A84,
REG64( EX_6_L2_SPR_MODE                                        , RULL(0x2D010A84), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2C010A84,
REG64( EX_7_L2_SPR_MODE                                        , RULL(0x2F010A84), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2E010A84,
REG64( EX_8_L2_SPR_MODE                                        , RULL(0x31010A84), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 30010A84,
REG64( EX_9_L2_SPR_MODE                                        , RULL(0x33010A84), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 32010A84,
REG64( EX_L2_SPR_MODE                                          , RULL(0x21010A84), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 20010A84,

REG64( C_SPURR_FREQ_DETECT_CYC_CNT                             , RULL(0x20010A9F), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x20010A9F), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x21010A9F), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x22010A9F), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x23010A9F), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x24010A9F), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x25010A9F), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x26010A9F), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x27010A9F), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x28010A9F), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_SPURR_FREQ_DETECT_CYC_CNT                           , RULL(0x29010A9F), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2A010A9F), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2B010A9F), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2C010A9F), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2D010A9F), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2E010A9F), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2F010A9F), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x30010A9F), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x31010A9F), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x32010A9F), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x33010A9F), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x34010A9F), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x35010A9F), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x36010A9F), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x37010A9F), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_SPURR_FREQ_DETECT_CYC_CNT                            , RULL(0x21010A9F), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010A9F,
REG64( EX_0_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x21010A9F), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010A9F,
REG64( EX_1_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x23010A9F), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 22010A9F,
REG64( EX_2_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x25010A9F), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 24010A9F,
REG64( EX_3_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x27010A9F), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 26010A9F,
REG64( EX_4_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x29010A9F), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 28010A9F,
REG64( EX_5_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2B010A9F), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2A010A9F,
REG64( EX_6_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2D010A9F), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2C010A9F,
REG64( EX_7_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x2F010A9F), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2E010A9F,
REG64( EX_8_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x31010A9F), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 30010A9F,
REG64( EX_9_SPURR_FREQ_DETECT_CYC_CNT                          , RULL(0x33010A9F), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 32010A9F,
REG64( EX_10_SPURR_FREQ_DETECT_CYC_CNT                         , RULL(0x35010A9F), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 34010A9F,
REG64( EX_11_SPURR_FREQ_DETECT_CYC_CNT                         , RULL(0x37010A9F), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 36010A9F,

REG64( C_SPURR_FREQ_REF                                        , RULL(0x20010AA1), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_SPURR_FREQ_REF                                      , RULL(0x20010AA1), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_SPURR_FREQ_REF                                      , RULL(0x21010AA1), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_SPURR_FREQ_REF                                      , RULL(0x22010AA1), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_SPURR_FREQ_REF                                      , RULL(0x23010AA1), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_SPURR_FREQ_REF                                      , RULL(0x24010AA1), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_SPURR_FREQ_REF                                      , RULL(0x25010AA1), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_SPURR_FREQ_REF                                      , RULL(0x26010AA1), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_SPURR_FREQ_REF                                      , RULL(0x27010AA1), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_SPURR_FREQ_REF                                      , RULL(0x28010AA1), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_SPURR_FREQ_REF                                      , RULL(0x29010AA1), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_SPURR_FREQ_REF                                     , RULL(0x2A010AA1), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_SPURR_FREQ_REF                                     , RULL(0x2B010AA1), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_SPURR_FREQ_REF                                     , RULL(0x2C010AA1), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_SPURR_FREQ_REF                                     , RULL(0x2D010AA1), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_SPURR_FREQ_REF                                     , RULL(0x2E010AA1), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_SPURR_FREQ_REF                                     , RULL(0x2F010AA1), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_SPURR_FREQ_REF                                     , RULL(0x30010AA1), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_SPURR_FREQ_REF                                     , RULL(0x31010AA1), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_SPURR_FREQ_REF                                     , RULL(0x32010AA1), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_SPURR_FREQ_REF                                     , RULL(0x33010AA1), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_SPURR_FREQ_REF                                     , RULL(0x34010AA1), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_SPURR_FREQ_REF                                     , RULL(0x35010AA1), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_SPURR_FREQ_REF                                     , RULL(0x36010AA1), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_SPURR_FREQ_REF                                     , RULL(0x37010AA1), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_SPURR_FREQ_REF                                  , RULL(0x21010AA1), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010AA1,
REG64( EX_10_L2_SPURR_FREQ_REF                                 , RULL(0x35010AA1), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010AA1,
REG64( EX_11_L2_SPURR_FREQ_REF                                 , RULL(0x37010AA1), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010AA1,
REG64( EX_1_L2_SPURR_FREQ_REF                                  , RULL(0x23010AA1), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010AA1,
REG64( EX_2_L2_SPURR_FREQ_REF                                  , RULL(0x25010AA1), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010AA1,
REG64( EX_3_L2_SPURR_FREQ_REF                                  , RULL(0x27010AA1), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010AA1,
REG64( EX_4_L2_SPURR_FREQ_REF                                  , RULL(0x29010AA1), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010AA1,
REG64( EX_5_L2_SPURR_FREQ_REF                                  , RULL(0x2B010AA1), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010AA1,
REG64( EX_6_L2_SPURR_FREQ_REF                                  , RULL(0x2D010AA1), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010AA1,
REG64( EX_7_L2_SPURR_FREQ_REF                                  , RULL(0x2F010AA1), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010AA1,
REG64( EX_8_L2_SPURR_FREQ_REF                                  , RULL(0x31010AA1), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010AA1,
REG64( EX_9_L2_SPURR_FREQ_REF                                  , RULL(0x33010AA1), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010AA1,
REG64( EX_L2_SPURR_FREQ_REF                                    , RULL(0x21010AA1), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010AA1,

REG64( C_SPURR_FREQ_SCALE                                      , RULL(0x20010AA0), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_SPURR_FREQ_SCALE                                    , RULL(0x20010AA0), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_SPURR_FREQ_SCALE                                    , RULL(0x21010AA0), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_SPURR_FREQ_SCALE                                    , RULL(0x22010AA0), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_SPURR_FREQ_SCALE                                    , RULL(0x23010AA0), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_SPURR_FREQ_SCALE                                    , RULL(0x24010AA0), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_SPURR_FREQ_SCALE                                    , RULL(0x25010AA0), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_SPURR_FREQ_SCALE                                    , RULL(0x26010AA0), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_SPURR_FREQ_SCALE                                    , RULL(0x27010AA0), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_SPURR_FREQ_SCALE                                    , RULL(0x28010AA0), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_SPURR_FREQ_SCALE                                    , RULL(0x29010AA0), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_SPURR_FREQ_SCALE                                   , RULL(0x2A010AA0), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_SPURR_FREQ_SCALE                                   , RULL(0x2B010AA0), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_SPURR_FREQ_SCALE                                   , RULL(0x2C010AA0), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_SPURR_FREQ_SCALE                                   , RULL(0x2D010AA0), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_SPURR_FREQ_SCALE                                   , RULL(0x2E010AA0), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_SPURR_FREQ_SCALE                                   , RULL(0x2F010AA0), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_SPURR_FREQ_SCALE                                   , RULL(0x30010AA0), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_SPURR_FREQ_SCALE                                   , RULL(0x31010AA0), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_SPURR_FREQ_SCALE                                   , RULL(0x32010AA0), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_SPURR_FREQ_SCALE                                   , RULL(0x33010AA0), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_SPURR_FREQ_SCALE                                   , RULL(0x34010AA0), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_SPURR_FREQ_SCALE                                   , RULL(0x35010AA0), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_SPURR_FREQ_SCALE                                   , RULL(0x36010AA0), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_SPURR_FREQ_SCALE                                   , RULL(0x37010AA0), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_SPURR_FREQ_SCALE                                , RULL(0x21010AA0), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010AA0,
REG64( EX_10_L2_SPURR_FREQ_SCALE                               , RULL(0x35010AA0), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010AA0,
REG64( EX_11_L2_SPURR_FREQ_SCALE                               , RULL(0x37010AA0), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010AA0,
REG64( EX_1_L2_SPURR_FREQ_SCALE                                , RULL(0x23010AA0), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010AA0,
REG64( EX_2_L2_SPURR_FREQ_SCALE                                , RULL(0x25010AA0), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010AA0,
REG64( EX_3_L2_SPURR_FREQ_SCALE                                , RULL(0x27010AA0), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010AA0,
REG64( EX_4_L2_SPURR_FREQ_SCALE                                , RULL(0x29010AA0), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010AA0,
REG64( EX_5_L2_SPURR_FREQ_SCALE                                , RULL(0x2B010AA0), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010AA0,
REG64( EX_6_L2_SPURR_FREQ_SCALE                                , RULL(0x2D010AA0), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010AA0,
REG64( EX_7_L2_SPURR_FREQ_SCALE                                , RULL(0x2F010AA0), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010AA0,
REG64( EX_8_L2_SPURR_FREQ_SCALE                                , RULL(0x31010AA0), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010AA0,
REG64( EX_9_L2_SPURR_FREQ_SCALE                                , RULL(0x33010AA0), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010AA0,
REG64( EX_L2_SPURR_FREQ_SCALE                                  , RULL(0x21010AA0), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010AA0,

REG64( C_SRC_MASK                                              , RULL(0x20010AAF), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SRC_MASK                                            , RULL(0x20010AAF), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SRC_MASK                                            , RULL(0x21010AAF), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SRC_MASK                                            , RULL(0x22010AAF), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SRC_MASK                                            , RULL(0x23010AAF), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SRC_MASK                                            , RULL(0x24010AAF), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SRC_MASK                                            , RULL(0x25010AAF), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SRC_MASK                                            , RULL(0x26010AAF), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SRC_MASK                                            , RULL(0x27010AAF), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SRC_MASK                                            , RULL(0x28010AAF), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SRC_MASK                                            , RULL(0x29010AAF), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SRC_MASK                                           , RULL(0x2A010AAF), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SRC_MASK                                           , RULL(0x2B010AAF), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SRC_MASK                                           , RULL(0x2C010AAF), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SRC_MASK                                           , RULL(0x2D010AAF), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SRC_MASK                                           , RULL(0x2E010AAF), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SRC_MASK                                           , RULL(0x2F010AAF), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SRC_MASK                                           , RULL(0x30010AAF), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SRC_MASK                                           , RULL(0x31010AAF), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SRC_MASK                                           , RULL(0x32010AAF), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SRC_MASK                                           , RULL(0x33010AAF), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SRC_MASK                                           , RULL(0x34010AAF), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SRC_MASK                                           , RULL(0x35010AAF), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SRC_MASK                                           , RULL(0x36010AAF), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SRC_MASK                                           , RULL(0x37010AAF), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_SRC_MASK                                             , RULL(0x20010AAF), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010AAF,
REG64( EX_0_SRC_MASK                                           , RULL(0x20010AAF), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010AAF,
REG64( EX_1_SRC_MASK                                           , RULL(0x22010AAF), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010AAF,
REG64( EX_2_SRC_MASK                                           , RULL(0x24010AAF), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010AAF,
REG64( EX_3_SRC_MASK                                           , RULL(0x26010AAF), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010AAF,
REG64( EX_4_SRC_MASK                                           , RULL(0x28010AAF), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010AAF,
REG64( EX_5_SRC_MASK                                           , RULL(0x2A010AAF), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010AAF,
REG64( EX_6_SRC_MASK                                           , RULL(0x2C010AAF), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010AAF,
REG64( EX_7_SRC_MASK                                           , RULL(0x2E010AAF), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010AAF,
REG64( EX_8_SRC_MASK                                           , RULL(0x30010AAF), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010AAF,
REG64( EX_9_SRC_MASK                                           , RULL(0x32010AAF), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010AAF,
REG64( EX_10_SRC_MASK                                          , RULL(0x34010AAF), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010AAF,
REG64( EX_11_SRC_MASK                                          , RULL(0x36010AAF), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010AAF,

REG64( C_SUM_MASK_REG                                          , RULL(0x20040017), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SUM_MASK_REG                                        , RULL(0x20040017), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SUM_MASK_REG                                        , RULL(0x21040017), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SUM_MASK_REG                                        , RULL(0x22040017), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SUM_MASK_REG                                        , RULL(0x23040017), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SUM_MASK_REG                                        , RULL(0x24040017), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SUM_MASK_REG                                        , RULL(0x25040017), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SUM_MASK_REG                                        , RULL(0x26040017), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SUM_MASK_REG                                        , RULL(0x27040017), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SUM_MASK_REG                                        , RULL(0x28040017), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SUM_MASK_REG                                        , RULL(0x29040017), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SUM_MASK_REG                                       , RULL(0x2A040017), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SUM_MASK_REG                                       , RULL(0x2B040017), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SUM_MASK_REG                                       , RULL(0x2C040017), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SUM_MASK_REG                                       , RULL(0x2D040017), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SUM_MASK_REG                                       , RULL(0x2E040017), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SUM_MASK_REG                                       , RULL(0x2F040017), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SUM_MASK_REG                                       , RULL(0x30040017), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SUM_MASK_REG                                       , RULL(0x31040017), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SUM_MASK_REG                                       , RULL(0x32040017), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SUM_MASK_REG                                       , RULL(0x33040017), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SUM_MASK_REG                                       , RULL(0x34040017), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SUM_MASK_REG                                       , RULL(0x35040017), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SUM_MASK_REG                                       , RULL(0x36040017), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SUM_MASK_REG                                       , RULL(0x37040017), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SUM_MASK_REG                                         , RULL(0x10040017), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SUM_MASK_REG                                       , RULL(0x10040017), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SUM_MASK_REG                                       , RULL(0x11040017), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SUM_MASK_REG                                       , RULL(0x12040017), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SUM_MASK_REG                                       , RULL(0x13040017), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SUM_MASK_REG                                       , RULL(0x14040017), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SUM_MASK_REG                                       , RULL(0x15040017), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SUM_MASK_REG                                         , RULL(0x20040017), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040017,
REG64( EX_0_SUM_MASK_REG                                       , RULL(0x20040017), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040017,
REG64( EX_1_SUM_MASK_REG                                       , RULL(0x22040017), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040017,
REG64( EX_2_SUM_MASK_REG                                       , RULL(0x24040017), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040017,
REG64( EX_3_SUM_MASK_REG                                       , RULL(0x26040017), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040017,
REG64( EX_4_SUM_MASK_REG                                       , RULL(0x28040017), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040017,
REG64( EX_5_SUM_MASK_REG                                       , RULL(0x2A040017), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040017,
REG64( EX_6_SUM_MASK_REG                                       , RULL(0x2C040017), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040017,
REG64( EX_7_SUM_MASK_REG                                       , RULL(0x2E040017), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040017,
REG64( EX_8_SUM_MASK_REG                                       , RULL(0x30040017), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040017,
REG64( EX_9_SUM_MASK_REG                                       , RULL(0x32040017), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040017,
REG64( EX_10_SUM_MASK_REG                                      , RULL(0x34040017), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040017,
REG64( EX_11_SUM_MASK_REG                                      , RULL(0x36040017), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040017,

REG64( PEC_0_SUM_MASK_REG                                      , RULL(0x0D040017), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SUM_MASK_REG                                      , RULL(0x0E040017), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SUM_MASK_REG                                      , RULL(0x0F040017), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_SYNC_CONFIG                                           , RULL(0x20030000), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_SYNC_CONFIG                                         , RULL(0x20030000), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_SYNC_CONFIG                                         , RULL(0x21030000), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_SYNC_CONFIG                                         , RULL(0x22030000), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_SYNC_CONFIG                                         , RULL(0x23030000), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_SYNC_CONFIG                                         , RULL(0x24030000), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_SYNC_CONFIG                                         , RULL(0x25030000), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_SYNC_CONFIG                                         , RULL(0x26030000), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_SYNC_CONFIG                                         , RULL(0x27030000), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_SYNC_CONFIG                                         , RULL(0x28030000), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_SYNC_CONFIG                                         , RULL(0x29030000), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_SYNC_CONFIG                                        , RULL(0x2A030000), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_SYNC_CONFIG                                        , RULL(0x2B030000), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_SYNC_CONFIG                                        , RULL(0x2C030000), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_SYNC_CONFIG                                        , RULL(0x2D030000), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_SYNC_CONFIG                                        , RULL(0x2E030000), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_SYNC_CONFIG                                        , RULL(0x2F030000), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_SYNC_CONFIG                                        , RULL(0x30030000), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_SYNC_CONFIG                                        , RULL(0x31030000), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_SYNC_CONFIG                                        , RULL(0x32030000), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_SYNC_CONFIG                                        , RULL(0x33030000), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_SYNC_CONFIG                                        , RULL(0x34030000), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_SYNC_CONFIG                                        , RULL(0x35030000), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_SYNC_CONFIG                                        , RULL(0x36030000), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_SYNC_CONFIG                                        , RULL(0x37030000), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_SYNC_CONFIG                                          , RULL(0x10030000), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_SYNC_CONFIG                                        , RULL(0x10030000), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_SYNC_CONFIG                                        , RULL(0x11030000), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_SYNC_CONFIG                                        , RULL(0x12030000), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_SYNC_CONFIG                                        , RULL(0x13030000), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_SYNC_CONFIG                                        , RULL(0x14030000), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_SYNC_CONFIG                                        , RULL(0x15030000), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_SYNC_CONFIG                                          , RULL(0x20030000), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21030000,
REG64( EX_0_SYNC_CONFIG                                        , RULL(0x20030000), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21030000,
REG64( EX_1_SYNC_CONFIG                                        , RULL(0x22030000), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23030000,
REG64( EX_2_SYNC_CONFIG                                        , RULL(0x24030000), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25030000,
REG64( EX_3_SYNC_CONFIG                                        , RULL(0x26030000), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27030000,
REG64( EX_4_SYNC_CONFIG                                        , RULL(0x28030000), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29030000,
REG64( EX_5_SYNC_CONFIG                                        , RULL(0x2A030000), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B030000,
REG64( EX_6_SYNC_CONFIG                                        , RULL(0x2C030000), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D030000,
REG64( EX_7_SYNC_CONFIG                                        , RULL(0x2E030000), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F030000,
REG64( EX_8_SYNC_CONFIG                                        , RULL(0x30030000), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31030000,
REG64( EX_9_SYNC_CONFIG                                        , RULL(0x32030000), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33030000,
REG64( EX_10_SYNC_CONFIG                                       , RULL(0x34030000), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35030000,
REG64( EX_11_SYNC_CONFIG                                       , RULL(0x36030000), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37030000,

REG64( PEC_0_SYNC_CONFIG                                       , RULL(0x0D030000), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_SYNC_CONFIG                                       , RULL(0x0E030000), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_SYNC_CONFIG                                       , RULL(0x0F030000), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_T0_PMU_SCOM                                           , RULL(0x20010AAA), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_T0_PMU_SCOM                                         , RULL(0x20010AAA), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_T0_PMU_SCOM                                         , RULL(0x21010AAA), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_T0_PMU_SCOM                                         , RULL(0x22010AAA), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_T0_PMU_SCOM                                         , RULL(0x23010AAA), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_T0_PMU_SCOM                                         , RULL(0x24010AAA), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_T0_PMU_SCOM                                         , RULL(0x25010AAA), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_T0_PMU_SCOM                                         , RULL(0x26010AAA), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_T0_PMU_SCOM                                         , RULL(0x27010AAA), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_T0_PMU_SCOM                                         , RULL(0x28010AAA), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_T0_PMU_SCOM                                         , RULL(0x29010AAA), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_T0_PMU_SCOM                                        , RULL(0x2A010AAA), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_T0_PMU_SCOM                                        , RULL(0x2B010AAA), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_T0_PMU_SCOM                                        , RULL(0x2C010AAA), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_T0_PMU_SCOM                                        , RULL(0x2D010AAA), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_T0_PMU_SCOM                                        , RULL(0x2E010AAA), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_T0_PMU_SCOM                                        , RULL(0x2F010AAA), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_T0_PMU_SCOM                                        , RULL(0x30010AAA), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_T0_PMU_SCOM                                        , RULL(0x31010AAA), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_T0_PMU_SCOM                                        , RULL(0x32010AAA), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_T0_PMU_SCOM                                        , RULL(0x33010AAA), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_T0_PMU_SCOM                                        , RULL(0x34010AAA), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_T0_PMU_SCOM                                        , RULL(0x35010AAA), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_T0_PMU_SCOM                                        , RULL(0x36010AAA), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_T0_PMU_SCOM                                        , RULL(0x37010AAA), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_T0_PMU_SCOM                                     , RULL(0x20010AAA), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010AAA,
REG64( EX_10_L2_T0_PMU_SCOM                                    , RULL(0x34010AAA), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010AAA,
REG64( EX_11_L2_T0_PMU_SCOM                                    , RULL(0x36010AAA), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010AAA,
REG64( EX_1_L2_T0_PMU_SCOM                                     , RULL(0x22010AAA), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010AAA,
REG64( EX_2_L2_T0_PMU_SCOM                                     , RULL(0x24010AAA), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010AAA,
REG64( EX_3_L2_T0_PMU_SCOM                                     , RULL(0x26010AAA), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010AAA,
REG64( EX_4_L2_T0_PMU_SCOM                                     , RULL(0x28010AAA), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010AAA,
REG64( EX_5_L2_T0_PMU_SCOM                                     , RULL(0x2A010AAA), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010AAA,
REG64( EX_6_L2_T0_PMU_SCOM                                     , RULL(0x2C010AAA), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010AAA,
REG64( EX_7_L2_T0_PMU_SCOM                                     , RULL(0x2E010AAA), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010AAA,
REG64( EX_8_L2_T0_PMU_SCOM                                     , RULL(0x30010AAA), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010AAA,
REG64( EX_9_L2_T0_PMU_SCOM                                     , RULL(0x32010AAA), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010AAA,
REG64( EX_L2_T0_PMU_SCOM                                       , RULL(0x20010AAA), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010AAA,

REG64( C_T1_PMU_SCOM                                           , RULL(0x20010AAB), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_T1_PMU_SCOM                                         , RULL(0x20010AAB), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_T1_PMU_SCOM                                         , RULL(0x21010AAB), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_T1_PMU_SCOM                                         , RULL(0x22010AAB), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_T1_PMU_SCOM                                         , RULL(0x23010AAB), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_T1_PMU_SCOM                                         , RULL(0x24010AAB), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_T1_PMU_SCOM                                         , RULL(0x25010AAB), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_T1_PMU_SCOM                                         , RULL(0x26010AAB), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_T1_PMU_SCOM                                         , RULL(0x27010AAB), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_T1_PMU_SCOM                                         , RULL(0x28010AAB), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_T1_PMU_SCOM                                         , RULL(0x29010AAB), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_T1_PMU_SCOM                                        , RULL(0x2A010AAB), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_T1_PMU_SCOM                                        , RULL(0x2B010AAB), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_T1_PMU_SCOM                                        , RULL(0x2C010AAB), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_T1_PMU_SCOM                                        , RULL(0x2D010AAB), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_T1_PMU_SCOM                                        , RULL(0x2E010AAB), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_T1_PMU_SCOM                                        , RULL(0x2F010AAB), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_T1_PMU_SCOM                                        , RULL(0x30010AAB), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_T1_PMU_SCOM                                        , RULL(0x31010AAB), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_T1_PMU_SCOM                                        , RULL(0x32010AAB), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_T1_PMU_SCOM                                        , RULL(0x33010AAB), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_T1_PMU_SCOM                                        , RULL(0x34010AAB), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_T1_PMU_SCOM                                        , RULL(0x35010AAB), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_T1_PMU_SCOM                                        , RULL(0x36010AAB), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_T1_PMU_SCOM                                        , RULL(0x37010AAB), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_T1_PMU_SCOM                                     , RULL(0x20010AAB), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010AAB,
REG64( EX_10_L2_T1_PMU_SCOM                                    , RULL(0x34010AAB), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010AAB,
REG64( EX_11_L2_T1_PMU_SCOM                                    , RULL(0x36010AAB), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010AAB,
REG64( EX_1_L2_T1_PMU_SCOM                                     , RULL(0x22010AAB), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010AAB,
REG64( EX_2_L2_T1_PMU_SCOM                                     , RULL(0x24010AAB), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010AAB,
REG64( EX_3_L2_T1_PMU_SCOM                                     , RULL(0x26010AAB), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010AAB,
REG64( EX_4_L2_T1_PMU_SCOM                                     , RULL(0x28010AAB), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010AAB,
REG64( EX_5_L2_T1_PMU_SCOM                                     , RULL(0x2A010AAB), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010AAB,
REG64( EX_6_L2_T1_PMU_SCOM                                     , RULL(0x2C010AAB), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010AAB,
REG64( EX_7_L2_T1_PMU_SCOM                                     , RULL(0x2E010AAB), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010AAB,
REG64( EX_8_L2_T1_PMU_SCOM                                     , RULL(0x30010AAB), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010AAB,
REG64( EX_9_L2_T1_PMU_SCOM                                     , RULL(0x32010AAB), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010AAB,
REG64( EX_L2_T1_PMU_SCOM                                       , RULL(0x20010AAB), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010AAB,

REG64( C_T2_PMU_SCOM                                           , RULL(0x20010AAC), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_T2_PMU_SCOM                                         , RULL(0x20010AAC), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_T2_PMU_SCOM                                         , RULL(0x21010AAC), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_T2_PMU_SCOM                                         , RULL(0x22010AAC), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_T2_PMU_SCOM                                         , RULL(0x23010AAC), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_T2_PMU_SCOM                                         , RULL(0x24010AAC), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_T2_PMU_SCOM                                         , RULL(0x25010AAC), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_T2_PMU_SCOM                                         , RULL(0x26010AAC), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_T2_PMU_SCOM                                         , RULL(0x27010AAC), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_T2_PMU_SCOM                                         , RULL(0x28010AAC), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_T2_PMU_SCOM                                         , RULL(0x29010AAC), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_T2_PMU_SCOM                                        , RULL(0x2A010AAC), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_T2_PMU_SCOM                                        , RULL(0x2B010AAC), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_T2_PMU_SCOM                                        , RULL(0x2C010AAC), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_T2_PMU_SCOM                                        , RULL(0x2D010AAC), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_T2_PMU_SCOM                                        , RULL(0x2E010AAC), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_T2_PMU_SCOM                                        , RULL(0x2F010AAC), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_T2_PMU_SCOM                                        , RULL(0x30010AAC), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_T2_PMU_SCOM                                        , RULL(0x31010AAC), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_T2_PMU_SCOM                                        , RULL(0x32010AAC), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_T2_PMU_SCOM                                        , RULL(0x33010AAC), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_T2_PMU_SCOM                                        , RULL(0x34010AAC), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_T2_PMU_SCOM                                        , RULL(0x35010AAC), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_T2_PMU_SCOM                                        , RULL(0x36010AAC), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_T2_PMU_SCOM                                        , RULL(0x37010AAC), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_T2_PMU_SCOM                                     , RULL(0x20010AAC), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010AAC,
REG64( EX_10_L2_T2_PMU_SCOM                                    , RULL(0x34010AAC), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010AAC,
REG64( EX_11_L2_T2_PMU_SCOM                                    , RULL(0x36010AAC), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010AAC,
REG64( EX_1_L2_T2_PMU_SCOM                                     , RULL(0x22010AAC), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010AAC,
REG64( EX_2_L2_T2_PMU_SCOM                                     , RULL(0x24010AAC), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010AAC,
REG64( EX_3_L2_T2_PMU_SCOM                                     , RULL(0x26010AAC), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010AAC,
REG64( EX_4_L2_T2_PMU_SCOM                                     , RULL(0x28010AAC), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010AAC,
REG64( EX_5_L2_T2_PMU_SCOM                                     , RULL(0x2A010AAC), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010AAC,
REG64( EX_6_L2_T2_PMU_SCOM                                     , RULL(0x2C010AAC), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010AAC,
REG64( EX_7_L2_T2_PMU_SCOM                                     , RULL(0x2E010AAC), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010AAC,
REG64( EX_8_L2_T2_PMU_SCOM                                     , RULL(0x30010AAC), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010AAC,
REG64( EX_9_L2_T2_PMU_SCOM                                     , RULL(0x32010AAC), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010AAC,
REG64( EX_L2_T2_PMU_SCOM                                       , RULL(0x20010AAC), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010AAC,

REG64( C_T3_PMU_SCOM                                           , RULL(0x20010AAD), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_T3_PMU_SCOM                                         , RULL(0x20010AAD), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_T3_PMU_SCOM                                         , RULL(0x21010AAD), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_T3_PMU_SCOM                                         , RULL(0x22010AAD), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_T3_PMU_SCOM                                         , RULL(0x23010AAD), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_T3_PMU_SCOM                                         , RULL(0x24010AAD), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_T3_PMU_SCOM                                         , RULL(0x25010AAD), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_T3_PMU_SCOM                                         , RULL(0x26010AAD), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_T3_PMU_SCOM                                         , RULL(0x27010AAD), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_T3_PMU_SCOM                                         , RULL(0x28010AAD), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_T3_PMU_SCOM                                         , RULL(0x29010AAD), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_T3_PMU_SCOM                                        , RULL(0x2A010AAD), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_T3_PMU_SCOM                                        , RULL(0x2B010AAD), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_T3_PMU_SCOM                                        , RULL(0x2C010AAD), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_T3_PMU_SCOM                                        , RULL(0x2D010AAD), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_T3_PMU_SCOM                                        , RULL(0x2E010AAD), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_T3_PMU_SCOM                                        , RULL(0x2F010AAD), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_T3_PMU_SCOM                                        , RULL(0x30010AAD), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_T3_PMU_SCOM                                        , RULL(0x31010AAD), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_T3_PMU_SCOM                                        , RULL(0x32010AAD), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_T3_PMU_SCOM                                        , RULL(0x33010AAD), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_T3_PMU_SCOM                                        , RULL(0x34010AAD), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_T3_PMU_SCOM                                        , RULL(0x35010AAD), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_T3_PMU_SCOM                                        , RULL(0x36010AAD), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_T3_PMU_SCOM                                        , RULL(0x37010AAD), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_T3_PMU_SCOM                                     , RULL(0x20010AAD), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 21010AAD,
REG64( EX_10_L2_T3_PMU_SCOM                                    , RULL(0x34010AAD), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 35010AAD,
REG64( EX_11_L2_T3_PMU_SCOM                                    , RULL(0x36010AAD), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 37010AAD,
REG64( EX_1_L2_T3_PMU_SCOM                                     , RULL(0x22010AAD), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 23010AAD,
REG64( EX_2_L2_T3_PMU_SCOM                                     , RULL(0x24010AAD), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 25010AAD,
REG64( EX_3_L2_T3_PMU_SCOM                                     , RULL(0x26010AAD), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 27010AAD,
REG64( EX_4_L2_T3_PMU_SCOM                                     , RULL(0x28010AAD), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 29010AAD,
REG64( EX_5_L2_T3_PMU_SCOM                                     , RULL(0x2A010AAD), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2B010AAD,
REG64( EX_6_L2_T3_PMU_SCOM                                     , RULL(0x2C010AAD), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2D010AAD,
REG64( EX_7_L2_T3_PMU_SCOM                                     , RULL(0x2E010AAD), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2F010AAD,
REG64( EX_8_L2_T3_PMU_SCOM                                     , RULL(0x30010AAD), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 31010AAD,
REG64( EX_9_L2_T3_PMU_SCOM                                     , RULL(0x32010AAD), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 33010AAD,
REG64( EX_L2_T3_PMU_SCOM                                       , RULL(0x20010AAD), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 21010AAD,

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_HI_DATA_REG                 , RULL(0x0D010400), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_LO_DATA_REG                 , RULL(0x0D010401), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_TRCTRL_CONFIG               , RULL(0x0D010402), SH_UNT_PEC_0    , SH_ACS_SCOM      );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_TRDATA_CONFIG_0             , RULL(0x0D010403), SH_UNT_PEC_0    , SH_ACS_SCOM      );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_TRDATA_CONFIG_1             , RULL(0x0D010404), SH_UNT_PEC_0    , SH_ACS_SCOM      );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_TRDATA_CONFIG_2             , RULL(0x0D010405), SH_UNT_PEC_0    , SH_ACS_SCOM      );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_TRDATA_CONFIG_3             , RULL(0x0D010406), SH_UNT_PEC_0    , SH_ACS_SCOM      );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_TRDATA_CONFIG_4             , RULL(0x0D010407), SH_UNT_PEC_0    , SH_ACS_SCOM      );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_TRDATA_CONFIG_5             , RULL(0x0D010408), SH_UNT_PEC_0    , SH_ACS_SCOM      );

REG64( PEC_0_TCPCI0_TRA0_TR0_TRACE_TRDATA_CONFIG_9             , RULL(0x0D010409), SH_UNT_PEC_0    , SH_ACS_SCOM      );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_HI_DATA_REG                 , RULL(0x0E010400), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_LO_DATA_REG                 , RULL(0x0E010401), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_TRCTRL_CONFIG               , RULL(0x0E010402), SH_UNT_PEC_1    , SH_ACS_SCOM      );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_TRDATA_CONFIG_0             , RULL(0x0E010403), SH_UNT_PEC_1    , SH_ACS_SCOM      );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_TRDATA_CONFIG_1             , RULL(0x0E010404), SH_UNT_PEC_1    , SH_ACS_SCOM      );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_TRDATA_CONFIG_2             , RULL(0x0E010405), SH_UNT_PEC_1    , SH_ACS_SCOM      );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_TRDATA_CONFIG_3             , RULL(0x0E010406), SH_UNT_PEC_1    , SH_ACS_SCOM      );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_TRDATA_CONFIG_4             , RULL(0x0E010407), SH_UNT_PEC_1    , SH_ACS_SCOM      );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_TRDATA_CONFIG_5             , RULL(0x0E010408), SH_UNT_PEC_1    , SH_ACS_SCOM      );

REG64( PEC_1_TCPCI1_TRA0_TR0_TRACE_TRDATA_CONFIG_9             , RULL(0x0E010409), SH_UNT_PEC_1    , SH_ACS_SCOM      );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_HI_DATA_REG                 , RULL(0x0F010400), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_LO_DATA_REG                 , RULL(0x0F010401), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_TRCTRL_CONFIG               , RULL(0x0F010402), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_TRDATA_CONFIG_0             , RULL(0x0F010403), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_TRDATA_CONFIG_1             , RULL(0x0F010404), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_TRDATA_CONFIG_2             , RULL(0x0F010405), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_TRDATA_CONFIG_3             , RULL(0x0F010406), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_TRDATA_CONFIG_4             , RULL(0x0F010407), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_TRDATA_CONFIG_5             , RULL(0x0F010408), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( PEC_2_TCPCI2_TRA0_TR0_TRACE_TRDATA_CONFIG_9             , RULL(0x0F010409), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_TFAC_HOLD_OUT                                         , RULL(0x20010ABD), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_TFAC_HOLD_OUT                                       , RULL(0x20010ABD), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_TFAC_HOLD_OUT                                       , RULL(0x21010ABD), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_TFAC_HOLD_OUT                                       , RULL(0x22010ABD), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_TFAC_HOLD_OUT                                       , RULL(0x23010ABD), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_TFAC_HOLD_OUT                                       , RULL(0x24010ABD), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_TFAC_HOLD_OUT                                       , RULL(0x25010ABD), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_TFAC_HOLD_OUT                                       , RULL(0x26010ABD), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_TFAC_HOLD_OUT                                       , RULL(0x27010ABD), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_TFAC_HOLD_OUT                                       , RULL(0x28010ABD), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_TFAC_HOLD_OUT                                       , RULL(0x29010ABD), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_TFAC_HOLD_OUT                                      , RULL(0x2A010ABD), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_TFAC_HOLD_OUT                                      , RULL(0x2B010ABD), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_TFAC_HOLD_OUT                                      , RULL(0x2C010ABD), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_TFAC_HOLD_OUT                                      , RULL(0x2D010ABD), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_TFAC_HOLD_OUT                                      , RULL(0x2E010ABD), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_TFAC_HOLD_OUT                                      , RULL(0x2F010ABD), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_TFAC_HOLD_OUT                                      , RULL(0x30010ABD), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_TFAC_HOLD_OUT                                      , RULL(0x31010ABD), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_TFAC_HOLD_OUT                                      , RULL(0x32010ABD), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_TFAC_HOLD_OUT                                      , RULL(0x33010ABD), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_TFAC_HOLD_OUT                                      , RULL(0x34010ABD), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_TFAC_HOLD_OUT                                      , RULL(0x35010ABD), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_TFAC_HOLD_OUT                                      , RULL(0x36010ABD), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_TFAC_HOLD_OUT                                      , RULL(0x37010ABD), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_0_L2_TFAC_HOLD_OUT                                   , RULL(0x21010ABD), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010ABD,
REG64( EX_10_L2_TFAC_HOLD_OUT                                  , RULL(0x35010ABD), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 34010ABD,
REG64( EX_11_L2_TFAC_HOLD_OUT                                  , RULL(0x37010ABD), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 36010ABD,
REG64( EX_1_L2_TFAC_HOLD_OUT                                   , RULL(0x23010ABD), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 22010ABD,
REG64( EX_2_L2_TFAC_HOLD_OUT                                   , RULL(0x25010ABD), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 24010ABD,
REG64( EX_3_L2_TFAC_HOLD_OUT                                   , RULL(0x27010ABD), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 26010ABD,
REG64( EX_4_L2_TFAC_HOLD_OUT                                   , RULL(0x29010ABD), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 28010ABD,
REG64( EX_5_L2_TFAC_HOLD_OUT                                   , RULL(0x2B010ABD), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2A010ABD,
REG64( EX_6_L2_TFAC_HOLD_OUT                                   , RULL(0x2D010ABD), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2C010ABD,
REG64( EX_7_L2_TFAC_HOLD_OUT                                   , RULL(0x2F010ABD), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2E010ABD,
REG64( EX_8_L2_TFAC_HOLD_OUT                                   , RULL(0x31010ABD), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 30010ABD,
REG64( EX_9_L2_TFAC_HOLD_OUT                                   , RULL(0x33010ABD), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 32010ABD,
REG64( EX_L2_TFAC_HOLD_OUT                                     , RULL(0x21010ABD), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010ABD,

REG64( C_THERM_MODE_REG                                        , RULL(0x2005000F), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_THERM_MODE_REG                                      , RULL(0x2005000F), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_THERM_MODE_REG                                      , RULL(0x2105000F), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_THERM_MODE_REG                                      , RULL(0x2205000F), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_THERM_MODE_REG                                      , RULL(0x2305000F), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_THERM_MODE_REG                                      , RULL(0x2405000F), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_THERM_MODE_REG                                      , RULL(0x2505000F), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_THERM_MODE_REG                                      , RULL(0x2605000F), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_THERM_MODE_REG                                      , RULL(0x2705000F), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_THERM_MODE_REG                                      , RULL(0x2805000F), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_THERM_MODE_REG                                      , RULL(0x2905000F), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_THERM_MODE_REG                                     , RULL(0x2A05000F), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_THERM_MODE_REG                                     , RULL(0x2B05000F), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_THERM_MODE_REG                                     , RULL(0x2C05000F), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_THERM_MODE_REG                                     , RULL(0x2D05000F), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_THERM_MODE_REG                                     , RULL(0x2E05000F), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_THERM_MODE_REG                                     , RULL(0x2F05000F), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_THERM_MODE_REG                                     , RULL(0x3005000F), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_THERM_MODE_REG                                     , RULL(0x3105000F), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_THERM_MODE_REG                                     , RULL(0x3205000F), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_THERM_MODE_REG                                     , RULL(0x3305000F), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_THERM_MODE_REG                                     , RULL(0x3405000F), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_THERM_MODE_REG                                     , RULL(0x3505000F), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_THERM_MODE_REG                                     , RULL(0x3605000F), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_THERM_MODE_REG                                     , RULL(0x3705000F), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_THERM_MODE_REG                                       , RULL(0x1005000F), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_THERM_MODE_REG                                     , RULL(0x1005000F), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_THERM_MODE_REG                                     , RULL(0x1105000F), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_THERM_MODE_REG                                     , RULL(0x1205000F), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_THERM_MODE_REG                                     , RULL(0x1305000F), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_THERM_MODE_REG                                     , RULL(0x1405000F), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_THERM_MODE_REG                                     , RULL(0x1505000F), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_THERM_MODE_REG                                       , RULL(0x2005000F), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 2105000F,
REG64( EX_0_THERM_MODE_REG                                     , RULL(0x2005000F), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 2105000F,
REG64( EX_1_THERM_MODE_REG                                     , RULL(0x2205000F), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 2305000F,
REG64( EX_2_THERM_MODE_REG                                     , RULL(0x2405000F), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 2505000F,
REG64( EX_3_THERM_MODE_REG                                     , RULL(0x2605000F), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 2705000F,
REG64( EX_4_THERM_MODE_REG                                     , RULL(0x2805000F), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 2905000F,
REG64( EX_5_THERM_MODE_REG                                     , RULL(0x2A05000F), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B05000F,
REG64( EX_6_THERM_MODE_REG                                     , RULL(0x2C05000F), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D05000F,
REG64( EX_7_THERM_MODE_REG                                     , RULL(0x2E05000F), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F05000F,
REG64( EX_8_THERM_MODE_REG                                     , RULL(0x3005000F), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 3105000F,
REG64( EX_9_THERM_MODE_REG                                     , RULL(0x3205000F), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 3305000F,
REG64( EX_10_THERM_MODE_REG                                    , RULL(0x3405000F), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 3505000F,
REG64( EX_11_THERM_MODE_REG                                    , RULL(0x3605000F), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 3705000F,

REG64( PEC_0_THERM_MODE_REG                                    , RULL(0x0D05000F), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_THERM_MODE_REG                                    , RULL(0x0E05000F), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_THERM_MODE_REG                                    , RULL(0x0F05000F), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_THREAD_INFO                                           , RULL(0x20010A9B), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_THREAD_INFO                                         , RULL(0x20010A9B), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_THREAD_INFO                                         , RULL(0x21010A9B), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_THREAD_INFO                                         , RULL(0x22010A9B), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_THREAD_INFO                                         , RULL(0x23010A9B), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_THREAD_INFO                                         , RULL(0x24010A9B), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_THREAD_INFO                                         , RULL(0x25010A9B), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_THREAD_INFO                                         , RULL(0x26010A9B), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_THREAD_INFO                                         , RULL(0x27010A9B), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_THREAD_INFO                                         , RULL(0x28010A9B), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_THREAD_INFO                                         , RULL(0x29010A9B), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_THREAD_INFO                                        , RULL(0x2A010A9B), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_THREAD_INFO                                        , RULL(0x2B010A9B), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_THREAD_INFO                                        , RULL(0x2C010A9B), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_THREAD_INFO                                        , RULL(0x2D010A9B), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_THREAD_INFO                                        , RULL(0x2E010A9B), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_THREAD_INFO                                        , RULL(0x2F010A9B), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_THREAD_INFO                                        , RULL(0x30010A9B), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_THREAD_INFO                                        , RULL(0x31010A9B), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_THREAD_INFO                                        , RULL(0x32010A9B), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_THREAD_INFO                                        , RULL(0x33010A9B), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_THREAD_INFO                                        , RULL(0x34010A9B), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_THREAD_INFO                                        , RULL(0x35010A9B), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_THREAD_INFO                                        , RULL(0x36010A9B), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_THREAD_INFO                                        , RULL(0x37010A9B), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EX_0_L2_THREAD_INFO                                     , RULL(0x21010A9B), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM      ); //DUPS: 20010A9B,
REG64( EX_10_L2_THREAD_INFO                                    , RULL(0x35010A9B), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM      ); //DUPS: 34010A9B,
REG64( EX_11_L2_THREAD_INFO                                    , RULL(0x37010A9B), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM      ); //DUPS: 36010A9B,
REG64( EX_1_L2_THREAD_INFO                                     , RULL(0x23010A9B), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM      ); //DUPS: 22010A9B,
REG64( EX_2_L2_THREAD_INFO                                     , RULL(0x25010A9B), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM      ); //DUPS: 24010A9B,
REG64( EX_3_L2_THREAD_INFO                                     , RULL(0x27010A9B), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM      ); //DUPS: 26010A9B,
REG64( EX_4_L2_THREAD_INFO                                     , RULL(0x29010A9B), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM      ); //DUPS: 28010A9B,
REG64( EX_5_L2_THREAD_INFO                                     , RULL(0x2B010A9B), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2A010A9B,
REG64( EX_6_L2_THREAD_INFO                                     , RULL(0x2D010A9B), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2C010A9B,
REG64( EX_7_L2_THREAD_INFO                                     , RULL(0x2F010A9B), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM      ); //DUPS: 2E010A9B,
REG64( EX_8_L2_THREAD_INFO                                     , RULL(0x31010A9B), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM      ); //DUPS: 30010A9B,
REG64( EX_9_L2_THREAD_INFO                                     , RULL(0x33010A9B), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM      ); //DUPS: 32010A9B,
REG64( EX_L2_THREAD_INFO                                       , RULL(0x21010A9B), SH_UNT_EX_L2    ,
       SH_ACS_SCOM      ); //DUPS: 20010A9B,

REG64( C_TIMEOUT_REG                                           , RULL(0x200F0010), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_TIMEOUT_REG                                         , RULL(0x200F0010), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_TIMEOUT_REG                                         , RULL(0x210F0010), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_TIMEOUT_REG                                         , RULL(0x220F0010), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_TIMEOUT_REG                                         , RULL(0x230F0010), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_TIMEOUT_REG                                         , RULL(0x240F0010), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_TIMEOUT_REG                                         , RULL(0x250F0010), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_TIMEOUT_REG                                         , RULL(0x260F0010), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_TIMEOUT_REG                                         , RULL(0x270F0010), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_TIMEOUT_REG                                         , RULL(0x280F0010), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_TIMEOUT_REG                                         , RULL(0x290F0010), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_TIMEOUT_REG                                        , RULL(0x2A0F0010), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_TIMEOUT_REG                                        , RULL(0x2B0F0010), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_TIMEOUT_REG                                        , RULL(0x2C0F0010), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_TIMEOUT_REG                                        , RULL(0x2D0F0010), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_TIMEOUT_REG                                        , RULL(0x2E0F0010), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_TIMEOUT_REG                                        , RULL(0x2F0F0010), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_TIMEOUT_REG                                        , RULL(0x300F0010), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_TIMEOUT_REG                                        , RULL(0x310F0010), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_TIMEOUT_REG                                        , RULL(0x320F0010), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_TIMEOUT_REG                                        , RULL(0x330F0010), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_TIMEOUT_REG                                        , RULL(0x340F0010), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_TIMEOUT_REG                                        , RULL(0x350F0010), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_TIMEOUT_REG                                        , RULL(0x360F0010), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_TIMEOUT_REG                                        , RULL(0x370F0010), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_TIMEOUT_REG                                          , RULL(0x100F0010), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TIMEOUT_REG                                        , RULL(0x100F0010), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TIMEOUT_REG                                        , RULL(0x110F0010), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TIMEOUT_REG                                        , RULL(0x120F0010), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TIMEOUT_REG                                        , RULL(0x130F0010), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TIMEOUT_REG                                        , RULL(0x140F0010), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TIMEOUT_REG                                        , RULL(0x150F0010), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TIMEOUT_REG                                          , RULL(0x200F0010), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F0010,
REG64( EX_0_TIMEOUT_REG                                        , RULL(0x200F0010), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F0010,
REG64( EX_1_TIMEOUT_REG                                        , RULL(0x230F0010), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F0010,
REG64( EX_2_TIMEOUT_REG                                        , RULL(0x240F0010), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F0010,
REG64( EX_3_TIMEOUT_REG                                        , RULL(0x260F0010), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F0010,
REG64( EX_4_TIMEOUT_REG                                        , RULL(0x280F0010), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F0010,
REG64( EX_5_TIMEOUT_REG                                        , RULL(0x2A0F0010), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F0010,
REG64( EX_6_TIMEOUT_REG                                        , RULL(0x2C0F0010), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F0010,
REG64( EX_7_TIMEOUT_REG                                        , RULL(0x2E0F0010), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F0010,
REG64( EX_8_TIMEOUT_REG                                        , RULL(0x300F0010), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F0010,
REG64( EX_9_TIMEOUT_REG                                        , RULL(0x320F0010), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F0010,
REG64( EX_10_TIMEOUT_REG                                       , RULL(0x340F0010), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F0010,
REG64( EX_11_TIMEOUT_REG                                       , RULL(0x360F0010), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F0010,

REG64( PEC_0_TIMEOUT_REG                                       , RULL(0x0D0F0010), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_TIMEOUT_REG                                       , RULL(0x0E0F0010), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_TIMEOUT_REG                                       , RULL(0x0F0F0010), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_TIMESTAMP_COUNTER_READ                                , RULL(0x2005001C), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_TIMESTAMP_COUNTER_READ                              , RULL(0x2005001C), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_TIMESTAMP_COUNTER_READ                              , RULL(0x2105001C), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_TIMESTAMP_COUNTER_READ                              , RULL(0x2205001C), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_TIMESTAMP_COUNTER_READ                              , RULL(0x2305001C), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_TIMESTAMP_COUNTER_READ                              , RULL(0x2405001C), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_TIMESTAMP_COUNTER_READ                              , RULL(0x2505001C), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_TIMESTAMP_COUNTER_READ                              , RULL(0x2605001C), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_TIMESTAMP_COUNTER_READ                              , RULL(0x2705001C), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_TIMESTAMP_COUNTER_READ                              , RULL(0x2805001C), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_TIMESTAMP_COUNTER_READ                              , RULL(0x2905001C), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_TIMESTAMP_COUNTER_READ                             , RULL(0x2A05001C), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_TIMESTAMP_COUNTER_READ                             , RULL(0x2B05001C), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_TIMESTAMP_COUNTER_READ                             , RULL(0x2C05001C), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_TIMESTAMP_COUNTER_READ                             , RULL(0x2D05001C), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_TIMESTAMP_COUNTER_READ                             , RULL(0x2E05001C), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_TIMESTAMP_COUNTER_READ                             , RULL(0x2F05001C), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_TIMESTAMP_COUNTER_READ                             , RULL(0x3005001C), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_TIMESTAMP_COUNTER_READ                             , RULL(0x3105001C), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_TIMESTAMP_COUNTER_READ                             , RULL(0x3205001C), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_TIMESTAMP_COUNTER_READ                             , RULL(0x3305001C), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_TIMESTAMP_COUNTER_READ                             , RULL(0x3405001C), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_TIMESTAMP_COUNTER_READ                             , RULL(0x3505001C), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_TIMESTAMP_COUNTER_READ                             , RULL(0x3605001C), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_TIMESTAMP_COUNTER_READ                             , RULL(0x3705001C), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_TIMESTAMP_COUNTER_READ                               , RULL(0x1005001C), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TIMESTAMP_COUNTER_READ                             , RULL(0x1005001C), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TIMESTAMP_COUNTER_READ                             , RULL(0x1105001C), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TIMESTAMP_COUNTER_READ                             , RULL(0x1205001C), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TIMESTAMP_COUNTER_READ                             , RULL(0x1305001C), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TIMESTAMP_COUNTER_READ                             , RULL(0x1405001C), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TIMESTAMP_COUNTER_READ                             , RULL(0x1505001C), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_TIMESTAMP_COUNTER_READ                               , RULL(0x2005001C), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 2105001C,
REG64( EX_0_TIMESTAMP_COUNTER_READ                             , RULL(0x2005001C), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2105001C,
REG64( EX_1_TIMESTAMP_COUNTER_READ                             , RULL(0x2205001C), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2305001C,
REG64( EX_2_TIMESTAMP_COUNTER_READ                             , RULL(0x2405001C), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2505001C,
REG64( EX_3_TIMESTAMP_COUNTER_READ                             , RULL(0x2605001C), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2705001C,
REG64( EX_4_TIMESTAMP_COUNTER_READ                             , RULL(0x2805001C), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2905001C,
REG64( EX_5_TIMESTAMP_COUNTER_READ                             , RULL(0x2A05001C), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B05001C,
REG64( EX_6_TIMESTAMP_COUNTER_READ                             , RULL(0x2C05001C), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D05001C,
REG64( EX_7_TIMESTAMP_COUNTER_READ                             , RULL(0x2E05001C), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F05001C,
REG64( EX_8_TIMESTAMP_COUNTER_READ                             , RULL(0x3005001C), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 3105001C,
REG64( EX_9_TIMESTAMP_COUNTER_READ                             , RULL(0x3205001C), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 3305001C,
REG64( EX_10_TIMESTAMP_COUNTER_READ                            , RULL(0x3405001C), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 3505001C,
REG64( EX_11_TIMESTAMP_COUNTER_READ                            , RULL(0x3605001C), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 3705001C,

REG64( PEC_0_TIMESTAMP_COUNTER_READ                            , RULL(0x0D05001C), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_TIMESTAMP_COUNTER_READ                            , RULL(0x0E05001C), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_TIMESTAMP_COUNTER_READ                            , RULL(0x0F05001C), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_TOD_READ                                              , RULL(0x20010AA3), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_TOD_READ                                            , RULL(0x20010AA3), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_TOD_READ                                            , RULL(0x21010AA3), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_TOD_READ                                            , RULL(0x22010AA3), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_TOD_READ                                            , RULL(0x23010AA3), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_TOD_READ                                            , RULL(0x24010AA3), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_TOD_READ                                            , RULL(0x25010AA3), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_TOD_READ                                            , RULL(0x26010AA3), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_TOD_READ                                            , RULL(0x27010AA3), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_TOD_READ                                            , RULL(0x28010AA3), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_TOD_READ                                            , RULL(0x29010AA3), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_TOD_READ                                           , RULL(0x2A010AA3), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_TOD_READ                                           , RULL(0x2B010AA3), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_TOD_READ                                           , RULL(0x2C010AA3), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_TOD_READ                                           , RULL(0x2D010AA3), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_TOD_READ                                           , RULL(0x2E010AA3), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_TOD_READ                                           , RULL(0x2F010AA3), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_TOD_READ                                           , RULL(0x30010AA3), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_TOD_READ                                           , RULL(0x31010AA3), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_TOD_READ                                           , RULL(0x32010AA3), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_TOD_READ                                           , RULL(0x33010AA3), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_TOD_READ                                           , RULL(0x34010AA3), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_TOD_READ                                           , RULL(0x35010AA3), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_TOD_READ                                           , RULL(0x36010AA3), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_TOD_READ                                           , RULL(0x37010AA3), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EX_0_L2_TOD_READ                                        , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_READ                                       , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_READ                                       , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RO   ); //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_READ                                        , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_READ                                        , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_READ                                        , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_READ                                        , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_READ                                        , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_READ                                        , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_READ                                        , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_READ                                        , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_READ                                        , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RO   ); //DUPS: 32010AA3,
REG64( EX_L2_TOD_READ                                          , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RO   ); //DUPS: 20010AA3,

REG64( C_TOD_STEP_CHECK                                        , RULL(0x20010AA4), SH_UNT_C        , SH_ACS_SCOM_RW   );
REG64( C_0_TOD_STEP_CHECK                                      , RULL(0x20010AA4), SH_UNT_C_0      , SH_ACS_SCOM_RW   );
REG64( C_1_TOD_STEP_CHECK                                      , RULL(0x21010AA4), SH_UNT_C_1      , SH_ACS_SCOM_RW   );
REG64( C_2_TOD_STEP_CHECK                                      , RULL(0x22010AA4), SH_UNT_C_2      , SH_ACS_SCOM_RW   );
REG64( C_3_TOD_STEP_CHECK                                      , RULL(0x23010AA4), SH_UNT_C_3      , SH_ACS_SCOM_RW   );
REG64( C_4_TOD_STEP_CHECK                                      , RULL(0x24010AA4), SH_UNT_C_4      , SH_ACS_SCOM_RW   );
REG64( C_5_TOD_STEP_CHECK                                      , RULL(0x25010AA4), SH_UNT_C_5      , SH_ACS_SCOM_RW   );
REG64( C_6_TOD_STEP_CHECK                                      , RULL(0x26010AA4), SH_UNT_C_6      , SH_ACS_SCOM_RW   );
REG64( C_7_TOD_STEP_CHECK                                      , RULL(0x27010AA4), SH_UNT_C_7      , SH_ACS_SCOM_RW   );
REG64( C_8_TOD_STEP_CHECK                                      , RULL(0x28010AA4), SH_UNT_C_8      , SH_ACS_SCOM_RW   );
REG64( C_9_TOD_STEP_CHECK                                      , RULL(0x29010AA4), SH_UNT_C_9      , SH_ACS_SCOM_RW   );
REG64( C_10_TOD_STEP_CHECK                                     , RULL(0x2A010AA4), SH_UNT_C_10     , SH_ACS_SCOM_RW   );
REG64( C_11_TOD_STEP_CHECK                                     , RULL(0x2B010AA4), SH_UNT_C_11     , SH_ACS_SCOM_RW   );
REG64( C_12_TOD_STEP_CHECK                                     , RULL(0x2C010AA4), SH_UNT_C_12     , SH_ACS_SCOM_RW   );
REG64( C_13_TOD_STEP_CHECK                                     , RULL(0x2D010AA4), SH_UNT_C_13     , SH_ACS_SCOM_RW   );
REG64( C_14_TOD_STEP_CHECK                                     , RULL(0x2E010AA4), SH_UNT_C_14     , SH_ACS_SCOM_RW   );
REG64( C_15_TOD_STEP_CHECK                                     , RULL(0x2F010AA4), SH_UNT_C_15     , SH_ACS_SCOM_RW   );
REG64( C_16_TOD_STEP_CHECK                                     , RULL(0x30010AA4), SH_UNT_C_16     , SH_ACS_SCOM_RW   );
REG64( C_17_TOD_STEP_CHECK                                     , RULL(0x31010AA4), SH_UNT_C_17     , SH_ACS_SCOM_RW   );
REG64( C_18_TOD_STEP_CHECK                                     , RULL(0x32010AA4), SH_UNT_C_18     , SH_ACS_SCOM_RW   );
REG64( C_19_TOD_STEP_CHECK                                     , RULL(0x33010AA4), SH_UNT_C_19     , SH_ACS_SCOM_RW   );
REG64( C_20_TOD_STEP_CHECK                                     , RULL(0x34010AA4), SH_UNT_C_20     , SH_ACS_SCOM_RW   );
REG64( C_21_TOD_STEP_CHECK                                     , RULL(0x35010AA4), SH_UNT_C_21     , SH_ACS_SCOM_RW   );
REG64( C_22_TOD_STEP_CHECK                                     , RULL(0x36010AA4), SH_UNT_C_22     , SH_ACS_SCOM_RW   );
REG64( C_23_TOD_STEP_CHECK                                     , RULL(0x37010AA4), SH_UNT_C_23     , SH_ACS_SCOM_RW   );
REG64( EX_0_L2_TOD_STEP_CHECK                                  , RULL(0x21010AA4), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010AA4,
REG64( EX_10_L2_TOD_STEP_CHECK                                 , RULL(0x35010AA4), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 34010AA4,
REG64( EX_11_L2_TOD_STEP_CHECK                                 , RULL(0x37010AA4), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM_RW   ); //DUPS: 36010AA4,
REG64( EX_1_L2_TOD_STEP_CHECK                                  , RULL(0x23010AA4), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 22010AA4,
REG64( EX_2_L2_TOD_STEP_CHECK                                  , RULL(0x25010AA4), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 24010AA4,
REG64( EX_3_L2_TOD_STEP_CHECK                                  , RULL(0x27010AA4), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 26010AA4,
REG64( EX_4_L2_TOD_STEP_CHECK                                  , RULL(0x29010AA4), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 28010AA4,
REG64( EX_5_L2_TOD_STEP_CHECK                                  , RULL(0x2B010AA4), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2A010AA4,
REG64( EX_6_L2_TOD_STEP_CHECK                                  , RULL(0x2D010AA4), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2C010AA4,
REG64( EX_7_L2_TOD_STEP_CHECK                                  , RULL(0x2F010AA4), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 2E010AA4,
REG64( EX_8_L2_TOD_STEP_CHECK                                  , RULL(0x31010AA4), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 30010AA4,
REG64( EX_9_L2_TOD_STEP_CHECK                                  , RULL(0x33010AA4), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM_RW   ); //DUPS: 32010AA4,
REG64( EX_L2_TOD_STEP_CHECK                                    , RULL(0x21010AA4), SH_UNT_EX_L2    ,
       SH_ACS_SCOM_RW   ); //DUPS: 20010AA4,

REG64( C_TOD_SYNC000                                           , RULL(0x20010AA3), SH_UNT_C        , SH_ACS_SCOM1_WO  );

REG64( C_0_TOD_SYNC000                                         , RULL(0x20010AA3), SH_UNT_C_0      , SH_ACS_SCOM1_WO  );
REG64( C_1_TOD_SYNC000                                         , RULL(0x21010AA3), SH_UNT_C_1      , SH_ACS_SCOM1_WO  );
REG64( C_2_TOD_SYNC000                                         , RULL(0x22010AA3), SH_UNT_C_2      , SH_ACS_SCOM1_WO  );
REG64( C_3_TOD_SYNC000                                         , RULL(0x23010AA3), SH_UNT_C_3      , SH_ACS_SCOM1_WO  );
REG64( C_4_TOD_SYNC000                                         , RULL(0x24010AA3), SH_UNT_C_4      , SH_ACS_SCOM1_WO  );
REG64( C_5_TOD_SYNC000                                         , RULL(0x25010AA3), SH_UNT_C_5      , SH_ACS_SCOM1_WO  );
REG64( C_6_TOD_SYNC000                                         , RULL(0x26010AA3), SH_UNT_C_6      , SH_ACS_SCOM1_WO  );
REG64( C_7_TOD_SYNC000                                         , RULL(0x27010AA3), SH_UNT_C_7      , SH_ACS_SCOM1_WO  );
REG64( C_8_TOD_SYNC000                                         , RULL(0x28010AA3), SH_UNT_C_8      , SH_ACS_SCOM1_WO  );
REG64( C_9_TOD_SYNC000                                         , RULL(0x29010AA3), SH_UNT_C_9      , SH_ACS_SCOM1_WO  );
REG64( C_10_TOD_SYNC000                                        , RULL(0x2A010AA3), SH_UNT_C_10     , SH_ACS_SCOM1_WO  );
REG64( C_11_TOD_SYNC000                                        , RULL(0x2B010AA3), SH_UNT_C_11     , SH_ACS_SCOM1_WO  );
REG64( C_12_TOD_SYNC000                                        , RULL(0x2C010AA3), SH_UNT_C_12     , SH_ACS_SCOM1_WO  );
REG64( C_13_TOD_SYNC000                                        , RULL(0x2D010AA3), SH_UNT_C_13     , SH_ACS_SCOM1_WO  );
REG64( C_14_TOD_SYNC000                                        , RULL(0x2E010AA3), SH_UNT_C_14     , SH_ACS_SCOM1_WO  );
REG64( C_15_TOD_SYNC000                                        , RULL(0x2F010AA3), SH_UNT_C_15     , SH_ACS_SCOM1_WO  );
REG64( C_16_TOD_SYNC000                                        , RULL(0x30010AA3), SH_UNT_C_16     , SH_ACS_SCOM1_WO  );
REG64( C_17_TOD_SYNC000                                        , RULL(0x31010AA3), SH_UNT_C_17     , SH_ACS_SCOM1_WO  );
REG64( C_18_TOD_SYNC000                                        , RULL(0x32010AA3), SH_UNT_C_18     , SH_ACS_SCOM1_WO  );
REG64( C_19_TOD_SYNC000                                        , RULL(0x33010AA3), SH_UNT_C_19     , SH_ACS_SCOM1_WO  );
REG64( C_20_TOD_SYNC000                                        , RULL(0x34010AA3), SH_UNT_C_20     , SH_ACS_SCOM1_WO  );
REG64( C_21_TOD_SYNC000                                        , RULL(0x35010AA3), SH_UNT_C_21     , SH_ACS_SCOM1_WO  );
REG64( C_22_TOD_SYNC000                                        , RULL(0x36010AA3), SH_UNT_C_22     , SH_ACS_SCOM1_WO  );
REG64( C_23_TOD_SYNC000                                        , RULL(0x37010AA3), SH_UNT_C_23     , SH_ACS_SCOM1_WO  );
REG64( EX_0_L2_TOD_SYNC000                                     , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_SYNC000                                    , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WO  ); //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_SYNC000                                    , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WO  ); //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_SYNC000                                     , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_SYNC000                                     , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_SYNC000                                     , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_SYNC000                                     , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_SYNC000                                     , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_SYNC000                                     , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_SYNC000                                     , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_SYNC000                                     , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_SYNC000                                     , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WO  ); //DUPS: 32010AA3,
REG64( EX_L2_TOD_SYNC000                                       , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WO  ); //DUPS: 20010AA3,

REG64( C_TOD_SYNC001                                           , RULL(0x20010AA3), SH_UNT_C        ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_0_TOD_SYNC001                                         , RULL(0x20010AA3), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_1_TOD_SYNC001                                         , RULL(0x21010AA3), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_2_TOD_SYNC001                                         , RULL(0x22010AA3), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_3_TOD_SYNC001                                         , RULL(0x23010AA3), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_4_TOD_SYNC001                                         , RULL(0x24010AA3), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_5_TOD_SYNC001                                         , RULL(0x25010AA3), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_6_TOD_SYNC001                                         , RULL(0x26010AA3), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_7_TOD_SYNC001                                         , RULL(0x27010AA3), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_8_TOD_SYNC001                                         , RULL(0x28010AA3), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_9_TOD_SYNC001                                         , RULL(0x29010AA3), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_10_TOD_SYNC001                                        , RULL(0x2A010AA3), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_11_TOD_SYNC001                                        , RULL(0x2B010AA3), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_12_TOD_SYNC001                                        , RULL(0x2C010AA3), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_13_TOD_SYNC001                                        , RULL(0x2D010AA3), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_14_TOD_SYNC001                                        , RULL(0x2E010AA3), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_15_TOD_SYNC001                                        , RULL(0x2F010AA3), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_16_TOD_SYNC001                                        , RULL(0x30010AA3), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_17_TOD_SYNC001                                        , RULL(0x31010AA3), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_18_TOD_SYNC001                                        , RULL(0x32010AA3), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_19_TOD_SYNC001                                        , RULL(0x33010AA3), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_20_TOD_SYNC001                                        , RULL(0x34010AA3), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_21_TOD_SYNC001                                        , RULL(0x35010AA3), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_22_TOD_SYNC001                                        , RULL(0x36010AA3), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_23_TOD_SYNC001                                        , RULL(0x37010AA3), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( EX_0_L2_TOD_SYNC001                                     , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_SYNC001                                    , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_SYNC001                                    , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_SYNC001                                     , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_SYNC001                                     , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_SYNC001                                     , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_SYNC001                                     , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_SYNC001                                     , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_SYNC001                                     , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_SYNC001                                     , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_SYNC001                                     , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_SYNC001                                     , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 32010AA3,
REG64( EX_L2_TOD_SYNC001                                       , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,

REG64( C_TOD_SYNC010                                           , RULL(0x20010AA3), SH_UNT_C        ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_0_TOD_SYNC010                                         , RULL(0x20010AA3), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_1_TOD_SYNC010                                         , RULL(0x21010AA3), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_2_TOD_SYNC010                                         , RULL(0x22010AA3), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_3_TOD_SYNC010                                         , RULL(0x23010AA3), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_4_TOD_SYNC010                                         , RULL(0x24010AA3), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_5_TOD_SYNC010                                         , RULL(0x25010AA3), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_6_TOD_SYNC010                                         , RULL(0x26010AA3), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_7_TOD_SYNC010                                         , RULL(0x27010AA3), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_8_TOD_SYNC010                                         , RULL(0x28010AA3), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_9_TOD_SYNC010                                         , RULL(0x29010AA3), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_10_TOD_SYNC010                                        , RULL(0x2A010AA3), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_11_TOD_SYNC010                                        , RULL(0x2B010AA3), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_12_TOD_SYNC010                                        , RULL(0x2C010AA3), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_13_TOD_SYNC010                                        , RULL(0x2D010AA3), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_14_TOD_SYNC010                                        , RULL(0x2E010AA3), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_15_TOD_SYNC010                                        , RULL(0x2F010AA3), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_16_TOD_SYNC010                                        , RULL(0x30010AA3), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_17_TOD_SYNC010                                        , RULL(0x31010AA3), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_18_TOD_SYNC010                                        , RULL(0x32010AA3), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_19_TOD_SYNC010                                        , RULL(0x33010AA3), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_20_TOD_SYNC010                                        , RULL(0x34010AA3), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_21_TOD_SYNC010                                        , RULL(0x35010AA3), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_22_TOD_SYNC010                                        , RULL(0x36010AA3), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_23_TOD_SYNC010                                        , RULL(0x37010AA3), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( EX_0_L2_TOD_SYNC010                                     , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_SYNC010                                    , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_SYNC010                                    , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_SYNC010                                     , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_SYNC010                                     , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_SYNC010                                     , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_SYNC010                                     , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_SYNC010                                     , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_SYNC010                                     , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_SYNC010                                     , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_SYNC010                                     , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_SYNC010                                     , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 32010AA3,
REG64( EX_L2_TOD_SYNC010                                       , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,

REG64( C_TOD_SYNC011                                           , RULL(0x20010AA3), SH_UNT_C        ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_0_TOD_SYNC011                                         , RULL(0x20010AA3), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_1_TOD_SYNC011                                         , RULL(0x21010AA3), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_2_TOD_SYNC011                                         , RULL(0x22010AA3), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_3_TOD_SYNC011                                         , RULL(0x23010AA3), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_4_TOD_SYNC011                                         , RULL(0x24010AA3), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_5_TOD_SYNC011                                         , RULL(0x25010AA3), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_6_TOD_SYNC011                                         , RULL(0x26010AA3), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_7_TOD_SYNC011                                         , RULL(0x27010AA3), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_8_TOD_SYNC011                                         , RULL(0x28010AA3), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_9_TOD_SYNC011                                         , RULL(0x29010AA3), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_10_TOD_SYNC011                                        , RULL(0x2A010AA3), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_11_TOD_SYNC011                                        , RULL(0x2B010AA3), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_12_TOD_SYNC011                                        , RULL(0x2C010AA3), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_13_TOD_SYNC011                                        , RULL(0x2D010AA3), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_14_TOD_SYNC011                                        , RULL(0x2E010AA3), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_15_TOD_SYNC011                                        , RULL(0x2F010AA3), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_16_TOD_SYNC011                                        , RULL(0x30010AA3), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_17_TOD_SYNC011                                        , RULL(0x31010AA3), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_18_TOD_SYNC011                                        , RULL(0x32010AA3), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_19_TOD_SYNC011                                        , RULL(0x33010AA3), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_20_TOD_SYNC011                                        , RULL(0x34010AA3), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_21_TOD_SYNC011                                        , RULL(0x35010AA3), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_22_TOD_SYNC011                                        , RULL(0x36010AA3), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_23_TOD_SYNC011                                        , RULL(0x37010AA3), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( EX_0_L2_TOD_SYNC011                                     , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_SYNC011                                    , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_SYNC011                                    , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_SYNC011                                     , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_SYNC011                                     , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_SYNC011                                     , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_SYNC011                                     , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_SYNC011                                     , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_SYNC011                                     , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_SYNC011                                     , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_SYNC011                                     , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_SYNC011                                     , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 32010AA3,
REG64( EX_L2_TOD_SYNC011                                       , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,

REG64( C_TOD_SYNC100                                           , RULL(0x20010AA3), SH_UNT_C        ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_0_TOD_SYNC100                                         , RULL(0x20010AA3), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_1_TOD_SYNC100                                         , RULL(0x21010AA3), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_2_TOD_SYNC100                                         , RULL(0x22010AA3), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_3_TOD_SYNC100                                         , RULL(0x23010AA3), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_4_TOD_SYNC100                                         , RULL(0x24010AA3), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_5_TOD_SYNC100                                         , RULL(0x25010AA3), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_6_TOD_SYNC100                                         , RULL(0x26010AA3), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_7_TOD_SYNC100                                         , RULL(0x27010AA3), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_8_TOD_SYNC100                                         , RULL(0x28010AA3), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_9_TOD_SYNC100                                         , RULL(0x29010AA3), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_10_TOD_SYNC100                                        , RULL(0x2A010AA3), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_11_TOD_SYNC100                                        , RULL(0x2B010AA3), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_12_TOD_SYNC100                                        , RULL(0x2C010AA3), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_13_TOD_SYNC100                                        , RULL(0x2D010AA3), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_14_TOD_SYNC100                                        , RULL(0x2E010AA3), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_15_TOD_SYNC100                                        , RULL(0x2F010AA3), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_16_TOD_SYNC100                                        , RULL(0x30010AA3), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_17_TOD_SYNC100                                        , RULL(0x31010AA3), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_18_TOD_SYNC100                                        , RULL(0x32010AA3), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_19_TOD_SYNC100                                        , RULL(0x33010AA3), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_20_TOD_SYNC100                                        , RULL(0x34010AA3), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_21_TOD_SYNC100                                        , RULL(0x35010AA3), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_22_TOD_SYNC100                                        , RULL(0x36010AA3), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_23_TOD_SYNC100                                        , RULL(0x37010AA3), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( EX_0_L2_TOD_SYNC100                                     , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_SYNC100                                    , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_SYNC100                                    , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_SYNC100                                     , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_SYNC100                                     , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_SYNC100                                     , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_SYNC100                                     , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_SYNC100                                     , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_SYNC100                                     , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_SYNC100                                     , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_SYNC100                                     , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_SYNC100                                     , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 32010AA3,
REG64( EX_L2_TOD_SYNC100                                       , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,

REG64( C_TOD_SYNC101                                           , RULL(0x20010AA3), SH_UNT_C        ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_0_TOD_SYNC101                                         , RULL(0x20010AA3), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_1_TOD_SYNC101                                         , RULL(0x21010AA3), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_2_TOD_SYNC101                                         , RULL(0x22010AA3), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_3_TOD_SYNC101                                         , RULL(0x23010AA3), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_4_TOD_SYNC101                                         , RULL(0x24010AA3), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_5_TOD_SYNC101                                         , RULL(0x25010AA3), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_6_TOD_SYNC101                                         , RULL(0x26010AA3), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_7_TOD_SYNC101                                         , RULL(0x27010AA3), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_8_TOD_SYNC101                                         , RULL(0x28010AA3), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_9_TOD_SYNC101                                         , RULL(0x29010AA3), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_10_TOD_SYNC101                                        , RULL(0x2A010AA3), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_11_TOD_SYNC101                                        , RULL(0x2B010AA3), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_12_TOD_SYNC101                                        , RULL(0x2C010AA3), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_13_TOD_SYNC101                                        , RULL(0x2D010AA3), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_14_TOD_SYNC101                                        , RULL(0x2E010AA3), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_15_TOD_SYNC101                                        , RULL(0x2F010AA3), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_16_TOD_SYNC101                                        , RULL(0x30010AA3), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_17_TOD_SYNC101                                        , RULL(0x31010AA3), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_18_TOD_SYNC101                                        , RULL(0x32010AA3), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_19_TOD_SYNC101                                        , RULL(0x33010AA3), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_20_TOD_SYNC101                                        , RULL(0x34010AA3), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_21_TOD_SYNC101                                        , RULL(0x35010AA3), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_22_TOD_SYNC101                                        , RULL(0x36010AA3), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_23_TOD_SYNC101                                        , RULL(0x37010AA3), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( EX_0_L2_TOD_SYNC101                                     , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_SYNC101                                    , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_SYNC101                                    , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_SYNC101                                     , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_SYNC101                                     , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_SYNC101                                     , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_SYNC101                                     , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_SYNC101                                     , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_SYNC101                                     , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_SYNC101                                     , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_SYNC101                                     , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_SYNC101                                     , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 32010AA3,
REG64( EX_L2_TOD_SYNC101                                       , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,

REG64( C_TOD_SYNC110                                           , RULL(0x20010AA3), SH_UNT_C        ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_0_TOD_SYNC110                                         , RULL(0x20010AA3), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_1_TOD_SYNC110                                         , RULL(0x21010AA3), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_2_TOD_SYNC110                                         , RULL(0x22010AA3), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_3_TOD_SYNC110                                         , RULL(0x23010AA3), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_4_TOD_SYNC110                                         , RULL(0x24010AA3), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_5_TOD_SYNC110                                         , RULL(0x25010AA3), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_6_TOD_SYNC110                                         , RULL(0x26010AA3), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_7_TOD_SYNC110                                         , RULL(0x27010AA3), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_8_TOD_SYNC110                                         , RULL(0x28010AA3), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_9_TOD_SYNC110                                         , RULL(0x29010AA3), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_10_TOD_SYNC110                                        , RULL(0x2A010AA3), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_11_TOD_SYNC110                                        , RULL(0x2B010AA3), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_12_TOD_SYNC110                                        , RULL(0x2C010AA3), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_13_TOD_SYNC110                                        , RULL(0x2D010AA3), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_14_TOD_SYNC110                                        , RULL(0x2E010AA3), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_15_TOD_SYNC110                                        , RULL(0x2F010AA3), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_16_TOD_SYNC110                                        , RULL(0x30010AA3), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_17_TOD_SYNC110                                        , RULL(0x31010AA3), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_18_TOD_SYNC110                                        , RULL(0x32010AA3), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_19_TOD_SYNC110                                        , RULL(0x33010AA3), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_20_TOD_SYNC110                                        , RULL(0x34010AA3), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_21_TOD_SYNC110                                        , RULL(0x35010AA3), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_22_TOD_SYNC110                                        , RULL(0x36010AA3), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_23_TOD_SYNC110                                        , RULL(0x37010AA3), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( EX_0_L2_TOD_SYNC110                                     , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_SYNC110                                    , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_SYNC110                                    , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_SYNC110                                     , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_SYNC110                                     , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_SYNC110                                     , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_SYNC110                                     , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_SYNC110                                     , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_SYNC110                                     , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_SYNC110                                     , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_SYNC110                                     , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_SYNC110                                     , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 32010AA3,
REG64( EX_L2_TOD_SYNC110                                       , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,

REG64( C_TOD_SYNC111                                           , RULL(0x20010AA3), SH_UNT_C        ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_0_TOD_SYNC111                                         , RULL(0x20010AA3), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_1_TOD_SYNC111                                         , RULL(0x21010AA3), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_2_TOD_SYNC111                                         , RULL(0x22010AA3), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_3_TOD_SYNC111                                         , RULL(0x23010AA3), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_4_TOD_SYNC111                                         , RULL(0x24010AA3), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_5_TOD_SYNC111                                         , RULL(0x25010AA3), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_6_TOD_SYNC111                                         , RULL(0x26010AA3), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_7_TOD_SYNC111                                         , RULL(0x27010AA3), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_8_TOD_SYNC111                                         , RULL(0x28010AA3), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_9_TOD_SYNC111                                         , RULL(0x29010AA3), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_10_TOD_SYNC111                                        , RULL(0x2A010AA3), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_11_TOD_SYNC111                                        , RULL(0x2B010AA3), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_12_TOD_SYNC111                                        , RULL(0x2C010AA3), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_13_TOD_SYNC111                                        , RULL(0x2D010AA3), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_14_TOD_SYNC111                                        , RULL(0x2E010AA3), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_15_TOD_SYNC111                                        , RULL(0x2F010AA3), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_16_TOD_SYNC111                                        , RULL(0x30010AA3), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_17_TOD_SYNC111                                        , RULL(0x31010AA3), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_18_TOD_SYNC111                                        , RULL(0x32010AA3), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_19_TOD_SYNC111                                        , RULL(0x33010AA3), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_20_TOD_SYNC111                                        , RULL(0x34010AA3), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_21_TOD_SYNC111                                        , RULL(0x35010AA3), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_22_TOD_SYNC111                                        , RULL(0x36010AA3), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( C_23_TOD_SYNC111                                        , RULL(0x37010AA3), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG
REG64( EX_0_L2_TOD_SYNC111                                     , RULL(0x21010AA3), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,
REG64( EX_10_L2_TOD_SYNC111                                    , RULL(0x35010AA3), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 34010AA3,
REG64( EX_11_L2_TOD_SYNC111                                    , RULL(0x37010AA3), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 36010AA3,
REG64( EX_1_L2_TOD_SYNC111                                     , RULL(0x23010AA3), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 22010AA3,
REG64( EX_2_L2_TOD_SYNC111                                     , RULL(0x25010AA3), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 24010AA3,
REG64( EX_3_L2_TOD_SYNC111                                     , RULL(0x27010AA3), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 26010AA3,
REG64( EX_4_L2_TOD_SYNC111                                     , RULL(0x29010AA3), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 28010AA3,
REG64( EX_5_L2_TOD_SYNC111                                     , RULL(0x2B010AA3), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2A010AA3,
REG64( EX_6_L2_TOD_SYNC111                                     , RULL(0x2D010AA3), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2C010AA3,
REG64( EX_7_L2_TOD_SYNC111                                     , RULL(0x2F010AA3), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 2E010AA3,
REG64( EX_8_L2_TOD_SYNC111                                     , RULL(0x31010AA3), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 30010AA3,
REG64( EX_9_L2_TOD_SYNC111                                     , RULL(0x33010AA3), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 32010AA3,
REG64( EX_L2_TOD_SYNC111                                       , RULL(0x21010AA3), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WO  ); //WARNING - VALUE SET SAME AS ANOTHER REG //DUPS: 20010AA3,

REG64( EQ_TPLC20_TR0_TRACE_HI_DATA_REG                         , RULL(0x10012D00), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x10012D00), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x11012D00), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x12012D00), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x13012D00), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x14012D00), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x15012D00), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_TPLC20_TR0_TRACE_HI_DATA_REG                         , RULL(0x10012D00), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x10012D00), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_2_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x11012D00), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_4_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x12012D00), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_6_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x13012D00), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_8_TPLC20_TR0_TRACE_HI_DATA_REG                       , RULL(0x14012D00), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_10_TPLC20_TR0_TRACE_HI_DATA_REG                      , RULL(0x15012D00), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );

REG64( EQ_TPLC20_TR0_TRACE_LO_DATA_REG                         , RULL(0x10012D01), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x10012D01), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x11012D01), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x12012D01), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x13012D01), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x14012D01), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x15012D01), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_TPLC20_TR0_TRACE_LO_DATA_REG                         , RULL(0x10012D01), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x10012D01), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_2_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x11012D01), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_4_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x12012D01), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_6_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x13012D01), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_8_TPLC20_TR0_TRACE_LO_DATA_REG                       , RULL(0x14012D01), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_10_TPLC20_TR0_TRACE_LO_DATA_REG                      , RULL(0x15012D01), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );

REG64( EQ_TPLC20_TR0_TRACE_TRCTRL_CONFIG                       , RULL(0x10012D02), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x10012D02), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x11012D02), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x12012D02), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x13012D02), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x14012D02), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x15012D02), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR0_TRACE_TRCTRL_CONFIG                       , RULL(0x10012D02), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x10012D02), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x11012D02), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x12012D02), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x13012D02), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x14012D02), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR0_TRACE_TRCTRL_CONFIG                    , RULL(0x15012D02), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                     , RULL(0x10012D03), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x10012D03), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x11012D03), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x12012D03), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x13012D03), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x14012D03), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x15012D03), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                     , RULL(0x10012D03), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x10012D03), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x11012D03), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x12012D03), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x13012D03), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x14012D03), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR0_TRACE_TRDATA_CONFIG_0                  , RULL(0x15012D03), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                     , RULL(0x10012D04), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x10012D04), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x11012D04), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x12012D04), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x13012D04), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x14012D04), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x15012D04), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                     , RULL(0x10012D04), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x10012D04), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x11012D04), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x12012D04), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x13012D04), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x14012D04), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR0_TRACE_TRDATA_CONFIG_1                  , RULL(0x15012D04), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                     , RULL(0x10012D05), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x10012D05), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x11012D05), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x12012D05), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x13012D05), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x14012D05), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x15012D05), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                     , RULL(0x10012D05), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x10012D05), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x11012D05), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x12012D05), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x13012D05), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x14012D05), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR0_TRACE_TRDATA_CONFIG_2                  , RULL(0x15012D05), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                     , RULL(0x10012D06), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x10012D06), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x11012D06), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x12012D06), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x13012D06), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x14012D06), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x15012D06), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                     , RULL(0x10012D06), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x10012D06), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x11012D06), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x12012D06), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x13012D06), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x14012D06), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR0_TRACE_TRDATA_CONFIG_3                  , RULL(0x15012D06), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                     , RULL(0x10012D07), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x10012D07), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x11012D07), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x12012D07), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x13012D07), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x14012D07), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x15012D07), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                     , RULL(0x10012D07), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x10012D07), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x11012D07), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x12012D07), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x13012D07), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x14012D07), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR0_TRACE_TRDATA_CONFIG_4                  , RULL(0x15012D07), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                     , RULL(0x10012D08), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x10012D08), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x11012D08), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x12012D08), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x13012D08), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x14012D08), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x15012D08), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                     , RULL(0x10012D08), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x10012D08), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x11012D08), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x12012D08), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x13012D08), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x14012D08), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR0_TRACE_TRDATA_CONFIG_5                  , RULL(0x15012D08), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                     , RULL(0x10012D09), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x10012D09), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x11012D09), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x12012D09), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x13012D09), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x14012D09), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x15012D09), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                     , RULL(0x10012D09), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x10012D09), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x11012D09), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x12012D09), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x13012D09), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x14012D09), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR0_TRACE_TRDATA_CONFIG_9                  , RULL(0x15012D09), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR1_TRACE_HI_DATA_REG                         , RULL(0x10012D40), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x10012D40), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x11012D40), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x12012D40), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x13012D40), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x14012D40), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x15012D40), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_TPLC20_TR1_TRACE_HI_DATA_REG                         , RULL(0x10012D40), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x10012D40), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_2_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x11012D40), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_4_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x12012D40), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_6_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x13012D40), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_8_TPLC20_TR1_TRACE_HI_DATA_REG                       , RULL(0x14012D40), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_10_TPLC20_TR1_TRACE_HI_DATA_REG                      , RULL(0x15012D40), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );

REG64( EQ_TPLC20_TR1_TRACE_LO_DATA_REG                         , RULL(0x10012D41), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x10012D41), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x11012D41), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x12012D41), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x13012D41), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x14012D41), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x15012D41), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_TPLC20_TR1_TRACE_LO_DATA_REG                         , RULL(0x10012D41), SH_UNT_EX       , SH_ACS_SCOM_RO   );
REG64( EX_0_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x10012D41), SH_UNT_EX_0     , SH_ACS_SCOM_RO   );
REG64( EX_2_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x11012D41), SH_UNT_EX_2     , SH_ACS_SCOM_RO   );
REG64( EX_4_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x12012D41), SH_UNT_EX_4     , SH_ACS_SCOM_RO   );
REG64( EX_6_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x13012D41), SH_UNT_EX_6     , SH_ACS_SCOM_RO   );
REG64( EX_8_TPLC20_TR1_TRACE_LO_DATA_REG                       , RULL(0x14012D41), SH_UNT_EX_8     , SH_ACS_SCOM_RO   );
REG64( EX_10_TPLC20_TR1_TRACE_LO_DATA_REG                      , RULL(0x15012D41), SH_UNT_EX_10    , SH_ACS_SCOM_RO   );

REG64( EQ_TPLC20_TR1_TRACE_TRCTRL_CONFIG                       , RULL(0x10012D42), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x10012D42), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x11012D42), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x12012D42), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x13012D42), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x14012D42), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x15012D42), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR1_TRACE_TRCTRL_CONFIG                       , RULL(0x10012D42), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x10012D42), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x11012D42), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x12012D42), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x13012D42), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x14012D42), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR1_TRACE_TRCTRL_CONFIG                    , RULL(0x15012D42), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                     , RULL(0x10012D43), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x10012D43), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x11012D43), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x12012D43), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x13012D43), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x14012D43), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x15012D43), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                     , RULL(0x10012D43), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x10012D43), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x11012D43), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x12012D43), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x13012D43), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x14012D43), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR1_TRACE_TRDATA_CONFIG_0                  , RULL(0x15012D43), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                     , RULL(0x10012D44), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x10012D44), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x11012D44), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x12012D44), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x13012D44), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x14012D44), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x15012D44), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                     , RULL(0x10012D44), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x10012D44), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x11012D44), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x12012D44), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x13012D44), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x14012D44), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR1_TRACE_TRDATA_CONFIG_1                  , RULL(0x15012D44), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                     , RULL(0x10012D45), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x10012D45), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x11012D45), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x12012D45), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x13012D45), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x14012D45), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x15012D45), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                     , RULL(0x10012D45), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x10012D45), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x11012D45), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x12012D45), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x13012D45), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x14012D45), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR1_TRACE_TRDATA_CONFIG_2                  , RULL(0x15012D45), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                     , RULL(0x10012D46), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x10012D46), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x11012D46), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x12012D46), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x13012D46), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x14012D46), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x15012D46), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                     , RULL(0x10012D46), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x10012D46), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x11012D46), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x12012D46), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x13012D46), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x14012D46), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR1_TRACE_TRDATA_CONFIG_3                  , RULL(0x15012D46), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                     , RULL(0x10012D47), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x10012D47), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x11012D47), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x12012D47), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x13012D47), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x14012D47), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x15012D47), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                     , RULL(0x10012D47), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x10012D47), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x11012D47), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x12012D47), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x13012D47), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x14012D47), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR1_TRACE_TRDATA_CONFIG_4                  , RULL(0x15012D47), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                     , RULL(0x10012D48), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x10012D48), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x11012D48), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x12012D48), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x13012D48), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x14012D48), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x15012D48), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                     , RULL(0x10012D48), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x10012D48), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x11012D48), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x12012D48), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x13012D48), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x14012D48), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR1_TRACE_TRDATA_CONFIG_5                  , RULL(0x15012D48), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                     , RULL(0x10012D49), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x10012D49), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x11012D49), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x12012D49), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x13012D49), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x14012D49), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x15012D49), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                     , RULL(0x10012D49), SH_UNT_EX       , SH_ACS_SCOM      );
REG64( EX_0_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x10012D49), SH_UNT_EX_0     , SH_ACS_SCOM      );
REG64( EX_2_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x11012D49), SH_UNT_EX_2     , SH_ACS_SCOM      );
REG64( EX_4_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x12012D49), SH_UNT_EX_4     , SH_ACS_SCOM      );
REG64( EX_6_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x13012D49), SH_UNT_EX_6     , SH_ACS_SCOM      );
REG64( EX_8_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x14012D49), SH_UNT_EX_8     , SH_ACS_SCOM      );
REG64( EX_10_TPLC20_TR1_TRACE_TRDATA_CONFIG_9                  , RULL(0x15012D49), SH_UNT_EX_10    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR0_TRACE_HI_DATA_REG                         , RULL(0x10013100), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x10013100), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x11013100), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x12013100), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x13013100), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x14013100), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x15013100), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_1_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x10013100), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_3_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x11013100), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_5_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x12013100), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_7_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x13013100), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_9_TPLC21_TR0_TRACE_HI_DATA_REG                       , RULL(0x14013100), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_11_TPLC21_TR0_TRACE_HI_DATA_REG                      , RULL(0x15013100), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_TPLC21_TR0_TRACE_LO_DATA_REG                         , RULL(0x10013101), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x10013101), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x11013101), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x12013101), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x13013101), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x14013101), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x15013101), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_1_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x10013101), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_3_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x11013101), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_5_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x12013101), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_7_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x13013101), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_9_TPLC21_TR0_TRACE_LO_DATA_REG                       , RULL(0x14013101), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_11_TPLC21_TR0_TRACE_LO_DATA_REG                      , RULL(0x15013101), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_TPLC21_TR0_TRACE_TRCTRL_CONFIG                       , RULL(0x10013102), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x10013102), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x11013102), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x12013102), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x13013102), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x14013102), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x15013102), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x10013102), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x11013102), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x12013102), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x13013102), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR0_TRACE_TRCTRL_CONFIG                     , RULL(0x14013102), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR0_TRACE_TRCTRL_CONFIG                    , RULL(0x15013102), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                     , RULL(0x10013103), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x10013103), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x11013103), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x12013103), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x13013103), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x14013103), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x15013103), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x10013103), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x11013103), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x12013103), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x13013103), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                   , RULL(0x14013103), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR0_TRACE_TRDATA_CONFIG_0                  , RULL(0x15013103), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                     , RULL(0x10013104), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x10013104), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x11013104), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x12013104), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x13013104), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x14013104), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x15013104), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x10013104), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x11013104), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x12013104), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x13013104), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                   , RULL(0x14013104), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR0_TRACE_TRDATA_CONFIG_1                  , RULL(0x15013104), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                     , RULL(0x10013105), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x10013105), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x11013105), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x12013105), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x13013105), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x14013105), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x15013105), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x10013105), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x11013105), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x12013105), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x13013105), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                   , RULL(0x14013105), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR0_TRACE_TRDATA_CONFIG_2                  , RULL(0x15013105), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                     , RULL(0x10013106), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x10013106), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x11013106), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x12013106), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x13013106), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x14013106), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x15013106), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x10013106), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x11013106), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x12013106), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x13013106), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                   , RULL(0x14013106), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR0_TRACE_TRDATA_CONFIG_3                  , RULL(0x15013106), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                     , RULL(0x10013107), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x10013107), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x11013107), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x12013107), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x13013107), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x14013107), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x15013107), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x10013107), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x11013107), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x12013107), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x13013107), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                   , RULL(0x14013107), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR0_TRACE_TRDATA_CONFIG_4                  , RULL(0x15013107), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                     , RULL(0x10013108), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x10013108), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x11013108), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x12013108), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x13013108), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x14013108), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x15013108), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x10013108), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x11013108), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x12013108), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x13013108), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                   , RULL(0x14013108), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR0_TRACE_TRDATA_CONFIG_5                  , RULL(0x15013108), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                     , RULL(0x10013109), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x10013109), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x11013109), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x12013109), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x13013109), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x14013109), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x15013109), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x10013109), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x11013109), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x12013109), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x13013109), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                   , RULL(0x14013109), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR0_TRACE_TRDATA_CONFIG_9                  , RULL(0x15013109), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR1_TRACE_HI_DATA_REG                         , RULL(0x10013140), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x10013140), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x11013140), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x12013140), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x13013140), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x14013140), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x15013140), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_1_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x10013140), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_3_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x11013140), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_5_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x12013140), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_7_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x13013140), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_9_TPLC21_TR1_TRACE_HI_DATA_REG                       , RULL(0x14013140), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_11_TPLC21_TR1_TRACE_HI_DATA_REG                      , RULL(0x15013140), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_TPLC21_TR1_TRACE_LO_DATA_REG                         , RULL(0x10013141), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x10013141), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x11013141), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x12013141), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x13013141), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x14013141), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x15013141), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_1_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x10013141), SH_UNT_EX_1     , SH_ACS_SCOM_RO   );
REG64( EX_3_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x11013141), SH_UNT_EX_3     , SH_ACS_SCOM_RO   );
REG64( EX_5_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x12013141), SH_UNT_EX_5     , SH_ACS_SCOM_RO   );
REG64( EX_7_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x13013141), SH_UNT_EX_7     , SH_ACS_SCOM_RO   );
REG64( EX_9_TPLC21_TR1_TRACE_LO_DATA_REG                       , RULL(0x14013141), SH_UNT_EX_9     , SH_ACS_SCOM_RO   );
REG64( EX_11_TPLC21_TR1_TRACE_LO_DATA_REG                      , RULL(0x15013141), SH_UNT_EX_11    , SH_ACS_SCOM_RO   );

REG64( EQ_TPLC21_TR1_TRACE_TRCTRL_CONFIG                       , RULL(0x10013142), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x10013142), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x11013142), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x12013142), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x13013142), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x14013142), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x15013142), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x10013142), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x11013142), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x12013142), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x13013142), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR1_TRACE_TRCTRL_CONFIG                     , RULL(0x14013142), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR1_TRACE_TRCTRL_CONFIG                    , RULL(0x15013142), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                     , RULL(0x10013143), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x10013143), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x11013143), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x12013143), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x13013143), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x14013143), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x15013143), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x10013143), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x11013143), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x12013143), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x13013143), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                   , RULL(0x14013143), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR1_TRACE_TRDATA_CONFIG_0                  , RULL(0x15013143), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                     , RULL(0x10013144), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x10013144), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x11013144), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x12013144), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x13013144), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x14013144), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x15013144), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x10013144), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x11013144), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x12013144), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x13013144), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                   , RULL(0x14013144), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR1_TRACE_TRDATA_CONFIG_1                  , RULL(0x15013144), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                     , RULL(0x10013145), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x10013145), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x11013145), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x12013145), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x13013145), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x14013145), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x15013145), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x10013145), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x11013145), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x12013145), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x13013145), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                   , RULL(0x14013145), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR1_TRACE_TRDATA_CONFIG_2                  , RULL(0x15013145), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                     , RULL(0x10013146), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x10013146), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x11013146), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x12013146), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x13013146), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x14013146), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x15013146), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x10013146), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x11013146), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x12013146), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x13013146), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                   , RULL(0x14013146), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR1_TRACE_TRDATA_CONFIG_3                  , RULL(0x15013146), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                     , RULL(0x10013147), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x10013147), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x11013147), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x12013147), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x13013147), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x14013147), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x15013147), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x10013147), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x11013147), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x12013147), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x13013147), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                   , RULL(0x14013147), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR1_TRACE_TRDATA_CONFIG_4                  , RULL(0x15013147), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                     , RULL(0x10013148), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x10013148), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x11013148), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x12013148), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x13013148), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x14013148), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x15013148), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x10013148), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x11013148), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x12013148), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x13013148), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                   , RULL(0x14013148), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR1_TRACE_TRDATA_CONFIG_5                  , RULL(0x15013148), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( EQ_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                     , RULL(0x10013149), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x10013149), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x11013149), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x12013149), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x13013149), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x14013149), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x15013149), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_1_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x10013149), SH_UNT_EX_1     , SH_ACS_SCOM      );
REG64( EX_3_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x11013149), SH_UNT_EX_3     , SH_ACS_SCOM      );
REG64( EX_5_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x12013149), SH_UNT_EX_5     , SH_ACS_SCOM      );
REG64( EX_7_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x13013149), SH_UNT_EX_7     , SH_ACS_SCOM      );
REG64( EX_9_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                   , RULL(0x14013149), SH_UNT_EX_9     , SH_ACS_SCOM      );
REG64( EX_11_TPLC21_TR1_TRACE_TRDATA_CONFIG_9                  , RULL(0x15013149), SH_UNT_EX_11    , SH_ACS_SCOM      );

REG64( PEC_0_TUNNEL_BAR_REG                                    , RULL(0x04010C05), SH_UNT_PEC_0    , SH_ACS_SCOM_RW   );
REG64( PEC_1_TUNNEL_BAR_REG                                    , RULL(0x04011005), SH_UNT_PEC_1    , SH_ACS_SCOM_RW   );
REG64( PEC_2_TUNNEL_BAR_REG                                    , RULL(0x04011405), SH_UNT_PEC_2    , SH_ACS_SCOM_RW   );

REG64( C_V0_HMER_WAND                                          , RULL(0x20010A92), SH_UNT_C        ,
       SH_ACS_SCOM1_WAND );
REG64( C_V0_HMER_OR                                            , RULL(0x20010A8E), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_V0_HMER_WAND                                        , RULL(0x20010A92), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WAND );
REG64( C_0_V0_HMER_OR                                          , RULL(0x20010A8E), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_V0_HMER_WAND                                        , RULL(0x21010A92), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WAND );
REG64( C_1_V0_HMER_OR                                          , RULL(0x21010A8E), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_V0_HMER_WAND                                        , RULL(0x22010A92), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WAND );
REG64( C_2_V0_HMER_OR                                          , RULL(0x22010A8E), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_V0_HMER_WAND                                        , RULL(0x23010A92), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WAND );
REG64( C_3_V0_HMER_OR                                          , RULL(0x23010A8E), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_V0_HMER_WAND                                        , RULL(0x24010A92), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WAND );
REG64( C_4_V0_HMER_OR                                          , RULL(0x24010A8E), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_V0_HMER_WAND                                        , RULL(0x25010A92), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WAND );
REG64( C_5_V0_HMER_OR                                          , RULL(0x25010A8E), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_V0_HMER_WAND                                        , RULL(0x26010A92), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WAND );
REG64( C_6_V0_HMER_OR                                          , RULL(0x26010A8E), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_V0_HMER_WAND                                        , RULL(0x27010A92), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WAND );
REG64( C_7_V0_HMER_OR                                          , RULL(0x27010A8E), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_V0_HMER_WAND                                        , RULL(0x28010A92), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WAND );
REG64( C_8_V0_HMER_OR                                          , RULL(0x28010A8E), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_V0_HMER_WAND                                        , RULL(0x29010A92), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WAND );
REG64( C_9_V0_HMER_OR                                          , RULL(0x29010A8E), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_V0_HMER_WAND                                       , RULL(0x2A010A92), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WAND );
REG64( C_10_V0_HMER_OR                                         , RULL(0x2A010A8E), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_V0_HMER_WAND                                       , RULL(0x2B010A92), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WAND );
REG64( C_11_V0_HMER_OR                                         , RULL(0x2B010A8E), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_V0_HMER_WAND                                       , RULL(0x2C010A92), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WAND );
REG64( C_12_V0_HMER_OR                                         , RULL(0x2C010A8E), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_V0_HMER_WAND                                       , RULL(0x2D010A92), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WAND );
REG64( C_13_V0_HMER_OR                                         , RULL(0x2D010A8E), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_V0_HMER_WAND                                       , RULL(0x2E010A92), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WAND );
REG64( C_14_V0_HMER_OR                                         , RULL(0x2E010A8E), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_V0_HMER_WAND                                       , RULL(0x2F010A92), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WAND );
REG64( C_15_V0_HMER_OR                                         , RULL(0x2F010A8E), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_V0_HMER_WAND                                       , RULL(0x30010A92), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WAND );
REG64( C_16_V0_HMER_OR                                         , RULL(0x30010A8E), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_V0_HMER_WAND                                       , RULL(0x31010A92), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WAND );
REG64( C_17_V0_HMER_OR                                         , RULL(0x31010A8E), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_V0_HMER_WAND                                       , RULL(0x32010A92), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WAND );
REG64( C_18_V0_HMER_OR                                         , RULL(0x32010A8E), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_V0_HMER_WAND                                       , RULL(0x33010A92), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WAND );
REG64( C_19_V0_HMER_OR                                         , RULL(0x33010A8E), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_V0_HMER_WAND                                       , RULL(0x34010A92), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WAND );
REG64( C_20_V0_HMER_OR                                         , RULL(0x34010A8E), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_V0_HMER_WAND                                       , RULL(0x35010A92), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WAND );
REG64( C_21_V0_HMER_OR                                         , RULL(0x35010A8E), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_V0_HMER_WAND                                       , RULL(0x36010A92), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WAND );
REG64( C_22_V0_HMER_OR                                         , RULL(0x36010A8E), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_V0_HMER_WAND                                       , RULL(0x37010A92), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WAND );
REG64( C_23_V0_HMER_OR                                         , RULL(0x37010A8E), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_V0_HMER                                              , RULL(0x21010A8E), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A8E,
REG64( EX_0_V0_HMER                                            , RULL(0x21010A8E), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A8E,
REG64( EX_1_V0_HMER                                            , RULL(0x23010A8E), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 22010A8E,
REG64( EX_2_V0_HMER                                            , RULL(0x25010A8E), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 24010A8E,
REG64( EX_3_V0_HMER                                            , RULL(0x27010A8E), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 26010A8E,
REG64( EX_4_V0_HMER                                            , RULL(0x29010A8E), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 28010A8E,
REG64( EX_5_V0_HMER                                            , RULL(0x2B010A8E), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2A010A8E,
REG64( EX_6_V0_HMER                                            , RULL(0x2D010A8E), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2C010A8E,
REG64( EX_7_V0_HMER                                            , RULL(0x2F010A8E), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2E010A8E,
REG64( EX_8_V0_HMER                                            , RULL(0x31010A8E), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 30010A8E,
REG64( EX_9_V0_HMER                                            , RULL(0x33010A8E), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 32010A8E,
REG64( EX_0_L2_V0_HMER                                         , RULL(0x21010A92), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 20010A92,
REG64( EX_10_V0_HMER                                           , RULL(0x35010A8E), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 34010A8E,
REG64( EX_11_V0_HMER                                           , RULL(0x37010A8E), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 36010A8E,
REG64( EX_10_L2_V0_HMER                                        , RULL(0x35010A92), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WAND ); //DUPS: 34010A92,
REG64( EX_11_L2_V0_HMER                                        , RULL(0x37010A92), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WAND ); //DUPS: 36010A92,
REG64( EX_1_L2_V0_HMER                                         , RULL(0x23010A92), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 22010A92,
REG64( EX_2_L2_V0_HMER                                         , RULL(0x25010A92), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 24010A92,
REG64( EX_3_L2_V0_HMER                                         , RULL(0x27010A92), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 26010A92,
REG64( EX_4_L2_V0_HMER                                         , RULL(0x29010A92), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 28010A92,
REG64( EX_5_L2_V0_HMER                                         , RULL(0x2B010A92), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2A010A92,
REG64( EX_6_L2_V0_HMER                                         , RULL(0x2D010A92), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2C010A92,
REG64( EX_7_L2_V0_HMER                                         , RULL(0x2F010A92), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2E010A92,
REG64( EX_8_L2_V0_HMER                                         , RULL(0x31010A92), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 30010A92,
REG64( EX_9_L2_V0_HMER                                         , RULL(0x33010A92), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 32010A92,
REG64( EX_L2_V0_HMER                                           , RULL(0x21010A92), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WAND ); //DUPS: 20010A92,

REG64( C_V1_HMER_WAND                                          , RULL(0x20010A93), SH_UNT_C        ,
       SH_ACS_SCOM1_WAND );
REG64( C_V1_HMER_OR                                            , RULL(0x20010A8F), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_V1_HMER_WAND                                        , RULL(0x20010A93), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WAND );
REG64( C_0_V1_HMER_OR                                          , RULL(0x20010A8F), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_V1_HMER_WAND                                        , RULL(0x21010A93), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WAND );
REG64( C_1_V1_HMER_OR                                          , RULL(0x21010A8F), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_V1_HMER_WAND                                        , RULL(0x22010A93), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WAND );
REG64( C_2_V1_HMER_OR                                          , RULL(0x22010A8F), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_V1_HMER_WAND                                        , RULL(0x23010A93), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WAND );
REG64( C_3_V1_HMER_OR                                          , RULL(0x23010A8F), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_V1_HMER_WAND                                        , RULL(0x24010A93), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WAND );
REG64( C_4_V1_HMER_OR                                          , RULL(0x24010A8F), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_V1_HMER_WAND                                        , RULL(0x25010A93), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WAND );
REG64( C_5_V1_HMER_OR                                          , RULL(0x25010A8F), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_V1_HMER_WAND                                        , RULL(0x26010A93), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WAND );
REG64( C_6_V1_HMER_OR                                          , RULL(0x26010A8F), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_V1_HMER_WAND                                        , RULL(0x27010A93), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WAND );
REG64( C_7_V1_HMER_OR                                          , RULL(0x27010A8F), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_V1_HMER_WAND                                        , RULL(0x28010A93), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WAND );
REG64( C_8_V1_HMER_OR                                          , RULL(0x28010A8F), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_V1_HMER_WAND                                        , RULL(0x29010A93), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WAND );
REG64( C_9_V1_HMER_OR                                          , RULL(0x29010A8F), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_V1_HMER_WAND                                       , RULL(0x2A010A93), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WAND );
REG64( C_10_V1_HMER_OR                                         , RULL(0x2A010A8F), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_V1_HMER_WAND                                       , RULL(0x2B010A93), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WAND );
REG64( C_11_V1_HMER_OR                                         , RULL(0x2B010A8F), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_V1_HMER_WAND                                       , RULL(0x2C010A93), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WAND );
REG64( C_12_V1_HMER_OR                                         , RULL(0x2C010A8F), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_V1_HMER_WAND                                       , RULL(0x2D010A93), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WAND );
REG64( C_13_V1_HMER_OR                                         , RULL(0x2D010A8F), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_V1_HMER_WAND                                       , RULL(0x2E010A93), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WAND );
REG64( C_14_V1_HMER_OR                                         , RULL(0x2E010A8F), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_V1_HMER_WAND                                       , RULL(0x2F010A93), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WAND );
REG64( C_15_V1_HMER_OR                                         , RULL(0x2F010A8F), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_V1_HMER_WAND                                       , RULL(0x30010A93), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WAND );
REG64( C_16_V1_HMER_OR                                         , RULL(0x30010A8F), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_V1_HMER_WAND                                       , RULL(0x31010A93), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WAND );
REG64( C_17_V1_HMER_OR                                         , RULL(0x31010A8F), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_V1_HMER_WAND                                       , RULL(0x32010A93), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WAND );
REG64( C_18_V1_HMER_OR                                         , RULL(0x32010A8F), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_V1_HMER_WAND                                       , RULL(0x33010A93), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WAND );
REG64( C_19_V1_HMER_OR                                         , RULL(0x33010A8F), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_V1_HMER_WAND                                       , RULL(0x34010A93), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WAND );
REG64( C_20_V1_HMER_OR                                         , RULL(0x34010A8F), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_V1_HMER_WAND                                       , RULL(0x35010A93), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WAND );
REG64( C_21_V1_HMER_OR                                         , RULL(0x35010A8F), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_V1_HMER_WAND                                       , RULL(0x36010A93), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WAND );
REG64( C_22_V1_HMER_OR                                         , RULL(0x36010A8F), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_V1_HMER_WAND                                       , RULL(0x37010A93), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WAND );
REG64( C_23_V1_HMER_OR                                         , RULL(0x37010A8F), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_V1_HMER                                              , RULL(0x21010A8F), SH_UNT_EX       ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A8F,
REG64( EX_0_V1_HMER                                            , RULL(0x21010A8F), SH_UNT_EX_0     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A8F,
REG64( EX_1_V1_HMER                                            , RULL(0x23010A8F), SH_UNT_EX_1     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 22010A8F,
REG64( EX_2_V1_HMER                                            , RULL(0x25010A8F), SH_UNT_EX_2     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 24010A8F,
REG64( EX_3_V1_HMER                                            , RULL(0x27010A8F), SH_UNT_EX_3     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 26010A8F,
REG64( EX_4_V1_HMER                                            , RULL(0x29010A8F), SH_UNT_EX_4     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 28010A8F,
REG64( EX_5_V1_HMER                                            , RULL(0x2B010A8F), SH_UNT_EX_5     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2A010A8F,
REG64( EX_6_V1_HMER                                            , RULL(0x2D010A8F), SH_UNT_EX_6     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2C010A8F,
REG64( EX_7_V1_HMER                                            , RULL(0x2F010A8F), SH_UNT_EX_7     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2E010A8F,
REG64( EX_8_V1_HMER                                            , RULL(0x31010A8F), SH_UNT_EX_8     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 30010A8F,
REG64( EX_9_V1_HMER                                            , RULL(0x33010A8F), SH_UNT_EX_9     ,
       SH_ACS_SCOM2_OR  ); //DUPS: 32010A8F,
REG64( EX_0_L2_V1_HMER                                         , RULL(0x21010A93), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 20010A93,
REG64( EX_10_V1_HMER                                           , RULL(0x35010A8F), SH_UNT_EX_10    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 34010A8F,
REG64( EX_11_V1_HMER                                           , RULL(0x37010A8F), SH_UNT_EX_11    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 36010A8F,
REG64( EX_10_L2_V1_HMER                                        , RULL(0x35010A93), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WAND ); //DUPS: 34010A93,
REG64( EX_11_L2_V1_HMER                                        , RULL(0x37010A93), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WAND ); //DUPS: 36010A93,
REG64( EX_1_L2_V1_HMER                                         , RULL(0x23010A93), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 22010A93,
REG64( EX_2_L2_V1_HMER                                         , RULL(0x25010A93), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 24010A93,
REG64( EX_3_L2_V1_HMER                                         , RULL(0x27010A93), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 26010A93,
REG64( EX_4_L2_V1_HMER                                         , RULL(0x29010A93), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 28010A93,
REG64( EX_5_L2_V1_HMER                                         , RULL(0x2B010A93), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2A010A93,
REG64( EX_6_L2_V1_HMER                                         , RULL(0x2D010A93), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2C010A93,
REG64( EX_7_L2_V1_HMER                                         , RULL(0x2F010A93), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2E010A93,
REG64( EX_8_L2_V1_HMER                                         , RULL(0x31010A93), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 30010A93,
REG64( EX_9_L2_V1_HMER                                         , RULL(0x33010A93), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 32010A93,
REG64( EX_L2_V1_HMER                                           , RULL(0x21010A93), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WAND ); //DUPS: 20010A93,

REG64( C_V2_HMER_WAND                                          , RULL(0x20010A94), SH_UNT_C        ,
       SH_ACS_SCOM1_WAND );
REG64( C_V2_HMER_OR                                            , RULL(0x20010A90), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_V2_HMER_WAND                                        , RULL(0x20010A94), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WAND );
REG64( C_0_V2_HMER_OR                                          , RULL(0x20010A90), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_V2_HMER_WAND                                        , RULL(0x21010A94), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WAND );
REG64( C_1_V2_HMER_OR                                          , RULL(0x21010A90), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_V2_HMER_WAND                                        , RULL(0x22010A94), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WAND );
REG64( C_2_V2_HMER_OR                                          , RULL(0x22010A90), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_V2_HMER_WAND                                        , RULL(0x23010A94), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WAND );
REG64( C_3_V2_HMER_OR                                          , RULL(0x23010A90), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_V2_HMER_WAND                                        , RULL(0x24010A94), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WAND );
REG64( C_4_V2_HMER_OR                                          , RULL(0x24010A90), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_V2_HMER_WAND                                        , RULL(0x25010A94), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WAND );
REG64( C_5_V2_HMER_OR                                          , RULL(0x25010A90), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_V2_HMER_WAND                                        , RULL(0x26010A94), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WAND );
REG64( C_6_V2_HMER_OR                                          , RULL(0x26010A90), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_V2_HMER_WAND                                        , RULL(0x27010A94), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WAND );
REG64( C_7_V2_HMER_OR                                          , RULL(0x27010A90), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_V2_HMER_WAND                                        , RULL(0x28010A94), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WAND );
REG64( C_8_V2_HMER_OR                                          , RULL(0x28010A90), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_V2_HMER_WAND                                        , RULL(0x29010A94), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WAND );
REG64( C_9_V2_HMER_OR                                          , RULL(0x29010A90), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_V2_HMER_WAND                                       , RULL(0x2A010A94), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WAND );
REG64( C_10_V2_HMER_OR                                         , RULL(0x2A010A90), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_V2_HMER_WAND                                       , RULL(0x2B010A94), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WAND );
REG64( C_11_V2_HMER_OR                                         , RULL(0x2B010A90), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_V2_HMER_WAND                                       , RULL(0x2C010A94), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WAND );
REG64( C_12_V2_HMER_OR                                         , RULL(0x2C010A90), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_V2_HMER_WAND                                       , RULL(0x2D010A94), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WAND );
REG64( C_13_V2_HMER_OR                                         , RULL(0x2D010A90), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_V2_HMER_WAND                                       , RULL(0x2E010A94), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WAND );
REG64( C_14_V2_HMER_OR                                         , RULL(0x2E010A90), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_V2_HMER_WAND                                       , RULL(0x2F010A94), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WAND );
REG64( C_15_V2_HMER_OR                                         , RULL(0x2F010A90), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_V2_HMER_WAND                                       , RULL(0x30010A94), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WAND );
REG64( C_16_V2_HMER_OR                                         , RULL(0x30010A90), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_V2_HMER_WAND                                       , RULL(0x31010A94), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WAND );
REG64( C_17_V2_HMER_OR                                         , RULL(0x31010A90), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_V2_HMER_WAND                                       , RULL(0x32010A94), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WAND );
REG64( C_18_V2_HMER_OR                                         , RULL(0x32010A90), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_V2_HMER_WAND                                       , RULL(0x33010A94), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WAND );
REG64( C_19_V2_HMER_OR                                         , RULL(0x33010A90), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_V2_HMER_WAND                                       , RULL(0x34010A94), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WAND );
REG64( C_20_V2_HMER_OR                                         , RULL(0x34010A90), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_V2_HMER_WAND                                       , RULL(0x35010A94), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WAND );
REG64( C_21_V2_HMER_OR                                         , RULL(0x35010A90), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_V2_HMER_WAND                                       , RULL(0x36010A94), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WAND );
REG64( C_22_V2_HMER_OR                                         , RULL(0x36010A90), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_V2_HMER_WAND                                       , RULL(0x37010A94), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WAND );
REG64( C_23_V2_HMER_OR                                         , RULL(0x37010A90), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_0_L2_V2_HMER_WAND                                    , RULL(0x21010A94), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 20010A94,
REG64( EX_0_L2_V2_HMER_OR                                      , RULL(0x21010A90), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A90,
REG64( EX_10_L2_V2_HMER_WAND                                   , RULL(0x35010A94), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WAND ); //DUPS: 34010A94,
REG64( EX_10_L2_V2_HMER_OR                                     , RULL(0x35010A90), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 34010A90,
REG64( EX_11_L2_V2_HMER_WAND                                   , RULL(0x37010A94), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WAND ); //DUPS: 36010A94,
REG64( EX_11_L2_V2_HMER_OR                                     , RULL(0x37010A90), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 36010A90,
REG64( EX_1_L2_V2_HMER_WAND                                    , RULL(0x23010A94), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 22010A94,
REG64( EX_1_L2_V2_HMER_OR                                      , RULL(0x23010A90), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 22010A90,
REG64( EX_2_L2_V2_HMER_WAND                                    , RULL(0x25010A94), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 24010A94,
REG64( EX_2_L2_V2_HMER_OR                                      , RULL(0x25010A90), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 24010A90,
REG64( EX_3_L2_V2_HMER_WAND                                    , RULL(0x27010A94), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 26010A94,
REG64( EX_3_L2_V2_HMER_OR                                      , RULL(0x27010A90), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 26010A90,
REG64( EX_4_L2_V2_HMER_WAND                                    , RULL(0x29010A94), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 28010A94,
REG64( EX_4_L2_V2_HMER_OR                                      , RULL(0x29010A90), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 28010A90,
REG64( EX_5_L2_V2_HMER_WAND                                    , RULL(0x2B010A94), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2A010A94,
REG64( EX_5_L2_V2_HMER_OR                                      , RULL(0x2B010A90), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2A010A90,
REG64( EX_6_L2_V2_HMER_WAND                                    , RULL(0x2D010A94), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2C010A94,
REG64( EX_6_L2_V2_HMER_OR                                      , RULL(0x2D010A90), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2C010A90,
REG64( EX_7_L2_V2_HMER_WAND                                    , RULL(0x2F010A94), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2E010A94,
REG64( EX_7_L2_V2_HMER_OR                                      , RULL(0x2F010A90), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2E010A90,
REG64( EX_8_L2_V2_HMER_WAND                                    , RULL(0x31010A94), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 30010A94,
REG64( EX_8_L2_V2_HMER_OR                                      , RULL(0x31010A90), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 30010A90,
REG64( EX_9_L2_V2_HMER_WAND                                    , RULL(0x33010A94), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 32010A94,
REG64( EX_9_L2_V2_HMER_OR                                      , RULL(0x33010A90), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 32010A90,
REG64( EX_L2_V2_HMER_WAND                                      , RULL(0x21010A94), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WAND ); //DUPS: 20010A94,
REG64( EX_L2_V2_HMER_OR                                        , RULL(0x21010A90), SH_UNT_EX_L2    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A90,

REG64( C_V3_HMER_WAND                                          , RULL(0x20010A95), SH_UNT_C        ,
       SH_ACS_SCOM1_WAND );
REG64( C_V3_HMER_OR                                            , RULL(0x20010A91), SH_UNT_C        , SH_ACS_SCOM2_OR  );
REG64( C_0_V3_HMER_WAND                                        , RULL(0x20010A95), SH_UNT_C_0      ,
       SH_ACS_SCOM1_WAND );
REG64( C_0_V3_HMER_OR                                          , RULL(0x20010A91), SH_UNT_C_0      , SH_ACS_SCOM2_OR  );
REG64( C_1_V3_HMER_WAND                                        , RULL(0x21010A95), SH_UNT_C_1      ,
       SH_ACS_SCOM1_WAND );
REG64( C_1_V3_HMER_OR                                          , RULL(0x21010A91), SH_UNT_C_1      , SH_ACS_SCOM2_OR  );
REG64( C_2_V3_HMER_WAND                                        , RULL(0x22010A95), SH_UNT_C_2      ,
       SH_ACS_SCOM1_WAND );
REG64( C_2_V3_HMER_OR                                          , RULL(0x22010A91), SH_UNT_C_2      , SH_ACS_SCOM2_OR  );
REG64( C_3_V3_HMER_WAND                                        , RULL(0x23010A95), SH_UNT_C_3      ,
       SH_ACS_SCOM1_WAND );
REG64( C_3_V3_HMER_OR                                          , RULL(0x23010A91), SH_UNT_C_3      , SH_ACS_SCOM2_OR  );
REG64( C_4_V3_HMER_WAND                                        , RULL(0x24010A95), SH_UNT_C_4      ,
       SH_ACS_SCOM1_WAND );
REG64( C_4_V3_HMER_OR                                          , RULL(0x24010A91), SH_UNT_C_4      , SH_ACS_SCOM2_OR  );
REG64( C_5_V3_HMER_WAND                                        , RULL(0x25010A95), SH_UNT_C_5      ,
       SH_ACS_SCOM1_WAND );
REG64( C_5_V3_HMER_OR                                          , RULL(0x25010A91), SH_UNT_C_5      , SH_ACS_SCOM2_OR  );
REG64( C_6_V3_HMER_WAND                                        , RULL(0x26010A95), SH_UNT_C_6      ,
       SH_ACS_SCOM1_WAND );
REG64( C_6_V3_HMER_OR                                          , RULL(0x26010A91), SH_UNT_C_6      , SH_ACS_SCOM2_OR  );
REG64( C_7_V3_HMER_WAND                                        , RULL(0x27010A95), SH_UNT_C_7      ,
       SH_ACS_SCOM1_WAND );
REG64( C_7_V3_HMER_OR                                          , RULL(0x27010A91), SH_UNT_C_7      , SH_ACS_SCOM2_OR  );
REG64( C_8_V3_HMER_WAND                                        , RULL(0x28010A95), SH_UNT_C_8      ,
       SH_ACS_SCOM1_WAND );
REG64( C_8_V3_HMER_OR                                          , RULL(0x28010A91), SH_UNT_C_8      , SH_ACS_SCOM2_OR  );
REG64( C_9_V3_HMER_WAND                                        , RULL(0x29010A95), SH_UNT_C_9      ,
       SH_ACS_SCOM1_WAND );
REG64( C_9_V3_HMER_OR                                          , RULL(0x29010A91), SH_UNT_C_9      , SH_ACS_SCOM2_OR  );
REG64( C_10_V3_HMER_WAND                                       , RULL(0x2A010A95), SH_UNT_C_10     ,
       SH_ACS_SCOM1_WAND );
REG64( C_10_V3_HMER_OR                                         , RULL(0x2A010A91), SH_UNT_C_10     , SH_ACS_SCOM2_OR  );
REG64( C_11_V3_HMER_WAND                                       , RULL(0x2B010A95), SH_UNT_C_11     ,
       SH_ACS_SCOM1_WAND );
REG64( C_11_V3_HMER_OR                                         , RULL(0x2B010A91), SH_UNT_C_11     , SH_ACS_SCOM2_OR  );
REG64( C_12_V3_HMER_WAND                                       , RULL(0x2C010A95), SH_UNT_C_12     ,
       SH_ACS_SCOM1_WAND );
REG64( C_12_V3_HMER_OR                                         , RULL(0x2C010A91), SH_UNT_C_12     , SH_ACS_SCOM2_OR  );
REG64( C_13_V3_HMER_WAND                                       , RULL(0x2D010A95), SH_UNT_C_13     ,
       SH_ACS_SCOM1_WAND );
REG64( C_13_V3_HMER_OR                                         , RULL(0x2D010A91), SH_UNT_C_13     , SH_ACS_SCOM2_OR  );
REG64( C_14_V3_HMER_WAND                                       , RULL(0x2E010A95), SH_UNT_C_14     ,
       SH_ACS_SCOM1_WAND );
REG64( C_14_V3_HMER_OR                                         , RULL(0x2E010A91), SH_UNT_C_14     , SH_ACS_SCOM2_OR  );
REG64( C_15_V3_HMER_WAND                                       , RULL(0x2F010A95), SH_UNT_C_15     ,
       SH_ACS_SCOM1_WAND );
REG64( C_15_V3_HMER_OR                                         , RULL(0x2F010A91), SH_UNT_C_15     , SH_ACS_SCOM2_OR  );
REG64( C_16_V3_HMER_WAND                                       , RULL(0x30010A95), SH_UNT_C_16     ,
       SH_ACS_SCOM1_WAND );
REG64( C_16_V3_HMER_OR                                         , RULL(0x30010A91), SH_UNT_C_16     , SH_ACS_SCOM2_OR  );
REG64( C_17_V3_HMER_WAND                                       , RULL(0x31010A95), SH_UNT_C_17     ,
       SH_ACS_SCOM1_WAND );
REG64( C_17_V3_HMER_OR                                         , RULL(0x31010A91), SH_UNT_C_17     , SH_ACS_SCOM2_OR  );
REG64( C_18_V3_HMER_WAND                                       , RULL(0x32010A95), SH_UNT_C_18     ,
       SH_ACS_SCOM1_WAND );
REG64( C_18_V3_HMER_OR                                         , RULL(0x32010A91), SH_UNT_C_18     , SH_ACS_SCOM2_OR  );
REG64( C_19_V3_HMER_WAND                                       , RULL(0x33010A95), SH_UNT_C_19     ,
       SH_ACS_SCOM1_WAND );
REG64( C_19_V3_HMER_OR                                         , RULL(0x33010A91), SH_UNT_C_19     , SH_ACS_SCOM2_OR  );
REG64( C_20_V3_HMER_WAND                                       , RULL(0x34010A95), SH_UNT_C_20     ,
       SH_ACS_SCOM1_WAND );
REG64( C_20_V3_HMER_OR                                         , RULL(0x34010A91), SH_UNT_C_20     , SH_ACS_SCOM2_OR  );
REG64( C_21_V3_HMER_WAND                                       , RULL(0x35010A95), SH_UNT_C_21     ,
       SH_ACS_SCOM1_WAND );
REG64( C_21_V3_HMER_OR                                         , RULL(0x35010A91), SH_UNT_C_21     , SH_ACS_SCOM2_OR  );
REG64( C_22_V3_HMER_WAND                                       , RULL(0x36010A95), SH_UNT_C_22     ,
       SH_ACS_SCOM1_WAND );
REG64( C_22_V3_HMER_OR                                         , RULL(0x36010A91), SH_UNT_C_22     , SH_ACS_SCOM2_OR  );
REG64( C_23_V3_HMER_WAND                                       , RULL(0x37010A95), SH_UNT_C_23     ,
       SH_ACS_SCOM1_WAND );
REG64( C_23_V3_HMER_OR                                         , RULL(0x37010A91), SH_UNT_C_23     , SH_ACS_SCOM2_OR  );
REG64( EX_0_L2_V3_HMER_WAND                                    , RULL(0x21010A95), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 20010A95,
REG64( EX_0_L2_V3_HMER_OR                                      , RULL(0x21010A91), SH_UNT_EX_0_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A91,
REG64( EX_10_L2_V3_HMER_WAND                                   , RULL(0x35010A95), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM1_WAND ); //DUPS: 34010A95,
REG64( EX_10_L2_V3_HMER_OR                                     , RULL(0x35010A91), SH_UNT_EX_10_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 34010A91,
REG64( EX_11_L2_V3_HMER_WAND                                   , RULL(0x37010A95), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM1_WAND ); //DUPS: 36010A95,
REG64( EX_11_L2_V3_HMER_OR                                     , RULL(0x37010A91), SH_UNT_EX_11_L2 ,
       SH_ACS_SCOM2_OR  ); //DUPS: 36010A91,
REG64( EX_1_L2_V3_HMER_WAND                                    , RULL(0x23010A95), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 22010A95,
REG64( EX_1_L2_V3_HMER_OR                                      , RULL(0x23010A91), SH_UNT_EX_1_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 22010A91,
REG64( EX_2_L2_V3_HMER_WAND                                    , RULL(0x25010A95), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 24010A95,
REG64( EX_2_L2_V3_HMER_OR                                      , RULL(0x25010A91), SH_UNT_EX_2_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 24010A91,
REG64( EX_3_L2_V3_HMER_WAND                                    , RULL(0x27010A95), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 26010A95,
REG64( EX_3_L2_V3_HMER_OR                                      , RULL(0x27010A91), SH_UNT_EX_3_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 26010A91,
REG64( EX_4_L2_V3_HMER_WAND                                    , RULL(0x29010A95), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 28010A95,
REG64( EX_4_L2_V3_HMER_OR                                      , RULL(0x29010A91), SH_UNT_EX_4_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 28010A91,
REG64( EX_5_L2_V3_HMER_WAND                                    , RULL(0x2B010A95), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2A010A95,
REG64( EX_5_L2_V3_HMER_OR                                      , RULL(0x2B010A91), SH_UNT_EX_5_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2A010A91,
REG64( EX_6_L2_V3_HMER_WAND                                    , RULL(0x2D010A95), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2C010A95,
REG64( EX_6_L2_V3_HMER_OR                                      , RULL(0x2D010A91), SH_UNT_EX_6_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2C010A91,
REG64( EX_7_L2_V3_HMER_WAND                                    , RULL(0x2F010A95), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 2E010A95,
REG64( EX_7_L2_V3_HMER_OR                                      , RULL(0x2F010A91), SH_UNT_EX_7_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 2E010A91,
REG64( EX_8_L2_V3_HMER_WAND                                    , RULL(0x31010A95), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 30010A95,
REG64( EX_8_L2_V3_HMER_OR                                      , RULL(0x31010A91), SH_UNT_EX_8_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 30010A91,
REG64( EX_9_L2_V3_HMER_WAND                                    , RULL(0x33010A95), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM1_WAND ); //DUPS: 32010A95,
REG64( EX_9_L2_V3_HMER_OR                                      , RULL(0x33010A91), SH_UNT_EX_9_L2  ,
       SH_ACS_SCOM2_OR  ); //DUPS: 32010A91,
REG64( EX_L2_V3_HMER_WAND                                      , RULL(0x21010A95), SH_UNT_EX_L2    ,
       SH_ACS_SCOM1_WAND ); //DUPS: 20010A95,
REG64( EX_L2_V3_HMER_OR                                        , RULL(0x21010A91), SH_UNT_EX_L2    ,
       SH_ACS_SCOM2_OR  ); //DUPS: 20010A91,

REG64( C_VITAL_SCAN_OUT                                        , RULL(0x200F0017), SH_UNT_C        , SH_ACS_SCOM_RO   );
REG64( C_0_VITAL_SCAN_OUT                                      , RULL(0x200F0017), SH_UNT_C_0      , SH_ACS_SCOM_RO   );
REG64( C_1_VITAL_SCAN_OUT                                      , RULL(0x210F0017), SH_UNT_C_1      , SH_ACS_SCOM_RO   );
REG64( C_2_VITAL_SCAN_OUT                                      , RULL(0x220F0017), SH_UNT_C_2      , SH_ACS_SCOM_RO   );
REG64( C_3_VITAL_SCAN_OUT                                      , RULL(0x230F0017), SH_UNT_C_3      , SH_ACS_SCOM_RO   );
REG64( C_4_VITAL_SCAN_OUT                                      , RULL(0x240F0017), SH_UNT_C_4      , SH_ACS_SCOM_RO   );
REG64( C_5_VITAL_SCAN_OUT                                      , RULL(0x250F0017), SH_UNT_C_5      , SH_ACS_SCOM_RO   );
REG64( C_6_VITAL_SCAN_OUT                                      , RULL(0x260F0017), SH_UNT_C_6      , SH_ACS_SCOM_RO   );
REG64( C_7_VITAL_SCAN_OUT                                      , RULL(0x270F0017), SH_UNT_C_7      , SH_ACS_SCOM_RO   );
REG64( C_8_VITAL_SCAN_OUT                                      , RULL(0x280F0017), SH_UNT_C_8      , SH_ACS_SCOM_RO   );
REG64( C_9_VITAL_SCAN_OUT                                      , RULL(0x290F0017), SH_UNT_C_9      , SH_ACS_SCOM_RO   );
REG64( C_10_VITAL_SCAN_OUT                                     , RULL(0x2A0F0017), SH_UNT_C_10     , SH_ACS_SCOM_RO   );
REG64( C_11_VITAL_SCAN_OUT                                     , RULL(0x2B0F0017), SH_UNT_C_11     , SH_ACS_SCOM_RO   );
REG64( C_12_VITAL_SCAN_OUT                                     , RULL(0x2C0F0017), SH_UNT_C_12     , SH_ACS_SCOM_RO   );
REG64( C_13_VITAL_SCAN_OUT                                     , RULL(0x2D0F0017), SH_UNT_C_13     , SH_ACS_SCOM_RO   );
REG64( C_14_VITAL_SCAN_OUT                                     , RULL(0x2E0F0017), SH_UNT_C_14     , SH_ACS_SCOM_RO   );
REG64( C_15_VITAL_SCAN_OUT                                     , RULL(0x2F0F0017), SH_UNT_C_15     , SH_ACS_SCOM_RO   );
REG64( C_16_VITAL_SCAN_OUT                                     , RULL(0x300F0017), SH_UNT_C_16     , SH_ACS_SCOM_RO   );
REG64( C_17_VITAL_SCAN_OUT                                     , RULL(0x310F0017), SH_UNT_C_17     , SH_ACS_SCOM_RO   );
REG64( C_18_VITAL_SCAN_OUT                                     , RULL(0x320F0017), SH_UNT_C_18     , SH_ACS_SCOM_RO   );
REG64( C_19_VITAL_SCAN_OUT                                     , RULL(0x330F0017), SH_UNT_C_19     , SH_ACS_SCOM_RO   );
REG64( C_20_VITAL_SCAN_OUT                                     , RULL(0x340F0017), SH_UNT_C_20     , SH_ACS_SCOM_RO   );
REG64( C_21_VITAL_SCAN_OUT                                     , RULL(0x350F0017), SH_UNT_C_21     , SH_ACS_SCOM_RO   );
REG64( C_22_VITAL_SCAN_OUT                                     , RULL(0x360F0017), SH_UNT_C_22     , SH_ACS_SCOM_RO   );
REG64( C_23_VITAL_SCAN_OUT                                     , RULL(0x370F0017), SH_UNT_C_23     , SH_ACS_SCOM_RO   );
REG64( EQ_VITAL_SCAN_OUT                                       , RULL(0x100F0017), SH_UNT_EQ       , SH_ACS_SCOM_RO   );
REG64( EQ_0_VITAL_SCAN_OUT                                     , RULL(0x100F0017), SH_UNT_EQ_0     , SH_ACS_SCOM_RO   );
REG64( EQ_1_VITAL_SCAN_OUT                                     , RULL(0x110F0017), SH_UNT_EQ_1     , SH_ACS_SCOM_RO   );
REG64( EQ_2_VITAL_SCAN_OUT                                     , RULL(0x120F0017), SH_UNT_EQ_2     , SH_ACS_SCOM_RO   );
REG64( EQ_3_VITAL_SCAN_OUT                                     , RULL(0x130F0017), SH_UNT_EQ_3     , SH_ACS_SCOM_RO   );
REG64( EQ_4_VITAL_SCAN_OUT                                     , RULL(0x140F0017), SH_UNT_EQ_4     , SH_ACS_SCOM_RO   );
REG64( EQ_5_VITAL_SCAN_OUT                                     , RULL(0x150F0017), SH_UNT_EQ_5     , SH_ACS_SCOM_RO   );
REG64( EX_VITAL_SCAN_OUT                                       , RULL(0x200F0017), SH_UNT_EX       ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F0017,
REG64( EX_0_VITAL_SCAN_OUT                                     , RULL(0x200F0017), SH_UNT_EX_0     ,
       SH_ACS_SCOM_RO   ); //DUPS: 210F0017,
REG64( EX_1_VITAL_SCAN_OUT                                     , RULL(0x230F0017), SH_UNT_EX_1     ,
       SH_ACS_SCOM_RO   ); //DUPS: 220F0017,
REG64( EX_2_VITAL_SCAN_OUT                                     , RULL(0x240F0017), SH_UNT_EX_2     ,
       SH_ACS_SCOM_RO   ); //DUPS: 250F0017,
REG64( EX_3_VITAL_SCAN_OUT                                     , RULL(0x260F0017), SH_UNT_EX_3     ,
       SH_ACS_SCOM_RO   ); //DUPS: 270F0017,
REG64( EX_4_VITAL_SCAN_OUT                                     , RULL(0x280F0017), SH_UNT_EX_4     ,
       SH_ACS_SCOM_RO   ); //DUPS: 290F0017,
REG64( EX_5_VITAL_SCAN_OUT                                     , RULL(0x2A0F0017), SH_UNT_EX_5     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2B0F0017,
REG64( EX_6_VITAL_SCAN_OUT                                     , RULL(0x2C0F0017), SH_UNT_EX_6     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2D0F0017,
REG64( EX_7_VITAL_SCAN_OUT                                     , RULL(0x2E0F0017), SH_UNT_EX_7     ,
       SH_ACS_SCOM_RO   ); //DUPS: 2F0F0017,
REG64( EX_8_VITAL_SCAN_OUT                                     , RULL(0x300F0017), SH_UNT_EX_8     ,
       SH_ACS_SCOM_RO   ); //DUPS: 310F0017,
REG64( EX_9_VITAL_SCAN_OUT                                     , RULL(0x320F0017), SH_UNT_EX_9     ,
       SH_ACS_SCOM_RO   ); //DUPS: 330F0017,
REG64( EX_10_VITAL_SCAN_OUT                                    , RULL(0x340F0017), SH_UNT_EX_10    ,
       SH_ACS_SCOM_RO   ); //DUPS: 350F0017,
REG64( EX_11_VITAL_SCAN_OUT                                    , RULL(0x360F0017), SH_UNT_EX_11    ,
       SH_ACS_SCOM_RO   ); //DUPS: 370F0017,

REG64( PEC_0_VITAL_SCAN_OUT                                    , RULL(0x0D0F0017), SH_UNT_PEC_0    , SH_ACS_SCOM_RO   );
REG64( PEC_1_VITAL_SCAN_OUT                                    , RULL(0x0E0F0017), SH_UNT_PEC_1    , SH_ACS_SCOM_RO   );
REG64( PEC_2_VITAL_SCAN_OUT                                    , RULL(0x0F0F0017), SH_UNT_PEC_2    , SH_ACS_SCOM_RO   );

REG64( C_WRITE_PROTECT_ENABLE_REG                              , RULL(0x20010005), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_WRITE_PROTECT_ENABLE_REG                            , RULL(0x20010005), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_WRITE_PROTECT_ENABLE_REG                            , RULL(0x21010005), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_WRITE_PROTECT_ENABLE_REG                            , RULL(0x22010005), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_WRITE_PROTECT_ENABLE_REG                            , RULL(0x23010005), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_WRITE_PROTECT_ENABLE_REG                            , RULL(0x24010005), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_WRITE_PROTECT_ENABLE_REG                            , RULL(0x25010005), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_WRITE_PROTECT_ENABLE_REG                            , RULL(0x26010005), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_WRITE_PROTECT_ENABLE_REG                            , RULL(0x27010005), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_WRITE_PROTECT_ENABLE_REG                            , RULL(0x28010005), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_WRITE_PROTECT_ENABLE_REG                            , RULL(0x29010005), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2A010005), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2B010005), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2C010005), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2D010005), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2E010005), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2F010005), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_WRITE_PROTECT_ENABLE_REG                           , RULL(0x30010005), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_WRITE_PROTECT_ENABLE_REG                           , RULL(0x31010005), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_WRITE_PROTECT_ENABLE_REG                           , RULL(0x32010005), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_WRITE_PROTECT_ENABLE_REG                           , RULL(0x33010005), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_WRITE_PROTECT_ENABLE_REG                           , RULL(0x34010005), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_WRITE_PROTECT_ENABLE_REG                           , RULL(0x35010005), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_WRITE_PROTECT_ENABLE_REG                           , RULL(0x36010005), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_WRITE_PROTECT_ENABLE_REG                           , RULL(0x37010005), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_WRITE_PROTECT_ENABLE_REG                             , RULL(0x10010005), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_WRITE_PROTECT_ENABLE_REG                           , RULL(0x10010005), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_WRITE_PROTECT_ENABLE_REG                           , RULL(0x11010005), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_WRITE_PROTECT_ENABLE_REG                           , RULL(0x12010005), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_WRITE_PROTECT_ENABLE_REG                           , RULL(0x13010005), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_WRITE_PROTECT_ENABLE_REG                           , RULL(0x14010005), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_WRITE_PROTECT_ENABLE_REG                           , RULL(0x15010005), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_WRITE_PROTECT_ENABLE_REG                             , RULL(0x20010005), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010005,
REG64( EX_0_WRITE_PROTECT_ENABLE_REG                           , RULL(0x20010005), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010005,
REG64( EX_1_WRITE_PROTECT_ENABLE_REG                           , RULL(0x22010005), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010005,
REG64( EX_2_WRITE_PROTECT_ENABLE_REG                           , RULL(0x24010005), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010005,
REG64( EX_3_WRITE_PROTECT_ENABLE_REG                           , RULL(0x26010005), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010005,
REG64( EX_4_WRITE_PROTECT_ENABLE_REG                           , RULL(0x28010005), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010005,
REG64( EX_5_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2A010005), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010005,
REG64( EX_6_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2C010005), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010005,
REG64( EX_7_WRITE_PROTECT_ENABLE_REG                           , RULL(0x2E010005), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010005,
REG64( EX_8_WRITE_PROTECT_ENABLE_REG                           , RULL(0x30010005), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010005,
REG64( EX_9_WRITE_PROTECT_ENABLE_REG                           , RULL(0x32010005), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010005,
REG64( EX_10_WRITE_PROTECT_ENABLE_REG                          , RULL(0x34010005), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010005,
REG64( EX_11_WRITE_PROTECT_ENABLE_REG                          , RULL(0x36010005), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010005,

REG64( PEC_0_WRITE_PROTECT_ENABLE_REG                          , RULL(0x0D010005), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_WRITE_PROTECT_ENABLE_REG                          , RULL(0x0E010005), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_WRITE_PROTECT_ENABLE_REG                          , RULL(0x0F010005), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_WRITE_PROTECT_RINGS_REG                               , RULL(0x20010006), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_WRITE_PROTECT_RINGS_REG                             , RULL(0x20010006), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_WRITE_PROTECT_RINGS_REG                             , RULL(0x21010006), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_WRITE_PROTECT_RINGS_REG                             , RULL(0x22010006), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_WRITE_PROTECT_RINGS_REG                             , RULL(0x23010006), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_WRITE_PROTECT_RINGS_REG                             , RULL(0x24010006), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_WRITE_PROTECT_RINGS_REG                             , RULL(0x25010006), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_WRITE_PROTECT_RINGS_REG                             , RULL(0x26010006), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_WRITE_PROTECT_RINGS_REG                             , RULL(0x27010006), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_WRITE_PROTECT_RINGS_REG                             , RULL(0x28010006), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_WRITE_PROTECT_RINGS_REG                             , RULL(0x29010006), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_WRITE_PROTECT_RINGS_REG                            , RULL(0x2A010006), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_WRITE_PROTECT_RINGS_REG                            , RULL(0x2B010006), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_WRITE_PROTECT_RINGS_REG                            , RULL(0x2C010006), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_WRITE_PROTECT_RINGS_REG                            , RULL(0x2D010006), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_WRITE_PROTECT_RINGS_REG                            , RULL(0x2E010006), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_WRITE_PROTECT_RINGS_REG                            , RULL(0x2F010006), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_WRITE_PROTECT_RINGS_REG                            , RULL(0x30010006), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_WRITE_PROTECT_RINGS_REG                            , RULL(0x31010006), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_WRITE_PROTECT_RINGS_REG                            , RULL(0x32010006), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_WRITE_PROTECT_RINGS_REG                            , RULL(0x33010006), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_WRITE_PROTECT_RINGS_REG                            , RULL(0x34010006), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_WRITE_PROTECT_RINGS_REG                            , RULL(0x35010006), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_WRITE_PROTECT_RINGS_REG                            , RULL(0x36010006), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_WRITE_PROTECT_RINGS_REG                            , RULL(0x37010006), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_WRITE_PROTECT_RINGS_REG                              , RULL(0x10010006), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_WRITE_PROTECT_RINGS_REG                            , RULL(0x10010006), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_WRITE_PROTECT_RINGS_REG                            , RULL(0x11010006), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_WRITE_PROTECT_RINGS_REG                            , RULL(0x12010006), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_WRITE_PROTECT_RINGS_REG                            , RULL(0x13010006), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_WRITE_PROTECT_RINGS_REG                            , RULL(0x14010006), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_WRITE_PROTECT_RINGS_REG                            , RULL(0x15010006), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_WRITE_PROTECT_RINGS_REG                              , RULL(0x20010006), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21010006,
REG64( EX_0_WRITE_PROTECT_RINGS_REG                            , RULL(0x20010006), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21010006,
REG64( EX_1_WRITE_PROTECT_RINGS_REG                            , RULL(0x22010006), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23010006,
REG64( EX_2_WRITE_PROTECT_RINGS_REG                            , RULL(0x24010006), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25010006,
REG64( EX_3_WRITE_PROTECT_RINGS_REG                            , RULL(0x26010006), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27010006,
REG64( EX_4_WRITE_PROTECT_RINGS_REG                            , RULL(0x28010006), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29010006,
REG64( EX_5_WRITE_PROTECT_RINGS_REG                            , RULL(0x2A010006), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B010006,
REG64( EX_6_WRITE_PROTECT_RINGS_REG                            , RULL(0x2C010006), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D010006,
REG64( EX_7_WRITE_PROTECT_RINGS_REG                            , RULL(0x2E010006), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F010006,
REG64( EX_8_WRITE_PROTECT_RINGS_REG                            , RULL(0x30010006), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31010006,
REG64( EX_9_WRITE_PROTECT_RINGS_REG                            , RULL(0x32010006), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33010006,
REG64( EX_10_WRITE_PROTECT_RINGS_REG                           , RULL(0x34010006), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35010006,
REG64( EX_11_WRITE_PROTECT_RINGS_REG                           , RULL(0x36010006), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37010006,

REG64( PEC_0_WRITE_PROTECT_RINGS_REG                           , RULL(0x0D010006), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_WRITE_PROTECT_RINGS_REG                           , RULL(0x0E010006), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_WRITE_PROTECT_RINGS_REG                           , RULL(0x0F010006), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( EQ_WR_EPS_REG                                           , RULL(0x10010811), SH_UNT_EQ       ,
       SH_ACS_SCOM      ); //DUPS: 10010C11,
REG64( EQ_0_WR_EPS_REG                                         , RULL(0x10010811), SH_UNT_EQ_0     ,
       SH_ACS_SCOM      ); //DUPS: 10010C11,
REG64( EQ_1_WR_EPS_REG                                         , RULL(0x11010811), SH_UNT_EQ_1     ,
       SH_ACS_SCOM      ); //DUPS: 11010C11,
REG64( EQ_2_WR_EPS_REG                                         , RULL(0x12010811), SH_UNT_EQ_2     ,
       SH_ACS_SCOM      ); //DUPS: 12010C11,
REG64( EQ_3_WR_EPS_REG                                         , RULL(0x13010811), SH_UNT_EQ_3     ,
       SH_ACS_SCOM      ); //DUPS: 13010C11,
REG64( EQ_4_WR_EPS_REG                                         , RULL(0x14010811), SH_UNT_EQ_4     ,
       SH_ACS_SCOM      ); //DUPS: 14010C11,
REG64( EQ_5_WR_EPS_REG                                         , RULL(0x15010811), SH_UNT_EQ_5     ,
       SH_ACS_SCOM      ); //DUPS: 15010C11,
REG64( EX_0_L2_WR_EPS_REG                                      , RULL(0x10010811), SH_UNT_EX_0_L2  , SH_ACS_SCOM      );
REG64( EX_10_L2_WR_EPS_REG                                     , RULL(0x15010811), SH_UNT_EX_10_L2 , SH_ACS_SCOM      );
REG64( EX_11_L2_WR_EPS_REG                                     , RULL(0x15010C11), SH_UNT_EX_11_L2 , SH_ACS_SCOM      );
REG64( EX_1_L2_WR_EPS_REG                                      , RULL(0x10010C11), SH_UNT_EX_1_L2  , SH_ACS_SCOM      );
REG64( EX_2_L2_WR_EPS_REG                                      , RULL(0x11010811), SH_UNT_EX_2_L2  , SH_ACS_SCOM      );
REG64( EX_3_L2_WR_EPS_REG                                      , RULL(0x11010C11), SH_UNT_EX_3_L2  , SH_ACS_SCOM      );
REG64( EX_4_L2_WR_EPS_REG                                      , RULL(0x12010811), SH_UNT_EX_4_L2  , SH_ACS_SCOM      );
REG64( EX_5_L2_WR_EPS_REG                                      , RULL(0x12010C11), SH_UNT_EX_5_L2  , SH_ACS_SCOM      );
REG64( EX_6_L2_WR_EPS_REG                                      , RULL(0x13010811), SH_UNT_EX_6_L2  , SH_ACS_SCOM      );
REG64( EX_7_L2_WR_EPS_REG                                      , RULL(0x13010C11), SH_UNT_EX_7_L2  , SH_ACS_SCOM      );
REG64( EX_8_L2_WR_EPS_REG                                      , RULL(0x14010811), SH_UNT_EX_8_L2  , SH_ACS_SCOM      );
REG64( EX_9_L2_WR_EPS_REG                                      , RULL(0x14010C11), SH_UNT_EX_9_L2  , SH_ACS_SCOM      );
REG64( EX_L2_WR_EPS_REG                                        , RULL(0x10010811), SH_UNT_EX_L2    , SH_ACS_SCOM      );

REG64( C_XFIR                                                  , RULL(0x20040000), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_XFIR                                                , RULL(0x20040000), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_XFIR                                                , RULL(0x21040000), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_XFIR                                                , RULL(0x22040000), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_XFIR                                                , RULL(0x23040000), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_XFIR                                                , RULL(0x24040000), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_XFIR                                                , RULL(0x25040000), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_XFIR                                                , RULL(0x26040000), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_XFIR                                                , RULL(0x27040000), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_XFIR                                                , RULL(0x28040000), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_XFIR                                                , RULL(0x29040000), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_XFIR                                               , RULL(0x2A040000), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_XFIR                                               , RULL(0x2B040000), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_XFIR                                               , RULL(0x2C040000), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_XFIR                                               , RULL(0x2D040000), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_XFIR                                               , RULL(0x2E040000), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_XFIR                                               , RULL(0x2F040000), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_XFIR                                               , RULL(0x30040000), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_XFIR                                               , RULL(0x31040000), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_XFIR                                               , RULL(0x32040000), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_XFIR                                               , RULL(0x33040000), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_XFIR                                               , RULL(0x34040000), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_XFIR                                               , RULL(0x35040000), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_XFIR                                               , RULL(0x36040000), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_XFIR                                               , RULL(0x37040000), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_XFIR                                                 , RULL(0x10040000), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_XFIR                                               , RULL(0x10040000), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_XFIR                                               , RULL(0x11040000), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_XFIR                                               , RULL(0x12040000), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_XFIR                                               , RULL(0x13040000), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_XFIR                                               , RULL(0x14040000), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_XFIR                                               , RULL(0x15040000), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_XFIR                                                 , RULL(0x20040000), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 21040000,
REG64( EX_0_XFIR                                               , RULL(0x20040000), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 21040000,
REG64( EX_1_XFIR                                               , RULL(0x22040000), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 23040000,
REG64( EX_2_XFIR                                               , RULL(0x24040000), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 25040000,
REG64( EX_3_XFIR                                               , RULL(0x26040000), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 27040000,
REG64( EX_4_XFIR                                               , RULL(0x28040000), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 29040000,
REG64( EX_5_XFIR                                               , RULL(0x2A040000), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B040000,
REG64( EX_6_XFIR                                               , RULL(0x2C040000), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D040000,
REG64( EX_7_XFIR                                               , RULL(0x2E040000), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F040000,
REG64( EX_8_XFIR                                               , RULL(0x30040000), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 31040000,
REG64( EX_9_XFIR                                               , RULL(0x32040000), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 33040000,
REG64( EX_10_XFIR                                              , RULL(0x34040000), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 35040000,
REG64( EX_11_XFIR                                              , RULL(0x36040000), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 37040000,

REG64( PEC_0_XFIR                                              , RULL(0x0D040000), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_XFIR                                              , RULL(0x0E040000), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_XFIR                                              , RULL(0x0F040000), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_XSTOP1                                                , RULL(0x2003000C), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_XSTOP1                                              , RULL(0x2003000C), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_XSTOP1                                              , RULL(0x2103000C), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_XSTOP1                                              , RULL(0x2203000C), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_XSTOP1                                              , RULL(0x2303000C), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_XSTOP1                                              , RULL(0x2403000C), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_XSTOP1                                              , RULL(0x2503000C), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_XSTOP1                                              , RULL(0x2603000C), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_XSTOP1                                              , RULL(0x2703000C), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_XSTOP1                                              , RULL(0x2803000C), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_XSTOP1                                              , RULL(0x2903000C), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_XSTOP1                                             , RULL(0x2A03000C), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_XSTOP1                                             , RULL(0x2B03000C), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_XSTOP1                                             , RULL(0x2C03000C), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_XSTOP1                                             , RULL(0x2D03000C), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_XSTOP1                                             , RULL(0x2E03000C), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_XSTOP1                                             , RULL(0x2F03000C), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_XSTOP1                                             , RULL(0x3003000C), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_XSTOP1                                             , RULL(0x3103000C), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_XSTOP1                                             , RULL(0x3203000C), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_XSTOP1                                             , RULL(0x3303000C), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_XSTOP1                                             , RULL(0x3403000C), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_XSTOP1                                             , RULL(0x3503000C), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_XSTOP1                                             , RULL(0x3603000C), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_XSTOP1                                             , RULL(0x3703000C), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_XSTOP1                                               , RULL(0x1003000C), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_XSTOP1                                             , RULL(0x1003000C), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_XSTOP1                                             , RULL(0x1103000C), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_XSTOP1                                             , RULL(0x1203000C), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_XSTOP1                                             , RULL(0x1303000C), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_XSTOP1                                             , RULL(0x1403000C), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_XSTOP1                                             , RULL(0x1503000C), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_XSTOP1                                               , RULL(0x2003000C), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 2103000C,
REG64( EX_0_XSTOP1                                             , RULL(0x2003000C), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 2103000C,
REG64( EX_1_XSTOP1                                             , RULL(0x2203000C), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 2303000C,
REG64( EX_2_XSTOP1                                             , RULL(0x2403000C), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 2503000C,
REG64( EX_3_XSTOP1                                             , RULL(0x2603000C), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 2703000C,
REG64( EX_4_XSTOP1                                             , RULL(0x2803000C), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 2903000C,
REG64( EX_5_XSTOP1                                             , RULL(0x2A03000C), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B03000C,
REG64( EX_6_XSTOP1                                             , RULL(0x2C03000C), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D03000C,
REG64( EX_7_XSTOP1                                             , RULL(0x2E03000C), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F03000C,
REG64( EX_8_XSTOP1                                             , RULL(0x3003000C), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 3103000C,
REG64( EX_9_XSTOP1                                             , RULL(0x3203000C), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 3303000C,
REG64( EX_10_XSTOP1                                            , RULL(0x3403000C), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 3503000C,
REG64( EX_11_XSTOP1                                            , RULL(0x3603000C), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 3703000C,

REG64( PEC_0_XSTOP1                                            , RULL(0x0D03000C), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_XSTOP1                                            , RULL(0x0E03000C), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_XSTOP1                                            , RULL(0x0F03000C), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_XSTOP2                                                , RULL(0x2003000D), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_XSTOP2                                              , RULL(0x2003000D), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_XSTOP2                                              , RULL(0x2103000D), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_XSTOP2                                              , RULL(0x2203000D), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_XSTOP2                                              , RULL(0x2303000D), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_XSTOP2                                              , RULL(0x2403000D), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_XSTOP2                                              , RULL(0x2503000D), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_XSTOP2                                              , RULL(0x2603000D), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_XSTOP2                                              , RULL(0x2703000D), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_XSTOP2                                              , RULL(0x2803000D), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_XSTOP2                                              , RULL(0x2903000D), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_XSTOP2                                             , RULL(0x2A03000D), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_XSTOP2                                             , RULL(0x2B03000D), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_XSTOP2                                             , RULL(0x2C03000D), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_XSTOP2                                             , RULL(0x2D03000D), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_XSTOP2                                             , RULL(0x2E03000D), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_XSTOP2                                             , RULL(0x2F03000D), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_XSTOP2                                             , RULL(0x3003000D), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_XSTOP2                                             , RULL(0x3103000D), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_XSTOP2                                             , RULL(0x3203000D), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_XSTOP2                                             , RULL(0x3303000D), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_XSTOP2                                             , RULL(0x3403000D), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_XSTOP2                                             , RULL(0x3503000D), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_XSTOP2                                             , RULL(0x3603000D), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_XSTOP2                                             , RULL(0x3703000D), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_XSTOP2                                               , RULL(0x1003000D), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_XSTOP2                                             , RULL(0x1003000D), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_XSTOP2                                             , RULL(0x1103000D), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_XSTOP2                                             , RULL(0x1203000D), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_XSTOP2                                             , RULL(0x1303000D), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_XSTOP2                                             , RULL(0x1403000D), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_XSTOP2                                             , RULL(0x1503000D), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_XSTOP2                                               , RULL(0x2003000D), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 2103000D,
REG64( EX_0_XSTOP2                                             , RULL(0x2003000D), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 2103000D,
REG64( EX_1_XSTOP2                                             , RULL(0x2203000D), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 2303000D,
REG64( EX_2_XSTOP2                                             , RULL(0x2403000D), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 2503000D,
REG64( EX_3_XSTOP2                                             , RULL(0x2603000D), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 2703000D,
REG64( EX_4_XSTOP2                                             , RULL(0x2803000D), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 2903000D,
REG64( EX_5_XSTOP2                                             , RULL(0x2A03000D), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B03000D,
REG64( EX_6_XSTOP2                                             , RULL(0x2C03000D), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D03000D,
REG64( EX_7_XSTOP2                                             , RULL(0x2E03000D), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F03000D,
REG64( EX_8_XSTOP2                                             , RULL(0x3003000D), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 3103000D,
REG64( EX_9_XSTOP2                                             , RULL(0x3203000D), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 3303000D,
REG64( EX_10_XSTOP2                                            , RULL(0x3403000D), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 3503000D,
REG64( EX_11_XSTOP2                                            , RULL(0x3603000D), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 3703000D,

REG64( PEC_0_XSTOP2                                            , RULL(0x0D03000D), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_XSTOP2                                            , RULL(0x0E03000D), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_XSTOP2                                            , RULL(0x0F03000D), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_XSTOP3                                                , RULL(0x2003000E), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_XSTOP3                                              , RULL(0x2003000E), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_XSTOP3                                              , RULL(0x2103000E), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_XSTOP3                                              , RULL(0x2203000E), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_XSTOP3                                              , RULL(0x2303000E), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_XSTOP3                                              , RULL(0x2403000E), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_XSTOP3                                              , RULL(0x2503000E), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_XSTOP3                                              , RULL(0x2603000E), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_XSTOP3                                              , RULL(0x2703000E), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_XSTOP3                                              , RULL(0x2803000E), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_XSTOP3                                              , RULL(0x2903000E), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_XSTOP3                                             , RULL(0x2A03000E), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_XSTOP3                                             , RULL(0x2B03000E), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_XSTOP3                                             , RULL(0x2C03000E), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_XSTOP3                                             , RULL(0x2D03000E), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_XSTOP3                                             , RULL(0x2E03000E), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_XSTOP3                                             , RULL(0x2F03000E), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_XSTOP3                                             , RULL(0x3003000E), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_XSTOP3                                             , RULL(0x3103000E), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_XSTOP3                                             , RULL(0x3203000E), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_XSTOP3                                             , RULL(0x3303000E), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_XSTOP3                                             , RULL(0x3403000E), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_XSTOP3                                             , RULL(0x3503000E), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_XSTOP3                                             , RULL(0x3603000E), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_XSTOP3                                             , RULL(0x3703000E), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_XSTOP3                                               , RULL(0x1003000E), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_XSTOP3                                             , RULL(0x1003000E), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_XSTOP3                                             , RULL(0x1103000E), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_XSTOP3                                             , RULL(0x1203000E), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_XSTOP3                                             , RULL(0x1303000E), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_XSTOP3                                             , RULL(0x1403000E), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_XSTOP3                                             , RULL(0x1503000E), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_XSTOP3                                               , RULL(0x2003000E), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 2103000E,
REG64( EX_0_XSTOP3                                             , RULL(0x2003000E), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 2103000E,
REG64( EX_1_XSTOP3                                             , RULL(0x2203000E), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 2303000E,
REG64( EX_2_XSTOP3                                             , RULL(0x2403000E), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 2503000E,
REG64( EX_3_XSTOP3                                             , RULL(0x2603000E), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 2703000E,
REG64( EX_4_XSTOP3                                             , RULL(0x2803000E), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 2903000E,
REG64( EX_5_XSTOP3                                             , RULL(0x2A03000E), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B03000E,
REG64( EX_6_XSTOP3                                             , RULL(0x2C03000E), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D03000E,
REG64( EX_7_XSTOP3                                             , RULL(0x2E03000E), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F03000E,
REG64( EX_8_XSTOP3                                             , RULL(0x3003000E), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 3103000E,
REG64( EX_9_XSTOP3                                             , RULL(0x3203000E), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 3303000E,
REG64( EX_10_XSTOP3                                            , RULL(0x3403000E), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 3503000E,
REG64( EX_11_XSTOP3                                            , RULL(0x3603000E), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 3703000E,

REG64( PEC_0_XSTOP3                                            , RULL(0x0D03000E), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_XSTOP3                                            , RULL(0x0E03000E), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_XSTOP3                                            , RULL(0x0F03000E), SH_UNT_PEC_2    , SH_ACS_SCOM      );

REG64( C_XSTOP_INTERRUPT_REG                                   , RULL(0x200F001C), SH_UNT_C        , SH_ACS_SCOM      );
REG64( C_0_XSTOP_INTERRUPT_REG                                 , RULL(0x200F001C), SH_UNT_C_0      , SH_ACS_SCOM      );
REG64( C_1_XSTOP_INTERRUPT_REG                                 , RULL(0x210F001C), SH_UNT_C_1      , SH_ACS_SCOM      );
REG64( C_2_XSTOP_INTERRUPT_REG                                 , RULL(0x220F001C), SH_UNT_C_2      , SH_ACS_SCOM      );
REG64( C_3_XSTOP_INTERRUPT_REG                                 , RULL(0x230F001C), SH_UNT_C_3      , SH_ACS_SCOM      );
REG64( C_4_XSTOP_INTERRUPT_REG                                 , RULL(0x240F001C), SH_UNT_C_4      , SH_ACS_SCOM      );
REG64( C_5_XSTOP_INTERRUPT_REG                                 , RULL(0x250F001C), SH_UNT_C_5      , SH_ACS_SCOM      );
REG64( C_6_XSTOP_INTERRUPT_REG                                 , RULL(0x260F001C), SH_UNT_C_6      , SH_ACS_SCOM      );
REG64( C_7_XSTOP_INTERRUPT_REG                                 , RULL(0x270F001C), SH_UNT_C_7      , SH_ACS_SCOM      );
REG64( C_8_XSTOP_INTERRUPT_REG                                 , RULL(0x280F001C), SH_UNT_C_8      , SH_ACS_SCOM      );
REG64( C_9_XSTOP_INTERRUPT_REG                                 , RULL(0x290F001C), SH_UNT_C_9      , SH_ACS_SCOM      );
REG64( C_10_XSTOP_INTERRUPT_REG                                , RULL(0x2A0F001C), SH_UNT_C_10     , SH_ACS_SCOM      );
REG64( C_11_XSTOP_INTERRUPT_REG                                , RULL(0x2B0F001C), SH_UNT_C_11     , SH_ACS_SCOM      );
REG64( C_12_XSTOP_INTERRUPT_REG                                , RULL(0x2C0F001C), SH_UNT_C_12     , SH_ACS_SCOM      );
REG64( C_13_XSTOP_INTERRUPT_REG                                , RULL(0x2D0F001C), SH_UNT_C_13     , SH_ACS_SCOM      );
REG64( C_14_XSTOP_INTERRUPT_REG                                , RULL(0x2E0F001C), SH_UNT_C_14     , SH_ACS_SCOM      );
REG64( C_15_XSTOP_INTERRUPT_REG                                , RULL(0x2F0F001C), SH_UNT_C_15     , SH_ACS_SCOM      );
REG64( C_16_XSTOP_INTERRUPT_REG                                , RULL(0x300F001C), SH_UNT_C_16     , SH_ACS_SCOM      );
REG64( C_17_XSTOP_INTERRUPT_REG                                , RULL(0x310F001C), SH_UNT_C_17     , SH_ACS_SCOM      );
REG64( C_18_XSTOP_INTERRUPT_REG                                , RULL(0x320F001C), SH_UNT_C_18     , SH_ACS_SCOM      );
REG64( C_19_XSTOP_INTERRUPT_REG                                , RULL(0x330F001C), SH_UNT_C_19     , SH_ACS_SCOM      );
REG64( C_20_XSTOP_INTERRUPT_REG                                , RULL(0x340F001C), SH_UNT_C_20     , SH_ACS_SCOM      );
REG64( C_21_XSTOP_INTERRUPT_REG                                , RULL(0x350F001C), SH_UNT_C_21     , SH_ACS_SCOM      );
REG64( C_22_XSTOP_INTERRUPT_REG                                , RULL(0x360F001C), SH_UNT_C_22     , SH_ACS_SCOM      );
REG64( C_23_XSTOP_INTERRUPT_REG                                , RULL(0x370F001C), SH_UNT_C_23     , SH_ACS_SCOM      );
REG64( EQ_XSTOP_INTERRUPT_REG                                  , RULL(0x100F001C), SH_UNT_EQ       , SH_ACS_SCOM      );
REG64( EQ_0_XSTOP_INTERRUPT_REG                                , RULL(0x100F001C), SH_UNT_EQ_0     , SH_ACS_SCOM      );
REG64( EQ_1_XSTOP_INTERRUPT_REG                                , RULL(0x110F001C), SH_UNT_EQ_1     , SH_ACS_SCOM      );
REG64( EQ_2_XSTOP_INTERRUPT_REG                                , RULL(0x120F001C), SH_UNT_EQ_2     , SH_ACS_SCOM      );
REG64( EQ_3_XSTOP_INTERRUPT_REG                                , RULL(0x130F001C), SH_UNT_EQ_3     , SH_ACS_SCOM      );
REG64( EQ_4_XSTOP_INTERRUPT_REG                                , RULL(0x140F001C), SH_UNT_EQ_4     , SH_ACS_SCOM      );
REG64( EQ_5_XSTOP_INTERRUPT_REG                                , RULL(0x150F001C), SH_UNT_EQ_5     , SH_ACS_SCOM      );
REG64( EX_XSTOP_INTERRUPT_REG                                  , RULL(0x200F001C), SH_UNT_EX       ,
       SH_ACS_SCOM      ); //DUPS: 210F001C,
REG64( EX_0_XSTOP_INTERRUPT_REG                                , RULL(0x200F001C), SH_UNT_EX_0     ,
       SH_ACS_SCOM      ); //DUPS: 210F001C,
REG64( EX_1_XSTOP_INTERRUPT_REG                                , RULL(0x230F001C), SH_UNT_EX_1     ,
       SH_ACS_SCOM      ); //DUPS: 220F001C,
REG64( EX_2_XSTOP_INTERRUPT_REG                                , RULL(0x240F001C), SH_UNT_EX_2     ,
       SH_ACS_SCOM      ); //DUPS: 250F001C,
REG64( EX_3_XSTOP_INTERRUPT_REG                                , RULL(0x260F001C), SH_UNT_EX_3     ,
       SH_ACS_SCOM      ); //DUPS: 270F001C,
REG64( EX_4_XSTOP_INTERRUPT_REG                                , RULL(0x280F001C), SH_UNT_EX_4     ,
       SH_ACS_SCOM      ); //DUPS: 290F001C,
REG64( EX_5_XSTOP_INTERRUPT_REG                                , RULL(0x2A0F001C), SH_UNT_EX_5     ,
       SH_ACS_SCOM      ); //DUPS: 2B0F001C,
REG64( EX_6_XSTOP_INTERRUPT_REG                                , RULL(0x2C0F001C), SH_UNT_EX_6     ,
       SH_ACS_SCOM      ); //DUPS: 2D0F001C,
REG64( EX_7_XSTOP_INTERRUPT_REG                                , RULL(0x2E0F001C), SH_UNT_EX_7     ,
       SH_ACS_SCOM      ); //DUPS: 2F0F001C,
REG64( EX_8_XSTOP_INTERRUPT_REG                                , RULL(0x300F001C), SH_UNT_EX_8     ,
       SH_ACS_SCOM      ); //DUPS: 310F001C,
REG64( EX_9_XSTOP_INTERRUPT_REG                                , RULL(0x320F001C), SH_UNT_EX_9     ,
       SH_ACS_SCOM      ); //DUPS: 330F001C,
REG64( EX_10_XSTOP_INTERRUPT_REG                               , RULL(0x340F001C), SH_UNT_EX_10    ,
       SH_ACS_SCOM      ); //DUPS: 350F001C,
REG64( EX_11_XSTOP_INTERRUPT_REG                               , RULL(0x360F001C), SH_UNT_EX_11    ,
       SH_ACS_SCOM      ); //DUPS: 370F001C,

REG64( PEC_0_XSTOP_INTERRUPT_REG                               , RULL(0x0D0F001C), SH_UNT_PEC_0    , SH_ACS_SCOM      );
REG64( PEC_1_XSTOP_INTERRUPT_REG                               , RULL(0x0E0F001C), SH_UNT_PEC_1    , SH_ACS_SCOM      );
REG64( PEC_2_XSTOP_INTERRUPT_REG                               , RULL(0x0F0F001C), SH_UNT_PEC_2    , SH_ACS_SCOM      );
#endif

